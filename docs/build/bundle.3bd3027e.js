/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 	};
/******/
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		0: 0
/******/ 	};
/******/
/******/
/******/
/******/ 	// script path function
/******/ 	function jsonpScriptSrc(chunkId) {
/******/ 		return __webpack_require__.p + "build/" + ({}[chunkId]||chunkId) + "." + {"1":"0f822520"}[chunkId] + ".js"
/******/ 	}
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId) {
/******/ 		var promises = [];
/******/
/******/
/******/ 		// JSONP chunk loading for javascript
/******/
/******/ 		var installedChunkData = installedChunks[chunkId];
/******/ 		if(installedChunkData !== 0) { // 0 means "already installed".
/******/
/******/ 			// a Promise means "currently loading".
/******/ 			if(installedChunkData) {
/******/ 				promises.push(installedChunkData[2]);
/******/ 			} else {
/******/ 				// setup Promise in chunk cache
/******/ 				var promise = new Promise(function(resolve, reject) {
/******/ 					installedChunkData = installedChunks[chunkId] = [resolve, reject];
/******/ 				});
/******/ 				promises.push(installedChunkData[2] = promise);
/******/
/******/ 				// start chunk loading
/******/ 				var script = document.createElement('script');
/******/ 				var onScriptComplete;
/******/
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.src = jsonpScriptSrc(chunkId);
/******/
/******/ 				onScriptComplete = function (event) {
/******/ 					// avoid mem leaks in IE.
/******/ 					script.onerror = script.onload = null;
/******/ 					clearTimeout(timeout);
/******/ 					var chunk = installedChunks[chunkId];
/******/ 					if(chunk !== 0) {
/******/ 						if(chunk) {
/******/ 							var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 							var realSrc = event && event.target && event.target.src;
/******/ 							var error = new Error('Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')');
/******/ 							error.type = errorType;
/******/ 							error.request = realSrc;
/******/ 							chunk[1](error);
/******/ 						}
/******/ 						installedChunks[chunkId] = undefined;
/******/ 					}
/******/ 				};
/******/ 				var timeout = setTimeout(function(){
/******/ 					onScriptComplete({ type: 'timeout', target: script });
/******/ 				}, 120000);
/******/ 				script.onerror = script.onload = onScriptComplete;
/******/ 				document.head.appendChild(script);
/******/ 			}
/******/ 		}
/******/ 		return Promise.all(promises);
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// on error function for async loading
/******/ 	__webpack_require__.oe = function(err) { console.error(err); throw err; };
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 255);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(289);
} else {}


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (false) { var throwOnDirectAccess, isValidElement, REACT_ELEMENT_TYPE; } else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(292)();
}


/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var theme_namespaceObject = {};
__webpack_require__.r(theme_namespaceObject);
__webpack_require__.d(theme_namespaceObject, "spaceFactor", function() { return spaceFactor; });
__webpack_require__.d(theme_namespaceObject, "space", function() { return space; });
__webpack_require__.d(theme_namespaceObject, "color", function() { return color; });
__webpack_require__.d(theme_namespaceObject, "fontFamily", function() { return fontFamily; });
__webpack_require__.d(theme_namespaceObject, "fontSize", function() { return fontSize; });
__webpack_require__.d(theme_namespaceObject, "mq", function() { return mq; });
__webpack_require__.d(theme_namespaceObject, "borderRadius", function() { return borderRadius; });
__webpack_require__.d(theme_namespaceObject, "maxWidth", function() { return maxWidth; });
__webpack_require__.d(theme_namespaceObject, "sidebarWidth", function() { return sidebarWidth; });
__webpack_require__.d(theme_namespaceObject, "buttonTextTransform", function() { return buttonTextTransform; });

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(0);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(1);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/node_modules/lodash/merge.js
var merge = __webpack_require__(144);
var merge_default = /*#__PURE__*/__webpack_require__.n(merge);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/node_modules/lodash/memoize.js
var memoize = __webpack_require__(142);
var memoize_default = /*#__PURE__*/__webpack_require__.n(memoize);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/styles/setupjss.js + 1 modules
var setupjss = __webpack_require__(58);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/styles/theme.js
var spaceFactor = 8;
var space = [spaceFactor / 2, // 4
spaceFactor, // 8
spaceFactor * 2, // 16
spaceFactor * 3, // 24
spaceFactor * 4, // 32
spaceFactor * 5, // 40
spaceFactor * 6];

var color = {
	base: '#333',
	light: '#767676',
	lightest: '#ccc',
	link: '#1978c8',
	linkHover: '#f28a25',
	border: '#e8e8e8',
	name: '#7f9a44',
	type: '#b77daa',
	error: '#c00',
	baseBackground: '#fff',
	codeBackground: '#f5f5f5',
	sidebarBackground: '#f5f5f5',
	ribbonBackground: '#f9970d',
	ribbonText: '#fff'
};

var fontFamily = {
	base: ['-apple-system', 'BlinkMacSystemFont', '"Segoe UI"', '"Roboto"', '"Oxygen"', '"Ubuntu"', '"Cantarell"', '"Fira Sans"', '"Droid Sans"', '"Helvetica Neue"', 'sans-serif'],
	monospace: ['Consolas', '"Liberation Mono"', 'Menlo', 'monospace']
};

var fontSize = {
	base: 15,
	text: 16,
	small: 13,
	h1: 48,
	h2: 36,
	h3: 24,
	h4: 18,
	h5: 16,
	h6: 16
};

var mq = {
	small: '@media (max-width: 600px)'
};

var borderRadius = 3;
var maxWidth = 1000;
var sidebarWidth = 200;

var buttonTextTransform = 'uppercase';
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/styles/createStyleSheet.js





/* harmony default export */ var createStyleSheet = (memoize_default()(function (styles, config, componentName) {
	var mergedTheme = merge_default()({}, theme_namespaceObject, config.theme);
	var mergedStyles = merge_default()({}, styles(mergedTheme), config.styles && config.styles[componentName]);
	return setupjss["a" /* default */].createStyleSheet(mergedStyles, { meta: componentName, link: true });
}));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Styled/Styled.js
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





/* harmony default export */ var Styled = (function (styles) {
	return function (WrappedComponent) {
		var _class, _temp;

		var componentName = WrappedComponent.name.replace(/Renderer$/, '');
		return _temp = _class = function (_Component) {
			_inherits(_class, _Component);

			function _class(props, context) {
				_classCallCheck(this, _class);

				var _this = _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).call(this, props, context));

				_this.sheet = createStyleSheet(styles, context.config || {}, componentName);
				_this.sheet.update(props).attach();
				return _this;
			}

			_createClass(_class, [{
				key: 'componentDidUpdate',
				value: function componentDidUpdate(nextProps) {
					this.sheet.update(nextProps);
				}
			}, {
				key: 'render',
				value: function render() {
					return react_default.a.createElement(WrappedComponent, _extends({}, this.props, { classes: this.sheet.classes }));
				}
			}]);

			return _class;
		}(react["Component"]), _class.displayName = 'Styled(' + componentName + ')', _class.contextTypes = {
			config: prop_types_default.a.object
		}, _temp;
	};
});
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Styled/index.js
/* concated harmony reexport default */__webpack_require__.d(__webpack_exports__, "a", function() { return Styled; });


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg) && arg.length) {
				var inner = classNames.apply(null, arg);
				if (inner) {
					classes.push(inner);
				}
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if ( true && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}
}());


/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(1);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(0);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./node_modules/unquote/index.js
var unquote = __webpack_require__(236);
var unquote_default = /*#__PURE__*/__webpack_require__.n(unquote);

// CONCATENATED MODULE: ./node_modules/markdown-to-jsx/dist/esm.js
var _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_typeof=typeof Symbol=='function'&&typeof Symbol.iterator=='symbol'?function(a){return typeof a}:function(a){return a&&typeof Symbol=='function'&&a.constructor===Symbol&&a!==Symbol.prototype?'symbol':typeof a};function _objectWithoutProperties(a,b){var c={};for(var d in a)b.indexOf(d)>=0||Object.prototype.hasOwnProperty.call(a,d)&&(c[d]=a[d]);return c}var ATTRIBUTE_TO_JSX_PROP_MAP={accesskey:'accessKey',allowfullscreen:'allowFullScreen',allowtransparency:'allowTransparency',autocomplete:'autoComplete',autofocus:'autoFocus',autoplay:'autoPlay',cellpadding:'cellPadding',cellspacing:'cellSpacing',charset:'charSet',class:'className',classid:'classId',colspan:'colSpan',contenteditable:'contentEditable',contextmenu:'contextMenu',crossorigin:'crossOrigin',enctype:'encType',for:'htmlFor',formaction:'formAction',formenctype:'formEncType',formmethod:'formMethod',formnovalidate:'formNoValidate',formtarget:'formTarget',frameborder:'frameBorder',hreflang:'hrefLang',inputmode:'inputMode',keyparams:'keyParams',keytype:'keyType',marginheight:'marginHeight',marginwidth:'marginWidth',maxlength:'maxLength',mediagroup:'mediaGroup',minlength:'minLength',novalidate:'noValidate',radiogroup:'radioGroup',readonly:'readOnly',rowspan:'rowSpan',spellcheck:'spellCheck',srcdoc:'srcDoc',srclang:'srcLang',srcset:'srcSet',tabindex:'tabIndex',usemap:'useMap'},namedCodesToUnicode={amp:'&',apos:'\'',gt:'>',lt:'<',nbsp:'\xA0',quot:'\u201C'},DO_NOT_PROCESS_HTML_ELEMENTS=['style','script'],ATTR_EXTRACTOR_R=/([-A-Z0-9_:]+)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|(?:\{((?:\\.|{[^}]*?}|[^}])*)\})))?/gi,AUTOLINK_MAILTO_CHECK_R=/mailto:/i,BLOCK_END_R=/\n{2,}$/,BLOCKQUOTE_R=/^( *>[^\n]+(\n[^\n]+)*\n*)+\n{2,}/,BLOCKQUOTE_TRIM_LEFT_MULTILINE_R=/^ *> ?/gm,BREAK_LINE_R=/^ {2,}\n/,BREAK_THEMATIC_R=/^(?:( *[-*_]) *){3,}(?:\n *)+\n/,CODE_BLOCK_FENCED_R=/^\s*(`{3,}|~{3,}) *(\S+)? *\n([\s\S]+?)\s*\1 *(?:\n *)+\n?/,CODE_BLOCK_R=/^(?: {4}[^\n]+\n*)+(?:\n *)+\n?/,CODE_INLINE_R=/^(`+)\s*([\s\S]*?[^`])\s*\1(?!`)/,CONSECUTIVE_NEWLINE_R=/^(?:\n *)*\n/,CR_NEWLINE_R=/\r\n?/g,FOOTNOTE_R=/^\[\^(.*)\](:.*)\n/,FOOTNOTE_REFERENCE_R=/^\[\^(.*)\]/,FORMFEED_R=/\f/g,GFM_TASK_R=/^\s*?\[(x|\s)\]/,HEADING_R=/^ *(#{1,6}) *([^\n]+)\n{0,2}/,HEADING_SETEXT_R=/^([^\n]+)\n *(=|-){3,} *(?:\n *)+\n/,HTML_BLOCK_ELEMENT_R=/^ *<([A-Za-z][^ >/]*) ?([^>]*)\/{0}>\n?(\s*(?:<\1[^>]*?>[\s\S]*?<\/\1>|(?!<\1)[\s\S])*?)<\/\1>\n*/,HTML_CHAR_CODE_R=/&([a-z]+);/g,HTML_COMMENT_R=/^<!--.*?-->/,HTML_CUSTOM_ATTR_R=/^(data|aria|x)-[a-z_][a-z\d_.-]*$/,HTML_SELF_CLOSING_ELEMENT_R=/^ *<([a-z][a-z0-9:]*)(?:\s+((?:<.*?>|[^>])*))?\/?>(?!<\/\1>)(\s*\n)?/i,INTERPOLATION_R=/^\{.*\}$/,LINK_AUTOLINK_BARE_URL_R=/^(https?:\/\/[^\s<]+[^<.,:;"')\]\s])/,LINK_AUTOLINK_MAILTO_R=/^<([^ >]+@[^ >]+)>/,LINK_AUTOLINK_R=/^<([^ >]+:\/[^ >]+)>/,LIST_ITEM_END_R=/ *\n+$/,LIST_LOOKBEHIND_R=/(?:^|\n)( *)$/,CAPTURE_LETTER_AFTER_HYPHEN=/-([a-z])?/gi,NP_TABLE_R=/^(.*\|?.*)\n *(\|? *[-:]+ *\|[-| :]*)\n((?:.*\|.*\n)*)\n?/,PARAGRAPH_R=/^((?:[^\n]|\n(?! *\n))+)(?:\n *)+\n/,REFERENCE_IMAGE_OR_LINK=/^\[([^\]]*)\]:\s*(\S+)\s*("([^"]*)")?/,REFERENCE_IMAGE_R=/^!\[([^\]]*)\] ?\[([^\]]*)\]/,REFERENCE_LINK_R=/^\[([^\]]*)\] ?\[([^\]]*)\]/,SQUARE_BRACKETS_R=/(\[|\])/g,SHOULD_RENDER_AS_BLOCK_R=/(\n|^[-*]\s|^#|^ {2,}|^-{2,}|^>\s)/,TAB_R=/\t/g,TABLE_TRIM_PIPES=/(^ *\||\| *$)/g,TABLE_CENTER_ALIGN=/^ *:-+: *$/,TABLE_LEFT_ALIGN=/^ *:-+ *$/,TABLE_RIGHT_ALIGN=/^ *-+: *$/,TABLE_ROW_SPLIT=/ *\| */,TEXT_BOLD_R=/^([*_])\1((?:[^`~()[\]<>]*?|(?:.*?([`~]).*?\3.*?)*|(?:.*?\([^)]*?\).*?)*|(?:.*?\[[^\]]*?\].*?)*|(?:.*?<.*?>.*?)*|[^\1]*?)\1?)\1{2}/,TEXT_EMPHASIZED_R=/^([*_])((?:[^`~()[\]<>]*?|(?:.*?([`~]).*?\3.*?)*|(?:.*?\([^)]*?\).*?)*|(?:.*?\[[^\]]*?\].*?)*|(?:.*?<.*?>.*?)*|[^\1]*?))\1/,TEXT_STRIKETHROUGHED_R=/^~~((?:.*?([`~]).*?\2.*?)*|(?:.*?<.*?>.*?)*|.+?)~~/,TEXT_ESCAPED_R=/^\\([^0-9A-Za-z\s])/,TEXT_PLAIN_R=/^[\s\S]+?(?=[^0-9A-Z\s\u00c0-\uffff&;.]|\d+\.|\n\n| {2,}\n|\w+:\S|$)/i,TRIM_NEWLINES_AND_TRAILING_WHITESPACE_R=/(^\n+|(\n|\s)+$)/g,HTML_LEFT_TRIM_AMOUNT_R=/^([ \t]*)/,UNESCAPE_URL_R=/\\([^0-9A-Z\s])/gi,LIST_BULLET='(?:[*+-]|\\d+\\.)',LIST_ITEM_PREFIX='( *)((?:[*+-]|\\d+\\.)) +',LIST_ITEM_PREFIX_R=/^( *)((?:[*+-]|\d+\.)) +/,LIST_ITEM_R=/( *)((?:[*+-]|\d+\.)) +[^\n]*(?:\n(?!\1(?:[*+-]|\d+\.) )[^\n]*)*(\n|$)/gm,LIST_R=/^( *)((?:[*+-]|\d+\.)) [\s\S]+?(?:\n{2,}(?! )(?!\1(?:[*+-]|\d+\.) (?!(?:[*+-]|\d+\.) ))\n*|\s*\n*$)/,LINK_INSIDE='(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*',LINK_HREF_AND_TITLE='\\s*<?((?:[^\\s\\\\]|\\\\.)*?)>?(?:\\s+[\'"]([\\s\\S]*?)[\'"])?\\s*',LINK_R=/^\[((?:\[[^\]]*\]|[^\[\]]|\](?=[^\[]*\]))*)\]\(\s*<?((?:[^\s\\]|\\.)*?)>?(?:\s+['"]([\s\S]*?)['"])?\s*\)/,IMAGE_R=/^!\[((?:\[[^\]]*\]|[^\[\]]|\](?=[^\[]*\]))*)\]\(\s*<?((?:[^\s\\]|\\.)*?)>?(?:\s+['"]([\s\S]*?)['"])?\s*\)/,BLOCK_SYNTAXES=[BLOCKQUOTE_R,CODE_BLOCK_R,CODE_BLOCK_FENCED_R,HEADING_R,HEADING_SETEXT_R,HTML_BLOCK_ELEMENT_R,HTML_COMMENT_R,HTML_SELF_CLOSING_ELEMENT_R,LIST_ITEM_R,LIST_R,NP_TABLE_R,PARAGRAPH_R];function containsBlockSyntax(a){return BLOCK_SYNTAXES.some(function(b){return b.test(a)})}function slugify(a){return a.replace(/[ÀÁÂÃÄÅàáâãäåæÆ]/g,'a').replace(/[çÇ]/g,'c').replace(/[ðÐ]/g,'d').replace(/[ÈÉÊËéèêë]/g,'e').replace(/[ÏïÎîÍíÌì]/g,'i').replace(/[Ññ]/g,'n').replace(/[øØœŒÕõÔôÓóÒò]/g,'o').replace(/[ÜüÛûÚúÙù]/g,'u').replace(/[ŸÿÝý]/g,'y').replace(/[^a-z0-9- ]/gi,'').replace(/ /gi,'-').toLowerCase()}function parseTableAlignCapture(a){if(TABLE_RIGHT_ALIGN.test(a))return'right';return TABLE_CENTER_ALIGN.test(a)?'center':TABLE_LEFT_ALIGN.test(a)?'left':null}function parseTableHeader(a,b,c){var d=a[1].replace(TABLE_TRIM_PIPES,'').trim().split(TABLE_ROW_SPLIT);return d.map(function(a){return b(a,c)})}function parseTableAlign(a){var b=a[2].replace(TABLE_TRIM_PIPES,'').trim().split(TABLE_ROW_SPLIT);return b.map(parseTableAlignCapture)}function parseTableCells(a,b,c){var d=a[3].replace(TABLE_TRIM_PIPES,'').trim().split('\n');return d.map(function(a){return a.replace(TABLE_TRIM_PIPES,'').split(TABLE_ROW_SPLIT).map(function(a){return b(a.trim(),c)})})}function parseTable(a,b,c){c.inline=!0;var d=parseTableHeader(a,b,c),e=parseTableAlign(a,b,c),f=parseTableCells(a,b,c);return c.inline=!1,{align:e,cells:f,header:d,type:'table'}}function getTableStyle(a,b){return a.align[b]==null?{}:{textAlign:a.align[b]}}function normalizeAttributeKey(a){var b=a.indexOf('-');return b!==-1&&a.match(HTML_CUSTOM_ATTR_R)===null&&(a=a.replace(CAPTURE_LETTER_AFTER_HYPHEN,function(a,b){return b.toUpperCase()})),a}function attributeValueToJSXPropValue(a,b){return a==='style'?b.split(/;\s?/).reduce(function(a,b){var c=b.slice(0,b.indexOf(':')),d=c.replace(/(-[a-z])/g,function(a){return a[1].toUpperCase()});return a[d]=b.slice(c.length+1).trim(),a},{}):(b.match(INTERPOLATION_R)&&(b=b.slice(1,b.length-1)),b==='true'||b!=='false'&&b)}function normalizeWhitespace(a){return a.replace(CR_NEWLINE_R,'\n').replace(FORMFEED_R,'').replace(TAB_R,'    ')}function parserFor(a){function b(d,e){for(var f=[],g='';d;)for(var l=0;l<c.length;){var h=c[l],j=a[h],k=j.match(d,e,g);if(k){var i=k[0];d=d.substring(i.length);var m=j.parse(k,b,e);m.type==null&&(m.type=h),f.push(m),g=i;break}l++}return f}var c=Object.keys(a);return  false&&false,c.sort(function(b,c){var d=a[b].order,e=a[c].order;return d===e?b<c?-1:1:d-e}),function(a,c){return b(normalizeWhitespace(a),c)}}function inlineRegex(a){return function(b,c){return c.inline?a.exec(b):null}}function simpleInlineRegex(a){return function(b,c){return c.inline||c.simple?a.exec(b):null}}function blockRegex(a){return function(b,c){return c.inline||c.simple?null:a.exec(b)}}function anyScopeRegex(a){return function(b){return a.exec(b)}}function reactFor(a){return function b(c,d){if(d=d||{},Array.isArray(c)){for(var e=d.key,f=[],g=!1,h=0;h<c.length;h++){d.key=h;var j=b(c[h],d),k=typeof j=='string';k&&g?f[f.length-1]+=j:f.push(j),g=k}return d.key=e,f}return a(c,b,d)}}function sanitizeUrl(a){try{var b=decodeURIComponent(a);if(b.match(/^\s*javascript:/i))return  false&&false,null}catch(b){return  false&&false,null}return a}function unescapeUrl(a){return a.replace(UNESCAPE_URL_R,'$1')}function parseInline(a,b,c){var d=c.inline||!1,e=c.simple||!1;c.inline=!0,c.simple=!0;var f=a(b,c);return c.inline=d,c.simple=e,f}function parseSimpleInline(a,b,c){var d=c.inline||!1,e=c.simple||!1;c.inline=!1,c.simple=!0;var f=a(b,c);return c.inline=d,c.simple=e,f}function parseBlock(a,b,c){return c.inline=!1,a(b+'\n\n',c)}function parseCaptureInline(a,b,c){return{content:parseInline(b,a[1],c)}}function captureNothing(){return{}}function renderNothing(){return null}function ruleOutput(a){return function(b,c,d){return a[b.type].react(b,c,d)}}function cx(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];return b.filter(Boolean).join(' ')}function get(a,b,c){for(var d=a,e=b.split('.');e.length&&(d=d[e[0]],d!==void 0);)e.shift();return d||c}function getTag(a,b){var c=get(b,a);return c?typeof c=='function'||(typeof c=='undefined'?'undefined':_typeof(c))==='object'&&'render'in c?c:get(b,a+'.component',a):a}var PARSE_PRIORITY_MAX=1,PARSE_PRIORITY_HIGH=2,PARSE_PRIORITY_MED=3,PARSE_PRIORITY_LOW=4,PARSE_PRIORITY_MIN=5;function compiler(a,b){function d(a,c){for(var d=get(b.overrides,a+'.props',{}),e=arguments.length,g=Array(e>2?e-2:0),h=2;h<e;h++)g[h-2]=arguments[h];return f.apply(void 0,[getTag(a,b.overrides),_extends({},d,c,{className:cx(c&&c.className,d.className)||void 0})].concat(g))}function c(a){var c=!1;b.forceInline?c=!0:!b.forceBlock&&(c=SHOULD_RENDER_AS_BLOCK_R.test(a)===!1);var e=k(j(c?a:a.replace(TRIM_NEWLINES_AND_TRAILING_WHITESPACE_R,'')+'\n\n',{inline:c})),f=void 0;return e.length>1?f=c?d('span',null,e):d('div',null,e):e.length===1?(f=e[0],typeof f=='string'&&(f=d('span',null,f))):f=d('span',null),f}function e(a){var b=a.match(ATTR_EXTRACTOR_R);return b?b.reduce(function(a,b,d){var e=b.indexOf('=');if(e!==-1){var f=normalizeAttributeKey(b.slice(0,e)).trim(),g=unquote_default()(b.slice(e+1).trim()),h=ATTRIBUTE_TO_JSX_PROP_MAP[f]||f,i=a[h]=attributeValueToJSXPropValue(f,g);(HTML_BLOCK_ELEMENT_R.test(i)||HTML_SELF_CLOSING_ELEMENT_R.test(i))&&(a[h]=react_default.a.cloneElement(c(i.trim()),{key:d}))}else a[ATTRIBUTE_TO_JSX_PROP_MAP[b]||b]=!0;return a},{}):void 0}b=b||{},b.overrides=b.overrides||{},b.slugify=b.slugify||slugify;var f=b.createElement||react_default.a.createElement;if(false){}var g=[],h={},i={blockQuote:{match:blockRegex(BLOCKQUOTE_R),order:PARSE_PRIORITY_HIGH,parse:function d(a,b,c){return{content:b(a[0].replace(BLOCKQUOTE_TRIM_LEFT_MULTILINE_R,''),c)}},react:function e(a,b,c){return d('blockquote',{key:c.key},b(a.content,c))}},breakLine:{match:anyScopeRegex(BREAK_LINE_R),order:PARSE_PRIORITY_HIGH,parse:captureNothing,react:function e(a,b,c){return d('br',{key:c.key})}},breakThematic:{match:blockRegex(BREAK_THEMATIC_R),order:PARSE_PRIORITY_HIGH,parse:captureNothing,react:function e(a,b,c){return d('hr',{key:c.key})}},codeBlock:{match:blockRegex(CODE_BLOCK_R),order:PARSE_PRIORITY_MAX,parse:function c(a){var b=a[0].replace(/^ {4}/gm,'').replace(/\n+$/,'');return{content:b,lang:void 0}},react:function e(a,b,c){return d('pre',{key:c.key},d('code',{className:a.lang?'lang-'+a.lang:''},a.content))}},codeFenced:{match:blockRegex(CODE_BLOCK_FENCED_R),order:PARSE_PRIORITY_MAX,parse:function b(a){return{content:a[3],lang:a[2]||void 0,type:'codeBlock'}}},codeInline:{match:simpleInlineRegex(CODE_INLINE_R),order:PARSE_PRIORITY_LOW,parse:function b(a){return{content:a[2]}},react:function e(a,b,c){return d('code',{key:c.key},a.content)}},footnote:{match:blockRegex(FOOTNOTE_R),order:PARSE_PRIORITY_MAX,parse:function b(a){return g.push({footnote:a[2],identifier:a[1]}),{}},react:renderNothing},footnoteReference:{match:inlineRegex(FOOTNOTE_REFERENCE_R),order:PARSE_PRIORITY_HIGH,parse:function b(a){return{content:a[1],target:'#'+a[1]}},react:function e(a,b,c){return d('a',{key:c.key,href:sanitizeUrl(a.target)},d('sup',{key:c.key},a.content))}},gfmTask:{match:inlineRegex(GFM_TASK_R),order:PARSE_PRIORITY_HIGH,parse:function b(a){return{completed:a[1].toLowerCase()==='x'}},react:function e(a,b,c){return d('input',{checked:a.completed,key:c.key,readOnly:!0,type:'checkbox'})}},heading:{match:blockRegex(HEADING_R),order:PARSE_PRIORITY_HIGH,parse:function e(a,c,d){return{content:parseInline(c,a[2],d),id:b.slugify(a[2]),level:a[1].length}},react:function f(a,b,c){var e='h'+a.level;return d(e,{id:a.id,key:c.key},b(a.content,c))}},headingSetext:{match:blockRegex(HEADING_SETEXT_R),order:PARSE_PRIORITY_MAX,parse:function d(a,b,c){return{content:parseInline(b,a[1],c),level:a[2]==='='?1:2,type:'heading'}}},htmlBlock:{match:anyScopeRegex(HTML_BLOCK_ELEMENT_R),order:PARSE_PRIORITY_HIGH,parse:function k(a,b,c){var d=a[3].match(HTML_LEFT_TRIM_AMOUNT_R),f=d[1],g=new RegExp('^'+f,'gm'),h=a[3].replace(g,''),i=containsBlockSyntax(h)?parseBlock:parseInline,j=DO_NOT_PROCESS_HTML_ELEMENTS.indexOf(a[1])!==-1;return{attrs:e(a[2]),content:j?a[3]:i(b,h,c),noInnerParse:j,tag:a[1]}},react:function e(a,b,c){return d(a.tag,_extends({key:c.key},a.attrs),a.noInnerParse?a.content:b(a.content,c))}},htmlComment:{match:anyScopeRegex(HTML_COMMENT_R),order:PARSE_PRIORITY_HIGH,parse:function a(){return{}},react:renderNothing},htmlSelfClosing:{match:anyScopeRegex(HTML_SELF_CLOSING_ELEMENT_R),order:PARSE_PRIORITY_HIGH,parse:function b(a){return{attrs:e(a[2]||''),tag:a[1]}},react:function e(a,b,c){return d(a.tag,_extends({},a.attrs,{key:c.key}))}},image:{match:simpleInlineRegex(IMAGE_R),order:PARSE_PRIORITY_HIGH,parse:function b(a){return{alt:a[1],target:unescapeUrl(a[2]),title:a[3]}},react:function e(a,b,c){return d('img',{key:c.key,alt:a.alt||void 0,title:a.title||void 0,src:sanitizeUrl(a.target)})}},link:{match:inlineRegex(LINK_R,!1),order:PARSE_PRIORITY_LOW,parse:function d(a,b,c){return{content:parseSimpleInline(b,a[1],c),target:unescapeUrl(a[2]),title:a[3]}},react:function e(a,b,c){return d('a',{key:c.key,href:sanitizeUrl(a.target),title:a.title},b(a.content,c))}},linkAngleBraceStyleDetector:{match:inlineRegex(LINK_AUTOLINK_R),order:PARSE_PRIORITY_MAX,parse:function b(a){return{content:[{content:a[1],type:'text'}],target:a[1],type:'link'}}},linkBareUrlDetector:{match:inlineRegex(LINK_AUTOLINK_BARE_URL_R),order:PARSE_PRIORITY_MAX,parse:function b(a){return{content:[{content:a[1],type:'text'}],target:a[1],title:void 0,type:'link'}}},linkMailtoDetector:{match:inlineRegex(LINK_AUTOLINK_MAILTO_R),order:PARSE_PRIORITY_MAX,parse:function d(a){var b=a[1],c=a[1];return AUTOLINK_MAILTO_CHECK_R.test(c)||(c='mailto:'+c),{content:[{content:b.replace('mailto:',''),type:'text'}],target:c,type:'link'}}},list:{match:function f(a,b,c){var d=LIST_LOOKBEHIND_R.exec(c),e=b._list||!b.inline;return d&&e?(a=d[1]+a,LIST_R.exec(a)):null},order:PARSE_PRIORITY_HIGH,parse:function j(a,b,c){var d=a[2],e=d.length>1,f=e?+d:void 0,g=a[0].replace(BLOCK_END_R,'\n').match(LIST_ITEM_R),h=!1,i=g.map(function(a,d){var e=LIST_ITEM_PREFIX_R.exec(a)[0].length,f=new RegExp('^ {1,'+e+'}','gm'),i=a.replace(f,'').replace(LIST_ITEM_PREFIX_R,''),j=d===g.length-1,k=i.indexOf('\n\n')!==-1,l=k||j&&h;h=l;var m=c.inline,n=c._list;c._list=!0;var o;l?(c.inline=!1,o=i.replace(LIST_ITEM_END_R,'\n\n')):(c.inline=!0,o=i.replace(LIST_ITEM_END_R,''));var p=b(o,c);return c.inline=m,c._list=n,p});return{items:i,ordered:e,start:f}},react:function f(a,b,c){var e=a.ordered?'ol':'ul';return d(e,{key:c.key,start:a.start},a.items.map(function(a,e){return d('li',{key:e},b(a,c))}))}},newlineCoalescer:{match:blockRegex(CONSECUTIVE_NEWLINE_R),order:PARSE_PRIORITY_LOW,parse:captureNothing,react:function a(){return'\n'}},paragraph:{match:blockRegex(PARAGRAPH_R),order:PARSE_PRIORITY_LOW,parse:parseCaptureInline,react:function e(a,b,c){return d('p',{key:c.key},b(a.content,c))}},ref:{match:inlineRegex(REFERENCE_IMAGE_OR_LINK),order:PARSE_PRIORITY_MAX,parse:function b(a){return h[a[1]]={target:a[2],title:a[4]},{}},react:renderNothing},refImage:{match:simpleInlineRegex(REFERENCE_IMAGE_R),order:PARSE_PRIORITY_MAX,parse:function b(a){return{alt:a[1]||void 0,ref:a[2]}},react:function e(a,b,c){return d('img',{key:c.key,alt:a.alt,src:sanitizeUrl(h[a.ref].target),title:h[a.ref].title})}},refLink:{match:inlineRegex(REFERENCE_LINK_R),order:PARSE_PRIORITY_MAX,parse:function d(a,b,c){return{content:b(a[1],c),fallbackContent:b(a[0].replace(SQUARE_BRACKETS_R,'\\$1'),c),ref:a[2]}},react:function e(a,b,c){return h[a.ref]?d('a',{key:c.key,href:sanitizeUrl(h[a.ref].target),title:h[a.ref].title},b(a.content,c)):d('span',null,b(a.fallbackContent,c))}},table:{match:blockRegex(NP_TABLE_R),order:PARSE_PRIORITY_HIGH,parse:parseTable,react:function f(a,b,e){return d('table',{key:e.key},d('thead',null,d('tr',null,a.header.map(function(c,f){return d('th',{key:f,style:getTableStyle(a,f)},b(c,e))}))),d('tbody',null,a.cells.map(function(c,f){return d('tr',{key:f},c.map(function(f,g){return d('td',{key:g,style:getTableStyle(a,g)},b(f,e))}))})))}},text:{match:anyScopeRegex(TEXT_PLAIN_R),order:PARSE_PRIORITY_MIN,parse:function b(a){return{content:a[0].replace(HTML_CHAR_CODE_R,function(a,b){return namedCodesToUnicode[b]?namedCodesToUnicode[b]:a})}},react:function b(a){return a.content}},textBolded:{match:simpleInlineRegex(TEXT_BOLD_R),order:PARSE_PRIORITY_MED,parse:function d(a,b,c){return{content:b(a[2],c)}},react:function e(a,b,c){return d('strong',{key:c.key},b(a.content,c))}},textEmphasized:{match:simpleInlineRegex(TEXT_EMPHASIZED_R),order:PARSE_PRIORITY_LOW,parse:function d(a,b,c){return{content:b(a[2],c)}},react:function e(a,b,c){return d('em',{key:c.key},b(a.content,c))}},textEscaped:{match:simpleInlineRegex(TEXT_ESCAPED_R),order:PARSE_PRIORITY_HIGH,parse:function b(a){return{content:a[1],type:'text'}}},textStrikethroughed:{match:simpleInlineRegex(TEXT_STRIKETHROUGHED_R),order:PARSE_PRIORITY_LOW,parse:parseCaptureInline,react:function e(a,b,c){return d('del',{key:c.key},b(a.content,c))}}},j=parserFor(i),k=reactFor(ruleOutput(i)),l=c(a);return g.length&&l.props.children.push(d('footer',null,g.map(function(a){return d('div',{id:a.identifier,key:a.identifier},a.identifier,k(j(a.footnote,{inline:!0})))}))),l}function Markdown(a){var b=a.children,c=a.options,d=_objectWithoutProperties(a,['children','options']);return react_default.a.cloneElement(compiler(b,c),d)}if(false){ var PropTypes; }

//# sourceMappingURL=esm.js.map
// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Link/index.js + 1 modules
var Link = __webpack_require__(96);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Text/index.js + 1 modules
var Text = __webpack_require__(17);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Para/index.js + 1 modules
var Para = __webpack_require__(44);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Styled/index.js + 3 modules
var Styled = __webpack_require__(2);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Heading/index.js + 1 modules
var Heading = __webpack_require__(43);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/MarkdownHeading/MarkdownHeadingRenderer.js





var styles = function styles(_ref) {
	var space = _ref.space;
	return {
		spacing: {
			marginBottom: space[2]
		}
	};
};

function MarkdownHeadingRenderer(_ref2) {
	var classes = _ref2.classes,
	    level = _ref2.level,
	    children = _ref2.children;

	return react_default.a.createElement(
		'div',
		{ className: classes.spacing },
		react_default.a.createElement(
			Heading["a" /* default */],
			{ level: level },
			children
		)
	);
}

MarkdownHeadingRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	level: prop_types_default.a.oneOf([1, 2, 3, 4, 5, 6]).isRequired,
	children: prop_types_default.a.node
};

/* harmony default export */ var MarkdownHeading_MarkdownHeadingRenderer = (Object(Styled["a" /* default */])(styles)(MarkdownHeadingRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/MarkdownHeading/index.js

// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(3);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/List/ListRenderer.js





var ListRenderer_styles = function styles(_ref) {
	var space = _ref.space,
	    color = _ref.color,
	    fontFamily = _ref.fontFamily;
	return {
		list: {
			marginTop: 0,
			marginBottom: space[2],
			paddingLeft: space[3],
			fontSize: 'inherit'
		},
		ordered: {
			listStyleType: 'decimal'
		},
		li: {
			color: color.base,
			fontFamily: fontFamily.base,
			fontSize: 'inherit',
			lineHeight: 1.5,
			listStyleType: 'inherit'
		}
	};
};

function ListRenderer(_ref2) {
	var classes = _ref2.classes,
	    ordered = _ref2.ordered,
	    children = _ref2.children;

	var Tag = ordered ? 'ol' : 'ul';

	var classNames = classnames_default()(classes.list, ordered && classes.ordered);

	return react_default.a.createElement(
		Tag,
		{ className: classNames },
		react["Children"].map(children, function (li) {
			return Object(react["cloneElement"])(li, { className: classes.li });
		})
	);
}
ListRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	ordered: prop_types_default.a.bool,
	children: prop_types_default.a.node.isRequired
};
ListRenderer.defaultProps = {
	ordered: false
};

/* harmony default export */ var List_ListRenderer = (Object(Styled["a" /* default */])(ListRenderer_styles)(ListRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/List/index.js

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/Blockquote/BlockquoteRenderer.js






var BlockquoteRenderer_styles = function styles(_ref) {
	var space = _ref.space,
	    color = _ref.color,
	    fontSize = _ref.fontSize,
	    fontFamily = _ref.fontFamily;
	return {
		blockquote: {
			margin: [[space[2], space[4]]],
			padding: 0,
			color: color.base,
			fontFamily: fontFamily.base,
			fontSize: fontSize.base,
			lineHeight: 1.5
		}
	};
};

function BlockquoteRenderer(_ref2) {
	var classes = _ref2.classes,
	    className = _ref2.className,
	    children = _ref2.children;

	var blockquoteClasses = classnames_default()(classes.blockquote, className);
	return react_default.a.createElement(
		'blockquote',
		{ className: blockquoteClasses },
		children
	);
}
BlockquoteRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	className: prop_types_default.a.string,
	children: prop_types_default.a.node.isRequired
};

/* harmony default export */ var Blockquote_BlockquoteRenderer = (Object(Styled["a" /* default */])(BlockquoteRenderer_styles)(BlockquoteRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/Blockquote/index.js

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/Pre/PreRenderer.js





var PreRenderer_styles = function styles(_ref) {
	var space = _ref.space,
	    color = _ref.color,
	    fontSize = _ref.fontSize,
	    fontFamily = _ref.fontFamily,
	    borderRadius = _ref.borderRadius;
	return {
		pre: {
			fontFamily: fontFamily.base,
			fontSize: fontSize.small,
			lineHeight: 1.5,
			color: color.base,
			whiteSpace: 'pre',
			backgroundColor: color.codeBackground,
			padding: [[space[1], space[2]]],
			border: [[1, color.border, 'solid']],
			borderRadius: borderRadius,
			marginTop: 0,
			marginBottom: space[2]
		}
	};
};

function PreRenderer(_ref2) {
	var classes = _ref2.classes,
	    children = _ref2.children;

	return react_default.a.createElement(
		'pre',
		{ className: classes.pre },
		children
	);
}
PreRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	children: prop_types_default.a.node.isRequired
};

/* harmony default export */ var Pre_PreRenderer = (Object(Styled["a" /* default */])(PreRenderer_styles)(PreRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/Pre/index.js

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Code/index.js + 1 modules
var Code = __webpack_require__(48);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/Checkbox/CheckboxRenderer.js
var CheckboxRenderer_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function CheckboxRenderer_objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }






var CheckboxRenderer_styles = function styles() {
	return {
		input: {
			isolate: false,
			display: 'inline-block',
			verticalAlign: 'middle'
		}
	};
};

function CheckboxRenderer(_ref) {
	var classes = _ref.classes,
	    rest = CheckboxRenderer_objectWithoutProperties(_ref, ['classes']);

	return react_default.a.createElement('input', CheckboxRenderer_extends({}, rest, { type: 'checkbox', className: classes.input }));
}
CheckboxRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired
};

/* harmony default export */ var Checkbox_CheckboxRenderer = (Object(Styled["a" /* default */])(CheckboxRenderer_styles)(CheckboxRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/Checkbox/index.js

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/Hr/HrRenderer.js





var HrRenderer_styles = function styles(_ref) {
	var space = _ref.space,
	    color = _ref.color;
	return {
		hr: {
			borderBottom: [[1, color.border, 'solid']],
			marginTop: 0,
			marginBottom: space[2]
		}
	};
};

function HrRenderer(_ref2) {
	var classes = _ref2.classes;

	return react_default.a.createElement('hr', { className: classes.hr });
}
HrRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired
};

/* harmony default export */ var Hr_HrRenderer = (Object(Styled["a" /* default */])(HrRenderer_styles)(HrRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/Hr/index.js

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/Details/DetailsRenderer.js




var DetailsRenderer_styles = function styles(_ref) {
	var space = _ref.space,
	    color = _ref.color,
	    fontSize = _ref.fontSize,
	    fontFamily = _ref.fontFamily;
	return {
		details: {
			marginBottom: space[2],
			fontFamily: fontFamily.base,
			fontSize: fontSize.base,
			color: color.base
		}
	};
};

function DetailsRenderer(_ref2) {
	var classes = _ref2.classes,
	    children = _ref2.children;

	return react_default.a.createElement(
		'details',
		{ className: classes.details },
		children
	);
}

DetailsRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	children: prop_types_default.a.node.isRequired
};

/* harmony default export */ var Details_DetailsRenderer = (Object(Styled["a" /* default */])(DetailsRenderer_styles)(DetailsRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/Details/DetailsSummaryRenderer.js




var DetailsSummaryRenderer_styles = function styles(_ref) {
	var space = _ref.space,
	    color = _ref.color,
	    fontSize = _ref.fontSize,
	    fontFamily = _ref.fontFamily;
	return {
		summary: {
			marginBottom: space[1],
			fontFamily: fontFamily.base,
			fontSize: fontSize.base,
			color: color.base,
			cursor: 'pointer',
			'&:focus': {
				isolate: false,
				outline: [[1, 'dotted', color.linkHover]],
				outlineOffset: 2
			}
		}
	};
};

function DetailsSummaryRenderer(_ref2) {
	var classes = _ref2.classes,
	    children = _ref2.children;

	return react_default.a.createElement(
		'summary',
		{ className: classes.summary },
		children
	);
}

DetailsSummaryRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	children: prop_types_default.a.node.isRequired
};

/* harmony default export */ var Details_DetailsSummaryRenderer = (Object(Styled["a" /* default */])(DetailsSummaryRenderer_styles)(DetailsSummaryRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/Details/index.js


// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/Table/TableRenderer.js





var TableRenderer_styles = function styles(_ref) {
	var space = _ref.space;
	return {
		table: {
			marginTop: 0,
			marginBottom: space[2],
			borderCollapse: 'collapse'
		}
	};
};

function TableRenderer(_ref2) {
	var classes = _ref2.classes,
	    children = _ref2.children;

	return react_default.a.createElement(
		'table',
		{ className: classes.table },
		children
	);
}
TableRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	children: prop_types_default.a.node.isRequired
};

/* harmony default export */ var Table_TableRenderer = (Object(Styled["a" /* default */])(TableRenderer_styles)(TableRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/Table/TableHeadRenderer.js





var TableHeadRenderer_styles = function styles(_ref) {
	var color = _ref.color;
	return {
		thead: {
			borderBottom: [[1, color.border, 'solid']]
		}
	};
};

function TableHeadRenderer(_ref2) {
	var classes = _ref2.classes,
	    children = _ref2.children;

	return react_default.a.createElement(
		'thead',
		{ className: classes.thead },
		children
	);
}
TableHeadRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	children: prop_types_default.a.node.isRequired
};

/* harmony default export */ var Table_TableHeadRenderer = (Object(Styled["a" /* default */])(TableHeadRenderer_styles)(TableHeadRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/Table/TableBodyRenderer.js



function TableBodyRenderer(_ref) {
	var children = _ref.children;

	return react_default.a.createElement(
		'tbody',
		null,
		children
	);
}
TableBodyRenderer.propTypes = {
	children: prop_types_default.a.node.isRequired
};

/* harmony default export */ var Table_TableBodyRenderer = (TableBodyRenderer);
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/Table/TableRowRenderer.js



function TableRowRenderer(_ref) {
	var children = _ref.children;

	return react_default.a.createElement(
		'tr',
		null,
		children
	);
}
TableRowRenderer.propTypes = {
	children: prop_types_default.a.node.isRequired
};

/* harmony default export */ var Table_TableRowRenderer = (TableRowRenderer);
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/Table/TableCellRenderer.js





var TableCellRenderer_styles = function styles(_ref) {
	var space = _ref.space,
	    color = _ref.color,
	    fontSize = _ref.fontSize,
	    fontFamily = _ref.fontFamily;
	return {
		td: {
			padding: [[space[0], space[2], space[0], 0]],
			fontFamily: fontFamily.base,
			fontSize: fontSize.base,
			color: color.base,
			lineHeight: 1.5
		},
		th: {
			composes: '$td',
			fontWeight: 'bold'
		}
	};
};

function TableCellRenderer(_ref2) {
	var classes = _ref2.classes,
	    header = _ref2.header,
	    children = _ref2.children;

	if (header) {
		return react_default.a.createElement(
			'th',
			{ className: classes.th },
			children
		);
	}

	return react_default.a.createElement(
		'td',
		{ className: classes.td },
		children
	);
}
TableCellRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	header: prop_types_default.a.bool,
	children: prop_types_default.a.node.isRequired
};
TableCellRenderer.defaultProps = {
	header: false
};

/* harmony default export */ var Table_TableCellRenderer = (Object(Styled["a" /* default */])(TableCellRenderer_styles)(TableCellRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/Table/index.js





// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/Markdown.js
var Markdown_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
















// We’re explicitly specifying Webpack loaders here so we could skip specifying them in Webpack configuration.
// That way we could avoid clashes between our loaders and user loaders.
// eslint-disable-next-line import/no-unresolved
__webpack_require__(359);

var baseOverrides = {
	a: {
		component: Link["a" /* default */]
	},
	h1: {
		component: MarkdownHeading_MarkdownHeadingRenderer,
		props: {
			level: 1
		}
	},
	h2: {
		component: MarkdownHeading_MarkdownHeadingRenderer,
		props: {
			level: 2
		}
	},
	h3: {
		component: MarkdownHeading_MarkdownHeadingRenderer,
		props: {
			level: 3
		}
	},
	h4: {
		component: MarkdownHeading_MarkdownHeadingRenderer,
		props: {
			level: 4
		}
	},
	h5: {
		component: MarkdownHeading_MarkdownHeadingRenderer,
		props: {
			level: 5
		}
	},
	h6: {
		component: MarkdownHeading_MarkdownHeadingRenderer,
		props: {
			level: 6
		}
	},
	p: {
		component: Para["a" /* default */],
		props: {
			semantic: 'p'
		}
	},
	em: {
		component: Text["a" /* default */],
		props: {
			semantic: 'em'
		}
	},
	strong: {
		component: Text["a" /* default */],
		props: {
			semantic: 'strong'
		}
	},
	ul: {
		component: List_ListRenderer
	},
	ol: {
		component: List_ListRenderer,
		props: {
			ordered: true
		}
	},
	blockquote: {
		component: Blockquote_BlockquoteRenderer
	},
	code: {
		component: Code["a" /* default */]
	},
	pre: {
		component: Pre_PreRenderer
	},
	input: {
		component: Checkbox_CheckboxRenderer
	},
	hr: {
		component: Hr_HrRenderer
	},
	table: {
		component: Table_TableRenderer
	},
	thead: {
		component: Table_TableHeadRenderer
	},
	th: {
		component: Table_TableCellRenderer,
		props: {
			header: true
		}
	},
	tbody: {
		component: Table_TableBodyRenderer
	},
	tr: {
		component: Table_TableRowRenderer
	},
	td: {
		component: Table_TableCellRenderer
	},
	details: {
		component: Details_DetailsRenderer
	},
	summary: {
		component: Details_DetailsSummaryRenderer
	}
};

var inlineOverrides = Markdown_extends({}, baseOverrides, {
	p: {
		component: Text["a" /* default */]
	}
});

function Markdown_Markdown(_ref) {
	var text = _ref.text,
	    inline = _ref.inline;

	var overrides = inline ? inlineOverrides : baseOverrides;
	return compiler(text, { overrides: overrides, forceBlock: true });
}

Markdown_Markdown.propTypes = {
	text: prop_types_default.a.string.isRequired,
	inline: prop_types_default.a.bool
};

/* harmony default export */ var rsg_components_Markdown_Markdown = (Markdown_Markdown);
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/index.js
/* concated harmony reexport default */__webpack_require__.d(__webpack_exports__, "a", function() { return rsg_components_Markdown_Markdown; });


/***/ }),
/* 5 */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports = typeof window == 'object' && window && window.Math == Math ? window
  : typeof self == 'object' && self && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();


/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return unquote; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return getType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return showSpaces; });
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/**
 * Remove quotes around given string.
 *
 * @param {string} string
 * @returns {string}
 */
function unquote(string) {
	return string && string.replace(/^['"]|['"]$/g, '');
}

/**
 * Return prop type object.
 *
 * @param {object} prop
 * @returns {object}
 */
function getType(prop) {
	if (prop.flowType) {
		if (prop.flowType.name === 'union' && prop.flowType.elements.every(function (elem) {
			return elem.name === 'literal';
		})) {
			return _extends({}, prop.flowType, {
				name: 'enum',
				value: prop.flowType.elements
			});
		}
		return prop.flowType;
	}
	return prop.type;
}

/**
 * Show starting and ending whitespace around given string.
 *
 * @param {string} string
 * @returns {string}
 */
function showSpaces(string) {
	return string && string.replace(/^\s|\s$/g, '␣');
}

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(5);
var getOwnPropertyDescriptor = __webpack_require__(76).f;
var hide = __webpack_require__(15);
var redefine = __webpack_require__(80);
var setGlobal = __webpack_require__(115);
var copyConstructorProperties = __webpack_require__(183);
var isForced = __webpack_require__(412);

/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global;
  } else if (STATIC) {
    target = global[TARGET] || setGlobal(TARGET, {});
  } else {
    target = (global[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.noTargetGet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty === typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      hide(sourceProperty, 'sham', true);
    }
    // extend global
    redefine(target, key, sourceProperty, options);
  }
};


/***/ }),
/* 8 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

var freeGlobal = __webpack_require__(153);

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(52)('wks');
var uid = __webpack_require__(116);
var Symbol = __webpack_require__(5).Symbol;
var NATIVE_SYMBOL = __webpack_require__(186);

module.exports = function (name) {
  return store[name] || (store[name] = NATIVE_SYMBOL && Symbol[name]
    || (NATIVE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};


/***/ }),
/* 11 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 12 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;


/***/ }),
/* 13 */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;

module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),
/* 14 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

var definePropertyModule = __webpack_require__(20);
var createPropertyDescriptor = __webpack_require__(51);

module.exports = __webpack_require__(18) ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

var freeGlobal = __webpack_require__(205);

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;


/***/ }),
/* 17 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(0);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(1);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Styled/index.js + 3 modules
var Styled = __webpack_require__(2);

// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(3);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Text/TextRenderer.js
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }






var styles = function styles(_ref) {
	var fontFamily = _ref.fontFamily,
	    fontSize = _ref.fontSize,
	    color = _ref.color;
	return {
		text: {
			fontFamily: fontFamily.base
		},
		inheritSize: {
			fontSize: 'inherit'
		},
		smallSize: {
			fontSize: fontSize.small
		},
		baseSize: {
			fontSize: fontSize.base
		},
		textSize: {
			fontSize: fontSize.text
		},
		baseColor: {
			color: color.base
		},
		lightColor: {
			color: color.light
		},
		em: {
			fontStyle: 'italic'
		},
		strong: {
			fontWeight: 'bold'
		},
		isUnderlined: {
			borderBottom: [[1, 'dotted', color.lightest]]
		}
	};
};

function TextRenderer(_ref2) {
	var _cx;

	var classes = _ref2.classes,
	    semantic = _ref2.semantic,
	    size = _ref2.size,
	    color = _ref2.color,
	    underlined = _ref2.underlined,
	    children = _ref2.children,
	    props = _objectWithoutProperties(_ref2, ['classes', 'semantic', 'size', 'color', 'underlined', 'children']);

	var Tag = semantic || 'span';
	var classNames = classnames_default()(classes.text, classes[size + 'Size'], classes[color + 'Color'], (_cx = {}, _defineProperty(_cx, classes[semantic], semantic), _defineProperty(_cx, classes.isUnderlined, underlined), _cx));

	return react_default.a.createElement(
		Tag,
		_extends({}, props, { className: classNames }),
		children
	);
}

TextRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	semantic: prop_types_default.a.oneOf(['em', 'strong']),
	size: prop_types_default.a.oneOf(['inherit', 'small', 'base', 'text']),
	color: prop_types_default.a.oneOf(['base', 'light']),
	underlined: prop_types_default.a.bool,
	children: prop_types_default.a.node.isRequired
};

TextRenderer.defaultProps = {
	size: 'inherit',
	color: 'base',
	underlined: false
};

/* harmony default export */ var Text_TextRenderer = (Object(Styled["a" /* default */])(styles)(TextRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Text/index.js
/* concated harmony reexport default */__webpack_require__.d(__webpack_exports__, "a", function() { return Text_TextRenderer; });


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(8)(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 19 */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(18);
var IE8_DOM_DEFINE = __webpack_require__(180);
var anObject = __webpack_require__(39);
var toPrimitive = __webpack_require__(79);
var nativeDefineProperty = Object.defineProperty;

exports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return nativeDefineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = function() {};

if (false) {}

module.exports = warning;


/***/ }),
/* 22 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(104),
    isLength = __webpack_require__(107);

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(18);

// `Object.defineProperty` method
// https://tc39.github.io/ecma262/#sec-object.defineproperty
__webpack_require__(7)({ target: 'Object', stat: true, forced: !DESCRIPTORS, sham: !DESCRIPTORS }, {
  defineProperty: __webpack_require__(20).f
});


/***/ }),
/* 25 */
/***/ (function(module, exports) {

// WARNING: This function’s source is returned by a loader without transpilation.
// Do not use any unsupported by IE11+ features.

/**
 * Return module from a given map (like {react: require('react')}) or throw.
 * We alllow to require modules only from Markdown examples (won’t work dinamically becasue we need to know all required
 * modules in advance to be able to bundle them with the code).
 *
 * @param {object} requireMap
 * @param {string} filepath
 * @return {object}
 */
module.exports = function requireInRuntime(requireMap, filepath) {
	if (!(filepath in requireMap)) {
		throw new Error(
			'require() statements can be added only by editing a Markdown example file: require("' +
				filepath +
				'")'
		);
	}
	return requireMap[filepath];
};


/***/ }),
/* 26 */
/***/ (function(module, exports) {

// WARNING: This function’s source is returned by a loader without transpilation.
// Do not use any unsupported by IE11+ features.

/**
 * Eval example code in a custom context:
 * - `require()` that allows you to require modules from Markdown examples (won’t work dinamically becasue we need
 *   to know all required modules in advance to be able to bundle them with the code).
 * - `state` variable, `setState` function that will be binded to a React component
 *   that manages example’s state on the frontend.
 *
 * Also prepends a given `code` with a `header` (maps required context modules to local variables).
 *
 * @param {string} header
 * @param {Function} require
 * @param {string} code
 * @return {Function}
 */
module.exports = function evalInContext(header, require, code) {
	var func = new Function('require', 'state', 'setState', header + code); // eslint-disable-line no-new-func

	// Bind the `require` function, other context arguments will be passed from the frontend
	return func.bind(null, require);
};


/***/ }),
/* 27 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(0);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(1);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Styled/index.js + 3 modules
var Styled = __webpack_require__(2);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Type/TypeRenderer.js




var styles = function styles(_ref) {
	var fontFamily = _ref.fontFamily,
	    fontSize = _ref.fontSize,
	    color = _ref.color;
	return {
		type: {
			fontFamily: fontFamily.monospace,
			fontSize: fontSize.small,
			color: color.type
		}
	};
};

function TypeRenderer(_ref2) {
	var classes = _ref2.classes,
	    children = _ref2.children;

	return react_default.a.createElement(
		'span',
		{ className: classes.type },
		children
	);
}

TypeRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	children: prop_types_default.a.node.isRequired
};

/* harmony default export */ var Type_TypeRenderer = (Object(Styled["a" /* default */])(styles)(TypeRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Type/index.js
/* concated harmony reexport default */__webpack_require__.d(__webpack_exports__, "a", function() { return Type_TypeRenderer; });


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsNative = __webpack_require__(305),
    getValue = __webpack_require__(310);

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(65),
    getRawTag = __webpack_require__(306),
    objectToString = __webpack_require__(307);

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__(5);
var has = __webpack_require__(13);
var DESCRIPTORS = __webpack_require__(18);
var IS_PURE = __webpack_require__(75);
var $export = __webpack_require__(7);
var redefine = __webpack_require__(80);
var hiddenKeys = __webpack_require__(83);
var fails = __webpack_require__(8);
var shared = __webpack_require__(52);
var setToStringTag = __webpack_require__(121);
var uid = __webpack_require__(116);
var wellKnownSymbol = __webpack_require__(10);
var wrappedWellKnownSymbolModule = __webpack_require__(187);
var defineWellKnownSymbol = __webpack_require__(188);
var enumKeys = __webpack_require__(414);
var isArray = __webpack_require__(122);
var anObject = __webpack_require__(39);
var isObject = __webpack_require__(19);
var toIndexedObject = __webpack_require__(31);
var toPrimitive = __webpack_require__(79);
var createPropertyDescriptor = __webpack_require__(51);
var nativeObjectCreate = __webpack_require__(123);
var getOwnPropertyNamesExternal = __webpack_require__(417);
var getOwnPropertyDescriptorModule = __webpack_require__(76);
var definePropertyModule = __webpack_require__(20);
var propertyIsEnumerableModule = __webpack_require__(77);
var hide = __webpack_require__(15);
var objectKeys = __webpack_require__(53);
var HIDDEN = __webpack_require__(82)('hidden');
var InternalStateModule = __webpack_require__(81);
var SYMBOL = 'Symbol';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(SYMBOL);
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
var $Symbol = global.Symbol;
var JSON = global.JSON;
var nativeJSONStringify = JSON && JSON.stringify;
var PROTOTYPE = 'prototype';
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');
var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var ObjectPrototypeSymbols = shared('op-symbols');
var WellKnownSymbolsStore = shared('wks');
var ObjectPrototype = Object[PROTOTYPE];
var QObject = global.QObject;
var NATIVE_SYMBOL = __webpack_require__(186);
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDescriptor = DESCRIPTORS && fails(function () {
  return nativeObjectCreate(nativeDefineProperty({}, 'a', {
    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, key);
  if (ObjectPrototypeDescriptor) delete ObjectPrototype[key];
  nativeDefineProperty(it, key, D);
  if (ObjectPrototypeDescriptor && it !== ObjectPrototype) {
    nativeDefineProperty(ObjectPrototype, key, ObjectPrototypeDescriptor);
  }
} : nativeDefineProperty;

var wrap = function (tag, description) {
  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);
  setInternalState(symbol, {
    type: SYMBOL,
    tag: tag,
    description: description
  });
  if (!DESCRIPTORS) symbol.description = description;
  return symbol;
};

var isSymbol = NATIVE_SYMBOL && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return Object(it) instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) nativeDefineProperty(it, HIDDEN, createPropertyDescriptor(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = nativeObjectCreate(D, { enumerable: createPropertyDescriptor(0, false) });
    } return setSymbolDescriptor(it, key, D);
  } return nativeDefineProperty(it, key, D);
};

var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIndexedObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};

var $create = function create(it, P) {
  return P === undefined ? nativeObjectCreate(it) : $defineProperties(nativeObjectCreate(it), P);
};

var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = nativePropertyIsEnumerable.call(this, key = toPrimitive(key, true));
  if (this === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};

var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIndexedObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;
  var D = nativeGetOwnPropertyDescriptor(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};

var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = nativeGetOwnPropertyNames(toIndexedObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && !has(hiddenKeys, key)) result.push(key);
  } return result;
};

var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectPrototype;
  var names = nativeGetOwnPropertyNames(IS_OP ? ObjectPrototypeSymbols : toIndexedObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectPrototype, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// `Symbol` constructor
// https://tc39.github.io/ecma262/#sec-symbol-constructor
if (!NATIVE_SYMBOL) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');
    var description = arguments[0] === undefined ? undefined : String(arguments[0]);
    var tag = uid(description);
    var setter = function (value) {
      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
    };
    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });
    return wrap(tag, description);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return getInternalState(this).tag;
  });

  propertyIsEnumerableModule.f = $propertyIsEnumerable;
  definePropertyModule.f = $defineProperty;
  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
  __webpack_require__(117).f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
  __webpack_require__(84).f = $getOwnPropertySymbols;

  if (DESCRIPTORS) {
    // https://github.com/tc39/proposal-Symbol-description
    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {
      configurable: true,
      get: function description() {
        return getInternalState(this).description;
      }
    });
    if (!IS_PURE) {
      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });
    }
  }

  wrappedWellKnownSymbolModule.f = function (name) {
    return wrap(wellKnownSymbol(name), name);
  };
}

$export({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, { Symbol: $Symbol });

for (var wellKnownSymbols = objectKeys(WellKnownSymbolsStore), k = 0; wellKnownSymbols.length > k;) {
  defineWellKnownSymbol(wellKnownSymbols[k++]);
}

$export({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {
  // `Symbol.for` method
  // https://tc39.github.io/ecma262/#sec-symbol.for
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // `Symbol.keyFor` method
  // https://tc39.github.io/ecma262/#sec-symbol.keyfor
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { USE_SETTER = true; },
  useSimple: function () { USE_SETTER = false; }
});

$export({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {
  // `Object.create` method
  // https://tc39.github.io/ecma262/#sec-object.create
  create: $create,
  // `Object.defineProperty` method
  // https://tc39.github.io/ecma262/#sec-object.defineproperty
  defineProperty: $defineProperty,
  // `Object.defineProperties` method
  // https://tc39.github.io/ecma262/#sec-object.defineproperties
  defineProperties: $defineProperties,
  // `Object.getOwnPropertyDescriptor` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor
});

$export({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {
  // `Object.getOwnPropertyNames` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertynames
  getOwnPropertyNames: $getOwnPropertyNames,
  // `Object.getOwnPropertySymbols` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// `JSON.stringify` method behavior with symbols
// https://tc39.github.io/ecma262/#sec-json.stringify
JSON && $export({ target: 'JSON', stat: true, forced: !NATIVE_SYMBOL || fails(function () {
  var symbol = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  return nativeJSONStringify([symbol]) != '[null]'
    // WebKit converts symbol values to JSON as null
    || nativeJSONStringify({ a: symbol }) != '{}'
    // V8 throws on boxed symbols
    || nativeJSONStringify(Object(symbol)) != '{}';
}) }, {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return nativeJSONStringify.apply(JSON, args);
  }
});

// `Symbol.prototype[@@toPrimitive]` method
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive
if (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) hide($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// `Symbol.prototype[@@toStringTag]` property
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag
setToStringTag($Symbol, SYMBOL);

hiddenKeys[HIDDEN] = true;


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__(113);
var requireObjectCoercible = __webpack_require__(78);

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

var toObject = __webpack_require__(41);
var nativeKeys = __webpack_require__(53);
var FAILS_ON_PRIMITIVES = __webpack_require__(8)(function () { nativeKeys(1); });

// `Object.keys` method
// https://tc39.github.io/ecma262/#sec-object.keys
__webpack_require__(7)({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {
  keys: function keys(it) {
    return nativeKeys(toObject(it));
  }
});


/***/ }),
/* 33 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;


/***/ }),
/* 34 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsNative = __webpack_require__(461),
    getValue = __webpack_require__(464);

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;


/***/ }),
/* 36 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(0);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(1);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Styled/index.js + 3 modules
var Styled = __webpack_require__(2);

// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(3);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Name/NameRenderer.js
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






var styles = function styles(_ref) {
	var fontFamily = _ref.fontFamily,
	    fontSize = _ref.fontSize,
	    color = _ref.color;
	return {
		name: {
			fontFamily: fontFamily.monospace,
			fontSize: fontSize.small,
			color: color.name
		},
		isDeprecated: {
			color: color.light,
			textDecoration: 'line-through'
		}
	};
};

function NameRenderer(_ref2) {
	var classes = _ref2.classes,
	    children = _ref2.children,
	    deprecated = _ref2.deprecated;

	var classNames = classnames_default()(classes.name, _defineProperty({}, classes.isDeprecated, deprecated));
	return react_default.a.createElement(
		'code',
		{ className: classNames },
		children
	);
}

NameRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	children: prop_types_default.a.node.isRequired,
	deprecated: prop_types_default.a.bool
};

/* harmony default export */ var Name_NameRenderer = (Object(Styled["a" /* default */])(styles)(NameRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Name/index.js
/* concated harmony reexport default */__webpack_require__.d(__webpack_exports__, "a", function() { return Name_NameRenderer; });


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _warning = __webpack_require__(21);

var _warning2 = _interopRequireDefault(_warning);

var _toCss = __webpack_require__(100);

var _toCss2 = _interopRequireDefault(_toCss);

var _toCssValue = __webpack_require__(61);

var _toCssValue2 = _interopRequireDefault(_toCssValue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var StyleRule = function () {
  function StyleRule(key, style, options) {
    _classCallCheck(this, StyleRule);

    this.type = 'style';
    this.isProcessed = false;
    var sheet = options.sheet,
        Renderer = options.Renderer,
        selector = options.selector;

    this.key = key;
    this.options = options;
    this.style = style;
    if (selector) this.selectorText = selector;
    this.renderer = sheet ? sheet.renderer : new Renderer();
  }

  /**
   * Set selector string.
   * Attention: use this with caution. Most browsers didn't implement
   * selectorText setter, so this may result in rerendering of entire Style Sheet.
   */


  _createClass(StyleRule, [{
    key: 'prop',


    /**
     * Get or set a style property.
     */
    value: function prop(name, value) {
      // It's a getter.
      if (value === undefined) return this.style[name];

      // Don't do anything if the value has not changed.
      if (this.style[name] === value) return this;

      value = this.options.jss.plugins.onChangeValue(value, name, this);

      var isEmpty = value == null || value === false;
      var isDefined = name in this.style;

      // Value is empty and wasn't defined before.
      if (isEmpty && !isDefined) return this;

      // We are going to remove this value.
      var remove = isEmpty && isDefined;

      if (remove) delete this.style[name];else this.style[name] = value;

      // Renderable is defined if StyleSheet option `link` is true.
      if (this.renderable) {
        if (remove) this.renderer.removeProperty(this.renderable, name);else this.renderer.setProperty(this.renderable, name, value);
        return this;
      }

      var sheet = this.options.sheet;

      if (sheet && sheet.attached) {
        (0, _warning2['default'])(false, 'Rule is not linked. Missing sheet option "link: true".');
      }
      return this;
    }

    /**
     * Apply rule to an element inline.
     */

  }, {
    key: 'applyTo',
    value: function applyTo(renderable) {
      var json = this.toJSON();
      for (var prop in json) {
        this.renderer.setProperty(renderable, prop, json[prop]);
      }return this;
    }

    /**
     * Returns JSON representation of the rule.
     * Fallbacks are not supported.
     * Useful for inline styles.
     */

  }, {
    key: 'toJSON',
    value: function toJSON() {
      var json = {};
      for (var prop in this.style) {
        var value = this.style[prop];
        if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') json[prop] = value;else if (Array.isArray(value)) json[prop] = (0, _toCssValue2['default'])(value);
      }
      return json;
    }

    /**
     * Generates a CSS string.
     */

  }, {
    key: 'toString',
    value: function toString(options) {
      var sheet = this.options.sheet;

      var link = sheet ? sheet.options.link : false;
      var opts = link ? _extends({}, options, { allowEmpty: true }) : options;
      return (0, _toCss2['default'])(this.selector, this.style, opts);
    }
  }, {
    key: 'selector',
    set: function set(selector) {
      if (selector === this.selectorText) return;

      this.selectorText = selector;

      if (!this.renderable) return;

      var hasChanged = this.renderer.setSelector(this.renderable, selector);

      // If selector setter is not implemented, rerender the rule.
      if (!hasChanged && this.renderable) {
        var renderable = this.renderer.replaceRule(this.renderable, this);
        if (renderable) this.renderable = renderable;
      }
    }

    /**
     * Get selector string.
     */
    ,
    get: function get() {
      return this.selectorText;
    }
  }]);

  return StyleRule;
}();

exports['default'] = StyleRule;

/***/ }),
/* 38 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(19);

module.exports = function (it) {
  if (!isObject(it)) {
    throw TypeError(String(it) + ' is not an object');
  } return it;
};


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

var assign = __webpack_require__(418);

// `Object.assign` method
// https://tc39.github.io/ecma262/#sec-object.assign
__webpack_require__(7)({ target: 'Object', stat: true, forced: Object.assign !== assign }, { assign: assign });


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__(78);

// `ToObject` abstract operation
// https://tc39.github.io/ecma262/#sec-toobject
module.exports = function (argument) {
  return Object(requireObjectCoercible(argument));
};


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(55),
    getRawTag = __webpack_require__(435),
    objectToString = __webpack_require__(436);

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;


/***/ }),
/* 43 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(0);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(1);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(3);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Styled/index.js + 3 modules
var Styled = __webpack_require__(2);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Heading/HeadingRenderer.js
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }






var styles = function styles(_ref) {
	var color = _ref.color,
	    fontFamily = _ref.fontFamily,
	    fontSize = _ref.fontSize;
	return {
		heading: {
			margin: 0,
			color: color.base,
			fontFamily: fontFamily.base,
			fontWeight: 'normal'
		},
		heading1: {
			fontSize: fontSize.h1
		},
		heading2: {
			fontSize: fontSize.h2
		},
		heading3: {
			fontSize: fontSize.h3
		},
		heading4: {
			fontSize: fontSize.h4
		},
		heading5: {
			fontSize: fontSize.h5,
			fontWeight: 'bold'
		},
		heading6: {
			fontSize: fontSize.h6,
			fontStyle: 'italic'
		}
	};
};

function HeadingRenderer(_ref2) {
	var classes = _ref2.classes,
	    level = _ref2.level,
	    children = _ref2.children,
	    props = _objectWithoutProperties(_ref2, ['classes', 'level', 'children']);

	var Tag = 'h' + level;
	var headingClasses = classnames_default()(classes.heading, classes['heading' + level]);

	return react_default.a.createElement(
		Tag,
		_extends({}, props, { className: headingClasses }),
		children
	);
}

HeadingRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	level: prop_types_default.a.oneOf([1, 2, 3, 4, 5, 6]).isRequired,
	children: prop_types_default.a.node
};

/* harmony default export */ var Heading_HeadingRenderer = (Object(Styled["a" /* default */])(styles)(HeadingRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Heading/index.js
/* concated harmony reexport default */__webpack_require__.d(__webpack_exports__, "a", function() { return Heading_HeadingRenderer; });


/***/ }),
/* 44 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(0);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(1);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Styled/index.js + 3 modules
var Styled = __webpack_require__(2);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Para/ParaRenderer.js




var styles = function styles(_ref) {
	var space = _ref.space,
	    color = _ref.color,
	    fontFamily = _ref.fontFamily;
	return {
		para: {
			marginTop: 0,
			marginBottom: space[2],
			color: color.base,
			fontFamily: fontFamily.base,
			fontSize: 'inherit',
			lineHeight: 1.5
		}
	};
};

function ParaRenderer(_ref2) {
	var classes = _ref2.classes,
	    semantic = _ref2.semantic,
	    children = _ref2.children;

	var Tag = semantic || 'div';

	return react_default.a.createElement(
		Tag,
		{ className: classes.para },
		children
	);
}

ParaRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	semantic: prop_types_default.a.oneOf(['p']),
	children: prop_types_default.a.node.isRequired
};

/* harmony default export */ var Para_ParaRenderer = (Object(Styled["a" /* default */])(styles)(ParaRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Para/index.js
/* concated harmony reexport default */__webpack_require__.d(__webpack_exports__, "a", function() { return Para_ParaRenderer; });


/***/ }),
/* 45 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(0);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(1);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Styled/index.js + 3 modules
var Styled = __webpack_require__(2);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/index.js + 23 modules
var Markdown = __webpack_require__(4);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Name/index.js + 1 modules
var Name = __webpack_require__(36);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Type/index.js + 1 modules
var Type = __webpack_require__(27);

// EXTERNAL MODULE: ./node_modules/react-group/index.js
var react_group = __webpack_require__(60);
var react_group_default = /*#__PURE__*/__webpack_require__.n(react_group);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Argument/ArgumentRenderer.js
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }









var styles = function styles(_ref) {
	var space = _ref.space;
	return {
		block: {
			marginBottom: space[2]
		}
	};
};

function ArgumentRenderer(_ref2) {
	var classes = _ref2.classes,
	    name = _ref2.name,
	    type = _ref2.type,
	    description = _ref2.description,
	    returns = _ref2.returns,
	    block = _ref2.block,
	    props = _objectWithoutProperties(_ref2, ['classes', 'name', 'type', 'description', 'returns', 'block']);

	var isOptional = type && type.type === 'OptionalType';
	var defaultValue = props.default;
	if (isOptional) {
		type = type.expression;
	}
	return react_default.a.createElement(
		react_group_default.a,
		_extends({ className: block && classes.block }, props),
		returns && 'Returns',
		name && react_default.a.createElement(
			'span',
			null,
			react_default.a.createElement(
				Name["a" /* default */],
				null,
				name
			),
			type && ':'
		),
		type && react_default.a.createElement(
			Type["a" /* default */],
			null,
			type.name,
			isOptional && '?',
			!!defaultValue && '=' + defaultValue
		),
		type && description && ' \u2014 ',
		description && react_default.a.createElement(Markdown["a" /* default */], { text: '' + description, inline: true })
	);
}

ArgumentRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	name: prop_types_default.a.string,
	type: prop_types_default.a.object,
	default: prop_types_default.a.string,
	description: prop_types_default.a.string,
	returns: prop_types_default.a.bool,
	block: prop_types_default.a.bool
};

/* harmony default export */ var Argument_ArgumentRenderer = (Object(Styled["a" /* default */])(styles)(ArgumentRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Argument/index.js
/* concated harmony reexport default */__webpack_require__.d(__webpack_exports__, "a", function() { return Argument_ArgumentRenderer; });


/***/ }),
/* 46 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(0);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(1);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/index.js + 23 modules
var Markdown = __webpack_require__(4);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/node_modules/lodash/map.js
var map = __webpack_require__(237);
var map_default = /*#__PURE__*/__webpack_require__.n(map);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/JsDoc/JsDoc.js





var plural = function plural(array, caption) {
	return array.length === 1 ? caption : caption + 's';
};
var list = function list(array) {
	return array.map(function (item) {
		return item.description;
	}).join(', ');
};
var paragraphs = function paragraphs(array) {
	return array.map(function (item) {
		return item.description;
	}).join('\n\n');
};

var fields = {
	deprecated: function deprecated(value) {
		return '**Deprecated:** ' + value[0].description;
	},
	see: function see(value) {
		return paragraphs(value);
	},
	link: function link(value) {
		return paragraphs(value);
	},
	author: function author(value) {
		return plural(value, 'Author') + ': ' + list(value);
	},
	version: function version(value) {
		return 'Version: ' + value[0].description;
	},
	since: function since(value) {
		return 'Since: ' + value[0].description;
	}
};

function getMarkdown(props) {
	return map_default()(fields, function (format, field) {
		return props[field] && format(props[field]);
	}).filter(Boolean).join('\n\n');
}

function JsDoc(props) {
	var markdown = getMarkdown(props);
	return markdown ? react_default.a.createElement(Markdown["a" /* default */], { text: markdown }) : null;
}

JsDoc.propTypes = {
	deprecated: prop_types_default.a.array,
	see: prop_types_default.a.array,
	link: prop_types_default.a.array,
	author: prop_types_default.a.array,
	version: prop_types_default.a.array,
	since: prop_types_default.a.array
};
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/JsDoc/index.js
/* concated harmony reexport default */__webpack_require__.d(__webpack_exports__, "a", function() { return JsDoc; });


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

var baseKeys = __webpack_require__(171),
    getTag = __webpack_require__(172),
    isArguments = __webpack_require__(69),
    isArray = __webpack_require__(12),
    isArrayLike = __webpack_require__(23),
    isBuffer = __webpack_require__(70),
    isPrototype = __webpack_require__(68),
    isTypedArray = __webpack_require__(71);

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    setTag = '[object Set]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if `value` is an empty object, collection, map, or set.
 *
 * Objects are considered empty if they have no own enumerable string keyed
 * properties.
 *
 * Array-like values such as `arguments` objects, arrays, buffers, strings, or
 * jQuery-like collections are considered empty if they have a `length` of `0`.
 * Similarly, maps and sets are considered empty if they have a `size` of `0`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
 * @example
 *
 * _.isEmpty(null);
 * // => true
 *
 * _.isEmpty(true);
 * // => true
 *
 * _.isEmpty(1);
 * // => true
 *
 * _.isEmpty([1, 2, 3]);
 * // => false
 *
 * _.isEmpty({ 'a': 1 });
 * // => false
 */
function isEmpty(value) {
  if (value == null) {
    return true;
  }
  if (isArrayLike(value) &&
      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
        isBuffer(value) || isTypedArray(value) || isArguments(value))) {
    return !value.length;
  }
  var tag = getTag(value);
  if (tag == mapTag || tag == setTag) {
    return !value.size;
  }
  if (isPrototype(value)) {
    return !baseKeys(value).length;
  }
  for (var key in value) {
    if (hasOwnProperty.call(value, key)) {
      return false;
    }
  }
  return true;
}

module.exports = isEmpty;


/***/ }),
/* 48 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(0);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(1);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(3);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Styled/index.js + 3 modules
var Styled = __webpack_require__(2);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Code/CodeRenderer.js





var styles = function styles(_ref) {
	var fontFamily = _ref.fontFamily;
	return {
		code: {
			fontFamily: fontFamily.monospace,
			fontSize: 'inherit',
			color: 'inherit',
			background: 'transparent',
			whiteSpace: 'inherit'
		}
	};
};

function CodeRenderer(_ref2) {
	var classes = _ref2.classes,
	    className = _ref2.className,
	    children = _ref2.children;

	var classNames = classnames_default()(className, classes.code);

	var isHighlighted = className && className.indexOf('lang-') !== -1;
	if (isHighlighted) {
		return react_default.a.createElement('code', { className: classNames, dangerouslySetInnerHTML: { __html: children } });
	}
	return react_default.a.createElement(
		'code',
		{ className: classNames },
		children
	);
}
CodeRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	className: prop_types_default.a.string,
	children: prop_types_default.a.node.isRequired
};

/* harmony default export */ var Code_CodeRenderer = (Object(Styled["a" /* default */])(styles)(CodeRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Code/index.js
/* concated harmony reexport default */__webpack_require__.d(__webpack_exports__, "a", function() { return Code_CodeRenderer; });


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _createRule = __webpack_require__(62);

var _createRule2 = _interopRequireDefault(_createRule);

var _linkRule = __webpack_require__(149);

var _linkRule2 = _interopRequireDefault(_linkRule);

var _StyleRule = __webpack_require__(37);

var _StyleRule2 = _interopRequireDefault(_StyleRule);

var _escape = __webpack_require__(269);

var _escape2 = _interopRequireDefault(_escape);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Contains rules objects and allows adding/removing etc.
 * Is used for e.g. by `StyleSheet` or `ConditionalRule`.
 */
var RuleList = function () {

  // Original styles object.
  function RuleList(options) {
    var _this = this;

    _classCallCheck(this, RuleList);

    this.map = {};
    this.raw = {};
    this.index = [];

    this.update = function (name, data) {
      var _options = _this.options,
          plugins = _options.jss.plugins,
          sheet = _options.sheet;

      if (typeof name === 'string') {
        plugins.onUpdate(data, _this.get(name), sheet);
      } else {
        for (var index = 0; index < _this.index.length; index++) {
          plugins.onUpdate(name, _this.index[index], sheet);
        }
      }
    };

    this.options = options;
    this.classes = options.classes;
  }

  /**
   * Create and register rule.
   *
   * Will not render after Style Sheet was rendered the first time.
   */


  // Used to ensure correct rules order.

  // Rules registry for access by .get() method.
  // It contains the same rule registered by name and by selector.


  _createClass(RuleList, [{
    key: 'add',
    value: function add(name, decl, options) {
      var _options2 = this.options,
          parent = _options2.parent,
          sheet = _options2.sheet,
          jss = _options2.jss,
          Renderer = _options2.Renderer,
          generateClassName = _options2.generateClassName;


      options = _extends({
        classes: this.classes,
        parent: parent,
        sheet: sheet,
        jss: jss,
        Renderer: Renderer,
        generateClassName: generateClassName
      }, options);

      if (!options.selector && this.classes[name]) {
        options.selector = '.' + (0, _escape2['default'])(this.classes[name]);
      }

      this.raw[name] = decl;

      var rule = (0, _createRule2['default'])(name, decl, options);

      var className = void 0;

      if (!options.selector && rule instanceof _StyleRule2['default']) {
        className = generateClassName(rule, sheet);
        rule.selector = '.' + (0, _escape2['default'])(className);
      }

      this.register(rule, className);

      var index = options.index === undefined ? this.index.length : options.index;
      this.index.splice(index, 0, rule);

      return rule;
    }

    /**
     * Get a rule.
     */

  }, {
    key: 'get',
    value: function get(name) {
      return this.map[name];
    }

    /**
     * Delete a rule.
     */

  }, {
    key: 'remove',
    value: function remove(rule) {
      this.unregister(rule);
      this.index.splice(this.indexOf(rule), 1);
    }

    /**
     * Get index of a rule.
     */

  }, {
    key: 'indexOf',
    value: function indexOf(rule) {
      return this.index.indexOf(rule);
    }

    /**
     * Run `onProcessRule()` plugins on every rule.
     */

  }, {
    key: 'process',
    value: function process() {
      var plugins = this.options.jss.plugins;
      // We need to clone array because if we modify the index somewhere else during a loop
      // we end up with very hard-to-track-down side effects.

      this.index.slice(0).forEach(plugins.onProcessRule, plugins);
    }

    /**
     * Register a rule in `.map` and `.classes` maps.
     */

  }, {
    key: 'register',
    value: function register(rule, className) {
      this.map[rule.key] = rule;
      if (rule instanceof _StyleRule2['default']) {
        this.map[rule.selector] = rule;
        if (className) this.classes[rule.key] = className;
      }
    }

    /**
     * Unregister a rule.
     */

  }, {
    key: 'unregister',
    value: function unregister(rule) {
      delete this.map[rule.key];
      if (rule instanceof _StyleRule2['default']) {
        delete this.map[rule.selector];
        delete this.classes[rule.key];
      }
    }

    /**
     * Update the function values with a new data.
     */

  }, {
    key: 'link',


    /**
     * Link renderable rules with CSSRuleList.
     */
    value: function link(cssRules) {
      var map = this.options.sheet.renderer.getUnescapedKeysMap(this.index);

      for (var i = 0; i < cssRules.length; i++) {
        var cssRule = cssRules[i];
        var _key = this.options.sheet.renderer.getKey(cssRule);
        if (map[_key]) _key = map[_key];
        var rule = this.map[_key];
        if (rule) (0, _linkRule2['default'])(rule, cssRule);
      }
    }

    /**
     * Convert rules to a CSS string.
     */

  }, {
    key: 'toString',
    value: function toString(options) {
      var str = '';
      var sheet = this.options.sheet;

      var link = sheet ? sheet.options.link : false;

      for (var index = 0; index < this.index.length; index++) {
        var rule = this.index[index];
        var css = rule.toString(options);

        // No need to render an empty rule.
        if (!css && !link) continue;

        if (str) str += '\n';
        str += css;
      }

      return str;
    }
  }]);

  return RuleList;
}();

exports['default'] = RuleList;

/***/ }),
/* 50 */
/***/ (function(module, exports) {

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

module.exports = eq;


/***/ }),
/* 51 */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(5);
var setGlobal = __webpack_require__(115);
var SHARED = '__core-js_shared__';
var store = global[SHARED] || setGlobal(SHARED, {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.0.1',
  mode: __webpack_require__(75) ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var internalObjectKeys = __webpack_require__(184);
var enumBugKeys = __webpack_require__(120);

module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var internalIndexOf = __webpack_require__(185)(false);
var nativeIndexOf = [].indexOf;

var NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;
var SLOPPY_METHOD = __webpack_require__(189)('indexOf');

// `Array.prototype.indexOf` method
// https://tc39.github.io/ecma262/#sec-array.prototype.indexof
__webpack_require__(7)({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || SLOPPY_METHOD }, {
  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
    return NEGATIVE_ZERO
      // convert -0 to +0
      ? nativeIndexOf.apply(this, arguments) || 0
      : internalIndexOf(this, searchElement, arguments[1]);
  }
});


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(16);

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;


/***/ }),
/* 56 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__(212),
    baseAssignValue = __webpack_require__(213);

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

module.exports = copyObject;


/***/ }),
/* 58 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/jss/lib/index.js
var lib = __webpack_require__(141);

// EXTERNAL MODULE: ./node_modules/jss-global/lib/index.js
var jss_global_lib = __webpack_require__(229);
var jss_global_lib_default = /*#__PURE__*/__webpack_require__.n(jss_global_lib);

// EXTERNAL MODULE: ./node_modules/jss-isolate/lib/index.js
var jss_isolate_lib = __webpack_require__(230);
var jss_isolate_lib_default = /*#__PURE__*/__webpack_require__.n(jss_isolate_lib);

// EXTERNAL MODULE: ./node_modules/jss-nested/lib/index.js
var jss_nested_lib = __webpack_require__(231);
var jss_nested_lib_default = /*#__PURE__*/__webpack_require__.n(jss_nested_lib);

// EXTERNAL MODULE: ./node_modules/jss-camel-case/lib/index.js
var jss_camel_case_lib = __webpack_require__(232);
var jss_camel_case_lib_default = /*#__PURE__*/__webpack_require__.n(jss_camel_case_lib);

// EXTERNAL MODULE: ./node_modules/jss-default-unit/lib/index.js
var jss_default_unit_lib = __webpack_require__(233);
var jss_default_unit_lib_default = /*#__PURE__*/__webpack_require__.n(jss_default_unit_lib);

// EXTERNAL MODULE: ./node_modules/jss-compose/lib/index.js
var jss_compose_lib = __webpack_require__(234);
var jss_compose_lib_default = /*#__PURE__*/__webpack_require__.n(jss_compose_lib);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/styles/nonInheritedProps.js
/* eslint-disable */
/**
 * List of non-inheritable properties.
 *
 * Borrowed from https://github.com/suitcss/preprocessor/blob/master/lib/encapsulation.js
 */
/* harmony default export */ var nonInheritedProps = ({
	animation: 'none 0s ease 0s 1 normal none running',
	'backface-visibility': 'visible',
	background: 'transparent none repeat 0 0 / auto auto padding-box border-box scroll',
	border: 'medium none currentColor',
	'border-image': 'none',
	'border-radius': '0',
	bottom: 'auto',
	'box-shadow': 'none',
	clear: 'none',
	clip: 'auto',
	columns: 'auto',
	'column-count': 'auto',
	'column-fill': 'balance',
	'column-gap': 'normal',
	'column-rule': 'medium none currentColor',
	'column-span': '1',
	'column-width': 'auto',
	content: 'normal',
	'counter-increment': 'none',
	'counter-reset': 'none',
	float: 'none',
	height: 'auto',
	hyphens: 'none',
	left: 'auto',
	margin: '0',
	'max-height': 'none',
	'max-width': 'none',
	'min-height': '0',
	'min-width': '0',
	opacity: '1',
	outline: 'medium none invert',
	overflow: 'visible',
	'overflow-x': 'visible',
	'overflow-y': 'visible',
	padding: '0',
	'page-break-after': 'auto',
	'page-break-before': 'auto',
	'page-break-inside': 'auto',
	perspective: 'none',
	'perspective-origin': '50% 50%',
	position: 'static',
	right: 'auto',
	'table-layout': 'auto',
	'text-decoration': 'none',
	top: 'auto',
	transform: 'none',
	'transform-origin': '50% 50% 0',
	'transform-style': 'flat',
	transition: 'none 0s ease 0s',
	'unicode-bidi': 'normal',
	'vertical-align': 'baseline',
	width: 'auto',
	'z-index': 'auto'
});
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/styles/setupjss.js
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };










var createGenerateClassName = function createGenerateClassName() {
	var counter = 0;
	return function (rule) {
		return 'rsg--' + rule.key + '-' + counter++;
	};
};

var jss = Object(lib["create"])({
	createGenerateClassName: createGenerateClassName,
	plugins: [jss_global_lib_default()(), jss_isolate_lib_default()({
		reset: _extends({}, nonInheritedProps, {

			// “Global” styles for all components
			boxSizing: 'border-box',

			// Allow inheritance because it may be set on body and should be available for user components
			color: 'inherit',
			font: 'inherit',
			fontFamily: 'inherit',
			fontSize: 'inherit',
			fontWeight: 'inherit',
			lineHeight: 'inherit'
		})
	}), jss_nested_lib_default()(), jss_camel_case_lib_default()(), jss_default_unit_lib_default()(), jss_compose_lib_default()()]
});

/* harmony default export */ var setupjss = __webpack_exports__["a"] = (jss);

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
  ) {
    return;
  }
  if (false) {}
  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (true) {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = __webpack_require__(288);
} else {}


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

var React = __webpack_require__(0);
var PropTypes = __webpack_require__(353);

/**
 * React component to render collection of items separated by space or other separator.
 */
function Group(props) {
	var children = React.Children.toArray(props.children);

	// Insert separators
	var items = children;
	var separator = props.separator;
	var separatorIsElement = React.isValidElement(separator);
	if (children.length > 1) {
		items = [children.shift()];
		children.forEach(function(item, index) {
			if (separatorIsElement) {
				var key = 'separator-' + (item.key || index);
				separator = React.cloneElement(separator, { key: key });
			}
			return items.push(separator, item);
		});
	}

	return React.createElement(props.inline ? 'span' : 'div', { className: props.className }, items);
}

Group.propTypes = {
	/** Items. */
	children: PropTypes.node,
	/** Wrap in `<span>` instead of `<div>`. */
	inline: PropTypes.bool,
	/** Custom separator (space by default). */
	separator: PropTypes.node,
	/** Custom class name. */
	className: PropTypes.string,
};
Group.defaultProps = {
	separator: ' ',
};

module.exports = Group;


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = toCssValue;
var join = function join(value, by) {
  var result = '';
  for (var i = 0; i < value.length; i++) {
    // Remove !important from the value, it will be readded later.
    if (value[i] === '!important') break;
    if (result) result += by;
    result += value[i];
  }
  return result;
};

/**
 * Converts array values to string.
 *
 * `margin: [['5px', '10px']]` > `margin: 5px 10px;`
 * `border: ['1px', '2px']` > `border: 1px, 2px;`
 * `margin: [['5px', '10px'], '!important']` > `margin: 5px 10px !important;`
 * `color: ['red', !important]` > `color: red !important;`
 */
function toCssValue(value) {
  var ignoreImportant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (!Array.isArray(value)) return value;

  var cssValue = '';

  // Support space separated values via `[['5px', '10px']]`.
  if (Array.isArray(value[0])) {
    for (var i = 0; i < value.length; i++) {
      if (value[i] === '!important') break;
      if (cssValue) cssValue += ', ';
      cssValue += join(value[i], ' ');
    }
  } else cssValue = join(value, ', ');

  // Add !important, because it was ignored.
  if (!ignoreImportant && value[value.length - 1] === '!important') {
    cssValue += ' !important';
  }

  return cssValue;
}

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = createRule;

var _warning = __webpack_require__(21);

var _warning2 = _interopRequireDefault(_warning);

var _StyleRule = __webpack_require__(37);

var _StyleRule2 = _interopRequireDefault(_StyleRule);

var _cloneStyle = __webpack_require__(266);

var _cloneStyle2 = _interopRequireDefault(_cloneStyle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 * Create a rule instance.
 */
function createRule() {
  var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'unnamed';
  var decl = arguments[1];
  var options = arguments[2];
  var jss = options.jss;

  var declCopy = (0, _cloneStyle2['default'])(decl);

  var rule = jss.plugins.onCreateRule(name, declCopy, options);
  if (rule) return rule;

  // It is an at-rule and it has no instance.
  if (name[0] === '@') {
    (0, _warning2['default'])(false, '[JSS] Unknown at-rule %s', name);
  }

  return new _StyleRule2['default'](name, declCopy, options);
}

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

var listCacheClear = __webpack_require__(295),
    listCacheDelete = __webpack_require__(296),
    listCacheGet = __webpack_require__(297),
    listCacheHas = __webpack_require__(298),
    listCacheSet = __webpack_require__(299);

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(50);

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(9);

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(28);

/* Built-in method references that are verified to be native. */
var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

var isKeyable = __webpack_require__(319);

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

module.exports = getMapData;


/***/ }),
/* 68 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

module.exports = isPrototype;


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsArguments = __webpack_require__(331),
    isObjectLike = __webpack_require__(22);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(9),
    stubFalse = __webpack_require__(333);

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(38)(module)))

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsTypedArray = __webpack_require__(335),
    baseUnary = __webpack_require__(336),
    nodeUtil = __webpack_require__(337);

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(163),
    baseKeys = __webpack_require__(171),
    isArrayLike = __webpack_require__(23);

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(29),
    isObjectLike = __webpack_require__(22);

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

module.exports = isSymbol;


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

var isSymbol = __webpack_require__(73);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = toKey;


/***/ }),
/* 75 */
/***/ (function(module, exports) {

module.exports = false;


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(18);
var propertyIsEnumerableModule = __webpack_require__(77);
var createPropertyDescriptor = __webpack_require__(51);
var toIndexedObject = __webpack_require__(31);
var toPrimitive = __webpack_require__(79);
var has = __webpack_require__(13);
var IE8_DOM_DEFINE = __webpack_require__(180);
var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

exports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return nativeGetOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);
};


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var nativePropertyIsEnumerable = {}.propertyIsEnumerable;
var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = nativeGetOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);

exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = nativeGetOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : nativePropertyIsEnumerable;


/***/ }),
/* 78 */
/***/ (function(module, exports) {

// `RequireObjectCoercible` abstract operation
// https://tc39.github.io/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on " + it);
  return it;
};


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(19);
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(5);
var hide = __webpack_require__(15);
var has = __webpack_require__(13);
var setGlobal = __webpack_require__(115);
var nativeFunctionToString = __webpack_require__(182);
var InternalStateModule = __webpack_require__(81);
var getInternalState = InternalStateModule.get;
var enforceInternalState = InternalStateModule.enforce;
var TEMPLATE = String(nativeFunctionToString).split('toString');

__webpack_require__(52)('inspectSource', function (it) {
  return nativeFunctionToString.call(it);
});

(module.exports = function (O, key, value, options) {
  var unsafe = options ? !!options.unsafe : false;
  var simple = options ? !!options.enumerable : false;
  var noTargetGet = options ? !!options.noTargetGet : false;
  if (typeof value == 'function') {
    if (typeof key == 'string' && !has(value, 'name')) hide(value, 'name', key);
    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');
  }
  if (O === global) {
    if (simple) O[key] = value;
    else setGlobal(key, value);
    return;
  } else if (!unsafe) {
    delete O[key];
  } else if (!noTargetGet && O[key]) {
    simple = true;
  }
  if (simple) O[key] = value;
  else hide(O, key, value);
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, 'toString', function toString() {
  return typeof this == 'function' && getInternalState(this).source || nativeFunctionToString.call(this);
});


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

var NATIVE_WEAK_MAP = __webpack_require__(409);
var isObject = __webpack_require__(19);
var hide = __webpack_require__(15);
var objectHas = __webpack_require__(13);
var sharedKey = __webpack_require__(82);
var hiddenKeys = __webpack_require__(83);
var WeakMap = __webpack_require__(5).WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP) {
  var store = new WeakMap();
  var wmget = store.get;
  var wmhas = store.has;
  var wmset = store.set;
  set = function (it, metadata) {
    wmset.call(store, it, metadata);
    return metadata;
  };
  get = function (it) {
    return wmget.call(store, it) || {};
  };
  has = function (it) {
    return wmhas.call(store, it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    hide(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return objectHas(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return objectHas(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(52)('keys');
var uid = __webpack_require__(116);

module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),
/* 83 */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),
/* 84 */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isArray = __webpack_require__(122);
var isObject = __webpack_require__(19);
var toObject = __webpack_require__(41);
var toLength = __webpack_require__(118);
var createProperty = __webpack_require__(425);
var arraySpeciesCreate = __webpack_require__(192);
var IS_CONCAT_SPREADABLE = __webpack_require__(10)('isConcatSpreadable');
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';

var IS_CONCAT_SPREADABLE_SUPPORT = !__webpack_require__(8)(function () {
  var array = [];
  array[IS_CONCAT_SPREADABLE] = false;
  return array.concat()[0] !== array;
});

var SPECIES_SUPPORT = __webpack_require__(124)('concat');

var isConcatSpreadable = function (O) {
  if (!isObject(O)) return false;
  var spreadable = O[IS_CONCAT_SPREADABLE];
  return spreadable !== undefined ? !!spreadable : isArray(O);
};

var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;

// `Array.prototype.concat` method
// https://tc39.github.io/ecma262/#sec-array.prototype.concat
// with adding support of @@isConcatSpreadable and @@species
__webpack_require__(7)({ target: 'Array', proto: true, forced: FORCED }, {
  concat: function concat(arg) { // eslint-disable-line no-unused-vars
    var O = toObject(this);
    var A = arraySpeciesCreate(O, 0);
    var n = 0;
    var i, k, length, len, E;
    for (i = -1, length = arguments.length; i < length; i++) {
      E = i === -1 ? O : arguments[i];
      if (isConcatSpreadable(E)) {
        len = toLength(E.length);
        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);
      } else {
        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        createProperty(A, n++, E);
      }
    }
    A.length = n;
    return A;
  }
});


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var internalFilter = __webpack_require__(125)(2);

var SPECIES_SUPPORT = __webpack_require__(124)('filter');

// `Array.prototype.filter` method
// https://tc39.github.io/ecma262/#sec-array.prototype.filter
// with adding support of @@species
__webpack_require__(7)({ target: 'Array', proto: true, forced: !SPECIES_SUPPORT }, {
  filter: function filter(callbackfn /* , thisArg */) {
    return internalFilter(this, callbackfn, arguments[1]);
  }
});


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var forEach = __webpack_require__(193);

// `Array.prototype.forEach` method
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
__webpack_require__(7)({ target: 'Array', proto: true, forced: [].forEach != forEach }, { forEach: forEach });


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__(31);
var nativeGetOwnPropertyDescriptor = __webpack_require__(76).f;
var DESCRIPTORS = __webpack_require__(18);
var FAILS_ON_PRIMITIVES = __webpack_require__(8)(function () { nativeGetOwnPropertyDescriptor(1); });
var FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
__webpack_require__(7)({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {
    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);
  }
});


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

var DOMIterables = __webpack_require__(202);
var forEach = __webpack_require__(193);
var hide = __webpack_require__(15);
var global = __webpack_require__(5);

for (var COLLECTION_NAME in DOMIterables) {
  var Collection = global[COLLECTION_NAME];
  var CollectionPrototype = Collection && Collection.prototype;
  // some Chrome versions have non-configurable methods on DOMTokenList
  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {
    hide(CollectionPrototype, 'forEach', forEach);
  } catch (error) {
    CollectionPrototype.forEach = forEach;
  }
}


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

var listCacheClear = __webpack_require__(451),
    listCacheDelete = __webpack_require__(452),
    listCacheGet = __webpack_require__(453),
    listCacheHas = __webpack_require__(454),
    listCacheSet = __webpack_require__(455);

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(208);

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(35);

/* Built-in method references that are verified to be native. */
var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

var isKeyable = __webpack_require__(473);

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

module.exports = getMapData;


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

var createFind = __webpack_require__(401),
    findIndex = __webpack_require__(402);

/**
 * Iterates over elements of `collection`, returning the first element
 * `predicate` returns truthy for. The predicate is invoked with three
 * arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {*} Returns the matched element, else `undefined`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'age': 36, 'active': true },
 *   { 'user': 'fred',    'age': 40, 'active': false },
 *   { 'user': 'pebbles', 'age': 1,  'active': true }
 * ];
 *
 * _.find(users, function(o) { return o.age < 40; });
 * // => object for 'barney'
 *
 * // The `_.matches` iteratee shorthand.
 * _.find(users, { 'age': 1, 'active': true });
 * // => object for 'pebbles'
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.find(users, ['active', false]);
 * // => object for 'fred'
 *
 * // The `_.property` iteratee shorthand.
 * _.find(users, 'active');
 * // => object for 'barney'
 */
var find = createFind(findIndex);

module.exports = find;


/***/ }),
/* 95 */
/***/ (function(module, exports) {

module.exports = {
	HOMEPAGE: 'https://react-styleguidist.js.org/',
	BUGS: 'https://github.com/styleguidist/react-styleguidist/issues',
	DOCS_CONFIG: 'https://react-styleguidist.js.org/docs/configuration.html',
	DOCS_COMPONENTS: 'https://react-styleguidist.js.org/docs/components.html',
	DOCS_WEBPACK: 'https://react-styleguidist.js.org/docs/webpack.html',
	DOCS_DOCUMENTING: 'https://react-styleguidist.js.org/docs/documenting.html',
	DOCS_THIRDPARTIES: 'https://react-styleguidist.js.org/docs/thirdparties.html',
};


/***/ }),
/* 96 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(0);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(1);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(3);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Styled/index.js + 3 modules
var Styled = __webpack_require__(2);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Link/LinkRenderer.js
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }






var styles = function styles(_ref) {
	var color = _ref.color;
	return {
		link: {
			'&, &:link, &:visited': {
				fontSize: 'inherit',
				color: color.link,
				textDecoration: 'none'
			},
			'&:hover, &:active': {
				isolate: false,
				color: color.linkHover,
				cursor: 'pointer'
			}
		}
	};
};

function LinkRenderer(_ref2) {
	var classes = _ref2.classes,
	    children = _ref2.children,
	    props = _objectWithoutProperties(_ref2, ['classes', 'children']);

	return react_default.a.createElement(
		'a',
		_extends({}, props, { className: classnames_default()(classes.link, props.className) }),
		children
	);
}

LinkRenderer.propTypes = {
	children: prop_types_default.a.node,
	className: prop_types_default.a.string,
	classes: prop_types_default.a.object.isRequired
};

/* harmony default export */ var Link_LinkRenderer = (Object(Styled["a" /* default */])(styles)(LinkRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Link/index.js
/* concated harmony reexport default */__webpack_require__.d(__webpack_exports__, "a", function() { return Link_LinkRenderer; });


/***/ }),
/* 97 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(0);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(1);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Argument/index.js + 1 modules
var Argument = __webpack_require__(45);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Heading/index.js + 1 modules
var Heading = __webpack_require__(43);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Styled/index.js + 3 modules
var Styled = __webpack_require__(2);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Arguments/ArgumentsRenderer.js
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };







var styles = function styles(_ref) {
	var space = _ref.space;
	return {
		root: {
			marginBottom: space[2],
			fontSize: 'inherit'
		},
		headingWrapper: {
			marginBottom: space[0]
		}
	};
};

function ArgumentsRenderer(_ref2) {
	var classes = _ref2.classes,
	    args = _ref2.args,
	    heading = _ref2.heading;

	if (args.length === 0) {
		return null;
	}

	return react_default.a.createElement(
		'div',
		{ className: classes.root },
		heading && react_default.a.createElement(
			'div',
			{ className: classes.headingWrapper },
			react_default.a.createElement(
				Heading["a" /* default */],
				{ level: 5 },
				'Arguments'
			)
		),
		args.map(function (arg) {
			return react_default.a.createElement(Argument["a" /* default */], _extends({ key: arg.name }, arg));
		})
	);
}

ArgumentsRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	args: prop_types_default.a.arrayOf(prop_types_default.a.shape({
		name: prop_types_default.a.string.isRequired,
		type: prop_types_default.a.object,
		description: prop_types_default.a.string
	})).isRequired,
	heading: prop_types_default.a.bool
};

/* harmony default export */ var Arguments_ArgumentsRenderer = (Object(Styled["a" /* default */])(styles)(ArgumentsRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Arguments/index.js
/* concated harmony reexport default */__webpack_require__.d(__webpack_exports__, "a", function() { return Arguments_ArgumentsRenderer; });


/***/ }),
/* 98 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(0);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(1);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Styled/index.js + 3 modules
var Styled = __webpack_require__(2);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Table/TableRenderer.js




var styles = function styles(_ref) {
	var space = _ref.space,
	    color = _ref.color,
	    fontFamily = _ref.fontFamily,
	    fontSize = _ref.fontSize;
	return {
		table: {
			width: '100%',
			borderCollapse: 'collapse',
			marginBottom: space[4]
		},
		tableHead: {
			borderBottom: [[1, color.border, 'solid']]
		},
		cellHeading: {
			color: color.base,
			paddingRight: space[2],
			paddingBottom: space[1],
			textAlign: 'left',
			fontFamily: fontFamily.base,
			fontWeight: 'bold',
			fontSize: fontSize.small,
			whiteSpace: 'nowrap'
		},
		cell: {
			color: color.base,
			paddingRight: space[2],
			paddingTop: space[1],
			paddingBottom: space[1],
			verticalAlign: 'top',
			fontFamily: fontFamily.base,
			fontSize: fontSize.small,
			'&:last-child': {
				isolate: false,
				width: '99%',
				paddingRight: 0
			},
			'& p:last-child': {
				isolate: false,
				marginBottom: 0
			}
		}
	};
};

function TableRenderer(_ref2) {
	var classes = _ref2.classes,
	    columns = _ref2.columns,
	    rows = _ref2.rows,
	    getRowKey = _ref2.getRowKey;

	return react_default.a.createElement(
		'table',
		{ className: classes.table },
		react_default.a.createElement(
			'thead',
			{ className: classes.tableHead },
			react_default.a.createElement(
				'tr',
				null,
				columns.map(function (_ref3) {
					var caption = _ref3.caption;
					return react_default.a.createElement(
						'th',
						{ key: caption, className: classes.cellHeading },
						caption
					);
				})
			)
		),
		react_default.a.createElement(
			'tbody',
			null,
			rows.map(function (row) {
				return react_default.a.createElement(
					'tr',
					{ key: getRowKey(row) },
					columns.map(function (_ref4, index) {
						var render = _ref4.render;
						return react_default.a.createElement(
							'td',
							{ key: index, className: classes.cell },
							render(row)
						);
					})
				);
			})
		)
	);
}

TableRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	columns: prop_types_default.a.arrayOf(prop_types_default.a.shape({
		caption: prop_types_default.a.string.isRequired,
		render: prop_types_default.a.func.isRequired
	})).isRequired,
	rows: prop_types_default.a.arrayOf(prop_types_default.a.object).isRequired,
	getRowKey: prop_types_default.a.func.isRequired
};

/* harmony default export */ var Table_TableRenderer = (Object(Styled["a" /* default */])(styles)(TableRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Table/index.js
/* concated harmony reexport default */__webpack_require__.d(__webpack_exports__, "a", function() { return Table_TableRenderer; });


/***/ }),
/* 99 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = toCss;

var _toCssValue = __webpack_require__(61);

var _toCssValue2 = _interopRequireDefault(_toCssValue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 * Indent a string.
 * http://jsperf.com/array-join-vs-for
 */
function indentStr(str, indent) {
  var result = '';
  for (var index = 0; index < indent; index++) {
    result += '  ';
  }return result + str;
}

/**
 * Converts a Rule to CSS string.
 */

function toCss(selector, style) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  var result = '';

  if (!style) return result;

  var _options$indent = options.indent,
      indent = _options$indent === undefined ? 0 : _options$indent;
  var fallbacks = style.fallbacks;


  indent++;

  // Apply fallbacks first.
  if (fallbacks) {
    // Array syntax {fallbacks: [{prop: value}]}
    if (Array.isArray(fallbacks)) {
      for (var index = 0; index < fallbacks.length; index++) {
        var fallback = fallbacks[index];
        for (var prop in fallback) {
          var value = fallback[prop];
          if (value != null) {
            result += '\n' + indentStr(prop + ': ' + (0, _toCssValue2['default'])(value) + ';', indent);
          }
        }
      }
    } else {
      // Object syntax {fallbacks: {prop: value}}
      for (var _prop in fallbacks) {
        var _value = fallbacks[_prop];
        if (_value != null) {
          result += '\n' + indentStr(_prop + ': ' + (0, _toCssValue2['default'])(_value) + ';', indent);
        }
      }
    }
  }

  for (var _prop2 in style) {
    var _value2 = style[_prop2];
    if (_value2 != null && _prop2 !== 'fallbacks') {
      result += '\n' + indentStr(_prop2 + ': ' + (0, _toCssValue2['default'])(_value2) + ';', indent);
    }
  }

  // Allow empty style in this case, because properties will be added dynamically.
  if (!result && !options.allowEmpty) return result;

  indent--;
  result = indentStr(selector + ' {' + result + '\n', indent) + indentStr('}', indent);

  return result;
}

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _SheetsRegistry = __webpack_require__(147);

var _SheetsRegistry2 = _interopRequireDefault(_SheetsRegistry);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 * This is a global sheets registry. Only DomRenderer will add sheets to it.
 * On the server one should use an own SheetsRegistry instance and add the
 * sheets to it, because you need to make sure to create a new registry for
 * each request in order to not leak sheets across requests.
 */
exports['default'] = new _SheetsRegistry2['default']();

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(63),
    stackClear = __webpack_require__(300),
    stackDelete = __webpack_require__(301),
    stackGet = __webpack_require__(302),
    stackHas = __webpack_require__(303),
    stackSet = __webpack_require__(304);

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

module.exports = Stack;


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(28),
    root = __webpack_require__(9);

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map');

module.exports = Map;


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(29),
    isObject = __webpack_require__(14);

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

var mapCacheClear = __webpack_require__(311),
    mapCacheDelete = __webpack_require__(318),
    mapCacheGet = __webpack_require__(320),
    mapCacheHas = __webpack_require__(321),
    mapCacheSet = __webpack_require__(322);

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__(156);

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;


/***/ }),
/* 107 */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;


/***/ }),
/* 108 */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

module.exports = isIndex;


/***/ }),
/* 109 */
/***/ (function(module, exports) {

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

var baseMatches = __webpack_require__(362),
    baseMatchesProperty = __webpack_require__(386),
    identity = __webpack_require__(109),
    isArray = __webpack_require__(12),
    property = __webpack_require__(393);

/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return identity;
  }
  if (typeof value == 'object') {
    return isArray(value)
      ? baseMatchesProperty(value[0], value[1])
      : baseMatches(value);
  }
  return property(value);
}

module.exports = baseIteratee;


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(12),
    isSymbol = __webpack_require__(73);

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

module.exports = isKey;


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var IconBase = function IconBase(_ref, _ref2) {
  var children = _ref.children;
  var color = _ref.color;
  var size = _ref.size;
  var style = _ref.style;
  var width = _ref.width;
  var height = _ref.height;

  var props = _objectWithoutProperties(_ref, ['children', 'color', 'size', 'style', 'width', 'height']);

  var _ref2$reactIconBase = _ref2.reactIconBase;
  var reactIconBase = _ref2$reactIconBase === undefined ? {} : _ref2$reactIconBase;

  var computedSize = size || reactIconBase.size || '1em';
  return _react2.default.createElement('svg', _extends({
    children: children,
    fill: 'currentColor',
    preserveAspectRatio: 'xMidYMid meet',
    height: height || computedSize,
    width: width || computedSize
  }, reactIconBase, props, {
    style: _extends({
      verticalAlign: 'middle',
      color: color || reactIconBase.color
    }, reactIconBase.style || {}, style)
  }));
};

IconBase.propTypes = {
  color: _propTypes2.default.string,
  size: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  height: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  style: _propTypes2.default.object
};

IconBase.contextTypes = {
  reactIconBase: _propTypes2.default.shape(IconBase.propTypes)
};

exports.default = IconBase;
module.exports = exports['default'];

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var fails = __webpack_require__(8);
var classof = __webpack_require__(114);
var split = ''.split;

module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins
  return !Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) == 'String' ? split.call(it, '') : Object(it);
} : Object;


/***/ }),
/* 114 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(5);
var hide = __webpack_require__(15);

module.exports = function (key, value) {
  try {
    hide(global, key, value);
  } catch (error) {
    global[key] = value;
  } return value;
};


/***/ }),
/* 116 */
/***/ (function(module, exports) {

var id = 0;
var postfix = Math.random();

module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + postfix).toString(36));
};


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var internalObjectKeys = __webpack_require__(184);
var hiddenKeys = __webpack_require__(120).concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(119);
var min = Math.min;

// `ToLength` abstract operation
// https://tc39.github.io/ecma262/#sec-tolength
module.exports = function (argument) {
  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};


/***/ }),
/* 119 */
/***/ (function(module, exports) {

var ceil = Math.ceil;
var floor = Math.floor;

// `ToInteger` abstract operation
// https://tc39.github.io/ecma262/#sec-tointeger
module.exports = function (argument) {
  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);
};


/***/ }),
/* 120 */
/***/ (function(module, exports) {

// IE8- don't enum bug keys
module.exports = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__(20).f;
var has = __webpack_require__(13);
var TO_STRING_TAG = __webpack_require__(10)('toStringTag');

module.exports = function (it, TAG, STATIC) {
  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {
    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });
  }
};


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(114);

// `IsArray` abstract operation
// https://tc39.github.io/ecma262/#sec-isarray
module.exports = Array.isArray || function isArray(arg) {
  return classof(arg) == 'Array';
};


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(39);
var defineProperties = __webpack_require__(415);
var enumBugKeys = __webpack_require__(120);
var html = __webpack_require__(416);
var documentCreateElement = __webpack_require__(181);
var IE_PROTO = __webpack_require__(82)('IE_PROTO');
var PROTOTYPE = 'prototype';
var Empty = function () { /* empty */ };

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var length = enumBugKeys.length;
  var lt = '<';
  var script = 'script';
  var gt = '>';
  var js = 'java' + script + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  iframe.src = String(js);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + script + gt + 'document.F=Object' + lt + '/' + script + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (length--) delete createDict[PROTOTYPE][enumBugKeys[length]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : defineProperties(result, Properties);
};

__webpack_require__(83)[IE_PROTO] = true;


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(8);
var SPECIES = __webpack_require__(10)('species');

module.exports = function (METHOD_NAME) {
  return !fails(function () {
    var array = [];
    var constructor = array.constructor = {};
    constructor[SPECIES] = function () {
      return { foo: 1 };
    };
    return array[METHOD_NAME](Boolean).foo !== 1;
  });
};


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

var bind = __webpack_require__(426);
var IndexedObject = __webpack_require__(113);
var toObject = __webpack_require__(41);
var toLength = __webpack_require__(118);
var arraySpeciesCreate = __webpack_require__(192);

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation
// 0 -> Array#forEach
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
// 1 -> Array#map
// https://tc39.github.io/ecma262/#sec-array.prototype.map
// 2 -> Array#filter
// https://tc39.github.io/ecma262/#sec-array.prototype.filter
// 3 -> Array#some
// https://tc39.github.io/ecma262/#sec-array.prototype.some
// 4 -> Array#every
// https://tc39.github.io/ecma262/#sec-array.prototype.every
// 5 -> Array#find
// https://tc39.github.io/ecma262/#sec-array.prototype.find
// 6 -> Array#findIndex
// https://tc39.github.io/ecma262/#sec-array.prototype.findIndex
module.exports = function (TYPE, specificCreate) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = specificCreate || arraySpeciesCreate;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IndexedObject(O);
    var boundFunction = bind(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var value, result;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3: return true;              // some
          case 5: return value;             // find
          case 6: return index;             // findIndex
          case 2: target.push(value);       // filter
        } else if (IS_EVERY) return false;  // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toIndexedObject = __webpack_require__(31);
var addToUnscopables = __webpack_require__(428);
var Iterators = __webpack_require__(127);
var InternalStateModule = __webpack_require__(81);
var defineIterator = __webpack_require__(194);
var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.github.io/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.github.io/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.github.io/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.github.io/ecma262/#sec-createarrayiterator
module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return { value: undefined, done: true };
  }
  if (kind == 'keys') return { value: index, done: false };
  if (kind == 'values') return { value: target[index], done: false };
  return { value: [index, target[index]], done: false };
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject
// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject
Iterators.Arguments = Iterators.Array;

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),
/* 127 */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(13);
var toObject = __webpack_require__(41);
var IE_PROTO = __webpack_require__(82)('IE_PROTO');
var CORRECT_PROTOTYPE_GETTER = __webpack_require__(196);
var ObjectPrototype = Object.prototype;

module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectPrototype : null;
};


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(42),
    isObjectLike = __webpack_require__(34);

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

module.exports = isSymbol;


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(35),
    root = __webpack_require__(16);

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map');

module.exports = Map;


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(215),
    baseKeys = __webpack_require__(485),
    isArrayLike = __webpack_require__(220);

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;


/***/ }),
/* 132 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

module.exports = baseUnary;


/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(205);

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

module.exports = nodeUtil;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(38)(module)))

/***/ }),
/* 134 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

module.exports = isPrototype;


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

var arrayFilter = __webpack_require__(493),
    stubArray = __webpack_require__(222);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

module.exports = getSymbols;


/***/ }),
/* 136 */
/***/ (function(module, exports) {

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

module.exports = arrayPush;


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(219);

/** Built-in value references. */
var getPrototype = overArg(Object.getPrototypeOf, Object);

module.exports = getPrototype;


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

var DataView = __webpack_require__(496),
    Map = __webpack_require__(130),
    Promise = __webpack_require__(497),
    Set = __webpack_require__(498),
    WeakMap = __webpack_require__(499),
    baseGetTag = __webpack_require__(42),
    toSource = __webpack_require__(210);

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

module.exports = getTag;


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

var Uint8Array = __webpack_require__(502);

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

module.exports = cloneArrayBuffer;


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(33),
    isKey = __webpack_require__(514),
    stringToPath = __webpack_require__(515),
    toString = __webpack_require__(204);

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if (isArray(value)) {
    return value;
  }
  return isKey(value, object) ? [value] : stringToPath(toString(value));
}

module.exports = castPath;


/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.create = exports.createGenerateClassName = exports.sheets = exports.RuleList = exports.SheetsManager = exports.SheetsRegistry = exports.toCssValue = exports.getDynamicStyles = undefined;

var _getDynamicStyles = __webpack_require__(264);

Object.defineProperty(exports, 'getDynamicStyles', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_getDynamicStyles)['default'];
  }
});

var _toCssValue = __webpack_require__(61);

Object.defineProperty(exports, 'toCssValue', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_toCssValue)['default'];
  }
});

var _SheetsRegistry = __webpack_require__(147);

Object.defineProperty(exports, 'SheetsRegistry', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_SheetsRegistry)['default'];
  }
});

var _SheetsManager = __webpack_require__(265);

Object.defineProperty(exports, 'SheetsManager', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_SheetsManager)['default'];
  }
});

var _RuleList = __webpack_require__(49);

Object.defineProperty(exports, 'RuleList', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_RuleList)['default'];
  }
});

var _sheets = __webpack_require__(101);

Object.defineProperty(exports, 'sheets', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_sheets)['default'];
  }
});

var _createGenerateClassName = __webpack_require__(150);

Object.defineProperty(exports, 'createGenerateClassName', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_createGenerateClassName)['default'];
  }
});

var _Jss = __webpack_require__(271);

var _Jss2 = _interopRequireDefault(_Jss);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 * Creates a new instance of Jss.
 */
var create = exports.create = function create(options) {
  return new _Jss2['default'](options);
};

/**
 * A global Jss instance.
 */
exports['default'] = create();

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(105);

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = MapCache;

module.exports = memoize;


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(175);

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

module.exports = get;


/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

var baseMerge = __webpack_require__(294),
    createAssigner = __webpack_require__(344);

/**
 * This method is like `_.assign` except that it recursively merges own and
 * inherited enumerable string keyed properties of source objects into the
 * destination object. Source properties that resolve to `undefined` are
 * skipped if a destination value exists. Array and plain object properties
 * are merged recursively. Other objects and value types are overridden by
 * assignment. Source objects are applied from left to right. Subsequent
 * sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {
 *   'a': [{ 'b': 2 }, { 'd': 4 }]
 * };
 *
 * var other = {
 *   'a': [{ 'c': 3 }, { 'e': 5 }]
 * };
 *
 * _.merge(object, other);
 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
 */
var merge = createAssigner(function(object, source, srcIndex) {
  baseMerge(object, source, srcIndex);
});

module.exports = merge;


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

var isNumber = __webpack_require__(406);

/**
 * Checks if `value` is `NaN`.
 *
 * **Note:** This method is based on
 * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
 * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
 * `undefined` and other non-number values.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 * @example
 *
 * _.isNaN(NaN);
 * // => true
 *
 * _.isNaN(new Number(NaN));
 * // => true
 *
 * isNaN(undefined);
 * // => true
 *
 * _.isNaN(undefined);
 * // => false
 */
function isNaN(value) {
  // An `NaN` primitive is the only value that is not equal to itself.
  // Perform the `toStringTag` check first to avoid errors with some
  // ActiveX objects in IE.
  return isNumber(value) && value != +value;
}

module.exports = isNaN;


/***/ }),
/* 146 */
/***/ (function(module, exports) {

/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */
function noop() {
  // No operation performed.
}

module.exports = noop;


/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Sheets registry to access them all at one place.
 */
var SheetsRegistry = function () {
  function SheetsRegistry() {
    _classCallCheck(this, SheetsRegistry);

    this.registry = [];
  }

  _createClass(SheetsRegistry, [{
    key: 'add',


    /**
     * Register a Style Sheet.
     */
    value: function add(sheet) {
      var registry = this.registry;
      var index = sheet.options.index;


      if (registry.indexOf(sheet) !== -1) return;

      if (registry.length === 0 || index >= this.index) {
        registry.push(sheet);
        return;
      }

      // Find a position.
      for (var i = 0; i < registry.length; i++) {
        if (registry[i].options.index > index) {
          registry.splice(i, 0, sheet);
          return;
        }
      }
    }

    /**
     * Reset the registry.
     */

  }, {
    key: 'reset',
    value: function reset() {
      this.registry = [];
    }

    /**
     * Remove a Style Sheet.
     */

  }, {
    key: 'remove',
    value: function remove(sheet) {
      var index = this.registry.indexOf(sheet);
      this.registry.splice(index, 1);
    }

    /**
     * Convert all attached sheets to a CSS string.
     */

  }, {
    key: 'toString',
    value: function toString(options) {
      return this.registry.filter(function (sheet) {
        return sheet.attached;
      }).map(function (sheet) {
        return sheet.toString(options);
      }).join('\n');
    }
  }, {
    key: 'index',


    /**
     * Current highest index number.
     */
    get: function get() {
      return this.registry.length === 0 ? 0 : this.registry[this.registry.length - 1].options.index;
    }
  }]);

  return SheetsRegistry;
}();

exports['default'] = SheetsRegistry;

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _symbolObservable = __webpack_require__(267);

var _symbolObservable2 = _interopRequireDefault(_symbolObservable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

exports['default'] = function (value) {
  return value && value[_symbolObservable2['default']] && value === value[_symbolObservable2['default']]();
};

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = linkRule;
/**
 * Link rule with CSSStyleRule and nested rules with corresponding nested cssRules if both exists.
 */
function linkRule(rule, cssRule) {
  rule.renderable = cssRule;
  if (rule.rules && cssRule.cssRules) rule.rules.link(cssRule.cssRules);
}

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _warning = __webpack_require__(21);

var _warning2 = _interopRequireDefault(_warning);

var _StyleSheet = __webpack_require__(151);

var _StyleSheet2 = _interopRequireDefault(_StyleSheet);

var _moduleId = __webpack_require__(270);

var _moduleId2 = _interopRequireDefault(_moduleId);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var maxRules = 1e10;


var env = "production";

/**
 * Returns a function which generates unique class names based on counters.
 * When new generator function is created, rule counter is reseted.
 * We need to reset the rule counter for SSR for each request.
 */

exports['default'] = function () {
  var ruleCounter = 0;
  var defaultPrefix = env === 'production' ? 'c' : '';

  return function (rule, sheet) {
    ruleCounter += 1;

    if (ruleCounter > maxRules) {
      (0, _warning2['default'])(false, '[JSS] You might have a memory leak. Rule counter is at %s.', ruleCounter);
    }

    var prefix = defaultPrefix;
    var jssId = '';

    if (sheet) {
      prefix = sheet.options.classNamePrefix || defaultPrefix;
      if (sheet.options.jss.id != null) jssId += sheet.options.jss.id;
    }

    if (env === 'production') {
      return '' + prefix + _moduleId2['default'] + jssId + ruleCounter;
    }

    return prefix + rule.key + '-' + _moduleId2['default'] + (jssId && '-' + jssId) + '-' + ruleCounter;
  };
};

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _linkRule = __webpack_require__(149);

var _linkRule2 = _interopRequireDefault(_linkRule);

var _RuleList = __webpack_require__(49);

var _RuleList2 = _interopRequireDefault(_RuleList);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/* eslint-disable-next-line no-use-before-define */
var StyleSheet = function () {
  function StyleSheet(styles, options) {
    var _this = this;

    _classCallCheck(this, StyleSheet);

    this.update = function (name, data) {
      if (typeof name === 'string') {
        _this.rules.update(name, data);
      } else {
        _this.rules.update(name);
      }
      return _this;
    };

    this.attached = false;
    this.deployed = false;
    this.linked = false;
    this.classes = {};
    this.options = _extends({}, options, {
      sheet: this,
      parent: this,
      classes: this.classes
    });
    this.renderer = new options.Renderer(this);
    this.rules = new _RuleList2['default'](this.options);

    for (var _name in styles) {
      this.rules.add(_name, styles[_name]);
    }

    this.rules.process();
  }

  /**
   * Attach renderable to the render tree.
   */


  _createClass(StyleSheet, [{
    key: 'attach',
    value: function attach() {
      if (this.attached) return this;
      if (!this.deployed) this.deploy();
      this.renderer.attach();
      if (!this.linked && this.options.link) this.link();
      this.attached = true;
      return this;
    }

    /**
     * Remove renderable from render tree.
     */

  }, {
    key: 'detach',
    value: function detach() {
      if (!this.attached) return this;
      this.renderer.detach();
      this.attached = false;
      return this;
    }

    /**
     * Add a rule to the current stylesheet.
     * Will insert a rule also after the stylesheet has been rendered first time.
     */

  }, {
    key: 'addRule',
    value: function addRule(name, decl, options) {
      var queue = this.queue;

      // Plugins can create rules.
      // In order to preserve the right order, we need to queue all `.addRule` calls,
      // which happen after the first `rules.add()` call.

      if (this.attached && !queue) this.queue = [];

      var rule = this.rules.add(name, decl, options);
      this.options.jss.plugins.onProcessRule(rule);

      if (this.attached) {
        if (!this.deployed) return rule;
        // Don't insert rule directly if there is no stringified version yet.
        // It will be inserted all together when .attach is called.
        if (queue) queue.push(rule);else {
          this.insertRule(rule);
          if (this.queue) {
            this.queue.forEach(this.insertRule, this);
            this.queue = undefined;
          }
        }
        return rule;
      }

      // We can't add rules to a detached style node.
      // We will redeploy the sheet once user will attach it.
      this.deployed = false;

      return rule;
    }

    /**
     * Insert rule into the StyleSheet
     */

  }, {
    key: 'insertRule',
    value: function insertRule(rule) {
      var renderable = this.renderer.insertRule(rule);
      if (renderable && this.options.link) (0, _linkRule2['default'])(rule, renderable);
    }

    /**
     * Create and add rules.
     * Will render also after Style Sheet was rendered the first time.
     */

  }, {
    key: 'addRules',
    value: function addRules(styles, options) {
      var added = [];
      for (var _name2 in styles) {
        added.push(this.addRule(_name2, styles[_name2], options));
      }
      return added;
    }

    /**
     * Get a rule by name.
     */

  }, {
    key: 'getRule',
    value: function getRule(name) {
      return this.rules.get(name);
    }

    /**
     * Delete a rule by name.
     * Returns `true`: if rule has been deleted from the DOM.
     */

  }, {
    key: 'deleteRule',
    value: function deleteRule(name) {
      var rule = this.rules.get(name);

      if (!rule) return false;

      this.rules.remove(rule);

      if (this.attached && rule.renderable) {
        return this.renderer.deleteRule(rule.renderable);
      }

      return true;
    }

    /**
     * Get index of a rule.
     */

  }, {
    key: 'indexOf',
    value: function indexOf(rule) {
      return this.rules.indexOf(rule);
    }

    /**
     * Deploy pure CSS string to a renderable.
     */

  }, {
    key: 'deploy',
    value: function deploy() {
      this.renderer.deploy();
      this.deployed = true;
      return this;
    }

    /**
     * Link renderable CSS rules from sheet with their corresponding models.
     */

  }, {
    key: 'link',
    value: function link() {
      var cssRules = this.renderer.getRules();

      // Is undefined when VirtualRenderer is used.
      if (cssRules) this.rules.link(cssRules);
      this.linked = true;
      return this;
    }

    /**
     * Update the function values with a new data.
     */

  }, {
    key: 'toString',


    /**
     * Convert rules to a CSS string.
     */
    value: function toString(options) {
      return this.rules.toString(options);
    }
  }]);

  return StyleSheet;
}();

exports['default'] = StyleSheet;

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(11)))

/***/ }),
/* 154 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(106),
    eq = __webpack_require__(50);

/**
 * This function is like `assignValue` except that it doesn't assign
 * `undefined` values.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignMergeValue(object, key, value) {
  if ((value !== undefined && !eq(object[key], value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignMergeValue;


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(28);

var defineProperty = (function() {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

module.exports = defineProperty;


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

var createBaseFor = __webpack_require__(323);

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

module.exports = baseFor;


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(9);

/** Built-in value references. */
var Uint8Array = root.Uint8Array;

module.exports = Uint8Array;


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(160);

/** Built-in value references. */
var getPrototype = overArg(Object.getPrototypeOf, Object);

module.exports = getPrototype;


/***/ }),
/* 160 */
/***/ (function(module, exports) {

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;


/***/ }),
/* 161 */
/***/ (function(module, exports) {

/**
 * Gets the value at `key`, unless `key` is "__proto__".
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function safeGet(object, key) {
  return key == '__proto__'
    ? undefined
    : object[key];
}

module.exports = safeGet;


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(163),
    baseKeysIn = __webpack_require__(342),
    isArrayLike = __webpack_require__(23);

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

module.exports = keysIn;


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

var baseTimes = __webpack_require__(341),
    isArguments = __webpack_require__(69),
    isArray = __webpack_require__(12),
    isBuffer = __webpack_require__(70),
    isIndex = __webpack_require__(108),
    isTypedArray = __webpack_require__(71);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = arrayLikeKeys;


/***/ }),
/* 164 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export getRowKey */
/* unused harmony export columns */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PropsRenderer; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_group__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60);
/* harmony import */ var react_group__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_group__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var javascript_stringify__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(235);
/* harmony import */ var javascript_stringify__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(javascript_stringify__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var rsg_components_Arguments__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(97);
/* harmony import */ var rsg_components_Argument__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(45);
/* harmony import */ var rsg_components_Code__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(48);
/* harmony import */ var rsg_components_JsDoc__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(46);
/* harmony import */ var rsg_components_Markdown__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(4);
/* harmony import */ var rsg_components_Name__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(36);
/* harmony import */ var rsg_components_Type__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(27);
/* harmony import */ var rsg_components_Text__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(17);
/* harmony import */ var rsg_components_Para__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(44);
/* harmony import */ var rsg_components_Table__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(98);
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(6);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

















function renderType(type) {
	if (!type) {
		return 'unknown';
	}

	var name = type.name;


	switch (name) {
		case 'arrayOf':
			return type.value.name + '[]';
		case 'objectOf':
			return '{' + renderType(type.value) + '}';
		case 'instanceOf':
			return type.value;
		default:
			return name;
	}
}

function renderFlowType(type) {
	if (!type) {
		return 'unknown';
	}

	var name = type.name,
	    raw = type.raw,
	    value = type.value;


	switch (name) {
		case 'enum':
			return name;
		case 'literal':
			return value;
		case 'signature':
			return renderComplexType(type.type, raw);
		case 'union':
		case 'tuple':
			return renderComplexType(name, raw);
		default:
			return raw || name;
	}
}

function renderComplexType(name, title) {
	return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
		rsg_components_Text__WEBPACK_IMPORTED_MODULE_11__[/* default */ "a"],
		{ size: 'small', underlined: true, title: title },
		react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
			rsg_components_Type__WEBPACK_IMPORTED_MODULE_10__[/* default */ "a"],
			null,
			name
		)
	);
}

function renderEnum(prop) {
	if (!Array.isArray(Object(_util__WEBPACK_IMPORTED_MODULE_14__[/* getType */ "a"])(prop).value)) {
		return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
			'span',
			null,
			Object(_util__WEBPACK_IMPORTED_MODULE_14__[/* getType */ "a"])(prop).value
		);
	}

	var values = Object(_util__WEBPACK_IMPORTED_MODULE_14__[/* getType */ "a"])(prop).value.map(function (_ref) {
		var value = _ref.value;
		return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
			rsg_components_Code__WEBPACK_IMPORTED_MODULE_6__[/* default */ "a"],
			{ key: value },
			Object(_util__WEBPACK_IMPORTED_MODULE_14__[/* showSpaces */ "b"])(Object(_util__WEBPACK_IMPORTED_MODULE_14__[/* unquote */ "c"])(value))
		);
	});
	return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
		'span',
		null,
		'One of:',
		' ',
		react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
			react_group__WEBPACK_IMPORTED_MODULE_2___default.a,
			{ separator: ', ', inline: true },
			values
		)
	);
}

function renderShape(props) {
	var rows = [];
	for (var name in props) {
		var prop = props[name];
		var defaultValue = renderDefault(prop);
		var description = prop.description;
		rows.push(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
			'div',
			{ key: name },
			react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
				rsg_components_Name__WEBPACK_IMPORTED_MODULE_9__[/* default */ "a"],
				null,
				name
			),
			': ',
			react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
				rsg_components_Type__WEBPACK_IMPORTED_MODULE_10__[/* default */ "a"],
				null,
				renderType(prop)
			),
			defaultValue && ' — ',
			defaultValue,
			description && ' — ',
			description && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(rsg_components_Markdown__WEBPACK_IMPORTED_MODULE_8__[/* default */ "a"], { text: description, inline: true })
		));
	}
	return rows;
}

var defaultValueBlacklist = ['null', 'undefined'];

function renderDefault(prop) {
	// Workaround for issue https://github.com/reactjs/react-docgen/issues/221
	// If prop has defaultValue it can not be required
	if (prop.defaultValue) {
		if (prop.type || prop.flowType) {
			var propName = prop.type ? prop.type.name : prop.flowType.type;

			if (defaultValueBlacklist.indexOf(prop.defaultValue.value) > -1) {
				return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
					rsg_components_Code__WEBPACK_IMPORTED_MODULE_6__[/* default */ "a"],
					null,
					Object(_util__WEBPACK_IMPORTED_MODULE_14__[/* showSpaces */ "b"])(Object(_util__WEBPACK_IMPORTED_MODULE_14__[/* unquote */ "c"])(prop.defaultValue.value))
				);
			} else if (propName === 'func' || propName === 'function') {
				return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
					rsg_components_Text__WEBPACK_IMPORTED_MODULE_11__[/* default */ "a"],
					{
						size: 'small',
						color: 'light',
						underlined: true,
						title: Object(_util__WEBPACK_IMPORTED_MODULE_14__[/* showSpaces */ "b"])(Object(_util__WEBPACK_IMPORTED_MODULE_14__[/* unquote */ "c"])(prop.defaultValue.value))
					},
					'Function'
				);
			} else if (propName === 'shape' || propName === 'object') {
				try {
					// We eval source code to be able to format the defaultProp here. This
					// can be considered safe, as it is the source code that is evaled,
					// which is from a known source and safe by default
					// eslint-disable-next-line no-eval
					var object = eval('(' + prop.defaultValue.value + ')');
					return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
						rsg_components_Text__WEBPACK_IMPORTED_MODULE_11__[/* default */ "a"],
						{ size: 'small', color: 'light', underlined: true, title: javascript_stringify__WEBPACK_IMPORTED_MODULE_3___default()(object, null, 2) },
						'Shape'
					);
				} catch (e) {
					// eval will throw if it contains a reference to a property not in the
					// local scope. To avoid any breakage we fall back to rendering the
					// prop without any formatting
					return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
						rsg_components_Text__WEBPACK_IMPORTED_MODULE_11__[/* default */ "a"],
						{ size: 'small', color: 'light', underlined: true, title: prop.defaultValue.value },
						'Shape'
					);
				}
			}
		}

		return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
			rsg_components_Code__WEBPACK_IMPORTED_MODULE_6__[/* default */ "a"],
			null,
			Object(_util__WEBPACK_IMPORTED_MODULE_14__[/* showSpaces */ "b"])(Object(_util__WEBPACK_IMPORTED_MODULE_14__[/* unquote */ "c"])(prop.defaultValue.value))
		);
	} else if (prop.required) {
		return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
			rsg_components_Text__WEBPACK_IMPORTED_MODULE_11__[/* default */ "a"],
			{ size: 'small', color: 'light' },
			'Required'
		);
	}
	return '';
}

function renderDescription(prop) {
	var description = prop.description,
	    _prop$tags = prop.tags,
	    tags = _prop$tags === undefined ? {} : _prop$tags;

	var extra = renderExtra(prop);
	var args = [].concat(_toConsumableArray(tags.arg || []), _toConsumableArray(tags.argument || []), _toConsumableArray(tags.param || []));
	var returnDocumentation = tags.return && tags.return[0] || tags.returns && tags.returns[0];

	return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
		'div',
		null,
		description && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(rsg_components_Markdown__WEBPACK_IMPORTED_MODULE_8__[/* default */ "a"], { text: description }),
		extra && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
			rsg_components_Para__WEBPACK_IMPORTED_MODULE_12__[/* default */ "a"],
			null,
			extra
		),
		react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(rsg_components_JsDoc__WEBPACK_IMPORTED_MODULE_7__[/* default */ "a"], tags),
		args.length > 0 && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(rsg_components_Arguments__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"], { args: args, heading: true }),
		returnDocumentation && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(rsg_components_Argument__WEBPACK_IMPORTED_MODULE_5__[/* default */ "a"], _extends({}, returnDocumentation, { returns: true }))
	);
}

function renderExtra(prop) {
	var type = Object(_util__WEBPACK_IMPORTED_MODULE_14__[/* getType */ "a"])(prop);
	if (!type) {
		return null;
	}
	switch (type.name) {
		case 'enum':
			return renderEnum(prop);
		case 'union':
			return renderUnion(prop);
		case 'shape':
			return renderShape(prop.type.value);
		case 'arrayOf':
			if (type.value.name === 'shape') {
				return renderShape(prop.type.value.value);
			}
			return null;
		case 'objectOf':
			if (type.value.name === 'shape') {
				return renderShape(prop.type.value.value);
			}
			return null;
		default:
			return null;
	}
}

function renderUnion(prop) {
	var type = Object(_util__WEBPACK_IMPORTED_MODULE_14__[/* getType */ "a"])(prop);
	if (!Array.isArray(type.value)) {
		return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
			'span',
			null,
			type.value
		);
	}

	var values = type.value.map(function (value, index) {
		return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
			rsg_components_Type__WEBPACK_IMPORTED_MODULE_10__[/* default */ "a"],
			{ key: value.name + '-' + index },
			renderType(value)
		);
	});
	return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
		'span',
		null,
		'One of type:',
		' ',
		react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
			react_group__WEBPACK_IMPORTED_MODULE_2___default.a,
			{ separator: ', ', inline: true },
			values
		)
	);
}

function renderName(prop) {
	var name = prop.name,
	    _prop$tags2 = prop.tags,
	    tags = _prop$tags2 === undefined ? {} : _prop$tags2;

	return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
		rsg_components_Name__WEBPACK_IMPORTED_MODULE_9__[/* default */ "a"],
		{ deprecated: !!tags.deprecated },
		name
	);
}

function renderTypeColumn(prop) {
	if (prop.flowType) {
		return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
			rsg_components_Type__WEBPACK_IMPORTED_MODULE_10__[/* default */ "a"],
			null,
			renderFlowType(Object(_util__WEBPACK_IMPORTED_MODULE_14__[/* getType */ "a"])(prop))
		);
	}
	return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
		rsg_components_Type__WEBPACK_IMPORTED_MODULE_10__[/* default */ "a"],
		null,
		renderType(Object(_util__WEBPACK_IMPORTED_MODULE_14__[/* getType */ "a"])(prop))
	);
}

function getRowKey(row) {
	return row.name;
}

var columns = [{
	caption: 'Prop name',
	render: renderName
}, {
	caption: 'Type',
	render: renderTypeColumn
}, {
	caption: 'Default',
	render: renderDefault
}, {
	caption: 'Description',
	render: renderDescription
}];

function PropsRenderer(_ref2) {
	var props = _ref2.props;

	return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(rsg_components_Table__WEBPACK_IMPORTED_MODULE_13__[/* default */ "a"], { columns: columns, rows: props, getRowKey: getRowKey });
}

PropsRenderer.propTypes = {
	props: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.array.isRequired
};

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if (false) {}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(356)
var ieee754 = __webpack_require__(357)
var isArray = __webpack_require__(358)

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(11)))

/***/ }),
/* 168 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

module.exports = arrayMap;


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqualDeep = __webpack_require__(364),
    isObjectLike = __webpack_require__(22);

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

module.exports = baseIsEqual;


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(365),
    arraySome = __webpack_require__(368),
    cacheHas = __webpack_require__(369);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(array);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var index = -1,
      result = true,
      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!arraySome(other, function(othValue, othIndex) {
            if (!cacheHas(seen, othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, bitmask, customizer, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

module.exports = equalArrays;


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

var isPrototype = __webpack_require__(68),
    nativeKeys = __webpack_require__(380);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeys;


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

var DataView = __webpack_require__(381),
    Map = __webpack_require__(103),
    Promise = __webpack_require__(382),
    Set = __webpack_require__(383),
    WeakMap = __webpack_require__(384),
    baseGetTag = __webpack_require__(29),
    toSource = __webpack_require__(154);

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

module.exports = getTag;


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(14);

/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
function isStrictComparable(value) {
  return value === value && !isObject(value);
}

module.exports = isStrictComparable;


/***/ }),
/* 174 */
/***/ (function(module, exports) {

/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue &&
      (srcValue !== undefined || (key in Object(object)));
  };
}

module.exports = matchesStrictComparable;


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(176),
    toKey = __webpack_require__(74);

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = castPath(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

module.exports = baseGet;


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(12),
    isKey = __webpack_require__(111),
    stringToPath = __webpack_require__(387),
    toString = __webpack_require__(177);

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if (isArray(value)) {
    return value;
  }
  return isKey(value, object) ? [value] : stringToPath(toString(value));
}

module.exports = castPath;


/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

var baseToString = __webpack_require__(389);

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

module.exports = toString;


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(14),
    now = __webpack_require__(400),
    toNumber = __webpack_require__(179);

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        timeWaiting = wait - timeSinceLastCall;

    return maxing
      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
      : timeWaiting;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

module.exports = debounce;


/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(14),
    isSymbol = __webpack_require__(73);

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = toNumber;


/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(18) && !__webpack_require__(8)(function () {
  return Object.defineProperty(__webpack_require__(181)('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(19);
var document = __webpack_require__(5).document;
// typeof document.createElement is 'object' in old IE
var exist = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return exist ? document.createElement(it) : {};
};


/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(52)('native-function-to-string', Function.toString);


/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(13);
var ownKeys = __webpack_require__(410);
var getOwnPropertyDescriptorModule = __webpack_require__(76);
var definePropertyModule = __webpack_require__(20);

module.exports = function (target, source) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));
  }
};


/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(13);
var toIndexedObject = __webpack_require__(31);
var arrayIndexOf = __webpack_require__(185)(false);
var hiddenKeys = __webpack_require__(83);

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__(31);
var toLength = __webpack_require__(118);
var toAbsoluteIndex = __webpack_require__(411);

// `Array.prototype.{ indexOf, includes }` methods implementation
// false -> Array#indexOf
// https://tc39.github.io/ecma262/#sec-array.prototype.indexof
// true  -> Array#includes
// https://tc39.github.io/ecma262/#sec-array.prototype.includes
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

// Chrome 38 Symbol has incorrect toString conversion
module.exports = !__webpack_require__(8)(function () {
  // eslint-disable-next-line no-undef
  return !String(Symbol());
});


/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(10);


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__(413);
var has = __webpack_require__(13);
var wrappedWellKnownSymbolModule = __webpack_require__(187);
var defineProperty = __webpack_require__(20).f;

module.exports = function (NAME) {
  var Symbol = path.Symbol || (path.Symbol = {});
  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {
    value: wrappedWellKnownSymbolModule.f(NAME)
  });
};


/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(8);

module.exports = function (METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !method || !fails(function () {
    // eslint-disable-next-line no-useless-call,no-throw-literal
    method.call(null, argument || function () { throw 1; }, 1);
  });
};


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// `Symbol.prototype.description` getter
// https://tc39.github.io/ecma262/#sec-symbol.prototype.description

var DESCRIPTORS = __webpack_require__(18);
var has = __webpack_require__(13);
var isObject = __webpack_require__(19);
var defineProperty = __webpack_require__(20).f;
var copyConstructorProperties = __webpack_require__(183);
var NativeSymbol = __webpack_require__(5).Symbol;

if (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||
  // Safari 12 bug
  NativeSymbol().description !== undefined
)) {
  var EmptyStringDescriptionStore = {};
  // wrap Symbol constructor for correct work with undefined description
  var SymbolWrapper = function Symbol() {
    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);
    var result = this instanceof SymbolWrapper
      ? new NativeSymbol(description)
      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
      : description === undefined ? NativeSymbol() : NativeSymbol(description);
    if (description === '') EmptyStringDescriptionStore[result] = true;
    return result;
  };
  copyConstructorProperties(SymbolWrapper, NativeSymbol);
  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;
  symbolPrototype.constructor = SymbolWrapper;

  var symbolToString = symbolPrototype.toString;
  var native = String(NativeSymbol('test')) == 'Symbol(test)';
  var regexp = /^Symbol\((.*)\)[^)]+$/;
  defineProperty(symbolPrototype, 'description', {
    configurable: true,
    get: function description() {
      var symbol = isObject(this) ? this.valueOf() : this;
      var string = symbolToString.call(symbol);
      if (has(EmptyStringDescriptionStore, symbol)) return '';
      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');
      return desc === '' ? undefined : desc;
    }
  });

  __webpack_require__(7)({ global: true, forced: true }, { Symbol: SymbolWrapper });
}


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

// `Symbol.iterator` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.iterator
__webpack_require__(188)('iterator');


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(19);
var isArray = __webpack_require__(122);
var SPECIES = __webpack_require__(10)('species');

// `ArraySpeciesCreate` abstract operation
// https://tc39.github.io/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray, length) {
  var C;
  if (isArray(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);
};


/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var nativeForEach = [].forEach;
var internalForEach = __webpack_require__(125)(0);

var SLOPPY_METHOD = __webpack_require__(189)('forEach');

// `Array.prototype.forEach` method implementation
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
module.exports = SLOPPY_METHOD ? function forEach(callbackfn /* , thisArg */) {
  return internalForEach(this, callbackfn, arguments[1]);
} : nativeForEach;


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(7);
var createIteratorConstructor = __webpack_require__(429);
var getPrototypeOf = __webpack_require__(128);
var setPrototypeOf = __webpack_require__(197);
var setToStringTag = __webpack_require__(121);
var hide = __webpack_require__(15);
var redefine = __webpack_require__(80);
var IS_PURE = __webpack_require__(75);
var ITERATOR = __webpack_require__(10)('iterator');
var Iterators = __webpack_require__(127);
var IteratorsCore = __webpack_require__(195);
var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () { return this; };

module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {
          hide(CurrentIteratorPrototype, ITERATOR, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
    }
  }

  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    INCORRECT_VALUES_NAME = true;
    defaultIterator = function values() { return nativeIterator.call(this); };
  }

  // define iterator
  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
    hide(IterablePrototype, ITERATOR, defaultIterator);
  }
  Iterators[NAME] = defaultIterator;

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        redefine(IterablePrototype, KEY, methods[KEY]);
      }
    } else $export({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }

  return methods;
};


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var getPrototypeOf = __webpack_require__(128);
var hide = __webpack_require__(15);
var has = __webpack_require__(13);
var IS_PURE = __webpack_require__(75);
var ITERATOR = __webpack_require__(10)('iterator');
var BUGGY_SAFARI_ITERATORS = false;

var returnThis = function () { return this; };

// `%IteratorPrototype%` object
// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
  }
}

if (IteratorPrototype == undefined) IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
if (!IS_PURE && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);

module.exports = {
  IteratorPrototype: IteratorPrototype,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};


/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(8)(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  return Object.getPrototypeOf(new F()) !== F.prototype;
});


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var validateSetPrototypeOfArguments = __webpack_require__(430);

module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var correctSetter = false;
  var test = {};
  var setter;
  try {
    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;
    setter.call(test, []);
    correctSetter = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    validateSetPrototypeOfArguments(O, proto);
    if (correctSetter) setter.call(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

var toObject = __webpack_require__(41);
var nativeGetPrototypeOf = __webpack_require__(128);
var CORRECT_PROTOTYPE_GETTER = __webpack_require__(196);
var FAILS_ON_PRIMITIVES = __webpack_require__(8)(function () { nativeGetPrototypeOf(1); });

// `Object.getPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.getprototypeof
__webpack_require__(7)({
  target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !CORRECT_PROTOTYPE_GETTER
}, {
  getPrototypeOf: function getPrototypeOf(it) {
    return nativeGetPrototypeOf(toObject(it));
  }
});



/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

// `Object.setPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.setprototypeof
__webpack_require__(7)({ target: 'Object', stat: true }, {
  setPrototypeOf: __webpack_require__(197)
});


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

var toString = __webpack_require__(431);
var ObjectPrototype = Object.prototype;

// `Object.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
if (toString !== ObjectPrototype.toString) {
  __webpack_require__(80)(ObjectPrototype, 'toString', toString, { unsafe: true });
}


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var codePointAt = __webpack_require__(433);
var InternalStateModule = __webpack_require__(81);
var defineIterator = __webpack_require__(194);
var STRING_ITERATOR = 'String Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator
defineIterator(String, 'String', function (iterated) {
  setInternalState(this, {
    type: STRING_ITERATOR,
    string: String(iterated),
    index: 0
  });
// `%StringIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next
}, function next() {
  var state = getInternalState(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return { value: undefined, done: true };
  point = codePointAt(string, index, true);
  state.index += point.length;
  return { value: point, done: false };
});


/***/ }),
/* 202 */
/***/ (function(module, exports) {

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
module.exports = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

var DOMIterables = __webpack_require__(202);
var ArrayIteratorMethods = __webpack_require__(126);
var global = __webpack_require__(5);
var hide = __webpack_require__(15);
var wellKnownSymbol = __webpack_require__(10);
var ITERATOR = wellKnownSymbol('iterator');
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var ArrayValues = ArrayIteratorMethods.values;

for (var COLLECTION_NAME in DOMIterables) {
  var Collection = global[COLLECTION_NAME];
  var CollectionPrototype = Collection && Collection.prototype;
  if (CollectionPrototype) {
    // some Chrome versions have non-configurable methods on DOMTokenList
    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
      hide(CollectionPrototype, ITERATOR, ArrayValues);
    } catch (error) {
      CollectionPrototype[ITERATOR] = ArrayValues;
    }
    if (!CollectionPrototype[TO_STRING_TAG]) hide(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
      // some Chrome versions have non-configurable methods on DOMTokenList
      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
        hide(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
      } catch (error) {
        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
      }
    }
  }
}


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

var baseToString = __webpack_require__(434);

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

module.exports = toString;


/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(11)))

/***/ }),
/* 206 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

module.exports = arrayMap;


/***/ }),
/* 207 */
/***/ (function(module, exports) {

// a string of all valid unicode whitespaces
// eslint-disable-next-line max-len
module.exports = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


/***/ }),
/* 208 */
/***/ (function(module, exports) {

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

module.exports = eq;


/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(42),
    isObject = __webpack_require__(56);

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;


/***/ }),
/* 210 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

var mapCacheClear = __webpack_require__(465),
    mapCacheDelete = __webpack_require__(472),
    mapCacheGet = __webpack_require__(474),
    mapCacheHas = __webpack_require__(475),
    mapCacheSet = __webpack_require__(476);

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(213),
    eq = __webpack_require__(208);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignValue;


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__(214);

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(35);

var defineProperty = (function() {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

module.exports = defineProperty;


/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

var baseTimes = __webpack_require__(479),
    isArguments = __webpack_require__(216),
    isArray = __webpack_require__(33),
    isBuffer = __webpack_require__(217),
    isIndex = __webpack_require__(482),
    isTypedArray = __webpack_require__(483);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = arrayLikeKeys;


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsArguments = __webpack_require__(480),
    isObjectLike = __webpack_require__(34);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(16),
    stubFalse = __webpack_require__(481);

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(38)(module)))

/***/ }),
/* 218 */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;


/***/ }),
/* 219 */
/***/ (function(module, exports) {

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(209),
    isLength = __webpack_require__(218);

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;


/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(215),
    baseKeysIn = __webpack_require__(488),
    isArrayLike = __webpack_require__(220);

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

module.exports = keysIn;


/***/ }),
/* 222 */
/***/ (function(module, exports) {

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = stubArray;


/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(136),
    getPrototype = __webpack_require__(137),
    getSymbols = __webpack_require__(135),
    stubArray = __webpack_require__(222);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
  var result = [];
  while (object) {
    arrayPush(result, getSymbols(object));
    object = getPrototype(object);
  }
  return result;
};

module.exports = getSymbolsIn;


/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(136),
    isArray = __webpack_require__(33);

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;


/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(224),
    getSymbolsIn = __webpack_require__(223),
    keysIn = __webpack_require__(221);

/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeysIn(object) {
  return baseGetAllKeys(object, keysIn, getSymbolsIn);
}

module.exports = getAllKeysIn;


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

var isSymbol = __webpack_require__(129);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = toKey;


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

var prefix = __webpack_require__(538)
var toCamelCase = __webpack_require__(539)
var cache = { 'float': 'cssFloat' }
var addPxToStyle = __webpack_require__(542)

function style (element, property, value) {
  var camel = cache[property]
  if (typeof camel === 'undefined') {
    camel = detect(property)
  }

  // may be false if CSS prop is unsupported
  if (camel) {
    if (value === undefined) {
      return element.style[camel]
    }

    element.style[camel] = addPxToStyle(camel, value)
  }
}

function each (element, properties) {
  for (var k in properties) {
    if (properties.hasOwnProperty(k)) {
      style(element, k, properties[k])
    }
  }
}

function detect (cssProp) {
  var camel = toCamelCase(cssProp)
  var result = prefix(camel)
  cache[camel] = cache[cssProp] = cache[result] = result
  return result
}

function set () {
  if (arguments.length === 2) {
    if (typeof arguments[1] === 'string') {
      arguments[0].style.cssText = arguments[1]
    } else {
      each(arguments[0], arguments[1])
    }
  } else {
    style(arguments[0], arguments[1], arguments[2])
  }
}

module.exports = set
module.exports.set = set

module.exports.get = function (element, properties) {
  if (Array.isArray(properties)) {
    return properties.reduce(function (obj, prop) {
      obj[prop] = style(element, prop || '')
      return obj
    }, {})
  } else {
    return style(element, properties || '')
  }
}


/***/ }),
/* 228 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return symbolObservablePonyfill; });
function symbolObservablePonyfill(root) {
	var result;
	var Symbol = root.Symbol;

	if (typeof Symbol === 'function') {
		if (Symbol.observable) {
			result = Symbol.observable;
		} else {
			result = Symbol('observable');
			Symbol.observable = result;
		}
	} else {
		result = '@@observable';
	}

	return result;
};


/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports['default'] = jssGlobal;

var _jss = __webpack_require__(141);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var propKey = '@global';
var prefixKey = '@global ';

var GlobalContainerRule = function () {
  function GlobalContainerRule(key, styles, options) {
    _classCallCheck(this, GlobalContainerRule);

    this.type = 'global';

    this.key = key;
    this.options = options;
    this.rules = new _jss.RuleList(_extends({}, options, {
      parent: this
    }));

    for (var selector in styles) {
      this.rules.add(selector, styles[selector], { selector: selector });
    }

    this.rules.process();
  }

  /**
   * Get a rule.
   */


  _createClass(GlobalContainerRule, [{
    key: 'getRule',
    value: function getRule(name) {
      return this.rules.get(name);
    }

    /**
     * Create and register rule, run plugins.
     */

  }, {
    key: 'addRule',
    value: function addRule(name, style, options) {
      var rule = this.rules.add(name, style, options);
      this.options.jss.plugins.onProcessRule(rule);
      return rule;
    }

    /**
     * Get index of a rule.
     */

  }, {
    key: 'indexOf',
    value: function indexOf(rule) {
      return this.rules.indexOf(rule);
    }

    /**
     * Generates a CSS string.
     */

  }, {
    key: 'toString',
    value: function toString() {
      return this.rules.toString();
    }
  }]);

  return GlobalContainerRule;
}();

var GlobalPrefixedRule = function () {
  function GlobalPrefixedRule(name, style, options) {
    _classCallCheck(this, GlobalPrefixedRule);

    this.name = name;
    this.options = options;
    var selector = name.substr(prefixKey.length);
    this.rule = options.jss.createRule(selector, style, _extends({}, options, {
      parent: this,
      selector: selector
    }));
  }

  _createClass(GlobalPrefixedRule, [{
    key: 'toString',
    value: function toString(options) {
      return this.rule.toString(options);
    }
  }]);

  return GlobalPrefixedRule;
}();

var separatorRegExp = /\s*,\s*/g;

function addScope(selector, scope) {
  var parts = selector.split(separatorRegExp);
  var scoped = '';
  for (var i = 0; i < parts.length; i++) {
    scoped += scope + ' ' + parts[i].trim();
    if (parts[i + 1]) scoped += ', ';
  }
  return scoped;
}

function handleNestedGlobalContainerRule(rule) {
  var options = rule.options,
      style = rule.style;

  var rules = style[propKey];

  if (!rules) return;

  for (var name in rules) {
    options.sheet.addRule(name, rules[name], _extends({}, options, {
      selector: addScope(name, rule.selector)
    }));
  }

  delete style[propKey];
}

function handlePrefixedGlobalRule(rule) {
  var options = rule.options,
      style = rule.style;

  for (var prop in style) {
    if (prop.substr(0, propKey.length) !== propKey) continue;

    var selector = addScope(prop.substr(propKey.length), rule.selector);
    options.sheet.addRule(selector, style[prop], _extends({}, options, {
      selector: selector
    }));
    delete style[prop];
  }
}

/**
 * Convert nested rules to separate, remove them from original styles.
 *
 * @param {Rule} rule
 * @api public
 */
function jssGlobal() {
  function onCreateRule(name, styles, options) {
    if (name === propKey) {
      return new GlobalContainerRule(name, styles, options);
    }

    if (name[0] === '@' && name.substr(0, prefixKey.length) === prefixKey) {
      return new GlobalPrefixedRule(name, styles, options);
    }

    var parent = options.parent;


    if (parent) {
      if (parent.type === 'global' || parent.options.parent.type === 'global') {
        options.global = true;
      }
    }

    if (options.global) options.selector = name;

    return null;
  }

  function onProcessRule(rule) {
    if (rule.type !== 'style') return;

    handleNestedGlobalContainerRule(rule);
    handlePrefixedGlobalRule(rule);
  }

  return { onCreateRule: onCreateRule, onProcessRule: onProcessRule };
}

/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports['default'] = jssIsolate;

var _inherited = __webpack_require__(284);

var _inherited2 = _interopRequireDefault(_inherited);

var _all = __webpack_require__(285);

var _all2 = _interopRequireDefault(_all);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var resetSheetOptions = {
  meta: 'jss-isolate',
  // Lets make it always the first one in sheets for testing
  // and specificity.
  index: -Infinity,
  link: true
};

var initialsMap = {
  inherited: _inherited2['default'],
  all: _all2['default']
};

var getStyle = function getStyle() {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'inherited';

  // Option is either "inherited" or "all".
  if (typeof option === 'string') return initialsMap[option];

  if ((typeof option === 'undefined' ? 'undefined' : _typeof(option)) === 'object') {
    // Option is ["all/inherited", {...style}]
    if (Array.isArray(option)) {
      var type = option[0];
      var style = option[1];
      return _extends({}, initialsMap[type], style);
    }
    // Option is a style object, use inherited initials by default.
    return _extends({}, _inherited2['default'], option);
  }

  return _inherited2['default'];
};

var ignoreParents = {
  keyframes: true,
  conditional: true
};

var shouldIsolate = function shouldIsolate(rule, sheet, options) {
  var parent = rule.options.parent;


  if (parent && ignoreParents[parent.type]) {
    return false;
  }

  var isolate = options.isolate == null ? true : options.isolate;
  if (sheet.options.isolate != null) isolate = sheet.options.isolate;
  if (rule.style.isolate != null) {
    isolate = rule.style.isolate;
    delete rule.style.isolate;
  }

  // Option `isolate` may be for e.g. `{isolate: 'root'}`.
  // In this case it must match the rule name in order to isolate it.
  if (typeof isolate === 'string') {
    return isolate === rule.key;
  }

  return isolate;
};

/**
 * Performance optimized debounce without using setTimeout.
 * Returns a function which:
 * - will execute the passed fn not more than once per delay
 * - will not execute the passed fn if last try was within delay
 */
var createDebounced = function createDebounced(fn) {
  var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;

  var time = Date.now();
  return function () {
    var now = Date.now();
    if (now - time < delay) return false;
    time = now;
    fn();
    return true;
  };
};

function jssIsolate() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var setSelectorDone = false;
  var selectors = [];
  var resetSheet = void 0;
  var resetRule = void 0;

  var setSelector = function setSelector() {
    resetRule.selector = selectors.join(',\n');
  };

  var setSelectorDebounced = createDebounced(setSelector);

  function onProcessRule(rule, sheet) {
    if (!sheet || sheet === resetSheet || rule.type !== 'style') return;

    if (!shouldIsolate(rule, sheet, options)) return;

    // Create a reset Style Sheet once and use it for all rules.
    if (!resetRule) {
      resetSheet = rule.options.jss.createStyleSheet(null, resetSheetOptions);
      resetRule = resetSheet.addRule('reset', getStyle(options.reset));
      resetSheet.attach();
    }

    // Add reset rule class name to the classes map of users Style Sheet.
    var selector = rule.selector;

    if (selectors.indexOf(selector) === -1) {
      selectors.push(selector);
      setSelectorDone = setSelectorDebounced();
    }
  }

  // We make sure selector is set, because `debaunceMaybe` will not execute
  // the fn if called within delay.
  function onProcessSheet() {
    if (!setSelectorDone && selectors.length) setSelector();
  }

  return {
    onProcessRule: onProcessRule,
    onProcessSheet: onProcessSheet
  };
}

/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = jssNested;

var _warning = __webpack_require__(21);

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var separatorRegExp = /\s*,\s*/g;
var parentRegExp = /&/g;
var refRegExp = /\$([\w-]+)/g;

/**
 * Convert nested rules to separate, remove them from original styles.
 *
 * @param {Rule} rule
 * @api public
 */
function jssNested() {
  // Get a function to be used for $ref replacement.
  function getReplaceRef(container) {
    return function (match, key) {
      var rule = container.getRule(key);
      if (rule) return rule.selector;
      (0, _warning2.default)(false, '[JSS] Could not find the referenced rule %s in %s.', key, container.options.meta || container);
      return key;
    };
  }

  var hasAnd = function hasAnd(str) {
    return str.indexOf('&') !== -1;
  };

  function replaceParentRefs(nestedProp, parentProp) {
    var parentSelectors = parentProp.split(separatorRegExp);
    var nestedSelectors = nestedProp.split(separatorRegExp);

    var result = '';

    for (var i = 0; i < parentSelectors.length; i++) {
      var parent = parentSelectors[i];

      for (var j = 0; j < nestedSelectors.length; j++) {
        var nested = nestedSelectors[j];
        if (result) result += ', ';
        // Replace all & by the parent or prefix & with the parent.
        result += hasAnd(nested) ? nested.replace(parentRegExp, parent) : parent + ' ' + nested;
      }
    }

    return result;
  }

  function getOptions(rule, container, options) {
    // Options has been already created, now we only increase index.
    if (options) return _extends({}, options, { index: options.index + 1 });

    var nestingLevel = rule.options.nestingLevel;

    nestingLevel = nestingLevel === undefined ? 1 : nestingLevel + 1;

    return _extends({}, rule.options, {
      nestingLevel: nestingLevel,
      index: container.indexOf(rule) + 1
    });
  }

  function onProcessStyle(style, rule) {
    if (rule.type !== 'style') return style;
    var container = rule.options.parent;
    var options = void 0;
    var replaceRef = void 0;
    for (var prop in style) {
      var isNested = hasAnd(prop);
      var isNestedConditional = prop[0] === '@';

      if (!isNested && !isNestedConditional) continue;

      options = getOptions(rule, container, options);

      if (isNested) {
        var selector = replaceParentRefs(prop, rule.selector
        // Lazily create the ref replacer function just once for
        // all nested rules within the sheet.
        );if (!replaceRef) replaceRef = getReplaceRef(container
        // Replace all $refs.
        );selector = selector.replace(refRegExp, replaceRef);

        container.addRule(selector, style[prop], _extends({}, options, { selector: selector }));
      } else if (isNestedConditional) {
        container
        // Place conditional right after the parent rule to ensure right ordering.
        .addRule(prop, null, options).addRule(rule.key, style[prop], { selector: rule.selector });
      }

      delete style[prop];
    }

    return style;
  }

  return { onProcessStyle: onProcessStyle };
}

/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = camelCase;

var _hyphenateStyleName = __webpack_require__(286);

var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 * Convert camel cased property names to dash separated.
 *
 * @param {Object} style
 * @return {Object}
 */
function convertCase(style) {
  var converted = {};

  for (var prop in style) {
    converted[(0, _hyphenateStyleName2['default'])(prop)] = style[prop];
  }

  if (style.fallbacks) {
    if (Array.isArray(style.fallbacks)) converted.fallbacks = style.fallbacks.map(convertCase);else converted.fallbacks = convertCase(style.fallbacks);
  }

  return converted;
}

/**
 * Allow camel cased property names by converting them back to dasherized.
 *
 * @param {Rule} rule
 */
function camelCase() {
  function onProcessStyle(style) {
    if (Array.isArray(style)) {
      // Handle rules like @font-face, which can have multiple styles in an array
      for (var index = 0; index < style.length; index++) {
        style[index] = convertCase(style[index]);
      }
      return style;
    }

    return convertCase(style);
  }

  function onChangeValue(value, prop, rule) {
    var hyphenatedProp = (0, _hyphenateStyleName2['default'])(prop);

    // There was no camel case in place
    if (prop === hyphenatedProp) return value;

    rule.prop(hyphenatedProp, value);

    // Core will ignore that property value we set the proper one above.
    return null;
  }

  return { onProcessStyle: onProcessStyle, onChangeValue: onChangeValue };
}

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports['default'] = defaultUnit;

var _defaultUnits = __webpack_require__(287);

var _defaultUnits2 = _interopRequireDefault(_defaultUnits);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 * Clones the object and adds a camel cased property version.
 */
function addCamelCasedVersion(obj) {
  var regExp = /(-[a-z])/g;
  var replace = function replace(str) {
    return str[1].toUpperCase();
  };
  var newObj = {};
  for (var key in obj) {
    newObj[key] = obj[key];
    newObj[key.replace(regExp, replace)] = obj[key];
  }
  return newObj;
}

var units = addCamelCasedVersion(_defaultUnits2['default']);

/**
 * Recursive deep style passing function
 *
 * @param {String} current property
 * @param {(Object|Array|Number|String)} property value
 * @param {Object} options
 * @return {(Object|Array|Number|String)} resulting value
 */
function iterate(prop, value, options) {
  if (!value) return value;

  var convertedValue = value;

  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);
  if (type === 'object' && Array.isArray(value)) type = 'array';

  switch (type) {
    case 'object':
      if (prop === 'fallbacks') {
        for (var innerProp in value) {
          value[innerProp] = iterate(innerProp, value[innerProp], options);
        }
        break;
      }
      for (var _innerProp in value) {
        value[_innerProp] = iterate(prop + '-' + _innerProp, value[_innerProp], options);
      }
      break;
    case 'array':
      for (var i = 0; i < value.length; i++) {
        value[i] = iterate(prop, value[i], options);
      }
      break;
    case 'number':
      if (value !== 0) {
        convertedValue = value + (options[prop] || units[prop] || '');
      }
      break;
    default:
      break;
  }

  return convertedValue;
}

/**
 * Add unit to numeric values.
 */
function defaultUnit() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var camelCasedOptions = addCamelCasedVersion(options);

  function onProcessStyle(style, rule) {
    if (rule.type !== 'style') return style;

    for (var prop in style) {
      style[prop] = iterate(prop, style[prop], camelCasedOptions);
    }

    return style;
  }

  function onChangeValue(value, prop) {
    return iterate(prop, value, camelCasedOptions);
  }

  return { onProcessStyle: onProcessStyle, onChangeValue: onChangeValue };
}

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = jssCompose;

var _warning = __webpack_require__(21);

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Set selector.
 *
 * @param {Object} original rule
 * @param {String} className class string
 * @return {Boolean} flag, indicating function was successfull or not
 */
function registerClass(rule, className) {
  // Skip falsy values
  if (!className) return true;

  // Support array of class names `{composes: ['foo', 'bar']}`
  if (Array.isArray(className)) {
    for (var index = 0; index < className.length; index++) {
      var isSetted = registerClass(rule, className[index]);
      if (!isSetted) return false;
    }

    return true;
  }

  // Support space separated class names `{composes: 'foo bar'}`
  if (className.indexOf(' ') > -1) {
    return registerClass(rule, className.split(' '));
  }

  var parent = rule.options.parent;

  // It is a ref to a local rule.

  if (className[0] === '$') {
    var refRule = parent.getRule(className.substr(1));

    if (!refRule) {
      (0, _warning2.default)(false, '[JSS] Referenced rule is not defined. \r\n%s', rule);
      return false;
    }

    if (refRule === rule) {
      (0, _warning2.default)(false, '[JSS] Cyclic composition detected. \r\n%s', rule);
      return false;
    }

    parent.classes[rule.key] += ' ' + parent.classes[refRule.key];

    return true;
  }

  rule.options.parent.classes[rule.key] += ' ' + className;

  return true;
}

/**
 * Convert compose property to additional class, remove property from original styles.
 *
 * @param {Rule} rule
 * @api public
 */
function jssCompose() {
  function onProcessStyle(style, rule) {
    if (!style.composes) return style;
    registerClass(rule, style.composes);
    // Remove composes property to prevent infinite loop.
    delete style.composes;
    return style;
  }
  return { onProcessStyle: onProcessStyle };
}

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {(function (root, stringify) {
  /* istanbul ignore else */
  if (true) {
    // Node.
    module.exports = stringify();
  } else {}
})(this, function () {
  /**
   * Match all characters that need to be escaped in a string. Modified from
   * source to match single quotes instead of double.
   *
   * Source: https://github.com/douglascrockford/JSON-js/blob/master/json2.js
   */
  var ESCAPABLE = /[\\\'\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;

  /**
   * Map of characters to escape characters.
   */
  var META_CHARS = {
    '\b': '\\b',
    '\t': '\\t',
    '\n': '\\n',
    '\f': '\\f',
    '\r': '\\r',
    "'":  "\\'",
    '"':  '\\"',
    '\\': '\\\\'
  };

  /**
   * Escape any character into its literal JavaScript string.
   *
   * @param  {string} char
   * @return {string}
   */
  function escapeChar (char) {
    var meta = META_CHARS[char];

    return meta || '\\u' + ('0000' + char.charCodeAt(0).toString(16)).slice(-4);
  };

  /**
   * JavaScript reserved word list.
   */
  var RESERVED_WORDS = {};

  /**
   * Map reserved words to the object.
   */
  (
    'break else new var case finally return void catch for switch while ' +
    'continue function this with default if throw delete in try ' +
    'do instanceof typeof abstract enum int short boolean export ' +
    'interface static byte extends long super char final native synchronized ' +
    'class float package throws const goto private transient debugger ' +
    'implements protected volatile double import public let yield'
  ).split(' ').map(function (key) {
    RESERVED_WORDS[key] = true;
  });

  /**
   * Test for valid JavaScript identifier.
   */
  var IS_VALID_IDENTIFIER = /^[A-Za-z_$][A-Za-z0-9_$]*$/;

  /**
   * Check if a variable name is valid.
   *
   * @param  {string}  name
   * @return {boolean}
   */
  function isValidVariableName (name) {
    return !RESERVED_WORDS[name] && IS_VALID_IDENTIFIER.test(name);
  }

  /**
   * Return the global variable name.
   *
   * @return {string}
   */
  function toGlobalVariable (value) {
    return 'Function(' + stringify('return this;') + ')()';
  }

  /**
   * Serialize the path to a string.
   *
   * @param  {Array}  path
   * @return {string}
   */
  function toPath (path) {
    var result = '';

    for (var i = 0; i < path.length; i++) {
      if (isValidVariableName(path[i])) {
        result += '.' + path[i];
      } else {
        result += '[' + stringify(path[i]) + ']';
      }
    }

    return result;
  }

  /**
   * Stringify an array of values.
   *
   * @param  {Array}    array
   * @param  {string}   indent
   * @param  {Function} next
   * @return {string}
   */
  function stringifyArray (array, indent, next) {
    // Map array values to their stringified values with correct indentation.
    var values = array.map(function (value, index) {
      var str = next(value, index);

      if (str === undefined) {
        return String(str);
      }

      return indent + str.split('\n').join('\n' + indent);
    }).join(indent ? ',\n' : ',');

    // Wrap the array in newlines if we have indentation set.
    if (indent && values) {
      return '[\n' + values + '\n]';
    }

    return '[' + values + ']';
  }

  /**
   * Stringify a map of values.
   *
   * @param  {Object}   object
   * @param  {string}   indent
   * @param  {Function} next
   * @return {string}
   */
  function stringifyObject (object, indent, next) {
    // Iterate over object keys and concat string together.
    var values = Object.keys(object).reduce(function (values, key) {
      var value = next(object[key], key);

      // Omit `undefined` object values.
      if (value === undefined) {
        return values;
      }

      // String format the key and value data.
      key   = isValidVariableName(key) ? key : stringify(key);
      value = String(value).split('\n').join('\n' + indent);

      // Push the current object key and value into the values array.
      values.push(indent + key + ':' + (indent ? ' ' : '') + value);

      return values;
    }, []).join(indent ? ',\n' : ',');

    // Wrap the object in newlines if we have indentation set.
    if (indent && values) {
      return '{\n' + values + '\n}';
    }

    return '{' + values + '}';
  }

  /**
   * Convert JavaScript objects into strings.
   */
  var OBJECT_TYPES = {
    '[object Array]': stringifyArray,
    '[object Object]': stringifyObject,
    '[object Error]': function (error) {
      return 'new Error(' + stringify(error.message) + ')';
    },
    '[object Date]': function (date) {
      return 'new Date(' + date.getTime() + ')';
    },
    '[object String]': function (string) {
      return 'new String(' + stringify(string.toString()) + ')';
    },
    '[object Number]': function (number) {
      return 'new Number(' + number + ')';
    },
    '[object Boolean]': function (boolean) {
      return 'new Boolean(' + boolean + ')';
    },
    '[object Uint8Array]': function (array, indent) {
      return 'new Uint8Array(' + stringifyArray(array) + ')';
    },
    '[object Set]': function (array, indent, next) {
      if (typeof Array.from === 'function') {
        return 'new Set(' + stringify(Array.from(array), indent, next) + ')';
      } else return undefined;
    },
    '[object Map]': function (array, indent, next) {
      if (typeof Array.from === 'function') {
        return 'new Map(' + stringify(Array.from(array), indent, next) + ')';
      } else return undefined;
    },
    '[object RegExp]': String,
    '[object Function]': String,
    '[object global]': toGlobalVariable,
    '[object Window]': toGlobalVariable
  };

  /**
   * Convert JavaScript primitives into strings.
   */
  var PRIMITIVE_TYPES = {
    'string': function (string) {
      return "'" + string.replace(ESCAPABLE, escapeChar) + "'";
    },
    'number': String,
    'object': String,
    'boolean': String,
    'symbol': String,
    'undefined': String
  };

  /**
   * Convert any value to a string.
   *
   * @param  {*}        value
   * @param  {string}   indent
   * @param  {Function} next
   * @return {string}
   */
  function stringify (value, indent, next) {
    // Convert primitives into strings.
    if (Object(value) !== value) {
      return PRIMITIVE_TYPES[typeof value](value, indent, next);
    }

    // Handle buffer objects before recursing (node < 6 was an object, node >= 6 is a `Uint8Array`).
    if (typeof Buffer === 'function' && Buffer.isBuffer(value)) {
      return 'new Buffer(' + next(value.toString()) + ')';
    }

    // Use the internal object string to select stringification method.
    var toString = OBJECT_TYPES[Object.prototype.toString.call(value)];

    // Convert objects into strings.
    return toString ? toString(value, indent, next) : undefined;
  }

  /**
   * Stringify an object into the literal string.
   *
   * @param  {*}               value
   * @param  {Function}        [replacer]
   * @param  {(number|string)} [space]
   * @param  {Object}          [options]
   * @return {string}
   */
  return function (value, replacer, space, options) {
    options = options || {}

    // Convert the spaces into a string.
    if (typeof space !== 'string') {
      space = new Array(Math.max(0, space|0) + 1).join(' ');
    }

    var maxDepth = Number(options.maxDepth) || 100;
    var references = !!options.references;
    var skipUndefinedProperties = !!options.skipUndefinedProperties;
    var valueCount = Number(options.maxValues) || 100000;

    var path = [];
    var stack = [];
    var encountered = [];
    var paths = [];
    var restore = [];

    /**
     * Stringify the next value in the stack.
     *
     * @param  {*}      value
     * @param  {string} key
     * @return {string}
     */
    function next (value, key) {
      if (skipUndefinedProperties && value === undefined) {
        return undefined;
      }

      path.push(key);
      var result = recurse(value, stringify);
      path.pop();
      return result;
    }

    /**
     * Handle recursion by checking if we've visited this node every iteration.
     *
     * @param  {*}        value
     * @param  {Function} stringify
     * @return {string}
     */
    var recurse = references ?
      function (value, stringify) {
        if (value && (typeof value === 'object' || typeof value === 'function')) {
          var seen = encountered.indexOf(value);

          // Track nodes to restore later.
          if (seen > -1) {
            restore.push(path.slice(), paths[seen]);
            return;
          }

          // Track encountered nodes.
          encountered.push(value);
          paths.push(path.slice());
        }

        // Stop when we hit the max depth.
        if (path.length > maxDepth || valueCount-- <= 0) {
          return;
        }

        // Stringify the value and fallback to
        return stringify(value, space, next);
      } :
      function (value, stringify) {
        var seen = stack.indexOf(value);

        if (seen > -1 || path.length > maxDepth || valueCount-- <= 0) {
          return;
        }

        stack.push(value);
        var value = stringify(value, space, next);
        stack.pop();
        return value;
      };

    // If the user defined a replacer function, make the recursion function
    // a double step process - `recurse -> replacer -> stringify`.
    if (typeof replacer === 'function') {
      var before = recurse

      // Intertwine the replacer function with the regular recursion.
      recurse = function (value, stringify) {
        return before(value, function (value, space, next) {
          return replacer(value, space, function (value) {
            return stringify(value, space, next);
          });
        });
      };
    }

    var result = recurse(value, stringify);

    // Attempt to restore circular references.
    if (restore.length) {
      var sep = space ? '\n' : '';
      var assignment = space ? ' = ' : '=';
      var eol = ';' + sep;
      var before = space ? '(function () {' : '(function(){'
      var after = '}())'
      var results = ['var x' + assignment + result];

      for (var i = 0; i < restore.length; i += 2) {
        results.push('x' + toPath(restore[i]) + assignment + 'x' + toPath(restore[i + 1]));
      }

      results.push('return x');

      return before + sep + results.join(eol) + eol + after
    }

    return result;
  };
});

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(167).Buffer))

/***/ }),
/* 236 */
/***/ (function(module, exports) {

var reg = /[\'\"]/

module.exports = function unquote(str) {
  if (!str) {
    return ''
  }
  if (reg.test(str.charAt(0))) {
    str = str.substr(1)
  }
  if (reg.test(str.charAt(str.length - 1))) {
    str = str.substr(0, str.length - 1)
  }
  return str
}


/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(168),
    baseIteratee = __webpack_require__(110),
    baseMap = __webpack_require__(396),
    isArray = __webpack_require__(12);

/**
 * Creates an array of values by running each element in `collection` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, index|key, collection).
 *
 * Many lodash methods are guarded to work as iteratees for methods like
 * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
 *
 * The guarded methods are:
 * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
 * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
 * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
 * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * _.map([4, 8], square);
 * // => [16, 64]
 *
 * _.map({ 'a': 4, 'b': 8 }, square);
 * // => [16, 64] (iteration order is not guaranteed)
 *
 * var users = [
 *   { 'user': 'barney' },
 *   { 'user': 'fred' }
 * ];
 *
 * // The `_.property` iteratee shorthand.
 * _.map(users, 'user');
 * // => ['barney', 'fred']
 */
function map(collection, iteratee) {
  var func = isArray(collection) ? arrayMap : baseMap;
  return func(collection, baseIteratee(iteratee, 3));
}

module.exports = map;


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactIconBase = __webpack_require__(112);

var _reactIconBase2 = _interopRequireDefault(_reactIconBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MdFullscreen = function MdFullscreen(props) {
    return _react2.default.createElement(
        _reactIconBase2.default,
        _extends({ viewBox: '0 0 40 40' }, props),
        _react2.default.createElement(
            'g',
            null,
            _react2.default.createElement('path', { d: 'm23.4 8.4h8.2v8.2h-3.2v-5h-5v-3.2z m5 20v-5h3.2v8.2h-8.2v-3.2h5z m-20-11.8v-8.2h8.2v3.2h-5v5h-3.2z m3.2 6.8v5h5v3.2h-8.2v-8.2h3.2z' })
        )
    );
};

exports.default = MdFullscreen;
module.exports = exports['default'];

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactIconBase = __webpack_require__(112);

var _reactIconBase2 = _interopRequireDefault(_reactIconBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MdFullscreenExit = function MdFullscreenExit(props) {
    return _react2.default.createElement(
        _reactIconBase2.default,
        _extends({ viewBox: '0 0 40 40' }, props),
        _react2.default.createElement(
            'g',
            null,
            _react2.default.createElement('path', { d: 'm26.6 13.4h5v3.2h-8.2v-8.2h3.2v5z m-3.2 18.2v-8.2h8.2v3.2h-5v5h-3.2z m-10-18.2v-5h3.2v8.2h-8.2v-3.2h5z m-5 13.2v-3.2h8.2v8.2h-3.2v-5h-5z' })
        )
    );
};

exports.default = MdFullscreenExit;
module.exports = exports['default'];

/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

var toString = __webpack_require__(177);

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
    reHasRegExpChar = RegExp(reRegExpChar.source);

/**
 * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
 * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to escape.
 * @returns {string} Returns the escaped string.
 * @example
 *
 * _.escapeRegExp('[lodash](https://lodash.com/)');
 * // => '\[lodash\]\(https://lodash\.com/\)'
 */
function escapeRegExp(string) {
  string = toString(string);
  return (string && reHasRegExpChar.test(string))
    ? string.replace(reRegExpChar, '\\$&')
    : string;
}

module.exports = escapeRegExp;


/***/ }),
/* 241 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* unused harmony export target */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return transform; });
/* unused harmony export VERSION */
/* harmony import */ var magic_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(242);
/* harmony import */ var acorn__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(244);



var xhtml = {
  quot: '\u0022',
  amp: '&',
  apos: '\u0027',
  lt: '<',
  gt: '>',
  nbsp: '\u00A0',
  iexcl: '\u00A1',
  cent: '\u00A2',
  pound: '\u00A3',
  curren: '\u00A4',
  yen: '\u00A5',
  brvbar: '\u00A6',
  sect: '\u00A7',
  uml: '\u00A8',
  copy: '\u00A9',
  ordf: '\u00AA',
  laquo: '\u00AB',
  not: '\u00AC',
  shy: '\u00AD',
  reg: '\u00AE',
  macr: '\u00AF',
  deg: '\u00B0',
  plusmn: '\u00B1',
  sup2: '\u00B2',
  sup3: '\u00B3',
  acute: '\u00B4',
  micro: '\u00B5',
  para: '\u00B6',
  middot: '\u00B7',
  cedil: '\u00B8',
  sup1: '\u00B9',
  ordm: '\u00BA',
  raquo: '\u00BB',
  frac14: '\u00BC',
  frac12: '\u00BD',
  frac34: '\u00BE',
  iquest: '\u00BF',
  Agrave: '\u00C0',
  Aacute: '\u00C1',
  Acirc: '\u00C2',
  Atilde: '\u00C3',
  Auml: '\u00C4',
  Aring: '\u00C5',
  AElig: '\u00C6',
  Ccedil: '\u00C7',
  Egrave: '\u00C8',
  Eacute: '\u00C9',
  Ecirc: '\u00CA',
  Euml: '\u00CB',
  Igrave: '\u00CC',
  Iacute: '\u00CD',
  Icirc: '\u00CE',
  Iuml: '\u00CF',
  ETH: '\u00D0',
  Ntilde: '\u00D1',
  Ograve: '\u00D2',
  Oacute: '\u00D3',
  Ocirc: '\u00D4',
  Otilde: '\u00D5',
  Ouml: '\u00D6',
  times: '\u00D7',
  Oslash: '\u00D8',
  Ugrave: '\u00D9',
  Uacute: '\u00DA',
  Ucirc: '\u00DB',
  Uuml: '\u00DC',
  Yacute: '\u00DD',
  THORN: '\u00DE',
  szlig: '\u00DF',
  agrave: '\u00E0',
  aacute: '\u00E1',
  acirc: '\u00E2',
  atilde: '\u00E3',
  auml: '\u00E4',
  aring: '\u00E5',
  aelig: '\u00E6',
  ccedil: '\u00E7',
  egrave: '\u00E8',
  eacute: '\u00E9',
  ecirc: '\u00EA',
  euml: '\u00EB',
  igrave: '\u00EC',
  iacute: '\u00ED',
  icirc: '\u00EE',
  iuml: '\u00EF',
  eth: '\u00F0',
  ntilde: '\u00F1',
  ograve: '\u00F2',
  oacute: '\u00F3',
  ocirc: '\u00F4',
  otilde: '\u00F5',
  ouml: '\u00F6',
  divide: '\u00F7',
  oslash: '\u00F8',
  ugrave: '\u00F9',
  uacute: '\u00FA',
  ucirc: '\u00FB',
  uuml: '\u00FC',
  yacute: '\u00FD',
  thorn: '\u00FE',
  yuml: '\u00FF',
  OElig: '\u0152',
  oelig: '\u0153',
  Scaron: '\u0160',
  scaron: '\u0161',
  Yuml: '\u0178',
  fnof: '\u0192',
  circ: '\u02C6',
  tilde: '\u02DC',
  Alpha: '\u0391',
  Beta: '\u0392',
  Gamma: '\u0393',
  Delta: '\u0394',
  Epsilon: '\u0395',
  Zeta: '\u0396',
  Eta: '\u0397',
  Theta: '\u0398',
  Iota: '\u0399',
  Kappa: '\u039A',
  Lambda: '\u039B',
  Mu: '\u039C',
  Nu: '\u039D',
  Xi: '\u039E',
  Omicron: '\u039F',
  Pi: '\u03A0',
  Rho: '\u03A1',
  Sigma: '\u03A3',
  Tau: '\u03A4',
  Upsilon: '\u03A5',
  Phi: '\u03A6',
  Chi: '\u03A7',
  Psi: '\u03A8',
  Omega: '\u03A9',
  alpha: '\u03B1',
  beta: '\u03B2',
  gamma: '\u03B3',
  delta: '\u03B4',
  epsilon: '\u03B5',
  zeta: '\u03B6',
  eta: '\u03B7',
  theta: '\u03B8',
  iota: '\u03B9',
  kappa: '\u03BA',
  lambda: '\u03BB',
  mu: '\u03BC',
  nu: '\u03BD',
  xi: '\u03BE',
  omicron: '\u03BF',
  pi: '\u03C0',
  rho: '\u03C1',
  sigmaf: '\u03C2',
  sigma: '\u03C3',
  tau: '\u03C4',
  upsilon: '\u03C5',
  phi: '\u03C6',
  chi: '\u03C7',
  psi: '\u03C8',
  omega: '\u03C9',
  thetasym: '\u03D1',
  upsih: '\u03D2',
  piv: '\u03D6',
  ensp: '\u2002',
  emsp: '\u2003',
  thinsp: '\u2009',
  zwnj: '\u200C',
  zwj: '\u200D',
  lrm: '\u200E',
  rlm: '\u200F',
  ndash: '\u2013',
  mdash: '\u2014',
  lsquo: '\u2018',
  rsquo: '\u2019',
  sbquo: '\u201A',
  ldquo: '\u201C',
  rdquo: '\u201D',
  bdquo: '\u201E',
  dagger: '\u2020',
  Dagger: '\u2021',
  bull: '\u2022',
  hellip: '\u2026',
  permil: '\u2030',
  prime: '\u2032',
  Prime: '\u2033',
  lsaquo: '\u2039',
  rsaquo: '\u203A',
  oline: '\u203E',
  frasl: '\u2044',
  euro: '\u20AC',
  image: '\u2111',
  weierp: '\u2118',
  real: '\u211C',
  trade: '\u2122',
  alefsym: '\u2135',
  larr: '\u2190',
  uarr: '\u2191',
  rarr: '\u2192',
  darr: '\u2193',
  harr: '\u2194',
  crarr: '\u21B5',
  lArr: '\u21D0',
  uArr: '\u21D1',
  rArr: '\u21D2',
  dArr: '\u21D3',
  hArr: '\u21D4',
  forall: '\u2200',
  part: '\u2202',
  exist: '\u2203',
  empty: '\u2205',
  nabla: '\u2207',
  isin: '\u2208',
  notin: '\u2209',
  ni: '\u220B',
  prod: '\u220F',
  sum: '\u2211',
  minus: '\u2212',
  lowast: '\u2217',
  radic: '\u221A',
  prop: '\u221D',
  infin: '\u221E',
  ang: '\u2220',
  and: '\u2227',
  or: '\u2228',
  cap: '\u2229',
  cup: '\u222A',
  'int': '\u222B',
  there4: '\u2234',
  sim: '\u223C',
  cong: '\u2245',
  asymp: '\u2248',
  ne: '\u2260',
  equiv: '\u2261',
  le: '\u2264',
  ge: '\u2265',
  sub: '\u2282',
  sup: '\u2283',
  nsub: '\u2284',
  sube: '\u2286',
  supe: '\u2287',
  oplus: '\u2295',
  otimes: '\u2297',
  perp: '\u22A5',
  sdot: '\u22C5',
  lceil: '\u2308',
  rceil: '\u2309',
  lfloor: '\u230A',
  rfloor: '\u230B',
  lang: '\u2329',
  rang: '\u232A',
  loz: '\u25CA',
  spades: '\u2660',
  clubs: '\u2663',
  hearts: '\u2665',
  diams: '\u2666'
};

var hexNumber = /^[\da-fA-F]+$/;
var decimalNumber = /^\d+$/;

var inject = function(acorn$$1) {
  var tt = acorn$$1.tokTypes;
  var tc = acorn$$1.tokContexts;

  tc.j_oTag = new acorn$$1.TokContext('<tag', false);
  tc.j_cTag = new acorn$$1.TokContext('</tag', false);
  tc.j_expr = new acorn$$1.TokContext('<tag>...</tag>', true, true);

  tt.jsxName = new acorn$$1.TokenType('jsxName');
  tt.jsxText = new acorn$$1.TokenType('jsxText', {beforeExpr: true});
  tt.jsxTagStart = new acorn$$1.TokenType('jsxTagStart');
  tt.jsxTagEnd = new acorn$$1.TokenType('jsxTagEnd');

  tt.jsxTagStart.updateContext = function() {
    this.context.push(tc.j_expr); // treat as beginning of JSX expression
    this.context.push(tc.j_oTag); // start opening tag context
    this.exprAllowed = false;
  };
  tt.jsxTagEnd.updateContext = function(prevType) {
    var out = this.context.pop();
    if (out === tc.j_oTag && prevType === tt.slash || out === tc.j_cTag) {
      this.context.pop();
      this.exprAllowed = this.curContext() === tc.j_expr;
    } else {
      this.exprAllowed = true;
    }
  };

  var pp = acorn$$1.Parser.prototype;

  // Reads inline JSX contents token.

  pp.jsx_readToken = function() {
    var out = '', chunkStart = this.pos;
    for (;;) {
      if (this.pos >= this.input.length)
        this.raise(this.start, 'Unterminated JSX contents');
      var ch = this.input.charCodeAt(this.pos);

      switch (ch) {
      case 60: // '<'
      case 123: // '{'
        if (this.pos === this.start) {
          if (ch === 60 && this.exprAllowed) {
            ++this.pos;
            return this.finishToken(tt.jsxTagStart);
          }
          return this.getTokenFromCode(ch);
        }
        out += this.input.slice(chunkStart, this.pos);
        return this.finishToken(tt.jsxText, out);

      case 38: // '&'
        out += this.input.slice(chunkStart, this.pos);
        out += this.jsx_readEntity();
        chunkStart = this.pos;
        break;

      default:
        if (acorn$$1.isNewLine(ch)) {
          out += this.input.slice(chunkStart, this.pos);
          out += this.jsx_readNewLine(true);
          chunkStart = this.pos;
        } else {
          ++this.pos;
        }
      }
    }
  };

  pp.jsx_readNewLine = function(normalizeCRLF) {
    var ch = this.input.charCodeAt(this.pos);
    var out;
    ++this.pos;
    if (ch === 13 && this.input.charCodeAt(this.pos) === 10) {
      ++this.pos;
      out = normalizeCRLF ? '\n' : '\r\n';
    } else {
      out = String.fromCharCode(ch);
    }
    if (this.options.locations) {
      ++this.curLine;
      this.lineStart = this.pos;
    }

    return out;
  };

  pp.jsx_readString = function(quote) {
    var out = '', chunkStart = ++this.pos;
    for (;;) {
      if (this.pos >= this.input.length)
        this.raise(this.start, 'Unterminated string constant');
      var ch = this.input.charCodeAt(this.pos);
      if (ch === quote) break;
      if (ch === 38) { // '&'
        out += this.input.slice(chunkStart, this.pos);
        out += this.jsx_readEntity();
        chunkStart = this.pos;
      } else if (acorn$$1.isNewLine(ch)) {
        out += this.input.slice(chunkStart, this.pos);
        out += this.jsx_readNewLine(false);
        chunkStart = this.pos;
      } else {
        ++this.pos;
      }
    }
    out += this.input.slice(chunkStart, this.pos++);
    return this.finishToken(tt.string, out);
  };

  pp.jsx_readEntity = function() {
    var str = '', count = 0, entity;
    var ch = this.input[this.pos];
    if (ch !== '&')
      this.raise(this.pos, 'Entity must start with an ampersand');
    var startPos = ++this.pos;
    while (this.pos < this.input.length && count++ < 10) {
      ch = this.input[this.pos++];
      if (ch === ';') {
        if (str[0] === '#') {
          if (str[1] === 'x') {
            str = str.substr(2);
            if (hexNumber.test(str))
              entity = String.fromCharCode(parseInt(str, 16));
          } else {
            str = str.substr(1);
            if (decimalNumber.test(str))
              entity = String.fromCharCode(parseInt(str, 10));
          }
        } else {
          entity = xhtml[str];
        }
        break;
      }
      str += ch;
    }
    if (!entity) {
      this.pos = startPos;
      return '&';
    }
    return entity;
  };


  // Read a JSX identifier (valid tag or attribute name).
  //
  // Optimized version since JSX identifiers can't contain
  // escape characters and so can be read as single slice.
  // Also assumes that first character was already checked
  // by isIdentifierStart in readToken.

  pp.jsx_readWord = function() {
    var ch, start = this.pos;
    do {
      ch = this.input.charCodeAt(++this.pos);
    } while (acorn$$1.isIdentifierChar(ch) || ch === 45); // '-'
    return this.finishToken(tt.jsxName, this.input.slice(start, this.pos));
  };

  // Transforms JSX element name to string.

  function getQualifiedJSXName(object) {
    if (!object)
      return object;

    if (object.type === 'JSXIdentifier')
      return object.name;

    if (object.type === 'JSXNamespacedName')
      return object.namespace.name + ':' + object.name.name;

    if (object.type === 'JSXMemberExpression')
      return getQualifiedJSXName(object.object) + '.' +
      getQualifiedJSXName(object.property);
  }

  // Parse next token as JSX identifier

  pp.jsx_parseIdentifier = function() {
    var node = this.startNode();
    if (this.type === tt.jsxName)
      node.name = this.value;
    else if (this.type.keyword)
      node.name = this.type.keyword;
    else
      this.unexpected();
    this.next();
    return this.finishNode(node, 'JSXIdentifier');
  };

  // Parse namespaced identifier.

  pp.jsx_parseNamespacedName = function() {
    var startPos = this.start, startLoc = this.startLoc;
    var name = this.jsx_parseIdentifier();
    if (!this.options.plugins.jsx.allowNamespaces || !this.eat(tt.colon)) return name;
    var node = this.startNodeAt(startPos, startLoc);
    node.namespace = name;
    node.name = this.jsx_parseIdentifier();
    return this.finishNode(node, 'JSXNamespacedName');
  };

  // Parses element name in any form - namespaced, member
  // or single identifier.

  pp.jsx_parseElementName = function() {
    if (this.type === tt.jsxTagEnd)
      return '';
    var startPos = this.start, startLoc = this.startLoc;
    var node = this.jsx_parseNamespacedName();
    if (this.type === tt.dot && node.type === 'JSXNamespacedName' && !this.options.plugins.jsx.allowNamespacedObjects) {
      this.unexpected();
    }
    while (this.eat(tt.dot)) {
      var newNode = this.startNodeAt(startPos, startLoc);
      newNode.object = node;
      newNode.property = this.jsx_parseIdentifier();
      node = this.finishNode(newNode, 'JSXMemberExpression');
    }
    return node;
  };

  // Parses any type of JSX attribute value.

  pp.jsx_parseAttributeValue = function() {
    switch (this.type) {
    case tt.braceL:
      var node = this.jsx_parseExpressionContainer();
      if (node.expression.type === 'JSXEmptyExpression')
        this.raise(node.start, 'JSX attributes must only be assigned a non-empty expression');
      return node;

    case tt.jsxTagStart:
    case tt.string:
      return this.parseExprAtom();

    default:
      this.raise(this.start, 'JSX value should be either an expression or a quoted JSX text');
    }
  };

  // JSXEmptyExpression is unique type since it doesn't actually parse anything,
  // and so it should start at the end of last read token (left brace) and finish
  // at the beginning of the next one (right brace).

  pp.jsx_parseEmptyExpression = function() {
    var node = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);
    return this.finishNodeAt(node, 'JSXEmptyExpression', this.start, this.startLoc);
  };

  // Parses JSX expression enclosed into curly brackets.


  pp.jsx_parseExpressionContainer = function() {
    var node = this.startNode();
    this.next();
    node.expression = this.type === tt.braceR
      ? this.jsx_parseEmptyExpression()
      : this.parseExpression();
    this.expect(tt.braceR);
    return this.finishNode(node, 'JSXExpressionContainer');
  };

  // Parses following JSX attribute name-value pair.

  pp.jsx_parseAttribute = function() {
    var node = this.startNode();
    if (this.eat(tt.braceL)) {
      this.expect(tt.ellipsis);
      node.argument = this.parseMaybeAssign();
      this.expect(tt.braceR);
      return this.finishNode(node, 'JSXSpreadAttribute');
    }
    node.name = this.jsx_parseNamespacedName();
    node.value = this.eat(tt.eq) ? this.jsx_parseAttributeValue() : null;
    return this.finishNode(node, 'JSXAttribute');
  };

  // Parses JSX opening tag starting after '<'.

  pp.jsx_parseOpeningElementAt = function(startPos, startLoc) {
    var node = this.startNodeAt(startPos, startLoc);
    node.attributes = [];
    var nodeName = this.jsx_parseElementName();
    if (nodeName) node.name = nodeName;
    while (this.type !== tt.slash && this.type !== tt.jsxTagEnd)
      node.attributes.push(this.jsx_parseAttribute());
    node.selfClosing = this.eat(tt.slash);
    this.expect(tt.jsxTagEnd);
    return this.finishNode(node, nodeName ? 'JSXOpeningElement' : 'JSXOpeningFragment');
  };

  // Parses JSX closing tag starting after '</'.

  pp.jsx_parseClosingElementAt = function(startPos, startLoc) {
    var node = this.startNodeAt(startPos, startLoc);
    var nodeName = this.jsx_parseElementName();
    if (nodeName) node.name = nodeName;
    this.expect(tt.jsxTagEnd);
    return this.finishNode(node, nodeName ? 'JSXClosingElement' : 'JSXClosingFragment');
  };

  // Parses entire JSX element, including it's opening tag
  // (starting after '<'), attributes, contents and closing tag.

  pp.jsx_parseElementAt = function(startPos, startLoc) {
    var node = this.startNodeAt(startPos, startLoc);
    var children = [];
    var openingElement = this.jsx_parseOpeningElementAt(startPos, startLoc);
    var closingElement = null;

    if (!openingElement.selfClosing) {
      contents: for (;;) {
        switch (this.type) {
        case tt.jsxTagStart:
          startPos = this.start; startLoc = this.startLoc;
          this.next();
          if (this.eat(tt.slash)) {
            closingElement = this.jsx_parseClosingElementAt(startPos, startLoc);
            break contents;
          }
          children.push(this.jsx_parseElementAt(startPos, startLoc));
          break;

        case tt.jsxText:
          children.push(this.parseExprAtom());
          break;

        case tt.braceL:
          children.push(this.jsx_parseExpressionContainer());
          break;

        default:
          this.unexpected();
        }
      }
      if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {
        this.raise(
          closingElement.start,
          'Expected corresponding JSX closing tag for <' + getQualifiedJSXName(openingElement.name) + '>');
      }
    }

    node.openingElement = openingElement;
    node.closingElement = closingElement;
    node.children = children;
    if (this.type === tt.relational && this.value === "<") {
      this.raise(this.start, "Adjacent JSX elements must be wrapped in an enclosing tag");
    }
    return this.finishNode(node, openingElement.name ? 'JSXElement' : 'JSXFragment');
  };

  // Parse JSX text

  pp.jsx_parseText = function(value) {
    var node = this.parseLiteral(value);
    node.type = "JSXText";

    return node;
  };

  // Parses entire JSX element from current position.

  pp.jsx_parseElement = function() {
    var startPos = this.start, startLoc = this.startLoc;
    this.next();
    return this.jsx_parseElementAt(startPos, startLoc);
  };

  acorn$$1.plugins.jsx = function(instance, opts) {
    if (!opts) {
      return;
    }

    if (typeof opts !== 'object') {
      opts = {};
    }

    instance.options.plugins.jsx = {
      allowNamespaces: opts.allowNamespaces !== false,
      allowNamespacedObjects: !!opts.allowNamespacedObjects
    };

    instance.extend('parseExprAtom', function(inner) {
      return function(refShortHandDefaultPos) {
        if (this.type === tt.jsxText)
          return this.jsx_parseText(this.value);
        else if (this.type === tt.jsxTagStart)
          return this.jsx_parseElement();
        else
          return inner.call(this, refShortHandDefaultPos);
      };
    });

    instance.extend('readToken', function(inner) {
      return function(code) {
        var context = this.curContext();

        if (context === tc.j_expr) return this.jsx_readToken();

        if (context === tc.j_oTag || context === tc.j_cTag) {
          if (acorn$$1.isIdentifierStart(code)) return this.jsx_readWord();

          if (code == 62) {
            ++this.pos;
            return this.finishToken(tt.jsxTagEnd);
          }

          if ((code === 34 || code === 39) && context == tc.j_oTag)
            return this.jsx_readString(code);
        }

        if (code === 60 && this.exprAllowed && this.input.charCodeAt(this.pos + 1) !== 33) {
          ++this.pos;
          return this.finishToken(tt.jsxTagStart);
        }
        return inner.call(this, code);
      };
    });

    instance.extend('updateContext', function(inner) {
      return function(prevType) {
        if (this.type == tt.braceL) {
          var curContext = this.curContext();
          if (curContext == tc.j_oTag) this.context.push(tc.b_expr);
          else if (curContext == tc.j_expr) this.context.push(tc.b_tmpl);
          else inner.call(this, prevType);
          this.exprAllowed = true;
        } else if (this.type === tt.slash && prevType === tt.jsxTagStart) {
          this.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore
          this.context.push(tc.j_cTag); // reconsider as closing tag context
          this.exprAllowed = false;
        } else {
          return inner.call(this, prevType);
        }
      };
    });
  };

  return acorn$$1;
};

var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function commonjsRequire () {
	throw new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs');
}

function unwrapExports (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var inject$1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = injectDynamicImport;
/* eslint-disable no-underscore-dangle */

var DynamicImportKey = exports.DynamicImportKey = 'Import';

function injectDynamicImport(acorn$$1) {
  var tt = acorn$$1.tokTypes;

  // NOTE: This allows `yield import()` to parse correctly.
  tt._import.startsExpr = true;

  function parseDynamicImport() {
    var node = this.startNode();
    this.next();
    if (this.type !== tt.parenL) {
      this.unexpected();
    }
    return this.finishNode(node, DynamicImportKey);
  }

  function peekNext() {
    return this.input[this.pos];
  }

  // eslint-disable-next-line no-param-reassign
  acorn$$1.plugins.dynamicImport = function () {
    function dynamicImportPlugin(instance) {
      instance.extend('parseStatement', function (nextMethod) {
        return function () {
          function parseStatement() {
            var node = this.startNode();
            if (this.type === tt._import) {
              var nextToken = peekNext.call(this);
              if (nextToken === tt.parenL.label) {
                var expr = this.parseExpression();
                return this.parseExpressionStatement(node, expr);
              }
            }

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            return nextMethod.apply(this, args);
          }

          return parseStatement;
        }();
      });

      instance.extend('parseExprAtom', function (nextMethod) {
        return function () {
          function parseExprAtom(refDestructuringErrors) {
            if (this.type === tt._import) {
              return parseDynamicImport.call(this);
            }
            return nextMethod.call(this, refDestructuringErrors);
          }

          return parseExprAtom;
        }();
      });
    }

    return dynamicImportPlugin;
  }();

  return acorn$$1;
}
});

var acornDynamicImport = unwrapExports(inject$1);
var inject_1 = inject$1.DynamicImportKey;

// used for debugging, without the noise created by
// circular references
function toJSON(node) {
	var obj = {};

	Object.keys(node).forEach(function (key) {
		if (
			key === 'parent' ||
			key === 'program' ||
			key === 'keys' ||
			key === '__wrapped'
		)
			{ return; }

		if (Array.isArray(node[key])) {
			obj[key] = node[key].map(toJSON);
		} else if (node[key] && node[key].toJSON) {
			obj[key] = node[key].toJSON();
		} else {
			obj[key] = node[key];
		}
	});

	return obj;
}

var Node = function Node () {};

Node.prototype.ancestor = function ancestor (level) {
	var node = this;
	while (level--) {
		node = node.parent;
		if (!node) { return null; }
	}

	return node;
};

Node.prototype.contains = function contains (node) {
		var this$1 = this;

	while (node) {
		if (node === this$1) { return true; }
		node = node.parent;
	}

	return false;
};

Node.prototype.findLexicalBoundary = function findLexicalBoundary () {
	return this.parent.findLexicalBoundary();
};

Node.prototype.findNearest = function findNearest (type) {
	if (typeof type === 'string') { type = new RegExp(("^" + type + "$")); }
	if (type.test(this.type)) { return this; }
	return this.parent.findNearest(type);
};

Node.prototype.unparenthesizedParent = function unparenthesizedParent () {
	var node = this.parent;
	while (node && node.type === 'ParenthesizedExpression') {
		node = node.parent;
	}
	return node;
};

Node.prototype.unparenthesize = function unparenthesize () {
	var node = this;
	while (node.type === 'ParenthesizedExpression') {
		node = node.expression;
	}
	return node;
};

Node.prototype.findScope = function findScope (functionScope) {
	return this.parent.findScope(functionScope);
};

Node.prototype.getIndentation = function getIndentation () {
	return this.parent.getIndentation();
};

Node.prototype.initialise = function initialise (transforms) {
		var this$1 = this;

	for (var i = 0, list = this$1.keys; i < list.length; i += 1) {
		var key = list[i];

			var value = this$1[key];

		if (Array.isArray(value)) {
			value.forEach(function (node) { return node && node.initialise(transforms); });
		} else if (value && typeof value === 'object') {
			value.initialise(transforms);
		}
	}
};

Node.prototype.toJSON = function toJSON$1 () {
	return toJSON(this);
};

Node.prototype.toString = function toString () {
	return this.program.magicString.original.slice(this.start, this.end);
};

Node.prototype.transpile = function transpile (code, transforms) {
		var this$1 = this;

	for (var i = 0, list = this$1.keys; i < list.length; i += 1) {
		var key = list[i];

			var value = this$1[key];

		if (Array.isArray(value)) {
			value.forEach(function (node) { return node && node.transpile(code, transforms); });
		} else if (value && typeof value === 'object') {
			value.transpile(code, transforms);
		}
	}
};

function extractNames(node) {
	var names = [];
	extractors[node.type](names, node);
	return names;
}

var extractors = {
	Identifier: function Identifier(names, node) {
		names.push(node);
	},

	ObjectPattern: function ObjectPattern(names, node) {
		for (var i = 0, list = node.properties; i < list.length; i += 1) {
			var prop = list[i];

			extractors[prop.type](names, prop);
		}
	},

	Property: function Property(names, node) {
		extractors[node.value.type](names, node.value);
	},

	ArrayPattern: function ArrayPattern(names, node) {
		for (var i = 0, list = node.elements; i < list.length; i += 1) {
			var element = list[i];

			if (element) { extractors[element.type](names, element); }
		}
	},

	RestElement: function RestElement(names, node) {
		extractors[node.argument.type](names, node.argument);
	},

	AssignmentPattern: function AssignmentPattern(names, node) {
		extractors[node.left.type](names, node.left);
	}
};

var reserved = Object.create(null);
'do if in for let new try var case else enum eval null this true void with await break catch class const false super throw while yield delete export import public return static switch typeof default extends finally package private continue debugger function arguments interface protected implements instanceof'
	.split(' ')
	.forEach(function (word) { return (reserved[word] = true); });

function Scope(options) {
	options = options || {};

	this.parent = options.parent;
	this.isBlockScope = !!options.block;
	this.createDeclarationCallback = options.declare;

	var scope = this;
	while (scope.isBlockScope) { scope = scope.parent; }
	this.functionScope = scope;

	this.identifiers = [];
	this.declarations = Object.create(null);
	this.references = Object.create(null);
	this.blockScopedDeclarations = this.isBlockScope ? null : Object.create(null);
	this.aliases = Object.create(null);
}

Scope.prototype = {
	addDeclaration: function addDeclaration(node, kind) {
		var this$1 = this;

		for (var i = 0, list = extractNames(node); i < list.length; i += 1) {
			var identifier = list[i];

			var name = identifier.name;

			var declaration = { name: name, node: identifier, kind: kind, instances: [] };
			this$1.declarations[name] = declaration;

			if (this$1.isBlockScope) {
				if (!this$1.functionScope.blockScopedDeclarations[name])
					{ this$1.functionScope.blockScopedDeclarations[name] = []; }
				this$1.functionScope.blockScopedDeclarations[name].push(declaration);
			}
		}
	},

	addReference: function addReference(identifier) {
		if (this.consolidated) {
			this.consolidateReference(identifier);
		} else {
			this.identifiers.push(identifier);
		}
	},

	consolidate: function consolidate() {
		var this$1 = this;

		for (var i = 0; i < this.identifiers.length; i += 1) {
			// we might push to the array during consolidation, so don't cache length
			var identifier = this$1.identifiers[i];
			this$1.consolidateReference(identifier);
		}

		this.consolidated = true; // TODO understand why this is necessary... seems bad
	},

	consolidateReference: function consolidateReference(identifier) {
		var declaration = this.declarations[identifier.name];
		if (declaration) {
			declaration.instances.push(identifier);
		} else {
			this.references[identifier.name] = true;
			if (this.parent) { this.parent.addReference(identifier); }
		}
	},

	contains: function contains(name) {
		return (
			this.declarations[name] ||
			(this.parent ? this.parent.contains(name) : false)
		);
	},

	createIdentifier: function createIdentifier(base) {
		if (typeof base === 'number') { base = base.toString(); }

		base = base
			.replace(/\s/g, '')
			.replace(/\[([^\]]+)\]/g, '_$1')
			.replace(/[^a-zA-Z0-9_$]/g, '_')
			.replace(/_{2,}/, '_');

		var name = base;
		var counter = 1;

		while (
			this.declarations[name] ||
			this.references[name] ||
			this.aliases[name] ||
			name in reserved
		) {
			name = base + "$" + (counter++);
		}

		this.aliases[name] = true;
		return name;
	},

	createDeclaration: function createDeclaration(base) {
		var id = this.createIdentifier(base);
		this.createDeclarationCallback(id);
		return id;
	},

	findDeclaration: function findDeclaration(name) {
		return (
			this.declarations[name] ||
			(this.parent && this.parent.findDeclaration(name))
		);
	},

	// Sometimes, block scope declarations change name during transpilation
	resolveName: function resolveName(name) {
		var declaration = this.findDeclaration(name);
		return declaration ? declaration.name : name;
	}
};

function locate(source, index) {
	var lines = source.split('\n');
	var len = lines.length;

	var lineStart = 0;
	var i;

	for (i = 0; i < len; i += 1) {
		var line = lines[i];
		var lineEnd = lineStart + line.length + 1; // +1 for newline

		if (lineEnd > index) {
			return { line: i + 1, column: index - lineStart, char: i };
		}

		lineStart = lineEnd;
	}

	throw new Error('Could not determine location of character');
}

function pad(num, len) {
	var result = String(num);
	return result + repeat(' ', len - result.length);
}

function repeat(str, times) {
	var result = '';
	while (times--) { result += str; }
	return result;
}

function getSnippet(source, loc, length) {
	if ( length === void 0 ) length = 1;

	var first = Math.max(loc.line - 5, 0);
	var last = loc.line;

	var numDigits = String(last).length;

	var lines = source.split('\n').slice(first, last);

	var lastLine = lines[lines.length - 1];
	var offset = lastLine.slice(0, loc.column).replace(/\t/g, '  ').length;

	var snippet = lines
		.map(function (line, i) { return ((pad(i + first + 1, numDigits)) + " : " + (line.replace(/\t/g, '  '))); })
		.join('\n');

	snippet += '\n' + repeat(' ', numDigits + 3 + offset) + repeat('^', length);

	return snippet;
}

var CompileError = (function (Error) {
	function CompileError(message, node) {
		Error.call(this, message);

		this.name = 'CompileError';
		if (!node) {
			return;
		}

		var source = node.program.magicString.original;
		var loc = locate(source, node.start);

		this.message = message + " (" + (loc.line) + ":" + (loc.column) + ")";

		this.stack = new Error().stack.replace(
			new RegExp((".+new " + (this.name) + ".+\\n"), 'm'),
			''
		);

		this.loc = loc;
		this.snippet = getSnippet(source, loc, node.end - node.start);
	}

	if ( Error ) CompileError.__proto__ = Error;
	CompileError.prototype = Object.create( Error && Error.prototype );
	CompileError.prototype.constructor = CompileError;

	CompileError.prototype.toString = function toString () {
		return ((this.name) + ": " + (this.message) + "\n" + (this.snippet));
	};

	return CompileError;
}(Error));

function findIndex(array, fn) {
	for (var i = 0; i < array.length; i += 1) {
		if (fn(array[i], i)) { return i; }
	}

	return -1;
}

var handlers = {
	Identifier: destructureIdentifier,
	AssignmentPattern: destructureAssignmentPattern,
	ArrayPattern: destructureArrayPattern,
	ObjectPattern: destructureObjectPattern
};

function destructure(
	code,
	createIdentifier,
	resolveName,
	node,
	ref,
	inline,
	statementGenerators
) {
	handlers[node.type](code, createIdentifier, resolveName, node, ref, inline, statementGenerators);
}

function destructureIdentifier(
	code,
	createIdentifier,
	resolveName,
	node,
	ref,
	inline,
	statementGenerators
) {
	statementGenerators.push(function (start, prefix, suffix) {
		code.overwrite(node.start, node.end, (inline ? prefix : (prefix + "var ")) + resolveName(node) + " = " + ref + suffix);
		code.move(node.start, node.end, start);
	});
}

function destructureMemberExpression(
	code,
	createIdentifier,
	resolveName,
	node,
	ref,
	inline,
	statementGenerators
) {
	statementGenerators.push(function (start, prefix, suffix) {
		code.prependRight(node.start, inline ? prefix : (prefix + "var "));
		code.appendLeft(node.end, (" = " + ref + suffix));
		code.move(node.start, node.end, start);
	});
}

function destructureAssignmentPattern(
	code,
	createIdentifier,
	resolveName,
	node,
	ref,
	inline,
	statementGenerators
) {
	var isIdentifier = node.left.type === 'Identifier';
	var name = isIdentifier ? node.left.name : ref;

	if (!inline) {
		statementGenerators.push(function (start, prefix, suffix) {
			code.prependRight(
				node.left.end,
				(prefix + "if ( " + name + " === void 0 ) " + name)
			);
			code.move(node.left.end, node.right.end, start);
			code.appendLeft(node.right.end, suffix);
		});
	}

	if (!isIdentifier) {
		destructure(code, createIdentifier, resolveName, node.left, ref, inline, statementGenerators);
	}
}

function destructureArrayPattern(
	code,
	createIdentifier,
	resolveName,
	node,
	ref,
	inline,
	statementGenerators
) {
	var c = node.start;

	node.elements.forEach(function (element, i) {
		if (!element) { return; }

		if (element.type === 'RestElement') {
			handleProperty(
				code,
				createIdentifier,
				resolveName,
				c,
				element.argument,
				(ref + ".slice(" + i + ")"),
				inline,
				statementGenerators
			);
		} else {
			handleProperty(
				code,
				createIdentifier,
				resolveName,
				c,
				element,
				(ref + "[" + i + "]"),
				inline,
				statementGenerators
			);
		}
		c = element.end;
	});

	code.remove(c, node.end);
}

function destructureObjectPattern(
	code,
	createIdentifier,
	resolveName,
	node,
	ref,
	inline,
	statementGenerators
) {
	var this$1 = this;

	var c = node.start;

	var nonRestKeys = [];
	node.properties.forEach(function (prop) {
		var value;
		var content;
		if (prop.type === 'Property') {
			var isComputedKey = prop.computed || prop.key.type !== 'Identifier';
			var key = isComputedKey
				? code.slice(prop.key.start, prop.key.end)
				: prop.key.name;
			value = isComputedKey ? (ref + "[" + key + "]") : (ref + "." + key);
			content = prop.value;
			nonRestKeys.push(isComputedKey ? key : '"' + key + '"');
		} else if (prop.type === 'RestElement') {
			content = prop.argument;
			value = createIdentifier('rest');
			statementGenerators.push(function (start, prefix, suffix) {
				var helper = prop.program.getObjectWithoutPropertiesHelper(code);
				code.overwrite(
					prop.start,
					(c = prop.argument.start),
					(inline ? prefix : (prefix + "var ")) + value + " = " + helper + "( " + ref + ", [" + (nonRestKeys.join(', ')) + "] )" + suffix
				);
				code.move(prop.start, c, start);
			});
		} else {
			throw new CompileError(
				this$1,
				("Unexpected node of type " + (prop.type) + " in object pattern")
			);
		}
		handleProperty(code, createIdentifier, resolveName, c, content, value, inline, statementGenerators);
		c = prop.end;
	});

	code.remove(c, node.end);
}

function handleProperty(
	code,
	createIdentifier,
	resolveName,
	c,
	node,
	value,
	inline,
	statementGenerators
) {
	switch (node.type) {
		case 'Identifier': {
			code.remove(c, node.start);
			destructureIdentifier(
				code,
				createIdentifier,
				resolveName,
				node,
				value,
				inline,
				statementGenerators
			);
			break;
		}

		case 'MemberExpression':
			code.remove(c, node.start);
			destructureMemberExpression(
				code,
				createIdentifier,
				resolveName,
				node,
				value,
				true,
				statementGenerators
			);
			break;

		case 'AssignmentPattern': {
			var name;

			var isIdentifier = node.left.type === 'Identifier';

			if (isIdentifier) {
				name = resolveName(node.left);
			} else {
				name = createIdentifier(value);
			}

			statementGenerators.push(function (start, prefix, suffix) {
				if (inline) {
					code.prependRight(
						node.right.start,
						(name + " = " + value + ", " + name + " = " + name + " === void 0 ? ")
					);
					code.appendLeft(node.right.end, (" : " + name + suffix));
				} else {
					code.prependRight(
						node.right.start,
						(prefix + "var " + name + " = " + value + "; if ( " + name + " === void 0 ) " + name + " = ")
					);
					code.appendLeft(node.right.end, suffix);
				}

				code.move(node.right.start, node.right.end, start);
			});

			if (isIdentifier) {
				code.remove(c, node.right.start);
			} else {
				code.remove(c, node.left.start);
				code.remove(node.left.end, node.right.start);
				handleProperty(
					code,
					createIdentifier,
					resolveName,
					c,
					node.left,
					name,
					inline,
					statementGenerators
				);
			}

			break;
		}

		case 'ObjectPattern': {
			code.remove(c, (c = node.start));

			var ref = value;
			if (node.properties.length > 1) {
				ref = createIdentifier(value);

				statementGenerators.push(function (start, prefix, suffix) {
					// this feels a tiny bit hacky, but we can't do a
					// straightforward appendLeft and keep correct order...
					code.prependRight(node.start, (inline ? '' : (prefix + "var ")) + ref + " = ");
					code.overwrite(node.start, (c = node.start + 1), value);
					code.appendLeft(c, suffix);

					code.overwrite(
						node.start,
						(c = node.start + 1),
						(inline ? '' : (prefix + "var ")) + ref + " = " + value + suffix
					);
					code.move(node.start, c, start);
				});
			}

			destructureObjectPattern(
				code,
				createIdentifier,
				resolveName,
				node,
				ref,
				inline,
				statementGenerators
			);

			break;
		}

		case 'ArrayPattern': {
			code.remove(c, (c = node.start));

			if (node.elements.filter(Boolean).length > 1) {
				var ref$1 = createIdentifier(value);

				statementGenerators.push(function (start, prefix, suffix) {
					code.prependRight(node.start, (inline ? '' : (prefix + "var ")) + ref$1 + " = ");
					code.overwrite(node.start, (c = node.start + 1), value, {
						contentOnly: true
					});
					code.appendLeft(c, suffix);

					code.move(node.start, c, start);
				});

				node.elements.forEach(function (element, i) {
					if (!element) { return; }

					if (element.type === 'RestElement') {
						handleProperty(
							code,
							createIdentifier,
							resolveName,
							c,
							element.argument,
							(ref$1 + ".slice(" + i + ")"),
							inline,
							statementGenerators
						);
					} else {
						handleProperty(
							code,
							createIdentifier,
							resolveName,
							c,
							element,
							(ref$1 + "[" + i + "]"),
							inline,
							statementGenerators
						);
					}
					c = element.end;
				});
			} else {
				var index = findIndex(node.elements, Boolean);
				var element = node.elements[index];
				if (element.type === 'RestElement') {
					handleProperty(
						code,
						createIdentifier,
						resolveName,
						c,
						element.argument,
						(value + ".slice(" + index + ")"),
						inline,
						statementGenerators
					);
				} else {
					handleProperty(
						code,
						createIdentifier,
						resolveName,
						c,
						element,
						(value + "[" + index + "]"),
						inline,
						statementGenerators
					);
				}
				c = element.end;
			}

			code.remove(c, node.end);
			break;
		}

		default: {
			throw new Error(("Unexpected node type in destructuring (" + (node.type) + ")"));
		}
	}
}

function isUseStrict(node) {
	if (!node) { return false; }
	if (node.type !== 'ExpressionStatement') { return false; }
	if (node.expression.type !== 'Literal') { return false; }
	return node.expression.value === 'use strict';
}

var BlockStatement = (function (Node$$1) {
	function BlockStatement () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) BlockStatement.__proto__ = Node$$1;
	BlockStatement.prototype = Object.create( Node$$1 && Node$$1.prototype );
	BlockStatement.prototype.constructor = BlockStatement;

	BlockStatement.prototype.createScope = function createScope () {
		var this$1 = this;

		this.parentIsFunction = /Function/.test(this.parent.type);
		this.isFunctionBlock = this.parentIsFunction || this.parent.type === 'Root';
		this.scope = new Scope({
			block: !this.isFunctionBlock,
			parent: this.parent.findScope(false),
			declare: function (id) { return this$1.createdDeclarations.push(id); }
		});

		if (this.parentIsFunction) {
			this.parent.params.forEach(function (node) {
				this$1.scope.addDeclaration(node, 'param');
			});
		}
	};

	BlockStatement.prototype.initialise = function initialise (transforms) {
		this.thisAlias = null;
		this.argumentsAlias = null;
		this.defaultParameters = [];
		this.createdDeclarations = [];

		// normally the scope gets created here, during initialisation,
		// but in some cases (e.g. `for` statements), we need to create
		// the scope early, as it pertains to both the init block and
		// the body of the statement
		if (!this.scope) { this.createScope(); }

		this.body.forEach(function (node) { return node.initialise(transforms); });

		this.scope.consolidate();
	};

	BlockStatement.prototype.findLexicalBoundary = function findLexicalBoundary () {
		if (this.type === 'Program') { return this; }
		if (/^Function/.test(this.parent.type)) { return this; }

		return this.parent.findLexicalBoundary();
	};

	BlockStatement.prototype.findScope = function findScope (functionScope) {
		if (functionScope && !this.isFunctionBlock)
			{ return this.parent.findScope(functionScope); }
		return this.scope;
	};

	BlockStatement.prototype.getArgumentsAlias = function getArgumentsAlias () {
		if (!this.argumentsAlias) {
			this.argumentsAlias = this.scope.createIdentifier('arguments');
		}

		return this.argumentsAlias;
	};

	BlockStatement.prototype.getArgumentsArrayAlias = function getArgumentsArrayAlias () {
		if (!this.argumentsArrayAlias) {
			this.argumentsArrayAlias = this.scope.createIdentifier('argsArray');
		}

		return this.argumentsArrayAlias;
	};

	BlockStatement.prototype.getThisAlias = function getThisAlias () {
		if (!this.thisAlias) {
			this.thisAlias = this.scope.createIdentifier('this');
		}

		return this.thisAlias;
	};

	BlockStatement.prototype.getIndentation = function getIndentation () {
		var this$1 = this;

		if (this.indentation === undefined) {
			var source = this.program.magicString.original;

			var useOuter = this.synthetic || !this.body.length;
			var c = useOuter ? this.start : this.body[0].start;

			while (c && source[c] !== '\n') { c -= 1; }

			this.indentation = '';

			// eslint-disable-next-line no-constant-condition
			while (true) {
				c += 1;
				var char = source[c];

				if (char !== ' ' && char !== '\t') { break; }

				this$1.indentation += char;
			}

			var indentString = this.program.magicString.getIndentString();

			// account for dedented class constructors
			var parent = this.parent;
			while (parent) {
				if (parent.kind === 'constructor' && !parent.parent.parent.superClass) {
					this$1.indentation = this$1.indentation.replace(indentString, '');
				}

				parent = parent.parent;
			}

			if (useOuter) { this.indentation += indentString; }
		}

		return this.indentation;
	};

	BlockStatement.prototype.transpile = function transpile (code, transforms) {
		var this$1 = this;

		var indentation = this.getIndentation();

		var introStatementGenerators = [];

		if (this.argumentsAlias) {
			introStatementGenerators.push(function (start, prefix, suffix) {
				var assignment = prefix + "var " + (this$1.argumentsAlias) + " = arguments" + suffix;
				code.appendLeft(start, assignment);
			});
		}

		if (this.thisAlias) {
			introStatementGenerators.push(function (start, prefix, suffix) {
				var assignment = prefix + "var " + (this$1.thisAlias) + " = this" + suffix;
				code.appendLeft(start, assignment);
			});
		}

		if (this.argumentsArrayAlias) {
			introStatementGenerators.push(function (start, prefix, suffix) {
				var i = this$1.scope.createIdentifier('i');
				var assignment = prefix + "var " + i + " = arguments.length, " + (this$1.argumentsArrayAlias) + " = Array(" + i + ");\n" + indentation + "while ( " + i + "-- ) " + (this$1.argumentsArrayAlias) + "[" + i + "] = arguments[" + i + "]" + suffix;
				code.appendLeft(start, assignment);
			});
		}

		if (/Function/.test(this.parent.type)) {
			this.transpileParameters(
				this.parent.params,
				code,
				transforms,
				indentation,
				introStatementGenerators
			);
		} else if ('CatchClause' === this.parent.type) {
			this.transpileParameters(
				[this.parent.param],
				code,
				transforms,
				indentation,
				introStatementGenerators
			);
		}

		if (transforms.letConst && this.isFunctionBlock) {
			this.transpileBlockScopedIdentifiers(code);
		}

		Node$$1.prototype.transpile.call(this, code, transforms);

		if (this.createdDeclarations.length) {
			introStatementGenerators.push(function (start, prefix, suffix) {
				var assignment = prefix + "var " + (this$1.createdDeclarations.join(', ')) + suffix;
				code.appendLeft(start, assignment);
			});
		}

		if (this.synthetic) {
			if (this.parent.type === 'ArrowFunctionExpression') {
				var expr = this.body[0];

				if (introStatementGenerators.length) {
					code
						.appendLeft(this.start, "{")
						.prependRight(this.end, ((this.parent.getIndentation()) + "}"));

					code.prependRight(expr.start, ("\n" + indentation + "return "));
					code.appendLeft(expr.end, ";\n");
				} else if (transforms.arrow) {
					code.prependRight(expr.start, "{ return ");
					code.appendLeft(expr.end, "; }");
				}
			} else if (introStatementGenerators.length) {
				code.prependRight(this.start, "{").appendLeft(this.end, "}");
			}
		}

		var start;
		if (isUseStrict(this.body[0])) {
			start = this.body[0].end;
		} else if (this.synthetic || this.parent.type === 'Root') {
			start = this.start;
		} else {
			start = this.start + 1;
		}

		var prefix = "\n" + indentation;
		var suffix = ';';
		introStatementGenerators.forEach(function (fn, i) {
			if (i === introStatementGenerators.length - 1) { suffix = ";\n"; }
			fn(start, prefix, suffix);
		});
	};

	BlockStatement.prototype.transpileParameters = function transpileParameters (params, code, transforms, indentation, introStatementGenerators) {
		var this$1 = this;

		params.forEach(function (param) {
			if (
				param.type === 'AssignmentPattern' &&
				param.left.type === 'Identifier'
			) {
				if (transforms.defaultParameter) {
					introStatementGenerators.push(function (start, prefix, suffix) {
						var lhs = prefix + "if ( " + (param.left.name) + " === void 0 ) " + (param.left.name);

						code
							.prependRight(param.left.end, lhs)
							.move(param.left.end, param.right.end, start)
							.appendLeft(param.right.end, suffix);
					});
				}
			} else if (param.type === 'RestElement') {
				if (transforms.spreadRest) {
					introStatementGenerators.push(function (start, prefix, suffix) {
						var penultimateParam = params[params.length - 2];

						if (penultimateParam) {
							code.remove(
								penultimateParam ? penultimateParam.end : param.start,
								param.end
							);
						} else {
							var start$1 = param.start,
								end = param.end; // TODO https://gitlab.com/Rich-Harris/buble/issues/8

							while (/\s/.test(code.original[start$1 - 1])) { start$1 -= 1; }
							while (/\s/.test(code.original[end])) { end += 1; }

							code.remove(start$1, end);
						}

						var name = param.argument.name;
						var len = this$1.scope.createIdentifier('len');
						var count = params.length - 1;

						if (count) {
							code.prependRight(
								start,
								(prefix + "var " + name + " = [], " + len + " = arguments.length - " + count + ";\n" + indentation + "while ( " + len + "-- > 0 ) " + name + "[ " + len + " ] = arguments[ " + len + " + " + count + " ]" + suffix)
							);
						} else {
							code.prependRight(
								start,
								(prefix + "var " + name + " = [], " + len + " = arguments.length;\n" + indentation + "while ( " + len + "-- ) " + name + "[ " + len + " ] = arguments[ " + len + " ]" + suffix)
							);
						}
					});
				}
			} else if (param.type !== 'Identifier') {
				if (transforms.parameterDestructuring) {
					var ref = this$1.scope.createIdentifier('ref');
					destructure(
						code,
						function (id) { return this$1.scope.createIdentifier(id); },
						function (ref) {
							var name = ref.name;

							return this$1.scope.resolveName(name);
					},
						param,
						ref,
						false,
						introStatementGenerators
					);
					code.prependRight(param.start, ref);
				}
			}
		});
	};

	BlockStatement.prototype.transpileBlockScopedIdentifiers = function transpileBlockScopedIdentifiers (code) {
		var this$1 = this;

		Object.keys(this.scope.blockScopedDeclarations).forEach(function (name) {
			var declarations = this$1.scope.blockScopedDeclarations[name];

			for (var i$2 = 0, list$2 = declarations; i$2 < list$2.length; i$2 += 1) {
				var declaration = list$2[i$2];

				var cont = false; // TODO implement proper continue...

				if (declaration.kind === 'for.let') {
					// special case
					var forStatement = declaration.node.findNearest('ForStatement');

					if (forStatement.shouldRewriteAsFunction) {
						var outerAlias = this$1.scope.createIdentifier(name);
						var innerAlias = forStatement.reassigned[name]
							? this$1.scope.createIdentifier(name)
							: name;

						declaration.name = outerAlias;
						code.overwrite(
							declaration.node.start,
							declaration.node.end,
							outerAlias,
							{ storeName: true }
						);

						forStatement.aliases[name] = {
							outer: outerAlias,
							inner: innerAlias
						};

						for (var i = 0, list = declaration.instances; i < list.length; i += 1) {
							var identifier = list[i];

							var alias = forStatement.body.contains(identifier)
								? innerAlias
								: outerAlias;

							if (name !== alias) {
								code.overwrite(identifier.start, identifier.end, alias, {
									storeName: true
								});
							}
						}

						cont = true;
					}
				}

				if (!cont) {
					var alias$1 = this$1.scope.createIdentifier(name);

					if (name !== alias$1) {
						declaration.name = alias$1;
						code.overwrite(
							declaration.node.start,
							declaration.node.end,
							alias$1,
							{ storeName: true }
						);

						for (var i$1 = 0, list$1 = declaration.instances; i$1 < list$1.length; i$1 += 1) {
							var identifier$1 = list$1[i$1];

							identifier$1.rewritten = true;
							code.overwrite(identifier$1.start, identifier$1.end, alias$1, {
								storeName: true
							});
						}
					}
				}
			}
		});
	};

	return BlockStatement;
}(Node));

function isArguments(node) {
	return node.type === 'Identifier' && node.name === 'arguments';
}

function spread(
	code,
	elements,
	start,
	argumentsArrayAlias,
	isNew
) {
	var i = elements.length;
	var firstSpreadIndex = -1;

	while (i--) {
		var element$1 = elements[i];
		if (element$1 && element$1.type === 'SpreadElement') {
			if (isArguments(element$1.argument)) {
				code.overwrite(
					element$1.argument.start,
					element$1.argument.end,
					argumentsArrayAlias
				);
			}

			firstSpreadIndex = i;
		}
	}

	if (firstSpreadIndex === -1) { return false; } // false indicates no spread elements

	if (isNew) {
		for (i = 0; i < elements.length; i += 1) {
			var element$2 = elements[i];
			if (element$2.type === 'SpreadElement') {
				code.remove(element$2.start, element$2.argument.start);
			} else {
				code.prependRight(element$2.start, '[');
				code.prependRight(element$2.end, ']');
			}
		}

		return true; // true indicates some spread elements
	}

	var element = elements[firstSpreadIndex];
	var previousElement = elements[firstSpreadIndex - 1];

	if (!previousElement) {
		code.remove(start, element.start);
		code.overwrite(element.end, elements[1].start, '.concat( ');
	} else {
		code.overwrite(previousElement.end, element.start, ' ].concat( ');
	}

	for (i = firstSpreadIndex; i < elements.length; i += 1) {
		element = elements[i];

		if (element) {
			if (element.type === 'SpreadElement') {
				code.remove(element.start, element.argument.start);
			} else {
				code.appendLeft(element.start, '[');
				code.appendLeft(element.end, ']');
			}
		}
	}

	return true; // true indicates some spread elements
}

var ArrayExpression = (function (Node$$1) {
	function ArrayExpression () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) ArrayExpression.__proto__ = Node$$1;
	ArrayExpression.prototype = Object.create( Node$$1 && Node$$1.prototype );
	ArrayExpression.prototype.constructor = ArrayExpression;

	ArrayExpression.prototype.initialise = function initialise (transforms) {
		var this$1 = this;

		if (transforms.spreadRest && this.elements.length) {
			var lexicalBoundary = this.findLexicalBoundary();

			var i = this.elements.length;
			while (i--) {
				var element = this$1.elements[i];
				if (
					element &&
					element.type === 'SpreadElement' &&
					isArguments(element.argument)
				) {
					this$1.argumentsArrayAlias = lexicalBoundary.getArgumentsArrayAlias();
				}
			}
		}

		Node$$1.prototype.initialise.call(this, transforms);
	};

	ArrayExpression.prototype.transpile = function transpile (code, transforms) {
		Node$$1.prototype.transpile.call(this, code, transforms);

		if (transforms.spreadRest) {
			// erase trailing comma after last array element if not an array hole
			if (this.elements.length) {
				var lastElement = this.elements[this.elements.length - 1];
				if (
					lastElement &&
					/\s*,/.test(code.original.slice(lastElement.end, this.end))
				) {
					code.overwrite(lastElement.end, this.end - 1, ' ');
				}
			}

			if (this.elements.length === 1) {
				var element = this.elements[0];

				if (element && element.type === 'SpreadElement') {
					// special case – [ ...arguments ]
					if (isArguments(element.argument)) {
						code.overwrite(
							this.start,
							this.end,
							("[].concat( " + (this.argumentsArrayAlias) + " )")
						); // TODO if this is the only use of argsArray, don't bother concating
					} else {
						code.overwrite(this.start, element.argument.start, '[].concat( ');
						code.overwrite(element.end, this.end, ' )');
					}
				}
			} else {
				var hasSpreadElements = spread(
					code,
					this.elements,
					this.start,
					this.argumentsArrayAlias
				);

				if (hasSpreadElements) {
					code.overwrite(this.end - 1, this.end, ')');
				}
			}
		}
	};

	return ArrayExpression;
}(Node));

function removeTrailingComma(code, c) {
	while (code.original[c] !== ')') {
		if (code.original[c] === ',') {
			code.remove(c, c + 1);
			return;
		}

		if (code.original[c] === '/') {
			c = code.original.indexOf(code.original[c + 1] === '/' ? '\n' : '*/', c) + 1;
		}
		c += 1;
	}
}

var ArrowFunctionExpression = (function (Node$$1) {
	function ArrowFunctionExpression () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) ArrowFunctionExpression.__proto__ = Node$$1;
	ArrowFunctionExpression.prototype = Object.create( Node$$1 && Node$$1.prototype );
	ArrowFunctionExpression.prototype.constructor = ArrowFunctionExpression;

	ArrowFunctionExpression.prototype.initialise = function initialise (transforms) {
		this.body.createScope();
		Node$$1.prototype.initialise.call(this, transforms);
	};

	ArrowFunctionExpression.prototype.transpile = function transpile (code, transforms) {
		var naked = this.params.length === 1 && this.start === this.params[0].start;

		if (transforms.arrow || this.needsArguments(transforms)) {
			// remove arrow
			var charIndex = this.body.start;
			while (code.original[charIndex] !== '=') {
				charIndex -= 1;
			}
			code.remove(charIndex, this.body.start);

			Node$$1.prototype.transpile.call(this, code, transforms);

			// wrap naked parameter
			if (naked) {
				code.prependRight(this.params[0].start, '(');
				code.appendLeft(this.params[0].end, ')');
			}

			// add function
			if (this.parent && this.parent.type === 'ExpressionStatement') {
				// standalone expression statement
				code.prependRight(this.start, '!function');
			} else {
				code.prependRight(this.start, 'function ');
			}
		} else {
			Node$$1.prototype.transpile.call(this, code, transforms);
		}

		if (transforms.trailingFunctionCommas && this.params.length && !naked) {
			removeTrailingComma(code, this.params[this.params.length - 1].end);
		}
	};

	// Returns whether any transforms that will happen use `arguments`
	ArrowFunctionExpression.prototype.needsArguments = function needsArguments (transforms) {
		return (
			transforms.spreadRest &&
			this.params.filter(function (param) { return param.type === 'RestElement'; }).length > 0
		);
	};

	return ArrowFunctionExpression;
}(Node));

function checkConst(identifier, scope) {
	var declaration = scope.findDeclaration(identifier.name);
	if (declaration && declaration.kind === 'const') {
		throw new CompileError(((identifier.name) + " is read-only"), identifier);
	}
}

var AssignmentExpression = (function (Node$$1) {
	function AssignmentExpression () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) AssignmentExpression.__proto__ = Node$$1;
	AssignmentExpression.prototype = Object.create( Node$$1 && Node$$1.prototype );
	AssignmentExpression.prototype.constructor = AssignmentExpression;

	AssignmentExpression.prototype.initialise = function initialise (transforms) {
		if (this.left.type === 'Identifier') {
			var declaration = this.findScope(false).findDeclaration(this.left.name);
			// special case – https://gitlab.com/Rich-Harris/buble/issues/11
			var statement = declaration && declaration.node.ancestor(3);
			if (
				statement &&
				statement.type === 'ForStatement' &&
				statement.body.contains(this)
			) {
				statement.reassigned[this.left.name] = true;
			}
		}

		Node$$1.prototype.initialise.call(this, transforms);
	};

	AssignmentExpression.prototype.transpile = function transpile (code, transforms) {
		if (this.left.type === 'Identifier') {
			// Do this check after everything has been initialized to find
			// shadowing declarations after this expression
			checkConst(this.left, this.findScope(false));
		}

		if (this.operator === '**=' && transforms.exponentiation) {
			this.transpileExponentiation(code, transforms);
		} else if (/Pattern/.test(this.left.type) && transforms.destructuring) {
			this.transpileDestructuring(code, transforms);
		}

		Node$$1.prototype.transpile.call(this, code, transforms);
	};

	AssignmentExpression.prototype.transpileDestructuring = function transpileDestructuring (code) {
		var this$1 = this;

		var writeScope = this.findScope(true);
		var lookupScope = this.findScope(false);
		var assign = writeScope.createDeclaration('assign');
		code.appendRight(this.left.end, ("(" + assign));

		code.appendLeft(this.right.end, ', ');
		var statementGenerators = [];
		destructure(
			code,
			function (id) { return writeScope.createDeclaration(id); },
			function (node) {
				var name = lookupScope.resolveName(node.name);
				checkConst(node, lookupScope);
				return name;
			},
			this.left,
			assign,
			true,
			statementGenerators
		);

		var suffix = ', ';
		statementGenerators.forEach(function (fn, j) {
			if (j === statementGenerators.length - 1) {
				suffix = '';
			}

			fn(this$1.end, '', suffix);
		});

		if (this.unparenthesizedParent().type === 'ExpressionStatement') {
			// no rvalue needed for expression statement
			code.prependRight(this.end, ")");
		} else {
			// destructuring is part of an expression - need an rvalue
			code.appendRight(this.end, (", " + assign + ")"));
		}
	};

	AssignmentExpression.prototype.transpileExponentiation = function transpileExponentiation (code) {
		var scope = this.findScope(false);

		// first, the easy part – `**=` -> `=`
		var charIndex = this.left.end;
		while (code.original[charIndex] !== '*') { charIndex += 1; }
		code.remove(charIndex, charIndex + 2);

		// how we do the next part depends on a number of factors – whether
		// this is a top-level statement, and whether we're updating a
		// simple or complex reference
		var base;

		var left = this.left.unparenthesize();

		if (left.type === 'Identifier') {
			base = scope.resolveName(left.name);
		} else if (left.type === 'MemberExpression') {
			var object;
			var needsObjectVar = false;
			var property;
			var needsPropertyVar = false;

			var statement = this.findNearest(/(?:Statement|Declaration)$/);
			var i0 = statement.getIndentation();

			if (left.property.type === 'Identifier') {
				property = left.computed
					? scope.resolveName(left.property.name)
					: left.property.name;
			} else {
				property = scope.createDeclaration('property');
				needsPropertyVar = true;
			}

			if (left.object.type === 'Identifier') {
				object = scope.resolveName(left.object.name);
			} else {
				object = scope.createDeclaration('object');
				needsObjectVar = true;
			}

			if (left.start === statement.start) {
				if (needsObjectVar && needsPropertyVar) {
					code.prependRight(statement.start, (object + " = "));
					code.overwrite(
						left.object.end,
						left.property.start,
						(";\n" + i0 + property + " = ")
					);
					code.overwrite(
						left.property.end,
						left.end,
						(";\n" + i0 + object + "[" + property + "]")
					);
				} else if (needsObjectVar) {
					code.prependRight(statement.start, (object + " = "));
					code.appendLeft(left.object.end, (";\n" + i0));
					code.appendLeft(left.object.end, object);
				} else if (needsPropertyVar) {
					code.prependRight(left.property.start, (property + " = "));
					code.appendLeft(left.property.end, (";\n" + i0));
					code.move(left.property.start, left.property.end, this.start);

					code.appendLeft(left.object.end, ("[" + property + "]"));
					code.remove(left.object.end, left.property.start);
					code.remove(left.property.end, left.end);
				}
			} else {
				if (needsObjectVar && needsPropertyVar) {
					code.prependRight(left.start, ("( " + object + " = "));
					code.overwrite(
						left.object.end,
						left.property.start,
						(", " + property + " = ")
					);
					code.overwrite(
						left.property.end,
						left.end,
						(", " + object + "[" + property + "]")
					);
				} else if (needsObjectVar) {
					code.prependRight(left.start, ("( " + object + " = "));
					code.appendLeft(left.object.end, (", " + object));
				} else if (needsPropertyVar) {
					code.prependRight(left.property.start, ("( " + property + " = "));
					code.appendLeft(left.property.end, ", ");
					code.move(left.property.start, left.property.end, left.start);

					code.overwrite(left.object.end, left.property.start, ("[" + property + "]"));
					code.remove(left.property.end, left.end);
				}

				if (needsPropertyVar) {
					code.appendLeft(this.end, " )");
				}
			}

			base =
				object +
				(left.computed || needsPropertyVar ? ("[" + property + "]") : ("." + property));
		}

		code.prependRight(this.right.start, ("Math.pow( " + base + ", "));
		code.appendLeft(this.right.end, " )");
	};

	return AssignmentExpression;
}(Node));

var BinaryExpression = (function (Node$$1) {
	function BinaryExpression () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) BinaryExpression.__proto__ = Node$$1;
	BinaryExpression.prototype = Object.create( Node$$1 && Node$$1.prototype );
	BinaryExpression.prototype.constructor = BinaryExpression;

	BinaryExpression.prototype.transpile = function transpile (code, transforms) {
		if (this.operator === '**' && transforms.exponentiation) {
			code.prependRight(this.start, "Math.pow( ");
			code.overwrite(this.left.end, this.right.start, ", ");
			code.appendLeft(this.end, " )");
		}
		Node$$1.prototype.transpile.call(this, code, transforms);
	};

	return BinaryExpression;
}(Node));

var loopStatement = /(?:For(?:In|Of)?|While)Statement/;

var BreakStatement = (function (Node$$1) {
	function BreakStatement () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) BreakStatement.__proto__ = Node$$1;
	BreakStatement.prototype = Object.create( Node$$1 && Node$$1.prototype );
	BreakStatement.prototype.constructor = BreakStatement;

	BreakStatement.prototype.initialise = function initialise () {
		var loop = this.findNearest(loopStatement);
		var switchCase = this.findNearest('SwitchCase');

		if (loop && (!switchCase || loop.depth > switchCase.depth)) {
			loop.canBreak = true;
			this.loop = loop;
		}
	};

	BreakStatement.prototype.transpile = function transpile (code) {
		if (this.loop && this.loop.shouldRewriteAsFunction) {
			if (this.label)
				{ throw new CompileError(
					'Labels are not currently supported in a loop with locally-scoped variables',
					this
				); }
			code.overwrite(this.start, this.start + 5, "return 'break'");
		}
	};

	return BreakStatement;
}(Node));

var CallExpression = (function (Node$$1) {
	function CallExpression () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) CallExpression.__proto__ = Node$$1;
	CallExpression.prototype = Object.create( Node$$1 && Node$$1.prototype );
	CallExpression.prototype.constructor = CallExpression;

	CallExpression.prototype.initialise = function initialise (transforms) {
		var this$1 = this;

		if (transforms.spreadRest && this.arguments.length > 1) {
			var lexicalBoundary = this.findLexicalBoundary();

			var i = this.arguments.length;
			while (i--) {
				var arg = this$1.arguments[i];
				if (arg.type === 'SpreadElement' && isArguments(arg.argument)) {
					this$1.argumentsArrayAlias = lexicalBoundary.getArgumentsArrayAlias();
				}
			}
		}

		Node$$1.prototype.initialise.call(this, transforms);
	};

	CallExpression.prototype.transpile = function transpile (code, transforms) {
		if (transforms.spreadRest && this.arguments.length) {
			var hasSpreadElements = false;
			var context;

			var firstArgument = this.arguments[0];

			if (this.arguments.length === 1) {
				if (firstArgument.type === 'SpreadElement') {
					code.remove(firstArgument.start, firstArgument.argument.start);
					hasSpreadElements = true;
				}
			} else {
				hasSpreadElements = spread(
					code,
					this.arguments,
					firstArgument.start,
					this.argumentsArrayAlias
				);
			}

			if (hasSpreadElements) {
				// we need to handle super() and super.method() differently
				// due to its instance
				var _super = null;
				if (this.callee.type === 'Super') {
					_super = this.callee;
				} else if (
					this.callee.type === 'MemberExpression' &&
					this.callee.object.type === 'Super'
				) {
					_super = this.callee.object;
				}

				if (!_super && this.callee.type === 'MemberExpression') {
					if (this.callee.object.type === 'Identifier') {
						context = this.callee.object.name;
					} else {
						context = this.findScope(true).createDeclaration('ref');
						var callExpression = this.callee.object;
						code.prependRight(callExpression.start, ("(" + context + " = "));
						code.appendLeft(callExpression.end, ")");
					}
				} else {
					context = 'void 0';
				}

				code.appendLeft(this.callee.end, '.apply');

				if (_super) {
					_super.noCall = true; // bit hacky...

					if (this.arguments.length > 1) {
						if (firstArgument.type !== 'SpreadElement') {
							code.prependRight(firstArgument.start, "[ ");
						}

						code.appendLeft(
							this.arguments[this.arguments.length - 1].end,
							' )'
						);
					}
				} else if (this.arguments.length === 1) {
					code.prependRight(firstArgument.start, (context + ", "));
				} else {
					if (firstArgument.type === 'SpreadElement') {
						code.appendLeft(firstArgument.start, (context + ", "));
					} else {
						code.appendLeft(firstArgument.start, (context + ", [ "));
					}

					code.appendLeft(this.arguments[this.arguments.length - 1].end, ' )');
				}
			}
		}

		if (transforms.trailingFunctionCommas && this.arguments.length) {
			removeTrailingComma(code, this.arguments[this.arguments.length - 1].end);
		}

		Node$$1.prototype.transpile.call(this, code, transforms);
	};

	return CallExpression;
}(Node));

// TODO this code is pretty wild, tidy it up
var ClassBody = (function (Node$$1) {
	function ClassBody () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) ClassBody.__proto__ = Node$$1;
	ClassBody.prototype = Object.create( Node$$1 && Node$$1.prototype );
	ClassBody.prototype.constructor = ClassBody;

	ClassBody.prototype.transpile = function transpile (code, transforms, inFunctionExpression, superName) {
		var this$1 = this;

		if (transforms.classes) {
			var name = this.parent.name;

			var indentStr = code.getIndentString();
			var i0 =
				this.getIndentation() + (inFunctionExpression ? indentStr : '');
			var i1 = i0 + indentStr;

			var constructorIndex = findIndex(
				this.body,
				function (node) { return node.kind === 'constructor'; }
			);
			var constructor = this.body[constructorIndex];

			var introBlock = '';
			var outroBlock = '';

			if (this.body.length) {
				code.remove(this.start, this.body[0].start);
				code.remove(this.body[this.body.length - 1].end, this.end);
			} else {
				code.remove(this.start, this.end);
			}

			if (constructor) {
				constructor.value.body.isConstructorBody = true;

				var previousMethod = this.body[constructorIndex - 1];
				var nextMethod = this.body[constructorIndex + 1];

				// ensure constructor is first
				if (constructorIndex > 0) {
					code.remove(previousMethod.end, constructor.start);
					code.move(
						constructor.start,
						nextMethod ? nextMethod.start : this.end - 1,
						this.body[0].start
					);
				}

				if (!inFunctionExpression) { code.appendLeft(constructor.end, ';'); }
			}

			var namedFunctions =
				this.program.options.namedFunctionExpressions !== false;
			var namedConstructor =
				namedFunctions ||
				this.parent.superClass ||
				this.parent.type !== 'ClassDeclaration';
			if (this.parent.superClass) {
				var inheritanceBlock = "if ( " + superName + " ) " + name + ".__proto__ = " + superName + ";\n" + i0 + name + ".prototype = Object.create( " + superName + " && " + superName + ".prototype );\n" + i0 + name + ".prototype.constructor = " + name + ";";

				if (constructor) {
					introBlock += "\n\n" + i0 + inheritanceBlock;
				} else {
					var fn =
						"function " + name + " () {" +
						(superName
							? ("\n" + i1 + superName + ".apply(this, arguments);\n" + i0 + "}")
							: "}") +
						(inFunctionExpression ? '' : ';') +
						(this.body.length ? ("\n\n" + i0) : '');

					inheritanceBlock = fn + inheritanceBlock;
					introBlock += inheritanceBlock + "\n\n" + i0;
				}
			} else if (!constructor) {
				var fn$1 = 'function ' + (namedConstructor ? name + ' ' : '') + '() {}';
				if (this.parent.type === 'ClassDeclaration') { fn$1 += ';'; }
				if (this.body.length) { fn$1 += "\n\n" + i0; }

				introBlock += fn$1;
			}

			var scope = this.findScope(false);

			var prototypeGettersAndSetters = [];
			var staticGettersAndSetters = [];
			var prototypeAccessors;
			var staticAccessors;

			this.body.forEach(function (method, i) {
				if (method.kind === 'constructor') {
					var constructorName = namedConstructor ? ' ' + name : '';
					code.overwrite(
						method.key.start,
						method.key.end,
						("function" + constructorName)
					);
					return;
				}

				if (method.static) {
					var len = code.original[method.start + 6] == ' ' ? 7 : 6;
					code.remove(method.start, method.start + len);
				}

				var isAccessor = method.kind !== 'method';
				var lhs;

				var methodName = method.key.name;
				if (
					reserved[methodName] ||
					method.value.body.scope.references[methodName]
				) {
					methodName = scope.createIdentifier(methodName);
				}

				// when method name is a string or a number let's pretend it's a computed method

				var fake_computed = false;
				if (!method.computed && method.key.type === 'Literal') {
					fake_computed = true;
					method.computed = true;
				}

				if (isAccessor) {
					if (method.computed) {
						throw new Error(
							'Computed accessor properties are not currently supported'
						);
					}

					code.remove(method.start, method.key.start);

					if (method.static) {
						if (!~staticGettersAndSetters.indexOf(method.key.name))
							{ staticGettersAndSetters.push(method.key.name); }
						if (!staticAccessors)
							{ staticAccessors = scope.createIdentifier('staticAccessors'); }

						lhs = "" + staticAccessors;
					} else {
						if (!~prototypeGettersAndSetters.indexOf(method.key.name))
							{ prototypeGettersAndSetters.push(method.key.name); }
						if (!prototypeAccessors)
							{ prototypeAccessors = scope.createIdentifier('prototypeAccessors'); }

						lhs = "" + prototypeAccessors;
					}
				} else {
					lhs = method.static ? ("" + name) : (name + ".prototype");
				}

				if (!method.computed) { lhs += '.'; }

				var insertNewlines =
					(constructorIndex > 0 && i === constructorIndex + 1) ||
					(i === 0 && constructorIndex === this$1.body.length - 1);

				if (insertNewlines) { lhs = "\n\n" + i0 + lhs; }

				var c = method.key.end;
				if (method.computed) {
					if (fake_computed) {
						code.prependRight(method.key.start, '[');
						code.appendLeft(method.key.end, ']');
					} else {
						while (code.original[c] !== ']') { c += 1; }
						c += 1;
					}
				}

				var funcName =
					method.computed || isAccessor || !namedFunctions
						? ''
						: (methodName + " ");
				var rhs =
					(isAccessor ? ("." + (method.kind)) : '') +
					" = function" +
					(method.value.generator ? '* ' : ' ') +
					funcName;
				code.remove(c, method.value.start);
				code.prependRight(method.value.start, rhs);
				code.appendLeft(method.end, ';');

				if (method.value.generator) { code.remove(method.start, method.key.start); }

				code.prependRight(method.start, lhs);
			});

			if (prototypeGettersAndSetters.length || staticGettersAndSetters.length) {
				var intro = [];
				var outro = [];

				if (prototypeGettersAndSetters.length) {
					intro.push(
						("var " + prototypeAccessors + " = { " + (prototypeGettersAndSetters
							.map(function (name) { return (name + ": { configurable: true }"); })
							.join(',')) + " };")
					);
					outro.push(
						("Object.defineProperties( " + name + ".prototype, " + prototypeAccessors + " );")
					);
				}

				if (staticGettersAndSetters.length) {
					intro.push(
						("var " + staticAccessors + " = { " + (staticGettersAndSetters
							.map(function (name) { return (name + ": { configurable: true }"); })
							.join(',')) + " };")
					);
					outro.push(("Object.defineProperties( " + name + ", " + staticAccessors + " );"));
				}

				if (constructor) { introBlock += "\n\n" + i0; }
				introBlock += intro.join(("\n" + i0));
				if (!constructor) { introBlock += "\n\n" + i0; }

				outroBlock += "\n\n" + i0 + outro.join(("\n" + i0));
			}

			if (constructor) {
				code.appendLeft(constructor.end, introBlock);
			} else {
				code.prependRight(this.start, introBlock);
			}

			code.appendLeft(this.end, outroBlock);
		}

		Node$$1.prototype.transpile.call(this, code, transforms);
	};

	return ClassBody;
}(Node));

// TODO this function is slightly flawed – it works on the original string,
// not its current edited state.
// That's not a problem for the way that it's currently used, but it could
// be in future...
function deindent(node, code) {
	var start = node.start;
	var end = node.end;

	var indentStr = code.getIndentString();
	var indentStrLen = indentStr.length;
	var indentStart = start - indentStrLen;

	if (
		!node.program.indentExclusions[indentStart] &&
		code.original.slice(indentStart, start) === indentStr
	) {
		code.remove(indentStart, start);
	}

	var pattern = new RegExp(indentStr + '\\S', 'g');
	var slice = code.original.slice(start, end);
	var match;

	while ((match = pattern.exec(slice))) {
		var removeStart = start + match.index;
		if (!node.program.indentExclusions[removeStart]) {
			code.remove(removeStart, removeStart + indentStrLen);
		}
	}
}

var ClassDeclaration = (function (Node$$1) {
	function ClassDeclaration () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) ClassDeclaration.__proto__ = Node$$1;
	ClassDeclaration.prototype = Object.create( Node$$1 && Node$$1.prototype );
	ClassDeclaration.prototype.constructor = ClassDeclaration;

	ClassDeclaration.prototype.initialise = function initialise (transforms) {
		if (this.id) {
			this.name = this.id.name;
			this.findScope(true).addDeclaration(this.id, 'class');
		} else {
			this.name = this.findScope(true).createIdentifier("defaultExport");
		}

		Node$$1.prototype.initialise.call(this, transforms);
	};

	ClassDeclaration.prototype.transpile = function transpile (code, transforms) {
		if (transforms.classes) {
			if (!this.superClass) { deindent(this.body, code); }

			var superName =
				this.superClass && (this.superClass.name || 'superclass');

			var i0 = this.getIndentation();
			var i1 = i0 + code.getIndentString();

			// if this is an export default statement, we have to move the export to
			// after the declaration, because `export default var Foo = ...` is illegal
			var isExportDefaultDeclaration = this.parent.type === 'ExportDefaultDeclaration';

			if (isExportDefaultDeclaration) {
				code.remove(this.parent.start, this.start);
			}

			var c = this.start;
			if (this.id) {
				code.overwrite(c, this.id.start, 'var ');
				c = this.id.end;
			} else {
				code.prependLeft(c, ("var " + (this.name)));
			}

			if (this.superClass) {
				if (this.superClass.end === this.body.start) {
					code.remove(c, this.superClass.start);
					code.appendLeft(c, (" = (function (" + superName + ") {\n" + i1));
				} else {
					code.overwrite(c, this.superClass.start, ' = ');
					code.overwrite(
						this.superClass.end,
						this.body.start,
						("(function (" + superName + ") {\n" + i1)
					);
				}
			} else {
				if (c === this.body.start) {
					code.appendLeft(c, ' = ');
				} else {
					code.overwrite(c, this.body.start, ' = ');
				}
			}

			this.body.transpile(code, transforms, !!this.superClass, superName);

			var syntheticDefaultExport =
				isExportDefaultDeclaration
					? ("\n\n" + i0 + "export default " + (this.name) + ";")
					: '';
			if (this.superClass) {
				code.appendLeft(this.end, ("\n\n" + i1 + "return " + (this.name) + ";\n" + i0 + "}("));
				code.move(this.superClass.start, this.superClass.end, this.end);
				code.prependRight(this.end, ("));" + syntheticDefaultExport));
			} else if (syntheticDefaultExport) {
				code.prependRight(this.end, syntheticDefaultExport);
			}
		} else {
			this.body.transpile(code, transforms, false, null);
		}
	};

	return ClassDeclaration;
}(Node));

var ClassExpression = (function (Node$$1) {
	function ClassExpression () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) ClassExpression.__proto__ = Node$$1;
	ClassExpression.prototype = Object.create( Node$$1 && Node$$1.prototype );
	ClassExpression.prototype.constructor = ClassExpression;

	ClassExpression.prototype.initialise = function initialise (transforms) {
		this.name = ( this.id
			? this.id.name
			: this.parent.type === 'VariableDeclarator'
				? this.parent.id.name
				: this.parent.type !== 'AssignmentExpression'
					? null
					: this.parent.left.type === 'Identifier'
						? this.parent.left.name
						: this.parent.left.type === 'MemberExpression'
							? this.parent.left.property.name
							: null ) || this.findScope(true).createIdentifier('anonymous');

		Node$$1.prototype.initialise.call(this, transforms);
	};

	ClassExpression.prototype.transpile = function transpile (code, transforms) {
		if (transforms.classes) {
			var superName =
				this.superClass && (this.superClass.name || 'superclass');

			var i0 = this.getIndentation();
			var i1 = i0 + code.getIndentString();

			if (this.superClass) {
				code.remove(this.start, this.superClass.start);
				code.remove(this.superClass.end, this.body.start);
				code.appendLeft(this.start, ("(function (" + superName + ") {\n" + i1));
			} else {
				code.overwrite(this.start, this.body.start, ("(function () {\n" + i1));
			}

			this.body.transpile(code, transforms, true, superName);

			var outro = "\n\n" + i1 + "return " + (this.name) + ";\n" + i0 + "}(";

			if (this.superClass) {
				code.appendLeft(this.end, outro);
				code.move(this.superClass.start, this.superClass.end, this.end);
				code.prependRight(this.end, '))');
			} else {
				code.appendLeft(this.end, ("\n\n" + i1 + "return " + (this.name) + ";\n" + i0 + "}())"));
			}
		} else {
			this.body.transpile(code, transforms, false);
		}
	};

	return ClassExpression;
}(Node));

var ContinueStatement = (function (Node$$1) {
	function ContinueStatement () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) ContinueStatement.__proto__ = Node$$1;
	ContinueStatement.prototype = Object.create( Node$$1 && Node$$1.prototype );
	ContinueStatement.prototype.constructor = ContinueStatement;

	ContinueStatement.prototype.transpile = function transpile (code) {
		var loop = this.findNearest(loopStatement);
		if (loop.shouldRewriteAsFunction) {
			if (this.label)
				{ throw new CompileError(
					'Labels are not currently supported in a loop with locally-scoped variables',
					this
				); }
			code.overwrite(this.start, this.start + 8, 'return');
		}
	};

	return ContinueStatement;
}(Node));

var ExportDefaultDeclaration = (function (Node$$1) {
	function ExportDefaultDeclaration () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) ExportDefaultDeclaration.__proto__ = Node$$1;
	ExportDefaultDeclaration.prototype = Object.create( Node$$1 && Node$$1.prototype );
	ExportDefaultDeclaration.prototype.constructor = ExportDefaultDeclaration;

	ExportDefaultDeclaration.prototype.initialise = function initialise (transforms) {
		if (transforms.moduleExport)
			{ throw new CompileError('export is not supported', this); }
		Node$$1.prototype.initialise.call(this, transforms);
	};

	return ExportDefaultDeclaration;
}(Node));

var ExportNamedDeclaration = (function (Node$$1) {
	function ExportNamedDeclaration () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) ExportNamedDeclaration.__proto__ = Node$$1;
	ExportNamedDeclaration.prototype = Object.create( Node$$1 && Node$$1.prototype );
	ExportNamedDeclaration.prototype.constructor = ExportNamedDeclaration;

	ExportNamedDeclaration.prototype.initialise = function initialise (transforms) {
		if (transforms.moduleExport)
			{ throw new CompileError('export is not supported', this); }
		Node$$1.prototype.initialise.call(this, transforms);
	};

	return ExportNamedDeclaration;
}(Node));

var LoopStatement = (function (Node$$1) {
	function LoopStatement () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) LoopStatement.__proto__ = Node$$1;
	LoopStatement.prototype = Object.create( Node$$1 && Node$$1.prototype );
	LoopStatement.prototype.constructor = LoopStatement;

	LoopStatement.prototype.findScope = function findScope (functionScope) {
		return functionScope || !this.createdScope
			? this.parent.findScope(functionScope)
			: this.body.scope;
	};

	LoopStatement.prototype.initialise = function initialise (transforms) {
		var this$1 = this;

		this.body.createScope();
		this.createdScope = true;

		// this is populated as and when reassignments occur
		this.reassigned = Object.create(null);
		this.aliases = Object.create(null);

		Node$$1.prototype.initialise.call(this, transforms);

		if (transforms.letConst) {
			// see if any block-scoped declarations are referenced
			// inside function expressions
			var names = Object.keys(this.body.scope.declarations);

			var i = names.length;
			while (i--) {
				var name = names[i];
				var declaration = this$1.body.scope.declarations[name];

				var j = declaration.instances.length;
				while (j--) {
					var instance = declaration.instances[j];
					var nearestFunctionExpression = instance.findNearest(/Function/);

					if (
						nearestFunctionExpression &&
						nearestFunctionExpression.depth > this$1.depth
					) {
						this$1.shouldRewriteAsFunction = true;
						break;
					}
				}

				if (this$1.shouldRewriteAsFunction) { break; }
			}
		}
	};

	LoopStatement.prototype.transpile = function transpile (code, transforms) {
		var needsBlock =
			this.type != 'ForOfStatement' &&
			(this.body.type !== 'BlockStatement' ||
				(this.body.type === 'BlockStatement' && this.body.synthetic));

		if (this.shouldRewriteAsFunction) {
			var i0 = this.getIndentation();
			var i1 = i0 + code.getIndentString();

			var argString = this.args ? (" " + (this.args.join(', ')) + " ") : '';
			var paramString = this.params ? (" " + (this.params.join(', ')) + " ") : '';

			var functionScope = this.findScope(true);
			var loop = functionScope.createIdentifier('loop');

			var before =
				"var " + loop + " = function (" + paramString + ") " +
				(this.body.synthetic ? ("{\n" + i0 + (code.getIndentString())) : '');
			var after = (this.body.synthetic ? ("\n" + i0 + "}") : '') + ";\n\n" + i0;

			code.prependRight(this.body.start, before);
			code.appendLeft(this.body.end, after);
			code.move(this.start, this.body.start, this.body.end);

			if (this.canBreak || this.canReturn) {
				var returned = functionScope.createIdentifier('returned');

				var insert = "{\n" + i1 + "var " + returned + " = " + loop + "(" + argString + ");\n";
				if (this.canBreak)
					{ insert += "\n" + i1 + "if ( " + returned + " === 'break' ) break;"; }
				if (this.canReturn)
					{ insert += "\n" + i1 + "if ( " + returned + " ) return " + returned + ".v;"; }
				insert += "\n" + i0 + "}";

				code.prependRight(this.body.end, insert);
			} else {
				var callExpression = loop + "(" + argString + ");";

				if (this.type === 'DoWhileStatement') {
					code.overwrite(
						this.start,
						this.body.start,
						("do {\n" + i1 + callExpression + "\n" + i0 + "}")
					);
				} else {
					code.prependRight(this.body.end, callExpression);
				}
			}
		} else if (needsBlock) {
			code.appendLeft(this.body.start, '{ ');
			code.prependRight(this.body.end, ' }');
		}

		Node$$1.prototype.transpile.call(this, code, transforms);
	};

	return LoopStatement;
}(Node));

var ForStatement = (function (LoopStatement$$1) {
	function ForStatement () {
		LoopStatement$$1.apply(this, arguments);
	}

	if ( LoopStatement$$1 ) ForStatement.__proto__ = LoopStatement$$1;
	ForStatement.prototype = Object.create( LoopStatement$$1 && LoopStatement$$1.prototype );
	ForStatement.prototype.constructor = ForStatement;

	ForStatement.prototype.findScope = function findScope (functionScope) {
		return functionScope || !this.createdScope
			? this.parent.findScope(functionScope)
			: this.body.scope;
	};

	ForStatement.prototype.transpile = function transpile (code, transforms) {
		var this$1 = this;

		var i1 = this.getIndentation() + code.getIndentString();

		if (this.shouldRewriteAsFunction) {
			// which variables are declared in the init statement?
			var names = this.init.type === 'VariableDeclaration'
				? this.init.declarations.map(function (declarator) { return extractNames(declarator.id); })
				: [];

			var aliases = this.aliases;

			this.args = names.map(
				function (name) { return (name in this$1.aliases ? this$1.aliases[name].outer : name); }
			);
			this.params = names.map(
				function (name) { return (name in this$1.aliases ? this$1.aliases[name].inner : name); }
			);

			var updates = Object.keys(this.reassigned).map(
				function (name) { return ((aliases[name].outer) + " = " + (aliases[name].inner) + ";"); }
			);

			if (updates.length) {
				if (this.body.synthetic) {
					code.appendLeft(this.body.body[0].end, ("; " + (updates.join(" "))));
				} else {
					var lastStatement = this.body.body[this.body.body.length - 1];
					code.appendLeft(
						lastStatement.end,
						("\n\n" + i1 + (updates.join(("\n" + i1))))
					);
				}
			}
		}

		LoopStatement$$1.prototype.transpile.call(this, code, transforms);
	};

	return ForStatement;
}(LoopStatement));

var ForInStatement = (function (LoopStatement$$1) {
	function ForInStatement () {
		LoopStatement$$1.apply(this, arguments);
	}

	if ( LoopStatement$$1 ) ForInStatement.__proto__ = LoopStatement$$1;
	ForInStatement.prototype = Object.create( LoopStatement$$1 && LoopStatement$$1.prototype );
	ForInStatement.prototype.constructor = ForInStatement;

	ForInStatement.prototype.findScope = function findScope (functionScope) {
		return functionScope || !this.createdScope
			? this.parent.findScope(functionScope)
			: this.body.scope;
	};

	ForInStatement.prototype.transpile = function transpile (code, transforms) {
		var this$1 = this;

		var hasDeclaration = this.left.type === 'VariableDeclaration';

		if (this.shouldRewriteAsFunction) {
			// which variables are declared in the init statement?
			var names = hasDeclaration
				? this.left.declarations.map(function (declarator) { return extractNames(declarator.id); })
				: [];

			this.args = names.map(
				function (name) { return (name in this$1.aliases ? this$1.aliases[name].outer : name); }
			);
			this.params = names.map(
				function (name) { return (name in this$1.aliases ? this$1.aliases[name].inner : name); }
			);
		}

		LoopStatement$$1.prototype.transpile.call(this, code, transforms);

		var maybePattern = hasDeclaration ? this.left.declarations[0].id : this.left;
		if (maybePattern.type !== 'Identifier') {
			this.destructurePattern(code, maybePattern, hasDeclaration);
		}
	};

	ForInStatement.prototype.destructurePattern = function destructurePattern (code, pattern, isDeclaration) {
		var scope = this.findScope(true);
		var i0 = this.getIndentation();
		var i1 = i0 + code.getIndentString();

		var ref = scope.createIdentifier('ref');

		var bodyStart = this.body.body.length ? this.body.body[0].start : this.body.start + 1;

		code.move(pattern.start, pattern.end, bodyStart);

		code.prependRight(pattern.end, isDeclaration ? ref : ("var " + ref));

		var statementGenerators = [];
		destructure(
			code,
			function (id) { return scope.createIdentifier(id); },
			function (ref) {
				var name = ref.name;

				return scope.resolveName(name);
		},
			pattern,
			ref,
			false,
			statementGenerators
		);

		var suffix = ";\n" + i1;
		statementGenerators.forEach(function (fn, i) {
			if (i === statementGenerators.length - 1) {
				suffix = ";\n\n" + i1;
			}

			fn(bodyStart, '', suffix);
		});
	};

	return ForInStatement;
}(LoopStatement));

var ForOfStatement = (function (LoopStatement$$1) {
	function ForOfStatement () {
		LoopStatement$$1.apply(this, arguments);
	}

	if ( LoopStatement$$1 ) ForOfStatement.__proto__ = LoopStatement$$1;
	ForOfStatement.prototype = Object.create( LoopStatement$$1 && LoopStatement$$1.prototype );
	ForOfStatement.prototype.constructor = ForOfStatement;

	ForOfStatement.prototype.initialise = function initialise (transforms) {
		if (transforms.forOf && !transforms.dangerousForOf)
			{ throw new CompileError(
				"for...of statements are not supported. Use `transforms: { forOf: false }` to skip transformation and disable this error, or `transforms: { dangerousForOf: true }` if you know what you're doing",
				this
			); }
		LoopStatement$$1.prototype.initialise.call(this, transforms);
	};

	ForOfStatement.prototype.transpile = function transpile (code, transforms) {
		LoopStatement$$1.prototype.transpile.call(this, code, transforms);
		if (!transforms.dangerousForOf) { return; }

		// edge case (#80)
		if (!this.body.body[0]) {
			if (
				this.left.type === 'VariableDeclaration' &&
				this.left.kind === 'var'
			) {
				code.remove(this.start, this.left.start);
				code.appendLeft(this.left.end, ';');
				code.remove(this.left.end, this.end);
			} else {
				code.remove(this.start, this.end);
			}

			return;
		}

		var scope = this.findScope(true);
		var i0 = this.getIndentation();
		var i1 = i0 + code.getIndentString();

		var key = scope.createIdentifier('i');
		var list = scope.createIdentifier('list');

		if (this.body.synthetic) {
			code.prependRight(this.left.start, ("{\n" + i1));
			code.appendLeft(this.body.body[0].end, ("\n" + i0 + "}"));
		}

		var bodyStart = this.body.body[0].start;

		code.remove(this.left.end, this.right.start);
		code.move(this.left.start, this.left.end, bodyStart);

		code.prependRight(this.right.start, ("var " + key + " = 0, " + list + " = "));
		code.appendLeft(this.right.end, ("; " + key + " < " + list + ".length; " + key + " += 1"));

		var isDeclaration = this.left.type === 'VariableDeclaration';
		var maybeDestructuring = isDeclaration ? this.left.declarations[0].id : this.left;
		if (maybeDestructuring.type !== 'Identifier') {
			var statementGenerators = [];
			var ref = scope.createIdentifier('ref');
			destructure(
				code,
				function (id) { return scope.createIdentifier(id); },
				function (ref) {
					var name = ref.name;

					return scope.resolveName(name);
			},
				maybeDestructuring,
				ref,
				!isDeclaration,
				statementGenerators
			);

			var suffix = ";\n" + i1;
			statementGenerators.forEach(function (fn, i) {
				if (i === statementGenerators.length - 1) {
					suffix = ";\n\n" + i1;
				}

				fn(bodyStart, '', suffix);
			});

			if (isDeclaration) {
				code.appendLeft(this.left.start + this.left.kind.length + 1, ref);
				code.appendLeft(this.left.end, (" = " + list + "[" + key + "];\n" + i1));
			} else {
				code.appendLeft(this.left.end, ("var " + ref + " = " + list + "[" + key + "];\n" + i1));
			}
		} else {
			code.appendLeft(this.left.end, (" = " + list + "[" + key + "];\n\n" + i1));
		}
	};

	return ForOfStatement;
}(LoopStatement));

var FunctionDeclaration = (function (Node$$1) {
	function FunctionDeclaration () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) FunctionDeclaration.__proto__ = Node$$1;
	FunctionDeclaration.prototype = Object.create( Node$$1 && Node$$1.prototype );
	FunctionDeclaration.prototype.constructor = FunctionDeclaration;

	FunctionDeclaration.prototype.initialise = function initialise (transforms) {
		if (this.generator && transforms.generator) {
			throw new CompileError('Generators are not supported', this);
		}

		this.body.createScope();

		if (this.id) {
			this.findScope(true).addDeclaration(this.id, 'function');
		}
		Node$$1.prototype.initialise.call(this, transforms);
	};

	FunctionDeclaration.prototype.transpile = function transpile (code, transforms) {
		Node$$1.prototype.transpile.call(this, code, transforms);
		if (transforms.trailingFunctionCommas && this.params.length) {
			removeTrailingComma(code, this.params[this.params.length - 1].end);
		}
	};

	return FunctionDeclaration;
}(Node));

var FunctionExpression = (function (Node$$1) {
	function FunctionExpression () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) FunctionExpression.__proto__ = Node$$1;
	FunctionExpression.prototype = Object.create( Node$$1 && Node$$1.prototype );
	FunctionExpression.prototype.constructor = FunctionExpression;

	FunctionExpression.prototype.initialise = function initialise (transforms) {
		var this$1 = this;

		if (this.generator && transforms.generator) {
			throw new CompileError('Generators are not supported', this);
		}

		this.body.createScope();

		if (this.id) {
			// function expression IDs belong to the child scope...
			this.body.scope.addDeclaration(this.id, 'function');
		}

		Node$$1.prototype.initialise.call(this, transforms);

		var parent = this.parent;
		var methodName;

		if (
			transforms.conciseMethodProperty &&
			parent.type === 'Property' &&
			parent.kind === 'init' &&
			parent.method &&
			parent.key.type === 'Identifier'
		) {
			// object literal concise method
			methodName = parent.key.name;
		} else if (
			transforms.classes &&
			parent.type === 'MethodDefinition' &&
			parent.kind === 'method' &&
			parent.key.type === 'Identifier'
		) {
			// method definition in a class
			methodName = parent.key.name;
		} else if (this.id && this.id.type === 'Identifier') {
			// naked function expression
			methodName = this.id.alias || this.id.name;
		}

		if (methodName) {
			for (var i$1 = 0, list$1 = this$1.params; i$1 < list$1.length; i$1 += 1) {
				var param = list$1[i$1];

				if (param.type === 'Identifier' && methodName === param.name) {
					// workaround for Safari 9/WebKit bug:
					// https://gitlab.com/Rich-Harris/buble/issues/154
					// change parameter name when same as method name

					var scope = this$1.body.scope;
					var declaration = scope.declarations[methodName];

					var alias = scope.createIdentifier(methodName);
					param.alias = alias;

					for (var i = 0, list = declaration.instances; i < list.length; i += 1) {
						var identifier = list[i];

						identifier.alias = alias;
					}

					break;
				}
			}
		}
	};

	FunctionExpression.prototype.transpile = function transpile (code, transforms) {
		Node$$1.prototype.transpile.call(this, code, transforms);
		if (transforms.trailingFunctionCommas && this.params.length) {
			removeTrailingComma(code, this.params[this.params.length - 1].end);
		}
	};

	return FunctionExpression;
}(Node));

function isReference(node, parent) {
	if (node.type === 'MemberExpression') {
		return !node.computed && isReference(node.object, node);
	}

	if (node.type === 'Identifier') {
		// the only time we could have an identifier node without a parent is
		// if it's the entire body of a function without a block statement –
		// i.e. an arrow function expression like `a => a`
		if (!parent) { return true; }

		if (/(Function|Class)Expression/.test(parent.type)) { return false; }

		if (parent.type === 'VariableDeclarator') { return node === parent.init; }

		// TODO is this right?
		if (
			parent.type === 'MemberExpression' ||
			parent.type === 'MethodDefinition'
		) {
			return parent.computed || node === parent.object;
		}

		if (parent.type === 'ArrayPattern') { return false; }

		// disregard the `bar` in `{ bar: foo }`, but keep it in `{ [bar]: foo }`
		if (parent.type === 'Property') {
			if (parent.parent.type === 'ObjectPattern') { return false; }
			return parent.computed || node === parent.value;
		}

		// disregard the `bar` in `class Foo { bar () {...} }`
		if (parent.type === 'MethodDefinition') { return false; }

		// disregard the `bar` in `export { foo as bar }`
		if (parent.type === 'ExportSpecifier' && node !== parent.local)
			{ return false; }

		return true;
	}
}

var Identifier = (function (Node$$1) {
	function Identifier () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) Identifier.__proto__ = Node$$1;
	Identifier.prototype = Object.create( Node$$1 && Node$$1.prototype );
	Identifier.prototype.constructor = Identifier;

	Identifier.prototype.findScope = function findScope (functionScope) {
		if (this.parent.params && ~this.parent.params.indexOf(this)) {
			return this.parent.body.scope;
		}

		if (this.parent.type === 'FunctionExpression' && this === this.parent.id) {
			return this.parent.body.scope;
		}

		return this.parent.findScope(functionScope);
	};

	Identifier.prototype.initialise = function initialise (transforms) {
		if (isReference(this, this.parent)) {
			if (
				transforms.arrow &&
				this.name === 'arguments' &&
				!this.findScope(false).contains(this.name)
			) {
				var lexicalBoundary = this.findLexicalBoundary();
				var arrowFunction = this.findNearest('ArrowFunctionExpression');
				var loop = this.findNearest(loopStatement);

				if (arrowFunction && arrowFunction.depth > lexicalBoundary.depth) {
					this.alias = lexicalBoundary.getArgumentsAlias();
				}

				if (
					loop &&
					loop.body.contains(this) &&
					loop.depth > lexicalBoundary.depth
				) {
					this.alias = lexicalBoundary.getArgumentsAlias();
				}
			}

			this.findScope(false).addReference(this);
		}
	};

	Identifier.prototype.transpile = function transpile (code) {
		if (this.alias) {
			code.overwrite(this.start, this.end, this.alias, {
				storeName: true,
				contentOnly: true
			});
		}
	};

	return Identifier;
}(Node));

var IfStatement = (function (Node$$1) {
	function IfStatement () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) IfStatement.__proto__ = Node$$1;
	IfStatement.prototype = Object.create( Node$$1 && Node$$1.prototype );
	IfStatement.prototype.constructor = IfStatement;

	IfStatement.prototype.initialise = function initialise (transforms) {
		Node$$1.prototype.initialise.call(this, transforms);
	};

	IfStatement.prototype.transpile = function transpile (code, transforms) {
		if (
			this.consequent.type !== 'BlockStatement' ||
			(this.consequent.type === 'BlockStatement' && this.consequent.synthetic)
		) {
			code.appendLeft(this.consequent.start, '{ ');
			code.prependRight(this.consequent.end, ' }');
		}

		if (
			this.alternate &&
			this.alternate.type !== 'IfStatement' &&
			(this.alternate.type !== 'BlockStatement' ||
				(this.alternate.type === 'BlockStatement' && this.alternate.synthetic))
		) {
			code.appendLeft(this.alternate.start, '{ ');
			code.prependRight(this.alternate.end, ' }');
		}

		Node$$1.prototype.transpile.call(this, code, transforms);
	};

	return IfStatement;
}(Node));

var ImportDeclaration = (function (Node$$1) {
	function ImportDeclaration () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) ImportDeclaration.__proto__ = Node$$1;
	ImportDeclaration.prototype = Object.create( Node$$1 && Node$$1.prototype );
	ImportDeclaration.prototype.constructor = ImportDeclaration;

	ImportDeclaration.prototype.initialise = function initialise (transforms) {
		if (transforms.moduleImport)
			{ throw new CompileError('import is not supported', this); }
		Node$$1.prototype.initialise.call(this, transforms);
	};

	return ImportDeclaration;
}(Node));

var ImportDefaultSpecifier = (function (Node$$1) {
	function ImportDefaultSpecifier () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) ImportDefaultSpecifier.__proto__ = Node$$1;
	ImportDefaultSpecifier.prototype = Object.create( Node$$1 && Node$$1.prototype );
	ImportDefaultSpecifier.prototype.constructor = ImportDefaultSpecifier;

	ImportDefaultSpecifier.prototype.initialise = function initialise (transforms) {
		this.findScope(true).addDeclaration(this.local, 'import');
		Node$$1.prototype.initialise.call(this, transforms);
	};

	return ImportDefaultSpecifier;
}(Node));

var ImportSpecifier = (function (Node$$1) {
	function ImportSpecifier () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) ImportSpecifier.__proto__ = Node$$1;
	ImportSpecifier.prototype = Object.create( Node$$1 && Node$$1.prototype );
	ImportSpecifier.prototype.constructor = ImportSpecifier;

	ImportSpecifier.prototype.initialise = function initialise (transforms) {
		this.findScope(true).addDeclaration(this.local, 'import');
		Node$$1.prototype.initialise.call(this, transforms);
	};

	return ImportSpecifier;
}(Node));

var hasDashes = function (val) { return /-/.test(val); };

var formatKey = function (key) { return (hasDashes(key) ? ("'" + key + "'") : key); };

var formatVal = function (val) { return (val ? '' : 'true'); };

var JSXAttribute = (function (Node$$1) {
	function JSXAttribute () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) JSXAttribute.__proto__ = Node$$1;
	JSXAttribute.prototype = Object.create( Node$$1 && Node$$1.prototype );
	JSXAttribute.prototype.constructor = JSXAttribute;

	JSXAttribute.prototype.transpile = function transpile (code, transforms) {
		var ref = this.name;
		var start = ref.start;
		var name = ref.name;

		// Overwrite equals sign if value is present.
		var end = this.value ? this.value.start : this.name.end;

		code.overwrite(start, end, ((formatKey(name)) + ": " + (formatVal(this.value))));

		Node$$1.prototype.transpile.call(this, code, transforms);
	};

	return JSXAttribute;
}(Node));

function containsNewLine(node) {
	return (
		node.type === 'JSXText' && !/\S/.test(node.value) && /\n/.test(node.value)
	);
}

var JSXClosingElement = (function (Node$$1) {
	function JSXClosingElement () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) JSXClosingElement.__proto__ = Node$$1;
	JSXClosingElement.prototype = Object.create( Node$$1 && Node$$1.prototype );
	JSXClosingElement.prototype.constructor = JSXClosingElement;

	JSXClosingElement.prototype.transpile = function transpile (code) {
		var spaceBeforeParen = true;

		var lastChild = this.parent.children[this.parent.children.length - 1];

		// omit space before closing paren if
		//   a) this is on a separate line, or
		//   b) there are no children but there are attributes
		if (
			(lastChild && containsNewLine(lastChild)) ||
			this.parent.openingElement.attributes.length
		) {
			spaceBeforeParen = false;
		}

		code.overwrite(this.start, this.end, spaceBeforeParen ? ' )' : ')');
	};

	return JSXClosingElement;
}(Node));

function containsNewLine$1(node) {
	return (
		node.type === 'JSXText' && !/\S/.test(node.value) && /\n/.test(node.value)
	);
}

var JSXClosingFragment = (function (Node$$1) {
	function JSXClosingFragment () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) JSXClosingFragment.__proto__ = Node$$1;
	JSXClosingFragment.prototype = Object.create( Node$$1 && Node$$1.prototype );
	JSXClosingFragment.prototype.constructor = JSXClosingFragment;

	JSXClosingFragment.prototype.transpile = function transpile (code) {
		var spaceBeforeParen = true;

		var lastChild = this.parent.children[this.parent.children.length - 1];

		// omit space before closing paren if this is on a separate line
		if (lastChild && containsNewLine$1(lastChild)) {
			spaceBeforeParen = false;
		}

		code.overwrite(this.start, this.end, spaceBeforeParen ? ' )' : ')');
	};

	return JSXClosingFragment;
}(Node));

function normalise(str, removeTrailingWhitespace) {

	str = str.replace(/\u00a0/g, '&nbsp;');

	if (removeTrailingWhitespace && /\n/.test(str)) {
		str = str.replace(/\s+$/, '');
	}

	str = str
		.replace(/^\n\r?\s+/, '') // remove leading newline + space
		.replace(/\s*\n\r?\s*/gm, ' '); // replace newlines with spaces

	// TODO prefer single quotes?
	return JSON.stringify(str);
}

var JSXElement = (function (Node$$1) {
	function JSXElement () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) JSXElement.__proto__ = Node$$1;
	JSXElement.prototype = Object.create( Node$$1 && Node$$1.prototype );
	JSXElement.prototype.constructor = JSXElement;

	JSXElement.prototype.transpile = function transpile (code, transforms) {
		Node$$1.prototype.transpile.call(this, code, transforms);

		var children = this.children.filter(function (child) {
			if (child.type !== 'JSXText') { return true; }

			// remove whitespace-only literals, unless on a single line
			return /\S/.test(child.raw) || !/\n/.test(child.raw);
		});

		if (children.length) {
			var c = this.openingElement.end;

			var i;
			for (i = 0; i < children.length; i += 1) {
				var child = children[i];

				if (
					child.type === 'JSXExpressionContainer' &&
					child.expression.type === 'JSXEmptyExpression'
				) {
					// empty block is a no op
				} else {
					var tail =
						code.original[c] === '\n' && child.type !== 'JSXText' ? '' : ' ';
					code.appendLeft(c, ("," + tail));
				}

				if (child.type === 'JSXText') {
					var str = normalise(child.value, i === children.length - 1);
					code.overwrite(child.start, child.end, str);
				}

				c = child.end;
			}
		}
	};

	return JSXElement;
}(Node));

var JSXExpressionContainer = (function (Node$$1) {
	function JSXExpressionContainer () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) JSXExpressionContainer.__proto__ = Node$$1;
	JSXExpressionContainer.prototype = Object.create( Node$$1 && Node$$1.prototype );
	JSXExpressionContainer.prototype.constructor = JSXExpressionContainer;

	JSXExpressionContainer.prototype.transpile = function transpile (code, transforms) {
		code.remove(this.start, this.expression.start);
		code.remove(this.expression.end, this.end);

		Node$$1.prototype.transpile.call(this, code, transforms);
	};

	return JSXExpressionContainer;
}(Node));

var JSXFragment = (function (JSXElement$$1) {
	function JSXFragment () {
		JSXElement$$1.apply(this, arguments);
	}if ( JSXElement$$1 ) JSXFragment.__proto__ = JSXElement$$1;
	JSXFragment.prototype = Object.create( JSXElement$$1 && JSXElement$$1.prototype );
	JSXFragment.prototype.constructor = JSXFragment;

	

	return JSXFragment;
}(JSXElement));

var JSXOpeningElement = (function (Node$$1) {
	function JSXOpeningElement () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) JSXOpeningElement.__proto__ = Node$$1;
	JSXOpeningElement.prototype = Object.create( Node$$1 && Node$$1.prototype );
	JSXOpeningElement.prototype.constructor = JSXOpeningElement;

	JSXOpeningElement.prototype.transpile = function transpile (code, transforms) {
		var this$1 = this;

		Node$$1.prototype.transpile.call(this, code, transforms);

		code.overwrite(this.start, this.name.start, ((this.program.jsx) + "( "));

		var html =
			this.name.type === 'JSXIdentifier' &&
			this.name.name[0] === this.name.name[0].toLowerCase();
		if (html) { code.prependRight(this.name.start, "'"); }

		var len = this.attributes.length;
		var c = this.name.end;

		if (len) {
			var i;

			var hasSpread = false;
			for (i = 0; i < len; i += 1) {
				if (this$1.attributes[i].type === 'JSXSpreadAttribute') {
					hasSpread = true;
					break;
				}
			}

			c = this.attributes[0].end;

			for (i = 0; i < len; i += 1) {
				var attr = this$1.attributes[i];

				if (i > 0) {
					if (attr.start === c) { code.prependRight(c, ', '); }
					else { code.overwrite(c, attr.start, ', '); }
				}

				if (hasSpread && attr.type !== 'JSXSpreadAttribute') {
					var lastAttr = this$1.attributes[i - 1];
					var nextAttr = this$1.attributes[i + 1];

					if (!lastAttr || lastAttr.type === 'JSXSpreadAttribute') {
						code.prependRight(attr.start, '{ ');
					}

					if (!nextAttr || nextAttr.type === 'JSXSpreadAttribute') {
						code.appendLeft(attr.end, ' }');
					}
				}

				c = attr.end;
			}

			var after;
			var before;
			if (hasSpread) {
				if (len === 1) {
					before = html ? "'," : ',';
				} else {
					if (!this.program.options.objectAssign) {
						throw new CompileError(
							"Mixed JSX attributes ending in spread requires specified objectAssign option with 'Object.assign' or polyfill helper.",
							this
						);
					}
					before = html
						? ("', " + (this.program.options.objectAssign) + "({},")
						: (", " + (this.program.options.objectAssign) + "({},");
					after = ')';
				}
			} else {
				before = html ? "', {" : ', {';
				after = ' }';
			}

			code.prependRight(this.name.end, before);

			if (after) {
				code.appendLeft(this.attributes[len - 1].end, after);
			}
		} else {
			code.appendLeft(this.name.end, html ? "', null" : ", null");
			c = this.name.end;
		}

		if (this.selfClosing) {
			code.overwrite(c, this.end, this.attributes.length ? ")" : " )");
		} else {
			code.remove(c, this.end);
		}
	};

	return JSXOpeningElement;
}(Node));

var JSXOpeningFragment = (function (Node$$1) {
	function JSXOpeningFragment () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) JSXOpeningFragment.__proto__ = Node$$1;
	JSXOpeningFragment.prototype = Object.create( Node$$1 && Node$$1.prototype );
	JSXOpeningFragment.prototype.constructor = JSXOpeningFragment;

	JSXOpeningFragment.prototype.transpile = function transpile (code) {
		code.overwrite(this.start, this.end, ((this.program.jsx) + "( React.Fragment, null"));
	};

	return JSXOpeningFragment;
}(Node));

var JSXSpreadAttribute = (function (Node$$1) {
	function JSXSpreadAttribute () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) JSXSpreadAttribute.__proto__ = Node$$1;
	JSXSpreadAttribute.prototype = Object.create( Node$$1 && Node$$1.prototype );
	JSXSpreadAttribute.prototype.constructor = JSXSpreadAttribute;

	JSXSpreadAttribute.prototype.transpile = function transpile (code, transforms) {
		code.remove(this.start, this.argument.start);
		code.remove(this.argument.end, this.end);

		Node$$1.prototype.transpile.call(this, code, transforms);
	};

	return JSXSpreadAttribute;
}(Node));

var regjsgen = createCommonjsModule(function (module, exports) {
/*!
 * regjsgen 0.3.0
 * Copyright 2014-2016 Benjamin Tan <https://demoneaux.github.io/>
 * Available under MIT license <https://github.com/demoneaux/regjsgen/blob/master/LICENSE>
 */
(function() {
  var objectTypes = {
    'function': true,
    'object': true
  };

  // Used as a reference to the global object.
  var root = (objectTypes[typeof window] && window) || this;

  // Detect free variable `exports`.
  var freeExports = objectTypes['object'] && exports;

  // Detect free variable `module`.
  var freeModule = objectTypes['object'] && module && !module.nodeType && module;

  // Detect free variable `global` from Node.js or Browserified code and use it as `root`.
  var freeGlobal = freeExports && freeModule && typeof commonjsGlobal == 'object' && commonjsGlobal;
  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {
    root = freeGlobal;
  }

  // Used to check objects for own properties.
  var hasOwnProperty = Object.prototype.hasOwnProperty;

  /*--------------------------------------------------------------------------*/

  // Generates strings based on the given code points.
  // Based on https://mths.be/fromcodepoint v0.2.0 by @mathias.
  var stringFromCharCode = String.fromCharCode;
  var floor = Math.floor;
  function fromCodePoint() {
    var MAX_SIZE = 0x4000;
    var codeUnits = [];
    var highSurrogate;
    var lowSurrogate;
    var index = -1;
    var length = arguments.length;
    if (!length) {
      return '';
    }
    var result = '';
    while (++index < length) {
      var codePoint = Number(arguments[index]);
      if (
        !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`
        codePoint < 0 || // not a valid Unicode code point
        codePoint > 0x10FFFF || // not a valid Unicode code point
        floor(codePoint) != codePoint // not an integer
      ) {
        throw RangeError('Invalid code point: ' + codePoint);
      }
      if (codePoint <= 0xFFFF) {
        // BMP code point
        codeUnits.push(codePoint);
      } else {
        // Astral code point; split in surrogate halves
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        codePoint -= 0x10000;
        highSurrogate = (codePoint >> 10) + 0xD800;
        lowSurrogate = (codePoint % 0x400) + 0xDC00;
        codeUnits.push(highSurrogate, lowSurrogate);
      }
      if (index + 1 == length || codeUnits.length > MAX_SIZE) {
        result += stringFromCharCode.apply(null, codeUnits);
        codeUnits.length = 0;
      }
    }
    return result;
  }

  /*--------------------------------------------------------------------------*/

  // Ensures that nodes have the correct types.
  var assertTypeRegexMap = {};
  function assertType(type, expected) {
    if (expected.indexOf('|') == -1) {
      if (type == expected) {
        return;
      }

      throw Error('Invalid node type: ' + type + '; expected type: ' + expected);
    }

    expected = hasOwnProperty.call(assertTypeRegexMap, expected)
      ? assertTypeRegexMap[expected]
      : (assertTypeRegexMap[expected] = RegExp('^(?:' + expected + ')$'));

    if (expected.test(type)) {
      return;
    }

    throw Error('Invalid node type: ' + type + '; expected types: ' + expected);
  }

  /*--------------------------------------------------------------------------*/

  // Generates a regular expression string based on an AST.
  function generate(node) {
    var type = node.type;

    if (hasOwnProperty.call(generators, type)) {
      return generators[type](node);
    }

    throw Error('Invalid node type: ' + type);
  }

  /*--------------------------------------------------------------------------*/

  function generateAlternative(node) {
    assertType(node.type, 'alternative');

    var terms = node.body,
        i = -1,
        length = terms.length,
        result = '';

    while (++i < length) {
      result += generateTerm(terms[i]);
    }

    return result;
  }

  function generateAnchor(node) {
    assertType(node.type, 'anchor');

    switch (node.kind) {
      case 'start':
        return '^';
      case 'end':
        return '$';
      case 'boundary':
        return '\\b';
      case 'not-boundary':
        return '\\B';
      default:
        throw Error('Invalid assertion');
    }
  }

  function generateAtom(node) {
    assertType(node.type, 'anchor|characterClass|characterClassEscape|dot|group|reference|value');

    return generate(node);
  }

  function generateCharacterClass(node) {
    assertType(node.type, 'characterClass');

    var classRanges = node.body,
        i = -1,
        length = classRanges.length,
        result = '';

    if (node.negative) {
      result += '^';
    }

    while (++i < length) {
      result += generateClassAtom(classRanges[i]);
    }

    return '[' + result + ']';
  }

  function generateCharacterClassEscape(node) {
    assertType(node.type, 'characterClassEscape');

    return '\\' + node.value;
  }

  function generateUnicodePropertyEscape(node) {
    assertType(node.type, 'unicodePropertyEscape');

    return '\\' + (node.negative ? 'P' : 'p') + '{' + node.value + '}';
  }

  function generateCharacterClassRange(node) {
    assertType(node.type, 'characterClassRange');

    var min = node.min,
        max = node.max;

    if (min.type == 'characterClassRange' || max.type == 'characterClassRange') {
      throw Error('Invalid character class range');
    }

    return generateClassAtom(min) + '-' + generateClassAtom(max);
  }

  function generateClassAtom(node) {
    assertType(node.type, 'anchor|characterClassEscape|characterClassRange|dot|value');

    return generate(node);
  }

  function generateDisjunction(node) {
    assertType(node.type, 'disjunction');

    var body = node.body,
        i = -1,
        length = body.length,
        result = '';

    while (++i < length) {
      if (i != 0) {
        result += '|';
      }
      result += generate(body[i]);
    }

    return result;
  }

  function generateDot(node) {
    assertType(node.type, 'dot');

    return '.';
  }

  function generateGroup(node) {
    assertType(node.type, 'group');

    var result = '';

    switch (node.behavior) {
      case 'normal':
        break;
      case 'ignore':
        result += '?:';
        break;
      case 'lookahead':
        result += '?=';
        break;
      case 'negativeLookahead':
        result += '?!';
        break;
      default:
        throw Error('Invalid behaviour: ' + node.behaviour);
    }

    var body = node.body,
        i = -1,
        length = body.length;

    while (++i < length) {
      result += generate(body[i]);
    }

    return '(' + result + ')';
  }

  function generateQuantifier(node) {
    assertType(node.type, 'quantifier');

    var quantifier = '',
        min = node.min,
        max = node.max;

    if (max == null) {
      if (min == 0) {
        quantifier = '*';
      } else if (min == 1) {
        quantifier = '+';
      } else {
        quantifier = '{' + min + ',}';
      }
    } else if (min == max) {
      quantifier = '{' + min + '}';
    } else if (min == 0 && max == 1) {
      quantifier = '?';
    } else {
      quantifier = '{' + min + ',' + max + '}';
    }

    if (!node.greedy) {
      quantifier += '?';
    }

    return generateAtom(node.body[0]) + quantifier;
  }

  function generateReference(node) {
    assertType(node.type, 'reference');

    return '\\' + node.matchIndex;
  }

  function generateTerm(node) {
    assertType(node.type, 'anchor|characterClass|characterClassEscape|empty|group|quantifier|reference|unicodePropertyEscape|value');

    return generate(node);
  }

  function generateValue(node) {
    assertType(node.type, 'value');

    var kind = node.kind,
        codePoint = node.codePoint;

    switch (kind) {
      case 'controlLetter':
        return '\\c' + fromCodePoint(codePoint + 64);
      case 'hexadecimalEscape':
        return '\\x' + ('00' + codePoint.toString(16).toUpperCase()).slice(-2);
      case 'identifier':
        return '\\' + fromCodePoint(codePoint);
      case 'null':
        return '\\' + codePoint;
      case 'octal':
        return '\\' + codePoint.toString(8);
      case 'singleEscape':
        switch (codePoint) {
          case 0x0008:
            return '\\b';
          case 0x0009:
            return '\\t';
          case 0x000A:
            return '\\n';
          case 0x000B:
            return '\\v';
          case 0x000C:
            return '\\f';
          case 0x000D:
            return '\\r';
          default:
            throw Error('Invalid codepoint: ' + codePoint);
        }
      case 'symbol':
        return fromCodePoint(codePoint);
      case 'unicodeEscape':
        return '\\u' + ('0000' + codePoint.toString(16).toUpperCase()).slice(-4);
      case 'unicodeCodePointEscape':
        return '\\u{' + codePoint.toString(16).toUpperCase() + '}';
      default:
        throw Error('Unsupported node kind: ' + kind);
    }
  }

  /*--------------------------------------------------------------------------*/

  // Used to generate strings for each node type.
  var generators = {
    'alternative': generateAlternative,
    'anchor': generateAnchor,
    'characterClass': generateCharacterClass,
    'characterClassEscape': generateCharacterClassEscape,
    'characterClassRange': generateCharacterClassRange,
    'unicodePropertyEscape': generateUnicodePropertyEscape,
    'disjunction': generateDisjunction,
    'dot': generateDot,
    'group': generateGroup,
    'quantifier': generateQuantifier,
    'reference': generateReference,
    'value': generateValue
  };

  /*--------------------------------------------------------------------------*/

  // Export regjsgen.
  // Some AMD build optimizers, like r.js, check for condition patterns like the following:
  if (false) {}
  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.
  else if (freeExports && freeModule) {
    // Export for CommonJS support.
    freeExports.generate = generate;
  }
  else {
    // Export to the global object.
    root.regjsgen = {
      'generate': generate
    };
  }
}.call(commonjsGlobal));
});

var parser = createCommonjsModule(function (module) {
// regjsparser
//
// ==================================================================
//
// See ECMA-262 Standard: 15.10.1
//
// NOTE: The ECMA-262 standard uses the term "Assertion" for /^/. Here the
//   term "Anchor" is used.
//
// Pattern ::
//      Disjunction
//
// Disjunction ::
//      Alternative
//      Alternative | Disjunction
//
// Alternative ::
//      [empty]
//      Alternative Term
//
// Term ::
//      Anchor
//      Atom
//      Atom Quantifier
//
// Anchor ::
//      ^
//      $
//      \ b
//      \ B
//      ( ? = Disjunction )
//      ( ? ! Disjunction )
//
// Quantifier ::
//      QuantifierPrefix
//      QuantifierPrefix ?
//
// QuantifierPrefix ::
//      *
//      +
//      ?
//      { DecimalDigits }
//      { DecimalDigits , }
//      { DecimalDigits , DecimalDigits }
//
// Atom ::
//      PatternCharacter
//      .
//      \ AtomEscape
//      CharacterClass
//      ( Disjunction )
//      ( ? : Disjunction )
//
// PatternCharacter ::
//      SourceCharacter but not any of: ^ $ \ . * + ? ( ) [ ] { } |
//
// AtomEscape ::
//      DecimalEscape
//      CharacterEscape
//      CharacterClassEscape
//
// CharacterEscape[U] ::
//      ControlEscape
//      c ControlLetter
//      HexEscapeSequence
//      RegExpUnicodeEscapeSequence[?U] (ES6)
//      IdentityEscape[?U]
//
// ControlEscape ::
//      one of f n r t v
// ControlLetter ::
//      one of
//          a b c d e f g h i j k l m n o p q r s t u v w x y z
//          A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
//
// IdentityEscape ::
//      SourceCharacter but not IdentifierPart
//      <ZWJ>
//      <ZWNJ>
//
// DecimalEscape ::
//      DecimalIntegerLiteral [lookahead ∉ DecimalDigit]
//
// CharacterClassEscape ::
//      one of d D s S w W
//
// CharacterClass ::
//      [ [lookahead ∉ {^}] ClassRanges ]
//      [ ^ ClassRanges ]
//
// ClassRanges ::
//      [empty]
//      NonemptyClassRanges
//
// NonemptyClassRanges ::
//      ClassAtom
//      ClassAtom NonemptyClassRangesNoDash
//      ClassAtom - ClassAtom ClassRanges
//
// NonemptyClassRangesNoDash ::
//      ClassAtom
//      ClassAtomNoDash NonemptyClassRangesNoDash
//      ClassAtomNoDash - ClassAtom ClassRanges
//
// ClassAtom ::
//      -
//      ClassAtomNoDash
//
// ClassAtomNoDash ::
//      SourceCharacter but not one of \ or ] or -
//      \ ClassEscape
//
// ClassEscape ::
//      DecimalEscape
//      b
//      CharacterEscape
//      CharacterClassEscape

(function() {

  function parse(str, flags, features) {
    if (!features) {
      features = {};
    }
    function addRaw(node) {
      node.raw = str.substring(node.range[0], node.range[1]);
      return node;
    }

    function updateRawStart(node, start) {
      node.range[0] = start;
      return addRaw(node);
    }

    function createAnchor(kind, rawLength) {
      return addRaw({
        type: 'anchor',
        kind: kind,
        range: [
          pos - rawLength,
          pos
        ]
      });
    }

    function createValue(kind, codePoint, from, to) {
      return addRaw({
        type: 'value',
        kind: kind,
        codePoint: codePoint,
        range: [from, to]
      });
    }

    function createEscaped(kind, codePoint, value, fromOffset) {
      fromOffset = fromOffset || 0;
      return createValue(kind, codePoint, pos - (value.length + fromOffset), pos);
    }

    function createCharacter(matches) {
      var _char = matches[0];
      var first = _char.charCodeAt(0);
      if (hasUnicodeFlag) {
        var second;
        if (_char.length === 1 && first >= 0xD800 && first <= 0xDBFF) {
          second = lookahead().charCodeAt(0);
          if (second >= 0xDC00 && second <= 0xDFFF) {
            // Unicode surrogate pair
            pos++;
            return createValue(
                'symbol',
                (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000,
                pos - 2, pos);
          }
        }
      }
      return createValue('symbol', first, pos - 1, pos);
    }

    function createDisjunction(alternatives, from, to) {
      return addRaw({
        type: 'disjunction',
        body: alternatives,
        range: [
          from,
          to
        ]
      });
    }

    function createDot() {
      return addRaw({
        type: 'dot',
        range: [
          pos - 1,
          pos
        ]
      });
    }

    function createCharacterClassEscape(value) {
      return addRaw({
        type: 'characterClassEscape',
        value: value,
        range: [
          pos - 2,
          pos
        ]
      });
    }

    function createReference(matchIndex) {
      return addRaw({
        type: 'reference',
        matchIndex: parseInt(matchIndex, 10),
        range: [
          pos - 1 - matchIndex.length,
          pos
        ]
      });
    }

    function createGroup(behavior, disjunction, from, to) {
      return addRaw({
        type: 'group',
        behavior: behavior,
        body: disjunction,
        range: [
          from,
          to
        ]
      });
    }

    function createQuantifier(min, max, from, to) {
      if (to == null) {
        from = pos - 1;
        to = pos;
      }

      return addRaw({
        type: 'quantifier',
        min: min,
        max: max,
        greedy: true,
        body: null, // set later on
        range: [
          from,
          to
        ]
      });
    }

    function createAlternative(terms, from, to) {
      return addRaw({
        type: 'alternative',
        body: terms,
        range: [
          from,
          to
        ]
      });
    }

    function createCharacterClass(classRanges, negative, from, to) {
      return addRaw({
        type: 'characterClass',
        body: classRanges,
        negative: negative,
        range: [
          from,
          to
        ]
      });
    }

    function createClassRange(min, max, from, to) {
      // See 15.10.2.15:
      if (min.codePoint > max.codePoint) {
        bail('invalid range in character class', min.raw + '-' + max.raw, from, to);
      }

      return addRaw({
        type: 'characterClassRange',
        min: min,
        max: max,
        range: [
          from,
          to
        ]
      });
    }

    function flattenBody(body) {
      if (body.type === 'alternative') {
        return body.body;
      } else {
        return [body];
      }
    }

    function incr(amount) {
      amount = (amount || 1);
      var res = str.substring(pos, pos + amount);
      pos += (amount || 1);
      return res;
    }

    function skip(value) {
      if (!match(value)) {
        bail('character', value);
      }
    }

    function match(value) {
      if (str.indexOf(value, pos) === pos) {
        return incr(value.length);
      }
    }

    function lookahead() {
      return str[pos];
    }

    function current(value) {
      return str.indexOf(value, pos) === pos;
    }

    function next(value) {
      return str[pos + 1] === value;
    }

    function matchReg(regExp) {
      var subStr = str.substring(pos);
      var res = subStr.match(regExp);
      if (res) {
        res.range = [];
        res.range[0] = pos;
        incr(res[0].length);
        res.range[1] = pos;
      }
      return res;
    }

    function parseDisjunction() {
      // Disjunction ::
      //      Alternative
      //      Alternative | Disjunction
      var res = [], from = pos;
      res.push(parseAlternative());

      while (match('|')) {
        res.push(parseAlternative());
      }

      if (res.length === 1) {
        return res[0];
      }

      return createDisjunction(res, from, pos);
    }

    function parseAlternative() {
      var res = [], from = pos;
      var term;

      // Alternative ::
      //      [empty]
      //      Alternative Term
      while (term = parseTerm()) {
        res.push(term);
      }

      if (res.length === 1) {
        return res[0];
      }

      return createAlternative(res, from, pos);
    }

    function parseTerm() {
      // Term ::
      //      Anchor
      //      Atom
      //      Atom Quantifier

      if (pos >= str.length || current('|') || current(')')) {
        return null; /* Means: The term is empty */
      }

      var anchor = parseAnchor();

      if (anchor) {
        return anchor;
      }

      var atom = parseAtom();
      if (!atom) {
        bail('Expected atom');
      }
      var quantifier = parseQuantifier() || false;
      if (quantifier) {
        quantifier.body = flattenBody(atom);
        // The quantifier contains the atom. Therefore, the beginning of the
        // quantifier range is given by the beginning of the atom.
        updateRawStart(quantifier, atom.range[0]);
        return quantifier;
      }
      return atom;
    }

    function parseGroup(matchA, typeA, matchB, typeB) {
      var type = null, from = pos;

      if (match(matchA)) {
        type = typeA;
      } else if (match(matchB)) {
        type = typeB;
      } else {
        return false;
      }

      var body = parseDisjunction();
      if (!body) {
        bail('Expected disjunction');
      }
      skip(')');
      var group = createGroup(type, flattenBody(body), from, pos);

      if (type == 'normal') {
        // Keep track of the number of closed groups. This is required for
        // parseDecimalEscape(). In case the string is parsed a second time the
        // value already holds the total count and no incrementation is required.
        if (firstIteration) {
          closedCaptureCounter++;
        }
      }
      return group;
    }

    function parseAnchor() {
      // Anchor ::
      //      ^
      //      $
      //      \ b
      //      \ B
      //      ( ? = Disjunction )
      //      ( ? ! Disjunction )
      if (match('^')) {
        return createAnchor('start', 1 /* rawLength */);
      } else if (match('$')) {
        return createAnchor('end', 1 /* rawLength */);
      } else if (match('\\b')) {
        return createAnchor('boundary', 2 /* rawLength */);
      } else if (match('\\B')) {
        return createAnchor('not-boundary', 2 /* rawLength */);
      } else {
        return parseGroup('(?=', 'lookahead', '(?!', 'negativeLookahead');
      }
    }

    function parseQuantifier() {
      // Quantifier ::
      //      QuantifierPrefix
      //      QuantifierPrefix ?
      //
      // QuantifierPrefix ::
      //      *
      //      +
      //      ?
      //      { DecimalDigits }
      //      { DecimalDigits , }
      //      { DecimalDigits , DecimalDigits }

      var res, from = pos;
      var quantifier;
      var min, max;

      if (match('*')) {
        quantifier = createQuantifier(0);
      }
      else if (match('+')) {
        quantifier = createQuantifier(1);
      }
      else if (match('?')) {
        quantifier = createQuantifier(0, 1);
      }
      else if (res = matchReg(/^\{([0-9]+)\}/)) {
        min = parseInt(res[1], 10);
        quantifier = createQuantifier(min, min, res.range[0], res.range[1]);
      }
      else if (res = matchReg(/^\{([0-9]+),\}/)) {
        min = parseInt(res[1], 10);
        quantifier = createQuantifier(min, undefined, res.range[0], res.range[1]);
      }
      else if (res = matchReg(/^\{([0-9]+),([0-9]+)\}/)) {
        min = parseInt(res[1], 10);
        max = parseInt(res[2], 10);
        if (min > max) {
          bail('numbers out of order in {} quantifier', '', from, pos);
        }
        quantifier = createQuantifier(min, max, res.range[0], res.range[1]);
      }

      if (quantifier) {
        if (match('?')) {
          quantifier.greedy = false;
          quantifier.range[1] += 1;
        }
      }

      return quantifier;
    }

    function parseAtom() {
      // Atom ::
      //      PatternCharacter
      //      .
      //      \ AtomEscape
      //      CharacterClass
      //      ( Disjunction )
      //      ( ? : Disjunction )

      var res;

      // jviereck: allow ']', '}' here as well to be compatible with browser's
      //   implementations: ']'.match(/]/);
      // if (res = matchReg(/^[^^$\\.*+?()[\]{}|]/)) {
      if (res = matchReg(/^[^^$\\.*+?(){[|]/)) {
        //      PatternCharacter
        return createCharacter(res);
      }
      else if (match('.')) {
        //      .
        return createDot();
      }
      else if (match('\\')) {
        //      \ AtomEscape
        res = parseAtomEscape();
        if (!res) {
          bail('atomEscape');
        }
        return res;
      }
      else if (res = parseCharacterClass()) {
        return res;
      }
      else {
        //      ( Disjunction )
        //      ( ? : Disjunction )
        return parseGroup('(?:', 'ignore', '(', 'normal');
      }
    }

    function parseUnicodeSurrogatePairEscape(firstEscape) {
      if (hasUnicodeFlag) {
        var first, second;
        if (firstEscape.kind == 'unicodeEscape' &&
          (first = firstEscape.codePoint) >= 0xD800 && first <= 0xDBFF &&
          current('\\') && next('u') ) {
          var prevPos = pos;
          pos++;
          var secondEscape = parseClassEscape();
          if (secondEscape.kind == 'unicodeEscape' &&
            (second = secondEscape.codePoint) >= 0xDC00 && second <= 0xDFFF) {
            // Unicode surrogate pair
            firstEscape.range[1] = secondEscape.range[1];
            firstEscape.codePoint = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;
            firstEscape.type = 'value';
            firstEscape.kind = 'unicodeCodePointEscape';
            addRaw(firstEscape);
          }
          else {
            pos = prevPos;
          }
        }
      }
      return firstEscape;
    }

    function parseClassEscape() {
      return parseAtomEscape(true);
    }

    function parseAtomEscape(insideCharacterClass) {
      // AtomEscape ::
      //      DecimalEscape
      //      CharacterEscape
      //      CharacterClassEscape

      var res, from = pos;

      res = parseDecimalEscape();
      if (res) {
        return res;
      }

      // For ClassEscape
      if (insideCharacterClass) {
        if (match('b')) {
          // 15.10.2.19
          // The production ClassEscape :: b evaluates by returning the
          // CharSet containing the one character <BS> (Unicode value 0008).
          return createEscaped('singleEscape', 0x0008, '\\b');
        } else if (match('B')) {
          bail('\\B not possible inside of CharacterClass', '', from);
        }
      }

      res = parseCharacterEscape();

      return res;
    }


    function parseDecimalEscape() {
      // DecimalEscape ::
      //      DecimalIntegerLiteral [lookahead ∉ DecimalDigit]
      //      CharacterClassEscape :: one of d D s S w W

      var res, match;

      if (res = matchReg(/^(?!0)\d+/)) {
        match = res[0];
        var refIdx = parseInt(res[0], 10);
        if (refIdx <= closedCaptureCounter) {
          // If the number is smaller than the normal-groups found so
          // far, then it is a reference...
          return createReference(res[0]);
        } else {
          // ... otherwise it needs to be interpreted as a octal (if the
          // number is in an octal format). If it is NOT octal format,
          // then the slash is ignored and the number is matched later
          // as normal characters.

          // Recall the negative decision to decide if the input must be parsed
          // a second time with the total normal-groups.
          backrefDenied.push(refIdx);

          // Reset the position again, as maybe only parts of the previous
          // matched numbers are actual octal numbers. E.g. in '019' only
          // the '01' should be matched.
          incr(-res[0].length);
          if (res = matchReg(/^[0-7]{1,3}/)) {
            return createEscaped('octal', parseInt(res[0], 8), res[0], 1);
          } else {
            // If we end up here, we have a case like /\91/. Then the
            // first slash is to be ignored and the 9 & 1 to be treated
            // like ordinary characters. Create a character for the
            // first number only here - other number-characters
            // (if available) will be matched later.
            res = createCharacter(matchReg(/^[89]/));
            return updateRawStart(res, res.range[0] - 1);
          }
        }
      }
      // Only allow octal numbers in the following. All matched numbers start
      // with a zero (if the do not, the previous if-branch is executed).
      // If the number is not octal format and starts with zero (e.g. `091`)
      // then only the zeros `0` is treated here and the `91` are ordinary
      // characters.
      // Example:
      //   /\091/.exec('\091')[0].length === 3
      else if (res = matchReg(/^[0-7]{1,3}/)) {
        match = res[0];
        if (/^0{1,3}$/.test(match)) {
          // If they are all zeros, then only take the first one.
          return createEscaped('null', 0x0000, '0', match.length + 1);
        } else {
          return createEscaped('octal', parseInt(match, 8), match, 1);
        }
      } else if (res = matchReg(/^[dDsSwW]/)) {
        return createCharacterClassEscape(res[0]);
      }
      return false;
    }

    function parseCharacterEscape() {
      // CharacterEscape ::
      //      ControlEscape
      //      c ControlLetter
      //      HexEscapeSequence
      //      UnicodeEscapeSequence
      //      IdentityEscape

      var res;
      if (res = matchReg(/^[fnrtv]/)) {
        // ControlEscape
        var codePoint = 0;
        switch (res[0]) {
          case 't': codePoint = 0x009; break;
          case 'n': codePoint = 0x00A; break;
          case 'v': codePoint = 0x00B; break;
          case 'f': codePoint = 0x00C; break;
          case 'r': codePoint = 0x00D; break;
        }
        return createEscaped('singleEscape', codePoint, '\\' + res[0]);
      } else if (res = matchReg(/^c([a-zA-Z])/)) {
        // c ControlLetter
        return createEscaped('controlLetter', res[1].charCodeAt(0) % 32, res[1], 2);
      } else if (res = matchReg(/^x([0-9a-fA-F]{2})/)) {
        // HexEscapeSequence
        return createEscaped('hexadecimalEscape', parseInt(res[1], 16), res[1], 2);
      } else if (res = matchReg(/^u([0-9a-fA-F]{4})/)) {
        // UnicodeEscapeSequence
        return parseUnicodeSurrogatePairEscape(
          createEscaped('unicodeEscape', parseInt(res[1], 16), res[1], 2)
        );
      } else if (hasUnicodeFlag && (res = matchReg(/^u\{([0-9a-fA-F]+)\}/))) {
        // RegExpUnicodeEscapeSequence (ES6 Unicode code point escape)
        return createEscaped('unicodeCodePointEscape', parseInt(res[1], 16), res[1], 4);
      } else if (features.unicodePropertyEscape && hasUnicodeFlag && (res = matchReg(/^([pP])\{([^\}]+)\}/))) {
        // https://github.com/jviereck/regjsparser/issues/77
        return addRaw({
          type: 'unicodePropertyEscape',
          negative: res[1] === 'P',
          value: res[2],
          range: [res.range[0] - 1, res.range[1]],
          raw: res[0]
        });
      } else {
        // IdentityEscape
        return parseIdentityEscape();
      }
    }

    // Taken from the Esprima parser.
    function isIdentifierPart(ch) {
      // Generated by `tools/generate-identifier-regex.js`.
      var NonAsciiIdentifierPart = new RegExp('[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]');

      return (ch === 36) || (ch === 95) ||  // $ (dollar) and _ (underscore)
        (ch >= 65 && ch <= 90) ||         // A..Z
        (ch >= 97 && ch <= 122) ||        // a..z
        (ch >= 48 && ch <= 57) ||         // 0..9
        (ch === 92) ||                    // \ (backslash)
        ((ch >= 0x80) && NonAsciiIdentifierPart.test(String.fromCharCode(ch)));
    }

    function parseIdentityEscape() {
      // IdentityEscape ::
      //      SourceCharacter but not IdentifierPart
      //      <ZWJ>
      //      <ZWNJ>

      var ZWJ = '\u200C';
      var ZWNJ = '\u200D';

      var tmp;

      if (!isIdentifierPart(lookahead())) {
        tmp = incr();
        return createEscaped('identifier', tmp.charCodeAt(0), tmp, 1);
      }

      if (match(ZWJ)) {
        // <ZWJ>
        return createEscaped('identifier', 0x200C, ZWJ);
      } else if (match(ZWNJ)) {
        // <ZWNJ>
        return createEscaped('identifier', 0x200D, ZWNJ);
      }

      return null;
    }

    function parseCharacterClass() {
      // CharacterClass ::
      //      [ [lookahead ∉ {^}] ClassRanges ]
      //      [ ^ ClassRanges ]

      var res, from = pos;
      if (res = matchReg(/^\[\^/)) {
        res = parseClassRanges();
        skip(']');
        return createCharacterClass(res, true, from, pos);
      } else if (match('[')) {
        res = parseClassRanges();
        skip(']');
        return createCharacterClass(res, false, from, pos);
      }

      return null;
    }

    function parseClassRanges() {
      // ClassRanges ::
      //      [empty]
      //      NonemptyClassRanges

      var res;
      if (current(']')) {
        // Empty array means nothing insinde of the ClassRange.
        return [];
      } else {
        res = parseNonemptyClassRanges();
        if (!res) {
          bail('nonEmptyClassRanges');
        }
        return res;
      }
    }

    function parseHelperClassRanges(atom) {
      var from, to, res;
      if (current('-') && !next(']')) {
        // ClassAtom - ClassAtom ClassRanges
        skip('-');

        res = parseClassAtom();
        if (!res) {
          bail('classAtom');
        }
        to = pos;
        var classRanges = parseClassRanges();
        if (!classRanges) {
          bail('classRanges');
        }
        from = atom.range[0];
        if (classRanges.type === 'empty') {
          return [createClassRange(atom, res, from, to)];
        }
        return [createClassRange(atom, res, from, to)].concat(classRanges);
      }

      res = parseNonemptyClassRangesNoDash();
      if (!res) {
        bail('nonEmptyClassRangesNoDash');
      }

      return [atom].concat(res);
    }

    function parseNonemptyClassRanges() {
      // NonemptyClassRanges ::
      //      ClassAtom
      //      ClassAtom NonemptyClassRangesNoDash
      //      ClassAtom - ClassAtom ClassRanges

      var atom = parseClassAtom();
      if (!atom) {
        bail('classAtom');
      }

      if (current(']')) {
        // ClassAtom
        return [atom];
      }

      // ClassAtom NonemptyClassRangesNoDash
      // ClassAtom - ClassAtom ClassRanges
      return parseHelperClassRanges(atom);
    }

    function parseNonemptyClassRangesNoDash() {
      // NonemptyClassRangesNoDash ::
      //      ClassAtom
      //      ClassAtomNoDash NonemptyClassRangesNoDash
      //      ClassAtomNoDash - ClassAtom ClassRanges

      var res = parseClassAtom();
      if (!res) {
        bail('classAtom');
      }
      if (current(']')) {
        //      ClassAtom
        return res;
      }

      // ClassAtomNoDash NonemptyClassRangesNoDash
      // ClassAtomNoDash - ClassAtom ClassRanges
      return parseHelperClassRanges(res);
    }

    function parseClassAtom() {
      // ClassAtom ::
      //      -
      //      ClassAtomNoDash
      if (match('-')) {
        return createCharacter('-');
      } else {
        return parseClassAtomNoDash();
      }
    }

    function parseClassAtomNoDash() {
      // ClassAtomNoDash ::
      //      SourceCharacter but not one of \ or ] or -
      //      \ ClassEscape

      var res;
      if (res = matchReg(/^[^\\\]-]/)) {
        return createCharacter(res[0]);
      } else if (match('\\')) {
        res = parseClassEscape();
        if (!res) {
          bail('classEscape');
        }

        return parseUnicodeSurrogatePairEscape(res);
      }
    }

    function bail(message, details, from, to) {
      from = from == null ? pos : from;
      to = to == null ? from : to;

      var contextStart = Math.max(0, from - 10);
      var contextEnd = Math.min(to + 10, str.length);

      // Output a bit of context and a line pointing to where our error is.
      //
      // We are assuming that there are no actual newlines in the content as this is a regular expression.
      var context = '    ' + str.substring(contextStart, contextEnd);
      var pointer = '    ' + new Array(from - contextStart + 1).join(' ') + '^';

      throw SyntaxError(message + ' at position ' + from + (details ? ': ' + details : '') + '\n' + context + '\n' + pointer);
    }

    var backrefDenied = [];
    var closedCaptureCounter = 0;
    var firstIteration = true;
    var hasUnicodeFlag = (flags || "").indexOf("u") !== -1;
    var pos = 0;

    // Convert the input to a string and treat the empty string special.
    str = String(str);
    if (str === '') {
      str = '(?:)';
    }

    var result = parseDisjunction();

    if (result.range[1] !== str.length) {
      bail('Could not parse entire input - got stuck', '', result.range[1]);
    }

    // The spec requires to interpret the `\2` in `/\2()()/` as backreference.
    // As the parser collects the number of capture groups as the string is
    // parsed it is impossible to make these decisions at the point when the
    // `\2` is handled. In case the local decision turns out to be wrong after
    // the parsing has finished, the input string is parsed a second time with
    // the total number of capture groups set.
    //
    // SEE: https://github.com/jviereck/regjsparser/issues/70
    for (var i = 0; i < backrefDenied.length; i++) {
      if (backrefDenied[i] <= closedCaptureCounter) {
        // Parse the input a second time.
        pos = 0;
        firstIteration = false;
        return parseDisjunction();
      }
    }

    return result;
  }

  var regjsparser = {
    parse: parse
  };

  if ( true && module.exports) {
    module.exports = regjsparser;
  } else {
    window.regjsparser = regjsparser;
  }

}());
});

var regenerate = createCommonjsModule(function (module, exports) {
/*! https://mths.be/regenerate v1.3.3 by @mathias | MIT license */
(function(root) {

	// Detect free variables `exports`.
	var freeExports =  true && exports;

	// Detect free variable `module`.
	var freeModule =  true && module &&
		module.exports == freeExports && module;

	// Detect free variable `global`, from Node.js/io.js or Browserified code,
	// and use it as `root`.
	var freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal;
	if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {
		root = freeGlobal;
	}

	/*--------------------------------------------------------------------------*/

	var ERRORS = {
		'rangeOrder': 'A range\u2019s `stop` value must be greater than or equal ' +
			'to the `start` value.',
		'codePointRange': 'Invalid code point value. Code points range from ' +
			'U+000000 to U+10FFFF.'
	};

	// https://mathiasbynens.be/notes/javascript-encoding#surrogate-pairs
	var HIGH_SURROGATE_MIN = 0xD800;
	var HIGH_SURROGATE_MAX = 0xDBFF;
	var LOW_SURROGATE_MIN = 0xDC00;
	var LOW_SURROGATE_MAX = 0xDFFF;

	// In Regenerate output, `\0` is never preceded by `\` because we sort by
	// code point value, so let’s keep this regular expression simple.
	var regexNull = /\\x00([^0123456789]|$)/g;

	var object = {};
	var hasOwnProperty = object.hasOwnProperty;
	var extend = function(destination, source) {
		var key;
		for (key in source) {
			if (hasOwnProperty.call(source, key)) {
				destination[key] = source[key];
			}
		}
		return destination;
	};

	var forEach = function(array, callback) {
		var index = -1;
		var length = array.length;
		while (++index < length) {
			callback(array[index], index);
		}
	};

	var toString = object.toString;
	var isArray = function(value) {
		return toString.call(value) == '[object Array]';
	};
	var isNumber = function(value) {
		return typeof value == 'number' ||
			toString.call(value) == '[object Number]';
	};

	// This assumes that `number` is a positive integer that `toString()`s nicely
	// (which is the case for all code point values).
	var zeroes = '0000';
	var pad = function(number, totalCharacters) {
		var string = String(number);
		return string.length < totalCharacters
			? (zeroes + string).slice(-totalCharacters)
			: string;
	};

	var hex = function(number) {
		return Number(number).toString(16).toUpperCase();
	};

	var slice = [].slice;

	/*--------------------------------------------------------------------------*/

	var dataFromCodePoints = function(codePoints) {
		var index = -1;
		var length = codePoints.length;
		var max = length - 1;
		var result = [];
		var isStart = true;
		var tmp;
		var previous = 0;
		while (++index < length) {
			tmp = codePoints[index];
			if (isStart) {
				result.push(tmp);
				previous = tmp;
				isStart = false;
			} else {
				if (tmp == previous + 1) {
					if (index != max) {
						previous = tmp;
						continue;
					} else {
						isStart = true;
						result.push(tmp + 1);
					}
				} else {
					// End the previous range and start a new one.
					result.push(previous + 1, tmp);
					previous = tmp;
				}
			}
		}
		if (!isStart) {
			result.push(tmp + 1);
		}
		return result;
	};

	var dataRemove = function(data, codePoint) {
		// Iterate over the data per `(start, end)` pair.
		var index = 0;
		var start;
		var end;
		var length = data.length;
		while (index < length) {
			start = data[index];
			end = data[index + 1];
			if (codePoint >= start && codePoint < end) {
				// Modify this pair.
				if (codePoint == start) {
					if (end == start + 1) {
						// Just remove `start` and `end`.
						data.splice(index, 2);
						return data;
					} else {
						// Just replace `start` with a new value.
						data[index] = codePoint + 1;
						return data;
					}
				} else if (codePoint == end - 1) {
					// Just replace `end` with a new value.
					data[index + 1] = codePoint;
					return data;
				} else {
					// Replace `[start, end]` with `[startA, endA, startB, endB]`.
					data.splice(index, 2, start, codePoint, codePoint + 1, end);
					return data;
				}
			}
			index += 2;
		}
		return data;
	};

	var dataRemoveRange = function(data, rangeStart, rangeEnd) {
		if (rangeEnd < rangeStart) {
			throw Error(ERRORS.rangeOrder);
		}
		// Iterate over the data per `(start, end)` pair.
		var index = 0;
		var start;
		var end;
		while (index < data.length) {
			start = data[index];
			end = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.

			// Exit as soon as no more matching pairs can be found.
			if (start > rangeEnd) {
				return data;
			}

			// Check if this range pair is equal to, or forms a subset of, the range
			// to be removed.
			// E.g. we have `[0, 11, 40, 51]` and want to remove 0-10 → `[40, 51]`.
			// E.g. we have `[40, 51]` and want to remove 0-100 → `[]`.
			if (rangeStart <= start && rangeEnd >= end) {
				// Remove this pair.
				data.splice(index, 2);
				continue;
			}

			// Check if both `rangeStart` and `rangeEnd` are within the bounds of
			// this pair.
			// E.g. we have `[0, 11]` and want to remove 4-6 → `[0, 4, 7, 11]`.
			if (rangeStart >= start && rangeEnd < end) {
				if (rangeStart == start) {
					// Replace `[start, end]` with `[startB, endB]`.
					data[index] = rangeEnd + 1;
					data[index + 1] = end + 1;
					return data;
				}
				// Replace `[start, end]` with `[startA, endA, startB, endB]`.
				data.splice(index, 2, start, rangeStart, rangeEnd + 1, end + 1);
				return data;
			}

			// Check if only `rangeStart` is within the bounds of this pair.
			// E.g. we have `[0, 11]` and want to remove 4-20 → `[0, 4]`.
			if (rangeStart >= start && rangeStart <= end) {
				// Replace `end` with `rangeStart`.
				data[index + 1] = rangeStart;
				// Note: we cannot `return` just yet, in case any following pairs still
				// contain matching code points.
				// E.g. we have `[0, 11, 14, 31]` and want to remove 4-20
				// → `[0, 4, 21, 31]`.
			}

			// Check if only `rangeEnd` is within the bounds of this pair.
			// E.g. we have `[14, 31]` and want to remove 4-20 → `[21, 31]`.
			else if (rangeEnd >= start && rangeEnd <= end) {
				// Just replace `start`.
				data[index] = rangeEnd + 1;
				return data;
			}

			index += 2;
		}
		return data;
	};

	 var dataAdd = function(data, codePoint) {
		// Iterate over the data per `(start, end)` pair.
		var index = 0;
		var start;
		var end;
		var lastIndex = null;
		var length = data.length;
		if (codePoint < 0x0 || codePoint > 0x10FFFF) {
			throw RangeError(ERRORS.codePointRange);
		}
		while (index < length) {
			start = data[index];
			end = data[index + 1];

			// Check if the code point is already in the set.
			if (codePoint >= start && codePoint < end) {
				return data;
			}

			if (codePoint == start - 1) {
				// Just replace `start` with a new value.
				data[index] = codePoint;
				return data;
			}

			// At this point, if `start` is `greater` than `codePoint`, insert a new
			// `[start, end]` pair before the current pair, or after the current pair
			// if there is a known `lastIndex`.
			if (start > codePoint) {
				data.splice(
					lastIndex != null ? lastIndex + 2 : 0,
					0,
					codePoint,
					codePoint + 1
				);
				return data;
			}

			if (codePoint == end) {
				// Check if adding this code point causes two separate ranges to become
				// a single range, e.g. `dataAdd([0, 4, 5, 10], 4)` → `[0, 10]`.
				if (codePoint + 1 == data[index + 2]) {
					data.splice(index, 4, start, data[index + 3]);
					return data;
				}
				// Else, just replace `end` with a new value.
				data[index + 1] = codePoint + 1;
				return data;
			}
			lastIndex = index;
			index += 2;
		}
		// The loop has finished; add the new pair to the end of the data set.
		data.push(codePoint, codePoint + 1);
		return data;
	};

	var dataAddData = function(dataA, dataB) {
		// Iterate over the data per `(start, end)` pair.
		var index = 0;
		var start;
		var end;
		var data = dataA.slice();
		var length = dataB.length;
		while (index < length) {
			start = dataB[index];
			end = dataB[index + 1] - 1;
			if (start == end) {
				data = dataAdd(data, start);
			} else {
				data = dataAddRange(data, start, end);
			}
			index += 2;
		}
		return data;
	};

	var dataRemoveData = function(dataA, dataB) {
		// Iterate over the data per `(start, end)` pair.
		var index = 0;
		var start;
		var end;
		var data = dataA.slice();
		var length = dataB.length;
		while (index < length) {
			start = dataB[index];
			end = dataB[index + 1] - 1;
			if (start == end) {
				data = dataRemove(data, start);
			} else {
				data = dataRemoveRange(data, start, end);
			}
			index += 2;
		}
		return data;
	};

	var dataAddRange = function(data, rangeStart, rangeEnd) {
		if (rangeEnd < rangeStart) {
			throw Error(ERRORS.rangeOrder);
		}
		if (
			rangeStart < 0x0 || rangeStart > 0x10FFFF ||
			rangeEnd < 0x0 || rangeEnd > 0x10FFFF
		) {
			throw RangeError(ERRORS.codePointRange);
		}
		// Iterate over the data per `(start, end)` pair.
		var index = 0;
		var start;
		var end;
		var added = false;
		var length = data.length;
		while (index < length) {
			start = data[index];
			end = data[index + 1];

			if (added) {
				// The range has already been added to the set; at this point, we just
				// need to get rid of the following ranges in case they overlap.

				// Check if this range can be combined with the previous range.
				if (start == rangeEnd + 1) {
					data.splice(index - 1, 2);
					return data;
				}

				// Exit as soon as no more possibly overlapping pairs can be found.
				if (start > rangeEnd) {
					return data;
				}

				// E.g. `[0, 11, 12, 16]` and we’ve added 5-15, so we now have
				// `[0, 16, 12, 16]`. Remove the `12,16` part, as it lies within the
				// `0,16` range that was previously added.
				if (start >= rangeStart && start <= rangeEnd) {
					// `start` lies within the range that was previously added.

					if (end > rangeStart && end - 1 <= rangeEnd) {
						// `end` lies within the range that was previously added as well,
						// so remove this pair.
						data.splice(index, 2);
						index -= 2;
						// Note: we cannot `return` just yet, as there may still be other
						// overlapping pairs.
					} else {
						// `start` lies within the range that was previously added, but
						// `end` doesn’t. E.g. `[0, 11, 12, 31]` and we’ve added 5-15, so
						// now we have `[0, 16, 12, 31]`. This must be written as `[0, 31]`.
						// Remove the previously added `end` and the current `start`.
						data.splice(index - 1, 2);
						index -= 2;
					}

					// Note: we cannot return yet.
				}

			}

			else if (start == rangeEnd + 1) {
				data[index] = rangeStart;
				return data;
			}

			// Check if a new pair must be inserted *before* the current one.
			else if (start > rangeEnd) {
				data.splice(index, 0, rangeStart, rangeEnd + 1);
				return data;
			}

			else if (rangeStart >= start && rangeStart < end && rangeEnd + 1 <= end) {
				// The new range lies entirely within an existing range pair. No action
				// needed.
				return data;
			}

			else if (
				// E.g. `[0, 11]` and you add 5-15 → `[0, 16]`.
				(rangeStart >= start && rangeStart < end) ||
				// E.g. `[0, 3]` and you add 3-6 → `[0, 7]`.
				end == rangeStart
			) {
				// Replace `end` with the new value.
				data[index + 1] = rangeEnd + 1;
				// Make sure the next range pair doesn’t overlap, e.g. `[0, 11, 12, 14]`
				// and you add 5-15 → `[0, 16]`, i.e. remove the `12,14` part.
				added = true;
				// Note: we cannot `return` just yet.
			}

			else if (rangeStart <= start && rangeEnd + 1 >= end) {
				// The new range is a superset of the old range.
				data[index] = rangeStart;
				data[index + 1] = rangeEnd + 1;
				added = true;
			}

			index += 2;
		}
		// The loop has finished without doing anything; add the new pair to the end
		// of the data set.
		if (!added) {
			data.push(rangeStart, rangeEnd + 1);
		}
		return data;
	};

	var dataContains = function(data, codePoint) {
		var index = 0;
		var length = data.length;
		// Exit early if `codePoint` is not within `data`’s overall range.
		var start = data[index];
		var end = data[length - 1];
		if (length >= 2) {
			if (codePoint < start || codePoint > end) {
				return false;
			}
		}
		// Iterate over the data per `(start, end)` pair.
		while (index < length) {
			start = data[index];
			end = data[index + 1];
			if (codePoint >= start && codePoint < end) {
				return true;
			}
			index += 2;
		}
		return false;
	};

	var dataIntersection = function(data, codePoints) {
		var index = 0;
		var length = codePoints.length;
		var codePoint;
		var result = [];
		while (index < length) {
			codePoint = codePoints[index];
			if (dataContains(data, codePoint)) {
				result.push(codePoint);
			}
			++index;
		}
		return dataFromCodePoints(result);
	};

	var dataIsEmpty = function(data) {
		return !data.length;
	};

	var dataIsSingleton = function(data) {
		// Check if the set only represents a single code point.
		return data.length == 2 && data[0] + 1 == data[1];
	};

	var dataToArray = function(data) {
		// Iterate over the data per `(start, end)` pair.
		var index = 0;
		var start;
		var end;
		var result = [];
		var length = data.length;
		while (index < length) {
			start = data[index];
			end = data[index + 1];
			while (start < end) {
				result.push(start);
				++start;
			}
			index += 2;
		}
		return result;
	};

	/*--------------------------------------------------------------------------*/

	// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
	var floor = Math.floor;
	var highSurrogate = function(codePoint) {
		return parseInt(
			floor((codePoint - 0x10000) / 0x400) + HIGH_SURROGATE_MIN,
			10
		);
	};

	var lowSurrogate = function(codePoint) {
		return parseInt(
			(codePoint - 0x10000) % 0x400 + LOW_SURROGATE_MIN,
			10
		);
	};

	var stringFromCharCode = String.fromCharCode;
	var codePointToString = function(codePoint) {
		var string;
		// https://mathiasbynens.be/notes/javascript-escapes#single
		// Note: the `\b` escape sequence for U+0008 BACKSPACE in strings has a
		// different meaning in regular expressions (word boundary), so it cannot
		// be used here.
		if (codePoint == 0x09) {
			string = '\\t';
		}
		// Note: IE < 9 treats `'\v'` as `'v'`, so avoid using it.
		// else if (codePoint == 0x0B) {
		// 	string = '\\v';
		// }
		else if (codePoint == 0x0A) {
			string = '\\n';
		}
		else if (codePoint == 0x0C) {
			string = '\\f';
		}
		else if (codePoint == 0x0D) {
			string = '\\r';
		}
		else if (codePoint == 0x5C) {
			string = '\\\\';
		}
		else if (
			codePoint == 0x24 ||
			(codePoint >= 0x28 && codePoint <= 0x2B) ||
			(codePoint >= 0x2D && codePoint <= 0x2F) ||
			codePoint == 0x3F ||
			(codePoint >= 0x5B && codePoint <= 0x5E) ||
			(codePoint >= 0x7B && codePoint <= 0x7D)
		) {
			// The code point maps to an unsafe printable ASCII character;
			// backslash-escape it. Here’s the list of those symbols:
			//
			//     $()*+-./?[\]^{|}
			//
			// See #7 for more info.
			string = '\\' + stringFromCharCode(codePoint);
		}
		else if (codePoint >= 0x20 && codePoint <= 0x7E) {
			// The code point maps to one of these printable ASCII symbols
			// (including the space character):
			//
			//      !"#%&',/0123456789:;<=>@ABCDEFGHIJKLMNO
			//     PQRSTUVWXYZ_`abcdefghijklmnopqrstuvwxyz~
			//
			// These can safely be used directly.
			string = stringFromCharCode(codePoint);
		}
		else if (codePoint <= 0xFF) {
			// https://mathiasbynens.be/notes/javascript-escapes#hexadecimal
			string = '\\x' + pad(hex(codePoint), 2);
		}
		else { // `codePoint <= 0xFFFF` holds true.
			// https://mathiasbynens.be/notes/javascript-escapes#unicode
			string = '\\u' + pad(hex(codePoint), 4);
		}

		// There’s no need to account for astral symbols / surrogate pairs here,
		// since `codePointToString` is private and only used for BMP code points.
		// But if that’s what you need, just add an `else` block with this code:
		//
		//     string = '\\u' + pad(hex(highSurrogate(codePoint)), 4)
		//     	+ '\\u' + pad(hex(lowSurrogate(codePoint)), 4);

		return string;
	};

	var codePointToStringUnicode = function(codePoint) {
		if (codePoint <= 0xFFFF) {
			return codePointToString(codePoint);
		}
		return '\\u{' + codePoint.toString(16).toUpperCase() + '}';
	};

	var symbolToCodePoint = function(symbol) {
		var length = symbol.length;
		var first = symbol.charCodeAt(0);
		var second;
		if (
			first >= HIGH_SURROGATE_MIN && first <= HIGH_SURROGATE_MAX &&
			length > 1 // There is a next code unit.
		) {
			// `first` is a high surrogate, and there is a next character. Assume
			// it’s a low surrogate (else it’s invalid usage of Regenerate anyway).
			second = symbol.charCodeAt(1);
			// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
			return (first - HIGH_SURROGATE_MIN) * 0x400 +
				second - LOW_SURROGATE_MIN + 0x10000;
		}
		return first;
	};

	var createBMPCharacterClasses = function(data) {
		// Iterate over the data per `(start, end)` pair.
		var result = '';
		var index = 0;
		var start;
		var end;
		var length = data.length;
		if (dataIsSingleton(data)) {
			return codePointToString(data[0]);
		}
		while (index < length) {
			start = data[index];
			end = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.
			if (start == end) {
				result += codePointToString(start);
			} else if (start + 1 == end) {
				result += codePointToString(start) + codePointToString(end);
			} else {
				result += codePointToString(start) + '-' + codePointToString(end);
			}
			index += 2;
		}
		return '[' + result + ']';
	};

	var createUnicodeCharacterClasses = function(data) {
		// Iterate over the data per `(start, end)` pair.
		var result = '';
		var index = 0;
		var start;
		var end;
		var length = data.length;
		if (dataIsSingleton(data)) {
			return codePointToStringUnicode(data[0]);
		}
		while (index < length) {
			start = data[index];
			end = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.
			if (start == end) {
				result += codePointToStringUnicode(start);
			} else if (start + 1 == end) {
				result += codePointToStringUnicode(start) + codePointToStringUnicode(end);
			} else {
				result += codePointToStringUnicode(start) + '-' + codePointToStringUnicode(end);
			}
			index += 2;
		}
		return '[' + result + ']';
	};

	var splitAtBMP = function(data) {
		// Iterate over the data per `(start, end)` pair.
		var loneHighSurrogates = [];
		var loneLowSurrogates = [];
		var bmp = [];
		var astral = [];
		var index = 0;
		var start;
		var end;
		var length = data.length;
		while (index < length) {
			start = data[index];
			end = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.

			if (start < HIGH_SURROGATE_MIN) {

				// The range starts and ends before the high surrogate range.
				// E.g. (0, 0x10).
				if (end < HIGH_SURROGATE_MIN) {
					bmp.push(start, end + 1);
				}

				// The range starts before the high surrogate range and ends within it.
				// E.g. (0, 0xD855).
				if (end >= HIGH_SURROGATE_MIN && end <= HIGH_SURROGATE_MAX) {
					bmp.push(start, HIGH_SURROGATE_MIN);
					loneHighSurrogates.push(HIGH_SURROGATE_MIN, end + 1);
				}

				// The range starts before the high surrogate range and ends in the low
				// surrogate range. E.g. (0, 0xDCFF).
				if (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {
					bmp.push(start, HIGH_SURROGATE_MIN);
					loneHighSurrogates.push(HIGH_SURROGATE_MIN, HIGH_SURROGATE_MAX + 1);
					loneLowSurrogates.push(LOW_SURROGATE_MIN, end + 1);
				}

				// The range starts before the high surrogate range and ends after the
				// low surrogate range. E.g. (0, 0x10FFFF).
				if (end > LOW_SURROGATE_MAX) {
					bmp.push(start, HIGH_SURROGATE_MIN);
					loneHighSurrogates.push(HIGH_SURROGATE_MIN, HIGH_SURROGATE_MAX + 1);
					loneLowSurrogates.push(LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1);
					if (end <= 0xFFFF) {
						bmp.push(LOW_SURROGATE_MAX + 1, end + 1);
					} else {
						bmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);
						astral.push(0xFFFF + 1, end + 1);
					}
				}

			} else if (start >= HIGH_SURROGATE_MIN && start <= HIGH_SURROGATE_MAX) {

				// The range starts and ends in the high surrogate range.
				// E.g. (0xD855, 0xD866).
				if (end >= HIGH_SURROGATE_MIN && end <= HIGH_SURROGATE_MAX) {
					loneHighSurrogates.push(start, end + 1);
				}

				// The range starts in the high surrogate range and ends in the low
				// surrogate range. E.g. (0xD855, 0xDCFF).
				if (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {
					loneHighSurrogates.push(start, HIGH_SURROGATE_MAX + 1);
					loneLowSurrogates.push(LOW_SURROGATE_MIN, end + 1);
				}

				// The range starts in the high surrogate range and ends after the low
				// surrogate range. E.g. (0xD855, 0x10FFFF).
				if (end > LOW_SURROGATE_MAX) {
					loneHighSurrogates.push(start, HIGH_SURROGATE_MAX + 1);
					loneLowSurrogates.push(LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1);
					if (end <= 0xFFFF) {
						bmp.push(LOW_SURROGATE_MAX + 1, end + 1);
					} else {
						bmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);
						astral.push(0xFFFF + 1, end + 1);
					}
				}

			} else if (start >= LOW_SURROGATE_MIN && start <= LOW_SURROGATE_MAX) {

				// The range starts and ends in the low surrogate range.
				// E.g. (0xDCFF, 0xDDFF).
				if (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {
					loneLowSurrogates.push(start, end + 1);
				}

				// The range starts in the low surrogate range and ends after the low
				// surrogate range. E.g. (0xDCFF, 0x10FFFF).
				if (end > LOW_SURROGATE_MAX) {
					loneLowSurrogates.push(start, LOW_SURROGATE_MAX + 1);
					if (end <= 0xFFFF) {
						bmp.push(LOW_SURROGATE_MAX + 1, end + 1);
					} else {
						bmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);
						astral.push(0xFFFF + 1, end + 1);
					}
				}

			} else if (start > LOW_SURROGATE_MAX && start <= 0xFFFF) {

				// The range starts and ends after the low surrogate range.
				// E.g. (0xFFAA, 0x10FFFF).
				if (end <= 0xFFFF) {
					bmp.push(start, end + 1);
				} else {
					bmp.push(start, 0xFFFF + 1);
					astral.push(0xFFFF + 1, end + 1);
				}

			} else {

				// The range starts and ends in the astral range.
				astral.push(start, end + 1);

			}

			index += 2;
		}
		return {
			'loneHighSurrogates': loneHighSurrogates,
			'loneLowSurrogates': loneLowSurrogates,
			'bmp': bmp,
			'astral': astral
		};
	};

	var optimizeSurrogateMappings = function(surrogateMappings) {
		var result = [];
		var tmpLow = [];
		var addLow = false;
		var mapping;
		var nextMapping;
		var highSurrogates;
		var lowSurrogates;
		var nextHighSurrogates;
		var nextLowSurrogates;
		var index = -1;
		var length = surrogateMappings.length;
		while (++index < length) {
			mapping = surrogateMappings[index];
			nextMapping = surrogateMappings[index + 1];
			if (!nextMapping) {
				result.push(mapping);
				continue;
			}
			highSurrogates = mapping[0];
			lowSurrogates = mapping[1];
			nextHighSurrogates = nextMapping[0];
			nextLowSurrogates = nextMapping[1];

			// Check for identical high surrogate ranges.
			tmpLow = lowSurrogates;
			while (
				nextHighSurrogates &&
				highSurrogates[0] == nextHighSurrogates[0] &&
				highSurrogates[1] == nextHighSurrogates[1]
			) {
				// Merge with the next item.
				if (dataIsSingleton(nextLowSurrogates)) {
					tmpLow = dataAdd(tmpLow, nextLowSurrogates[0]);
				} else {
					tmpLow = dataAddRange(
						tmpLow,
						nextLowSurrogates[0],
						nextLowSurrogates[1] - 1
					);
				}
				++index;
				mapping = surrogateMappings[index];
				highSurrogates = mapping[0];
				lowSurrogates = mapping[1];
				nextMapping = surrogateMappings[index + 1];
				nextHighSurrogates = nextMapping && nextMapping[0];
				nextLowSurrogates = nextMapping && nextMapping[1];
				addLow = true;
			}
			result.push([
				highSurrogates,
				addLow ? tmpLow : lowSurrogates
			]);
			addLow = false;
		}
		return optimizeByLowSurrogates(result);
	};

	var optimizeByLowSurrogates = function(surrogateMappings) {
		if (surrogateMappings.length == 1) {
			return surrogateMappings;
		}
		var index = -1;
		var innerIndex = -1;
		while (++index < surrogateMappings.length) {
			var mapping = surrogateMappings[index];
			var lowSurrogates = mapping[1];
			var lowSurrogateStart = lowSurrogates[0];
			var lowSurrogateEnd = lowSurrogates[1];
			innerIndex = index; // Note: the loop starts at the next index.
			while (++innerIndex < surrogateMappings.length) {
				var otherMapping = surrogateMappings[innerIndex];
				var otherLowSurrogates = otherMapping[1];
				var otherLowSurrogateStart = otherLowSurrogates[0];
				var otherLowSurrogateEnd = otherLowSurrogates[1];
				if (
					lowSurrogateStart == otherLowSurrogateStart &&
					lowSurrogateEnd == otherLowSurrogateEnd
				) {
					// Add the code points in the other item to this one.
					if (dataIsSingleton(otherMapping[0])) {
						mapping[0] = dataAdd(mapping[0], otherMapping[0][0]);
					} else {
						mapping[0] = dataAddRange(
							mapping[0],
							otherMapping[0][0],
							otherMapping[0][1] - 1
						);
					}
					// Remove the other, now redundant, item.
					surrogateMappings.splice(innerIndex, 1);
					--innerIndex;
				}
			}
		}
		return surrogateMappings;
	};

	var surrogateSet = function(data) {
		// Exit early if `data` is an empty set.
		if (!data.length) {
			return [];
		}

		// Iterate over the data per `(start, end)` pair.
		var index = 0;
		var start;
		var end;
		var startHigh;
		var startLow;
		var endHigh;
		var endLow;
		var surrogateMappings = [];
		var length = data.length;
		while (index < length) {
			start = data[index];
			end = data[index + 1] - 1;

			startHigh = highSurrogate(start);
			startLow = lowSurrogate(start);
			endHigh = highSurrogate(end);
			endLow = lowSurrogate(end);

			var startsWithLowestLowSurrogate = startLow == LOW_SURROGATE_MIN;
			var endsWithHighestLowSurrogate = endLow == LOW_SURROGATE_MAX;
			var complete = false;

			// Append the previous high-surrogate-to-low-surrogate mappings.
			// Step 1: `(startHigh, startLow)` to `(startHigh, LOW_SURROGATE_MAX)`.
			if (
				startHigh == endHigh ||
				startsWithLowestLowSurrogate && endsWithHighestLowSurrogate
			) {
				surrogateMappings.push([
					[startHigh, endHigh + 1],
					[startLow, endLow + 1]
				]);
				complete = true;
			} else {
				surrogateMappings.push([
					[startHigh, startHigh + 1],
					[startLow, LOW_SURROGATE_MAX + 1]
				]);
			}

			// Step 2: `(startHigh + 1, LOW_SURROGATE_MIN)` to
			// `(endHigh - 1, LOW_SURROGATE_MAX)`.
			if (!complete && startHigh + 1 < endHigh) {
				if (endsWithHighestLowSurrogate) {
					// Combine step 2 and step 3.
					surrogateMappings.push([
						[startHigh + 1, endHigh + 1],
						[LOW_SURROGATE_MIN, endLow + 1]
					]);
					complete = true;
				} else {
					surrogateMappings.push([
						[startHigh + 1, endHigh],
						[LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1]
					]);
				}
			}

			// Step 3. `(endHigh, LOW_SURROGATE_MIN)` to `(endHigh, endLow)`.
			if (!complete) {
				surrogateMappings.push([
					[endHigh, endHigh + 1],
					[LOW_SURROGATE_MIN, endLow + 1]
				]);
			}

			index += 2;
		}

		// The format of `surrogateMappings` is as follows:
		//
		//     [ surrogateMapping1, surrogateMapping2 ]
		//
		// i.e.:
		//
		//     [
		//       [ highSurrogates1, lowSurrogates1 ],
		//       [ highSurrogates2, lowSurrogates2 ]
		//     ]
		return optimizeSurrogateMappings(surrogateMappings);
	};

	var createSurrogateCharacterClasses = function(surrogateMappings) {
		var result = [];
		forEach(surrogateMappings, function(surrogateMapping) {
			var highSurrogates = surrogateMapping[0];
			var lowSurrogates = surrogateMapping[1];
			result.push(
				createBMPCharacterClasses(highSurrogates) +
				createBMPCharacterClasses(lowSurrogates)
			);
		});
		return result.join('|');
	};

	var createCharacterClassesFromData = function(data, bmpOnly, hasUnicodeFlag) {
		if (hasUnicodeFlag) {
			return createUnicodeCharacterClasses(data);
		}
		var result = [];

		var parts = splitAtBMP(data);
		var loneHighSurrogates = parts.loneHighSurrogates;
		var loneLowSurrogates = parts.loneLowSurrogates;
		var bmp = parts.bmp;
		var astral = parts.astral;
		var hasLoneHighSurrogates = !dataIsEmpty(loneHighSurrogates);
		var hasLoneLowSurrogates = !dataIsEmpty(loneLowSurrogates);

		var surrogateMappings = surrogateSet(astral);

		if (bmpOnly) {
			bmp = dataAddData(bmp, loneHighSurrogates);
			hasLoneHighSurrogates = false;
			bmp = dataAddData(bmp, loneLowSurrogates);
			hasLoneLowSurrogates = false;
		}

		if (!dataIsEmpty(bmp)) {
			// The data set contains BMP code points that are not high surrogates
			// needed for astral code points in the set.
			result.push(createBMPCharacterClasses(bmp));
		}
		if (surrogateMappings.length) {
			// The data set contains astral code points; append character classes
			// based on their surrogate pairs.
			result.push(createSurrogateCharacterClasses(surrogateMappings));
		}
		// https://gist.github.com/mathiasbynens/bbe7f870208abcfec860
		if (hasLoneHighSurrogates) {
			result.push(
				createBMPCharacterClasses(loneHighSurrogates) +
				// Make sure the high surrogates aren’t part of a surrogate pair.
				'(?![\\uDC00-\\uDFFF])'
			);
		}
		if (hasLoneLowSurrogates) {
			result.push(
				// It is not possible to accurately assert the low surrogates aren’t
				// part of a surrogate pair, since JavaScript regular expressions do
				// not support lookbehind.
				'(?:[^\\uD800-\\uDBFF]|^)' +
				createBMPCharacterClasses(loneLowSurrogates)
			);
		}
		return result.join('|');
	};

	/*--------------------------------------------------------------------------*/

	// `regenerate` can be used as a constructor (and new methods can be added to
	// its prototype) but also as a regular function, the latter of which is the
	// documented and most common usage. For that reason, it’s not capitalized.
	var regenerate = function(value) {
		if (arguments.length > 1) {
			value = slice.call(arguments);
		}
		if (this instanceof regenerate) {
			this.data = [];
			return value ? this.add(value) : this;
		}
		return (new regenerate).add(value);
	};

	regenerate.version = '1.3.3';

	var proto = regenerate.prototype;
	extend(proto, {
		'add': function(value) {
			var $this = this;
			if (value == null) {
				return $this;
			}
			if (value instanceof regenerate) {
				// Allow passing other Regenerate instances.
				$this.data = dataAddData($this.data, value.data);
				return $this;
			}
			if (arguments.length > 1) {
				value = slice.call(arguments);
			}
			if (isArray(value)) {
				forEach(value, function(item) {
					$this.add(item);
				});
				return $this;
			}
			$this.data = dataAdd(
				$this.data,
				isNumber(value) ? value : symbolToCodePoint(value)
			);
			return $this;
		},
		'remove': function(value) {
			var $this = this;
			if (value == null) {
				return $this;
			}
			if (value instanceof regenerate) {
				// Allow passing other Regenerate instances.
				$this.data = dataRemoveData($this.data, value.data);
				return $this;
			}
			if (arguments.length > 1) {
				value = slice.call(arguments);
			}
			if (isArray(value)) {
				forEach(value, function(item) {
					$this.remove(item);
				});
				return $this;
			}
			$this.data = dataRemove(
				$this.data,
				isNumber(value) ? value : symbolToCodePoint(value)
			);
			return $this;
		},
		'addRange': function(start, end) {
			var $this = this;
			$this.data = dataAddRange($this.data,
				isNumber(start) ? start : symbolToCodePoint(start),
				isNumber(end) ? end : symbolToCodePoint(end)
			);
			return $this;
		},
		'removeRange': function(start, end) {
			var $this = this;
			var startCodePoint = isNumber(start) ? start : symbolToCodePoint(start);
			var endCodePoint = isNumber(end) ? end : symbolToCodePoint(end);
			$this.data = dataRemoveRange(
				$this.data,
				startCodePoint,
				endCodePoint
			);
			return $this;
		},
		'intersection': function(argument) {
			var $this = this;
			// Allow passing other Regenerate instances.
			// TODO: Optimize this by writing and using `dataIntersectionData()`.
			var array = argument instanceof regenerate ?
				dataToArray(argument.data) :
				argument;
			$this.data = dataIntersection($this.data, array);
			return $this;
		},
		'contains': function(codePoint) {
			return dataContains(
				this.data,
				isNumber(codePoint) ? codePoint : symbolToCodePoint(codePoint)
			);
		},
		'clone': function() {
			var set = new regenerate;
			set.data = this.data.slice(0);
			return set;
		},
		'toString': function(options) {
			var result = createCharacterClassesFromData(
				this.data,
				options ? options.bmpOnly : false,
				options ? options.hasUnicodeFlag : false
			);
			if (!result) {
				// For an empty set, return something that can be inserted `/here/` to
				// form a valid regular expression. Avoid `(?:)` since that matches the
				// empty string.
				return '[]';
			}
			// Use `\0` instead of `\x00` where possible.
			return result.replace(regexNull, '\\0$1');
		},
		'toRegExp': function(flags) {
			var pattern = this.toString(
				flags && flags.indexOf('u') != -1 ?
					{ 'hasUnicodeFlag': true } :
					null
			);
			return RegExp(pattern, flags || '');
		},
		'valueOf': function() { // Note: `valueOf` is aliased as `toArray`.
			return dataToArray(this.data);
		}
	});

	proto.toArray = proto.valueOf;

	// Some AMD build optimizers, like r.js, check for specific condition patterns
	// like the following:
	if (
		false
	) {}	else if (freeExports && !freeExports.nodeType) {
		if (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+
			freeModule.exports = regenerate;
		} else { // in Narwhal or RingoJS v0.7.0-
			freeExports.regenerate = regenerate;
		}
	} else { // in Rhino or a web browser
		root.regenerate = regenerate;
	}

}(commonjsGlobal));
});

var unicodeCanonicalPropertyNamesEcmascript = new Set([
	// Non-binary properties:
	'General_Category',
	'Script',
	'Script_Extensions',
	// Binary properties:
	'Alphabetic',
	'Any',
	'ASCII',
	'ASCII_Hex_Digit',
	'Assigned',
	'Bidi_Control',
	'Bidi_Mirrored',
	'Case_Ignorable',
	'Cased',
	'Changes_When_Casefolded',
	'Changes_When_Casemapped',
	'Changes_When_Lowercased',
	'Changes_When_NFKC_Casefolded',
	'Changes_When_Titlecased',
	'Changes_When_Uppercased',
	'Dash',
	'Default_Ignorable_Code_Point',
	'Deprecated',
	'Diacritic',
	'Emoji',
	'Emoji_Component',
	'Emoji_Modifier',
	'Emoji_Modifier_Base',
	'Emoji_Presentation',
	'Extender',
	'Grapheme_Base',
	'Grapheme_Extend',
	'Hex_Digit',
	'ID_Continue',
	'ID_Start',
	'Ideographic',
	'IDS_Binary_Operator',
	'IDS_Trinary_Operator',
	'Join_Control',
	'Logical_Order_Exception',
	'Lowercase',
	'Math',
	'Noncharacter_Code_Point',
	'Pattern_Syntax',
	'Pattern_White_Space',
	'Quotation_Mark',
	'Radical',
	'Regional_Indicator',
	'Sentence_Terminal',
	'Soft_Dotted',
	'Terminal_Punctuation',
	'Unified_Ideograph',
	'Uppercase',
	'Variation_Selector',
	'White_Space',
	'XID_Continue',
	'XID_Start'
]);

// Generated using `npm run build`. Do not edit!
var unicodePropertyAliasesEcmascript = new Map([
	['scx', 'Script_Extensions'],
	['sc', 'Script'],
	['gc', 'General_Category'],
	['AHex', 'ASCII_Hex_Digit'],
	['Alpha', 'Alphabetic'],
	['Bidi_C', 'Bidi_Control'],
	['Bidi_M', 'Bidi_Mirrored'],
	['Cased', 'Cased'],
	['CI', 'Case_Ignorable'],
	['CWCF', 'Changes_When_Casefolded'],
	['CWCM', 'Changes_When_Casemapped'],
	['CWKCF', 'Changes_When_NFKC_Casefolded'],
	['CWL', 'Changes_When_Lowercased'],
	['CWT', 'Changes_When_Titlecased'],
	['CWU', 'Changes_When_Uppercased'],
	['Dash', 'Dash'],
	['Dep', 'Deprecated'],
	['DI', 'Default_Ignorable_Code_Point'],
	['Dia', 'Diacritic'],
	['Ext', 'Extender'],
	['Gr_Base', 'Grapheme_Base'],
	['Gr_Ext', 'Grapheme_Extend'],
	['Hex', 'Hex_Digit'],
	['IDC', 'ID_Continue'],
	['Ideo', 'Ideographic'],
	['IDS', 'ID_Start'],
	['IDSB', 'IDS_Binary_Operator'],
	['IDST', 'IDS_Trinary_Operator'],
	['Join_C', 'Join_Control'],
	['LOE', 'Logical_Order_Exception'],
	['Lower', 'Lowercase'],
	['Math', 'Math'],
	['NChar', 'Noncharacter_Code_Point'],
	['Pat_Syn', 'Pattern_Syntax'],
	['Pat_WS', 'Pattern_White_Space'],
	['QMark', 'Quotation_Mark'],
	['Radical', 'Radical'],
	['RI', 'Regional_Indicator'],
	['SD', 'Soft_Dotted'],
	['STerm', 'Sentence_Terminal'],
	['Term', 'Terminal_Punctuation'],
	['UIdeo', 'Unified_Ideograph'],
	['Upper', 'Uppercase'],
	['VS', 'Variation_Selector'],
	['WSpace', 'White_Space'],
	['space', 'White_Space'],
	['XIDC', 'XID_Continue'],
	['XIDS', 'XID_Start']
]);

var matchProperty = function(property) {
	if (unicodeCanonicalPropertyNamesEcmascript.has(property)) {
		return property;
	}
	if (unicodePropertyAliasesEcmascript.has(property)) {
		return unicodePropertyAliasesEcmascript.get(property);
	}
	throw new Error(("Unknown property: " + property));
};

var unicodeMatchPropertyEcmascript = matchProperty;

var mappings = new Map([
	['General_Category', new Map([
		['C', 'Other'],
		['Cc', 'Control'],
		['cntrl', 'Control'],
		['Cf', 'Format'],
		['Cn', 'Unassigned'],
		['Co', 'Private_Use'],
		['Cs', 'Surrogate'],
		['L', 'Letter'],
		['LC', 'Cased_Letter'],
		['Ll', 'Lowercase_Letter'],
		['Lm', 'Modifier_Letter'],
		['Lo', 'Other_Letter'],
		['Lt', 'Titlecase_Letter'],
		['Lu', 'Uppercase_Letter'],
		['M', 'Mark'],
		['Combining_Mark', 'Mark'],
		['Mc', 'Spacing_Mark'],
		['Me', 'Enclosing_Mark'],
		['Mn', 'Nonspacing_Mark'],
		['N', 'Number'],
		['Nd', 'Decimal_Number'],
		['digit', 'Decimal_Number'],
		['Nl', 'Letter_Number'],
		['No', 'Other_Number'],
		['P', 'Punctuation'],
		['punct', 'Punctuation'],
		['Pc', 'Connector_Punctuation'],
		['Pd', 'Dash_Punctuation'],
		['Pe', 'Close_Punctuation'],
		['Pf', 'Final_Punctuation'],
		['Pi', 'Initial_Punctuation'],
		['Po', 'Other_Punctuation'],
		['Ps', 'Open_Punctuation'],
		['S', 'Symbol'],
		['Sc', 'Currency_Symbol'],
		['Sk', 'Modifier_Symbol'],
		['Sm', 'Math_Symbol'],
		['So', 'Other_Symbol'],
		['Z', 'Separator'],
		['Zl', 'Line_Separator'],
		['Zp', 'Paragraph_Separator'],
		['Zs', 'Space_Separator'],
		['Other', 'Other'],
		['Control', 'Control'],
		['Format', 'Format'],
		['Unassigned', 'Unassigned'],
		['Private_Use', 'Private_Use'],
		['Surrogate', 'Surrogate'],
		['Letter', 'Letter'],
		['Cased_Letter', 'Cased_Letter'],
		['Lowercase_Letter', 'Lowercase_Letter'],
		['Modifier_Letter', 'Modifier_Letter'],
		['Other_Letter', 'Other_Letter'],
		['Titlecase_Letter', 'Titlecase_Letter'],
		['Uppercase_Letter', 'Uppercase_Letter'],
		['Mark', 'Mark'],
		['Spacing_Mark', 'Spacing_Mark'],
		['Enclosing_Mark', 'Enclosing_Mark'],
		['Nonspacing_Mark', 'Nonspacing_Mark'],
		['Number', 'Number'],
		['Decimal_Number', 'Decimal_Number'],
		['Letter_Number', 'Letter_Number'],
		['Other_Number', 'Other_Number'],
		['Punctuation', 'Punctuation'],
		['Connector_Punctuation', 'Connector_Punctuation'],
		['Dash_Punctuation', 'Dash_Punctuation'],
		['Close_Punctuation', 'Close_Punctuation'],
		['Final_Punctuation', 'Final_Punctuation'],
		['Initial_Punctuation', 'Initial_Punctuation'],
		['Other_Punctuation', 'Other_Punctuation'],
		['Open_Punctuation', 'Open_Punctuation'],
		['Symbol', 'Symbol'],
		['Currency_Symbol', 'Currency_Symbol'],
		['Modifier_Symbol', 'Modifier_Symbol'],
		['Math_Symbol', 'Math_Symbol'],
		['Other_Symbol', 'Other_Symbol'],
		['Separator', 'Separator'],
		['Line_Separator', 'Line_Separator'],
		['Paragraph_Separator', 'Paragraph_Separator'],
		['Space_Separator', 'Space_Separator']
	])],
	['Script', new Map([
		['Adlm', 'Adlam'],
		['Aghb', 'Caucasian_Albanian'],
		['Ahom', 'Ahom'],
		['Arab', 'Arabic'],
		['Armi', 'Imperial_Aramaic'],
		['Armn', 'Armenian'],
		['Avst', 'Avestan'],
		['Bali', 'Balinese'],
		['Bamu', 'Bamum'],
		['Bass', 'Bassa_Vah'],
		['Batk', 'Batak'],
		['Beng', 'Bengali'],
		['Bhks', 'Bhaiksuki'],
		['Bopo', 'Bopomofo'],
		['Brah', 'Brahmi'],
		['Brai', 'Braille'],
		['Bugi', 'Buginese'],
		['Buhd', 'Buhid'],
		['Cakm', 'Chakma'],
		['Cans', 'Canadian_Aboriginal'],
		['Cari', 'Carian'],
		['Cham', 'Cham'],
		['Cher', 'Cherokee'],
		['Copt', 'Coptic'],
		['Qaac', 'Coptic'],
		['Cprt', 'Cypriot'],
		['Cyrl', 'Cyrillic'],
		['Deva', 'Devanagari'],
		['Dsrt', 'Deseret'],
		['Dupl', 'Duployan'],
		['Egyp', 'Egyptian_Hieroglyphs'],
		['Elba', 'Elbasan'],
		['Ethi', 'Ethiopic'],
		['Geor', 'Georgian'],
		['Glag', 'Glagolitic'],
		['Gonm', 'Masaram_Gondi'],
		['Goth', 'Gothic'],
		['Gran', 'Grantha'],
		['Grek', 'Greek'],
		['Gujr', 'Gujarati'],
		['Guru', 'Gurmukhi'],
		['Hang', 'Hangul'],
		['Hani', 'Han'],
		['Hano', 'Hanunoo'],
		['Hatr', 'Hatran'],
		['Hebr', 'Hebrew'],
		['Hira', 'Hiragana'],
		['Hluw', 'Anatolian_Hieroglyphs'],
		['Hmng', 'Pahawh_Hmong'],
		['Hrkt', 'Katakana_Or_Hiragana'],
		['Hung', 'Old_Hungarian'],
		['Ital', 'Old_Italic'],
		['Java', 'Javanese'],
		['Kali', 'Kayah_Li'],
		['Kana', 'Katakana'],
		['Khar', 'Kharoshthi'],
		['Khmr', 'Khmer'],
		['Khoj', 'Khojki'],
		['Knda', 'Kannada'],
		['Kthi', 'Kaithi'],
		['Lana', 'Tai_Tham'],
		['Laoo', 'Lao'],
		['Latn', 'Latin'],
		['Lepc', 'Lepcha'],
		['Limb', 'Limbu'],
		['Lina', 'Linear_A'],
		['Linb', 'Linear_B'],
		['Lisu', 'Lisu'],
		['Lyci', 'Lycian'],
		['Lydi', 'Lydian'],
		['Mahj', 'Mahajani'],
		['Mand', 'Mandaic'],
		['Mani', 'Manichaean'],
		['Marc', 'Marchen'],
		['Mend', 'Mende_Kikakui'],
		['Merc', 'Meroitic_Cursive'],
		['Mero', 'Meroitic_Hieroglyphs'],
		['Mlym', 'Malayalam'],
		['Modi', 'Modi'],
		['Mong', 'Mongolian'],
		['Mroo', 'Mro'],
		['Mtei', 'Meetei_Mayek'],
		['Mult', 'Multani'],
		['Mymr', 'Myanmar'],
		['Narb', 'Old_North_Arabian'],
		['Nbat', 'Nabataean'],
		['Newa', 'Newa'],
		['Nkoo', 'Nko'],
		['Nshu', 'Nushu'],
		['Ogam', 'Ogham'],
		['Olck', 'Ol_Chiki'],
		['Orkh', 'Old_Turkic'],
		['Orya', 'Oriya'],
		['Osge', 'Osage'],
		['Osma', 'Osmanya'],
		['Palm', 'Palmyrene'],
		['Pauc', 'Pau_Cin_Hau'],
		['Perm', 'Old_Permic'],
		['Phag', 'Phags_Pa'],
		['Phli', 'Inscriptional_Pahlavi'],
		['Phlp', 'Psalter_Pahlavi'],
		['Phnx', 'Phoenician'],
		['Plrd', 'Miao'],
		['Prti', 'Inscriptional_Parthian'],
		['Rjng', 'Rejang'],
		['Runr', 'Runic'],
		['Samr', 'Samaritan'],
		['Sarb', 'Old_South_Arabian'],
		['Saur', 'Saurashtra'],
		['Sgnw', 'SignWriting'],
		['Shaw', 'Shavian'],
		['Shrd', 'Sharada'],
		['Sidd', 'Siddham'],
		['Sind', 'Khudawadi'],
		['Sinh', 'Sinhala'],
		['Sora', 'Sora_Sompeng'],
		['Soyo', 'Soyombo'],
		['Sund', 'Sundanese'],
		['Sylo', 'Syloti_Nagri'],
		['Syrc', 'Syriac'],
		['Tagb', 'Tagbanwa'],
		['Takr', 'Takri'],
		['Tale', 'Tai_Le'],
		['Talu', 'New_Tai_Lue'],
		['Taml', 'Tamil'],
		['Tang', 'Tangut'],
		['Tavt', 'Tai_Viet'],
		['Telu', 'Telugu'],
		['Tfng', 'Tifinagh'],
		['Tglg', 'Tagalog'],
		['Thaa', 'Thaana'],
		['Thai', 'Thai'],
		['Tibt', 'Tibetan'],
		['Tirh', 'Tirhuta'],
		['Ugar', 'Ugaritic'],
		['Vaii', 'Vai'],
		['Wara', 'Warang_Citi'],
		['Xpeo', 'Old_Persian'],
		['Xsux', 'Cuneiform'],
		['Yiii', 'Yi'],
		['Zanb', 'Zanabazar_Square'],
		['Zinh', 'Inherited'],
		['Qaai', 'Inherited'],
		['Zyyy', 'Common'],
		['Zzzz', 'Unknown'],
		['Adlam', 'Adlam'],
		['Caucasian_Albanian', 'Caucasian_Albanian'],
		['Arabic', 'Arabic'],
		['Imperial_Aramaic', 'Imperial_Aramaic'],
		['Armenian', 'Armenian'],
		['Avestan', 'Avestan'],
		['Balinese', 'Balinese'],
		['Bamum', 'Bamum'],
		['Bassa_Vah', 'Bassa_Vah'],
		['Batak', 'Batak'],
		['Bengali', 'Bengali'],
		['Bhaiksuki', 'Bhaiksuki'],
		['Bopomofo', 'Bopomofo'],
		['Brahmi', 'Brahmi'],
		['Braille', 'Braille'],
		['Buginese', 'Buginese'],
		['Buhid', 'Buhid'],
		['Chakma', 'Chakma'],
		['Canadian_Aboriginal', 'Canadian_Aboriginal'],
		['Carian', 'Carian'],
		['Cherokee', 'Cherokee'],
		['Coptic', 'Coptic'],
		['Cypriot', 'Cypriot'],
		['Cyrillic', 'Cyrillic'],
		['Devanagari', 'Devanagari'],
		['Deseret', 'Deseret'],
		['Duployan', 'Duployan'],
		['Egyptian_Hieroglyphs', 'Egyptian_Hieroglyphs'],
		['Elbasan', 'Elbasan'],
		['Ethiopic', 'Ethiopic'],
		['Georgian', 'Georgian'],
		['Glagolitic', 'Glagolitic'],
		['Masaram_Gondi', 'Masaram_Gondi'],
		['Gothic', 'Gothic'],
		['Grantha', 'Grantha'],
		['Greek', 'Greek'],
		['Gujarati', 'Gujarati'],
		['Gurmukhi', 'Gurmukhi'],
		['Hangul', 'Hangul'],
		['Han', 'Han'],
		['Hanunoo', 'Hanunoo'],
		['Hatran', 'Hatran'],
		['Hebrew', 'Hebrew'],
		['Hiragana', 'Hiragana'],
		['Anatolian_Hieroglyphs', 'Anatolian_Hieroglyphs'],
		['Pahawh_Hmong', 'Pahawh_Hmong'],
		['Katakana_Or_Hiragana', 'Katakana_Or_Hiragana'],
		['Old_Hungarian', 'Old_Hungarian'],
		['Old_Italic', 'Old_Italic'],
		['Javanese', 'Javanese'],
		['Kayah_Li', 'Kayah_Li'],
		['Katakana', 'Katakana'],
		['Kharoshthi', 'Kharoshthi'],
		['Khmer', 'Khmer'],
		['Khojki', 'Khojki'],
		['Kannada', 'Kannada'],
		['Kaithi', 'Kaithi'],
		['Tai_Tham', 'Tai_Tham'],
		['Lao', 'Lao'],
		['Latin', 'Latin'],
		['Lepcha', 'Lepcha'],
		['Limbu', 'Limbu'],
		['Linear_A', 'Linear_A'],
		['Linear_B', 'Linear_B'],
		['Lycian', 'Lycian'],
		['Lydian', 'Lydian'],
		['Mahajani', 'Mahajani'],
		['Mandaic', 'Mandaic'],
		['Manichaean', 'Manichaean'],
		['Marchen', 'Marchen'],
		['Mende_Kikakui', 'Mende_Kikakui'],
		['Meroitic_Cursive', 'Meroitic_Cursive'],
		['Meroitic_Hieroglyphs', 'Meroitic_Hieroglyphs'],
		['Malayalam', 'Malayalam'],
		['Mongolian', 'Mongolian'],
		['Mro', 'Mro'],
		['Meetei_Mayek', 'Meetei_Mayek'],
		['Multani', 'Multani'],
		['Myanmar', 'Myanmar'],
		['Old_North_Arabian', 'Old_North_Arabian'],
		['Nabataean', 'Nabataean'],
		['Nko', 'Nko'],
		['Nushu', 'Nushu'],
		['Ogham', 'Ogham'],
		['Ol_Chiki', 'Ol_Chiki'],
		['Old_Turkic', 'Old_Turkic'],
		['Oriya', 'Oriya'],
		['Osage', 'Osage'],
		['Osmanya', 'Osmanya'],
		['Palmyrene', 'Palmyrene'],
		['Pau_Cin_Hau', 'Pau_Cin_Hau'],
		['Old_Permic', 'Old_Permic'],
		['Phags_Pa', 'Phags_Pa'],
		['Inscriptional_Pahlavi', 'Inscriptional_Pahlavi'],
		['Psalter_Pahlavi', 'Psalter_Pahlavi'],
		['Phoenician', 'Phoenician'],
		['Miao', 'Miao'],
		['Inscriptional_Parthian', 'Inscriptional_Parthian'],
		['Rejang', 'Rejang'],
		['Runic', 'Runic'],
		['Samaritan', 'Samaritan'],
		['Old_South_Arabian', 'Old_South_Arabian'],
		['Saurashtra', 'Saurashtra'],
		['SignWriting', 'SignWriting'],
		['Shavian', 'Shavian'],
		['Sharada', 'Sharada'],
		['Siddham', 'Siddham'],
		['Khudawadi', 'Khudawadi'],
		['Sinhala', 'Sinhala'],
		['Sora_Sompeng', 'Sora_Sompeng'],
		['Soyombo', 'Soyombo'],
		['Sundanese', 'Sundanese'],
		['Syloti_Nagri', 'Syloti_Nagri'],
		['Syriac', 'Syriac'],
		['Tagbanwa', 'Tagbanwa'],
		['Takri', 'Takri'],
		['Tai_Le', 'Tai_Le'],
		['New_Tai_Lue', 'New_Tai_Lue'],
		['Tamil', 'Tamil'],
		['Tangut', 'Tangut'],
		['Tai_Viet', 'Tai_Viet'],
		['Telugu', 'Telugu'],
		['Tifinagh', 'Tifinagh'],
		['Tagalog', 'Tagalog'],
		['Thaana', 'Thaana'],
		['Tibetan', 'Tibetan'],
		['Tirhuta', 'Tirhuta'],
		['Ugaritic', 'Ugaritic'],
		['Vai', 'Vai'],
		['Warang_Citi', 'Warang_Citi'],
		['Old_Persian', 'Old_Persian'],
		['Cuneiform', 'Cuneiform'],
		['Yi', 'Yi'],
		['Zanabazar_Square', 'Zanabazar_Square'],
		['Inherited', 'Inherited'],
		['Common', 'Common'],
		['Unknown', 'Unknown']
	])],
	['Script_Extensions', new Map([
		['Adlm', 'Adlam'],
		['Aghb', 'Caucasian_Albanian'],
		['Ahom', 'Ahom'],
		['Arab', 'Arabic'],
		['Armi', 'Imperial_Aramaic'],
		['Armn', 'Armenian'],
		['Avst', 'Avestan'],
		['Bali', 'Balinese'],
		['Bamu', 'Bamum'],
		['Bass', 'Bassa_Vah'],
		['Batk', 'Batak'],
		['Beng', 'Bengali'],
		['Bhks', 'Bhaiksuki'],
		['Bopo', 'Bopomofo'],
		['Brah', 'Brahmi'],
		['Brai', 'Braille'],
		['Bugi', 'Buginese'],
		['Buhd', 'Buhid'],
		['Cakm', 'Chakma'],
		['Cans', 'Canadian_Aboriginal'],
		['Cari', 'Carian'],
		['Cham', 'Cham'],
		['Cher', 'Cherokee'],
		['Copt', 'Coptic'],
		['Qaac', 'Coptic'],
		['Cprt', 'Cypriot'],
		['Cyrl', 'Cyrillic'],
		['Deva', 'Devanagari'],
		['Dsrt', 'Deseret'],
		['Dupl', 'Duployan'],
		['Egyp', 'Egyptian_Hieroglyphs'],
		['Elba', 'Elbasan'],
		['Ethi', 'Ethiopic'],
		['Geor', 'Georgian'],
		['Glag', 'Glagolitic'],
		['Gonm', 'Masaram_Gondi'],
		['Goth', 'Gothic'],
		['Gran', 'Grantha'],
		['Grek', 'Greek'],
		['Gujr', 'Gujarati'],
		['Guru', 'Gurmukhi'],
		['Hang', 'Hangul'],
		['Hani', 'Han'],
		['Hano', 'Hanunoo'],
		['Hatr', 'Hatran'],
		['Hebr', 'Hebrew'],
		['Hira', 'Hiragana'],
		['Hluw', 'Anatolian_Hieroglyphs'],
		['Hmng', 'Pahawh_Hmong'],
		['Hrkt', 'Katakana_Or_Hiragana'],
		['Hung', 'Old_Hungarian'],
		['Ital', 'Old_Italic'],
		['Java', 'Javanese'],
		['Kali', 'Kayah_Li'],
		['Kana', 'Katakana'],
		['Khar', 'Kharoshthi'],
		['Khmr', 'Khmer'],
		['Khoj', 'Khojki'],
		['Knda', 'Kannada'],
		['Kthi', 'Kaithi'],
		['Lana', 'Tai_Tham'],
		['Laoo', 'Lao'],
		['Latn', 'Latin'],
		['Lepc', 'Lepcha'],
		['Limb', 'Limbu'],
		['Lina', 'Linear_A'],
		['Linb', 'Linear_B'],
		['Lisu', 'Lisu'],
		['Lyci', 'Lycian'],
		['Lydi', 'Lydian'],
		['Mahj', 'Mahajani'],
		['Mand', 'Mandaic'],
		['Mani', 'Manichaean'],
		['Marc', 'Marchen'],
		['Mend', 'Mende_Kikakui'],
		['Merc', 'Meroitic_Cursive'],
		['Mero', 'Meroitic_Hieroglyphs'],
		['Mlym', 'Malayalam'],
		['Modi', 'Modi'],
		['Mong', 'Mongolian'],
		['Mroo', 'Mro'],
		['Mtei', 'Meetei_Mayek'],
		['Mult', 'Multani'],
		['Mymr', 'Myanmar'],
		['Narb', 'Old_North_Arabian'],
		['Nbat', 'Nabataean'],
		['Newa', 'Newa'],
		['Nkoo', 'Nko'],
		['Nshu', 'Nushu'],
		['Ogam', 'Ogham'],
		['Olck', 'Ol_Chiki'],
		['Orkh', 'Old_Turkic'],
		['Orya', 'Oriya'],
		['Osge', 'Osage'],
		['Osma', 'Osmanya'],
		['Palm', 'Palmyrene'],
		['Pauc', 'Pau_Cin_Hau'],
		['Perm', 'Old_Permic'],
		['Phag', 'Phags_Pa'],
		['Phli', 'Inscriptional_Pahlavi'],
		['Phlp', 'Psalter_Pahlavi'],
		['Phnx', 'Phoenician'],
		['Plrd', 'Miao'],
		['Prti', 'Inscriptional_Parthian'],
		['Rjng', 'Rejang'],
		['Runr', 'Runic'],
		['Samr', 'Samaritan'],
		['Sarb', 'Old_South_Arabian'],
		['Saur', 'Saurashtra'],
		['Sgnw', 'SignWriting'],
		['Shaw', 'Shavian'],
		['Shrd', 'Sharada'],
		['Sidd', 'Siddham'],
		['Sind', 'Khudawadi'],
		['Sinh', 'Sinhala'],
		['Sora', 'Sora_Sompeng'],
		['Soyo', 'Soyombo'],
		['Sund', 'Sundanese'],
		['Sylo', 'Syloti_Nagri'],
		['Syrc', 'Syriac'],
		['Tagb', 'Tagbanwa'],
		['Takr', 'Takri'],
		['Tale', 'Tai_Le'],
		['Talu', 'New_Tai_Lue'],
		['Taml', 'Tamil'],
		['Tang', 'Tangut'],
		['Tavt', 'Tai_Viet'],
		['Telu', 'Telugu'],
		['Tfng', 'Tifinagh'],
		['Tglg', 'Tagalog'],
		['Thaa', 'Thaana'],
		['Thai', 'Thai'],
		['Tibt', 'Tibetan'],
		['Tirh', 'Tirhuta'],
		['Ugar', 'Ugaritic'],
		['Vaii', 'Vai'],
		['Wara', 'Warang_Citi'],
		['Xpeo', 'Old_Persian'],
		['Xsux', 'Cuneiform'],
		['Yiii', 'Yi'],
		['Zanb', 'Zanabazar_Square'],
		['Zinh', 'Inherited'],
		['Qaai', 'Inherited'],
		['Zyyy', 'Common'],
		['Zzzz', 'Unknown'],
		['Adlam', 'Adlam'],
		['Caucasian_Albanian', 'Caucasian_Albanian'],
		['Arabic', 'Arabic'],
		['Imperial_Aramaic', 'Imperial_Aramaic'],
		['Armenian', 'Armenian'],
		['Avestan', 'Avestan'],
		['Balinese', 'Balinese'],
		['Bamum', 'Bamum'],
		['Bassa_Vah', 'Bassa_Vah'],
		['Batak', 'Batak'],
		['Bengali', 'Bengali'],
		['Bhaiksuki', 'Bhaiksuki'],
		['Bopomofo', 'Bopomofo'],
		['Brahmi', 'Brahmi'],
		['Braille', 'Braille'],
		['Buginese', 'Buginese'],
		['Buhid', 'Buhid'],
		['Chakma', 'Chakma'],
		['Canadian_Aboriginal', 'Canadian_Aboriginal'],
		['Carian', 'Carian'],
		['Cherokee', 'Cherokee'],
		['Coptic', 'Coptic'],
		['Cypriot', 'Cypriot'],
		['Cyrillic', 'Cyrillic'],
		['Devanagari', 'Devanagari'],
		['Deseret', 'Deseret'],
		['Duployan', 'Duployan'],
		['Egyptian_Hieroglyphs', 'Egyptian_Hieroglyphs'],
		['Elbasan', 'Elbasan'],
		['Ethiopic', 'Ethiopic'],
		['Georgian', 'Georgian'],
		['Glagolitic', 'Glagolitic'],
		['Masaram_Gondi', 'Masaram_Gondi'],
		['Gothic', 'Gothic'],
		['Grantha', 'Grantha'],
		['Greek', 'Greek'],
		['Gujarati', 'Gujarati'],
		['Gurmukhi', 'Gurmukhi'],
		['Hangul', 'Hangul'],
		['Han', 'Han'],
		['Hanunoo', 'Hanunoo'],
		['Hatran', 'Hatran'],
		['Hebrew', 'Hebrew'],
		['Hiragana', 'Hiragana'],
		['Anatolian_Hieroglyphs', 'Anatolian_Hieroglyphs'],
		['Pahawh_Hmong', 'Pahawh_Hmong'],
		['Katakana_Or_Hiragana', 'Katakana_Or_Hiragana'],
		['Old_Hungarian', 'Old_Hungarian'],
		['Old_Italic', 'Old_Italic'],
		['Javanese', 'Javanese'],
		['Kayah_Li', 'Kayah_Li'],
		['Katakana', 'Katakana'],
		['Kharoshthi', 'Kharoshthi'],
		['Khmer', 'Khmer'],
		['Khojki', 'Khojki'],
		['Kannada', 'Kannada'],
		['Kaithi', 'Kaithi'],
		['Tai_Tham', 'Tai_Tham'],
		['Lao', 'Lao'],
		['Latin', 'Latin'],
		['Lepcha', 'Lepcha'],
		['Limbu', 'Limbu'],
		['Linear_A', 'Linear_A'],
		['Linear_B', 'Linear_B'],
		['Lycian', 'Lycian'],
		['Lydian', 'Lydian'],
		['Mahajani', 'Mahajani'],
		['Mandaic', 'Mandaic'],
		['Manichaean', 'Manichaean'],
		['Marchen', 'Marchen'],
		['Mende_Kikakui', 'Mende_Kikakui'],
		['Meroitic_Cursive', 'Meroitic_Cursive'],
		['Meroitic_Hieroglyphs', 'Meroitic_Hieroglyphs'],
		['Malayalam', 'Malayalam'],
		['Mongolian', 'Mongolian'],
		['Mro', 'Mro'],
		['Meetei_Mayek', 'Meetei_Mayek'],
		['Multani', 'Multani'],
		['Myanmar', 'Myanmar'],
		['Old_North_Arabian', 'Old_North_Arabian'],
		['Nabataean', 'Nabataean'],
		['Nko', 'Nko'],
		['Nushu', 'Nushu'],
		['Ogham', 'Ogham'],
		['Ol_Chiki', 'Ol_Chiki'],
		['Old_Turkic', 'Old_Turkic'],
		['Oriya', 'Oriya'],
		['Osage', 'Osage'],
		['Osmanya', 'Osmanya'],
		['Palmyrene', 'Palmyrene'],
		['Pau_Cin_Hau', 'Pau_Cin_Hau'],
		['Old_Permic', 'Old_Permic'],
		['Phags_Pa', 'Phags_Pa'],
		['Inscriptional_Pahlavi', 'Inscriptional_Pahlavi'],
		['Psalter_Pahlavi', 'Psalter_Pahlavi'],
		['Phoenician', 'Phoenician'],
		['Miao', 'Miao'],
		['Inscriptional_Parthian', 'Inscriptional_Parthian'],
		['Rejang', 'Rejang'],
		['Runic', 'Runic'],
		['Samaritan', 'Samaritan'],
		['Old_South_Arabian', 'Old_South_Arabian'],
		['Saurashtra', 'Saurashtra'],
		['SignWriting', 'SignWriting'],
		['Shavian', 'Shavian'],
		['Sharada', 'Sharada'],
		['Siddham', 'Siddham'],
		['Khudawadi', 'Khudawadi'],
		['Sinhala', 'Sinhala'],
		['Sora_Sompeng', 'Sora_Sompeng'],
		['Soyombo', 'Soyombo'],
		['Sundanese', 'Sundanese'],
		['Syloti_Nagri', 'Syloti_Nagri'],
		['Syriac', 'Syriac'],
		['Tagbanwa', 'Tagbanwa'],
		['Takri', 'Takri'],
		['Tai_Le', 'Tai_Le'],
		['New_Tai_Lue', 'New_Tai_Lue'],
		['Tamil', 'Tamil'],
		['Tangut', 'Tangut'],
		['Tai_Viet', 'Tai_Viet'],
		['Telugu', 'Telugu'],
		['Tifinagh', 'Tifinagh'],
		['Tagalog', 'Tagalog'],
		['Thaana', 'Thaana'],
		['Tibetan', 'Tibetan'],
		['Tirhuta', 'Tirhuta'],
		['Ugaritic', 'Ugaritic'],
		['Vai', 'Vai'],
		['Warang_Citi', 'Warang_Citi'],
		['Old_Persian', 'Old_Persian'],
		['Cuneiform', 'Cuneiform'],
		['Yi', 'Yi'],
		['Zanabazar_Square', 'Zanabazar_Square'],
		['Inherited', 'Inherited'],
		['Common', 'Common'],
		['Unknown', 'Unknown']
	])]
]);

var matchPropertyValue = function(property, value) {
	var aliasToValue = mappings.get(property);
	if (!aliasToValue) {
		throw new Error(("Unknown property `" + property + "`."));
	}
	var canonicalValue = aliasToValue.get(value);
	if (canonicalValue) {
		return canonicalValue;
	}
	throw new Error(
		("Unknown value `" + value + "` for property `" + property + "`.")
	);
};

var unicodeMatchPropertyValueEcmascript = matchPropertyValue;

var iuMappings = new Map([
	[0x4B, 0x212A],
	[0x53, 0x17F],
	[0x6B, 0x212A],
	[0x73, 0x17F],
	[0xB5, 0x39C],
	[0xC5, 0x212B],
	[0xDF, 0x1E9E],
	[0xE5, 0x212B],
	[0x17F, 0x53],
	[0x1C4, 0x1C5],
	[0x1C5, 0x1C4],
	[0x1C7, 0x1C8],
	[0x1C8, 0x1C7],
	[0x1CA, 0x1CB],
	[0x1CB, 0x1CA],
	[0x1F1, 0x1F2],
	[0x1F2, 0x1F1],
	[0x26A, 0xA7AE],
	[0x29D, 0xA7B2],
	[0x345, 0x1FBE],
	[0x392, 0x3D0],
	[0x395, 0x3F5],
	[0x398, 0x3F4],
	[0x399, 0x1FBE],
	[0x39A, 0x3F0],
	[0x39C, 0xB5],
	[0x3A0, 0x3D6],
	[0x3A1, 0x3F1],
	[0x3A3, 0x3C2],
	[0x3A6, 0x3D5],
	[0x3A9, 0x2126],
	[0x3B8, 0x3F4],
	[0x3C2, 0x3A3],
	[0x3C9, 0x2126],
	[0x3D0, 0x392],
	[0x3D1, 0x3F4],
	[0x3D5, 0x3A6],
	[0x3D6, 0x3A0],
	[0x3F0, 0x39A],
	[0x3F1, 0x3A1],
	[0x3F4, [
		0x398,
		0x3D1,
		0x3B8
	]],
	[0x3F5, 0x395],
	[0x412, 0x1C80],
	[0x414, 0x1C81],
	[0x41E, 0x1C82],
	[0x421, 0x1C83],
	[0x422, 0x1C85],
	[0x42A, 0x1C86],
	[0x432, 0x1C80],
	[0x434, 0x1C81],
	[0x43E, 0x1C82],
	[0x441, 0x1C83],
	[0x442, [
		0x1C84,
		0x1C85
	]],
	[0x44A, 0x1C86],
	[0x462, 0x1C87],
	[0x463, 0x1C87],
	[0x13A0, 0xAB70],
	[0x13A1, 0xAB71],
	[0x13A2, 0xAB72],
	[0x13A3, 0xAB73],
	[0x13A4, 0xAB74],
	[0x13A5, 0xAB75],
	[0x13A6, 0xAB76],
	[0x13A7, 0xAB77],
	[0x13A8, 0xAB78],
	[0x13A9, 0xAB79],
	[0x13AA, 0xAB7A],
	[0x13AB, 0xAB7B],
	[0x13AC, 0xAB7C],
	[0x13AD, 0xAB7D],
	[0x13AE, 0xAB7E],
	[0x13AF, 0xAB7F],
	[0x13B0, 0xAB80],
	[0x13B1, 0xAB81],
	[0x13B2, 0xAB82],
	[0x13B3, 0xAB83],
	[0x13B4, 0xAB84],
	[0x13B5, 0xAB85],
	[0x13B6, 0xAB86],
	[0x13B7, 0xAB87],
	[0x13B8, 0xAB88],
	[0x13B9, 0xAB89],
	[0x13BA, 0xAB8A],
	[0x13BB, 0xAB8B],
	[0x13BC, 0xAB8C],
	[0x13BD, 0xAB8D],
	[0x13BE, 0xAB8E],
	[0x13BF, 0xAB8F],
	[0x13C0, 0xAB90],
	[0x13C1, 0xAB91],
	[0x13C2, 0xAB92],
	[0x13C3, 0xAB93],
	[0x13C4, 0xAB94],
	[0x13C5, 0xAB95],
	[0x13C6, 0xAB96],
	[0x13C7, 0xAB97],
	[0x13C8, 0xAB98],
	[0x13C9, 0xAB99],
	[0x13CA, 0xAB9A],
	[0x13CB, 0xAB9B],
	[0x13CC, 0xAB9C],
	[0x13CD, 0xAB9D],
	[0x13CE, 0xAB9E],
	[0x13CF, 0xAB9F],
	[0x13D0, 0xABA0],
	[0x13D1, 0xABA1],
	[0x13D2, 0xABA2],
	[0x13D3, 0xABA3],
	[0x13D4, 0xABA4],
	[0x13D5, 0xABA5],
	[0x13D6, 0xABA6],
	[0x13D7, 0xABA7],
	[0x13D8, 0xABA8],
	[0x13D9, 0xABA9],
	[0x13DA, 0xABAA],
	[0x13DB, 0xABAB],
	[0x13DC, 0xABAC],
	[0x13DD, 0xABAD],
	[0x13DE, 0xABAE],
	[0x13DF, 0xABAF],
	[0x13E0, 0xABB0],
	[0x13E1, 0xABB1],
	[0x13E2, 0xABB2],
	[0x13E3, 0xABB3],
	[0x13E4, 0xABB4],
	[0x13E5, 0xABB5],
	[0x13E6, 0xABB6],
	[0x13E7, 0xABB7],
	[0x13E8, 0xABB8],
	[0x13E9, 0xABB9],
	[0x13EA, 0xABBA],
	[0x13EB, 0xABBB],
	[0x13EC, 0xABBC],
	[0x13ED, 0xABBD],
	[0x13EE, 0xABBE],
	[0x13EF, 0xABBF],
	[0x13F0, 0x13F8],
	[0x13F1, 0x13F9],
	[0x13F2, 0x13FA],
	[0x13F3, 0x13FB],
	[0x13F4, 0x13FC],
	[0x13F5, 0x13FD],
	[0x13F8, 0x13F0],
	[0x13F9, 0x13F1],
	[0x13FA, 0x13F2],
	[0x13FB, 0x13F3],
	[0x13FC, 0x13F4],
	[0x13FD, 0x13F5],
	[0x1C80, [
		0x412,
		0x432
	]],
	[0x1C81, [
		0x414,
		0x434
	]],
	[0x1C82, [
		0x41E,
		0x43E
	]],
	[0x1C83, [
		0x421,
		0x441
	]],
	[0x1C84, [
		0x1C85,
		0x442
	]],
	[0x1C85, [
		0x422,
		0x1C84,
		0x442
	]],
	[0x1C86, [
		0x42A,
		0x44A
	]],
	[0x1C87, [
		0x462,
		0x463
	]],
	[0x1C88, [
		0xA64A,
		0xA64B
	]],
	[0x1E60, 0x1E9B],
	[0x1E9B, 0x1E60],
	[0x1E9E, 0xDF],
	[0x1F80, 0x1F88],
	[0x1F81, 0x1F89],
	[0x1F82, 0x1F8A],
	[0x1F83, 0x1F8B],
	[0x1F84, 0x1F8C],
	[0x1F85, 0x1F8D],
	[0x1F86, 0x1F8E],
	[0x1F87, 0x1F8F],
	[0x1F88, 0x1F80],
	[0x1F89, 0x1F81],
	[0x1F8A, 0x1F82],
	[0x1F8B, 0x1F83],
	[0x1F8C, 0x1F84],
	[0x1F8D, 0x1F85],
	[0x1F8E, 0x1F86],
	[0x1F8F, 0x1F87],
	[0x1F90, 0x1F98],
	[0x1F91, 0x1F99],
	[0x1F92, 0x1F9A],
	[0x1F93, 0x1F9B],
	[0x1F94, 0x1F9C],
	[0x1F95, 0x1F9D],
	[0x1F96, 0x1F9E],
	[0x1F97, 0x1F9F],
	[0x1F98, 0x1F90],
	[0x1F99, 0x1F91],
	[0x1F9A, 0x1F92],
	[0x1F9B, 0x1F93],
	[0x1F9C, 0x1F94],
	[0x1F9D, 0x1F95],
	[0x1F9E, 0x1F96],
	[0x1F9F, 0x1F97],
	[0x1FA0, 0x1FA8],
	[0x1FA1, 0x1FA9],
	[0x1FA2, 0x1FAA],
	[0x1FA3, 0x1FAB],
	[0x1FA4, 0x1FAC],
	[0x1FA5, 0x1FAD],
	[0x1FA6, 0x1FAE],
	[0x1FA7, 0x1FAF],
	[0x1FA8, 0x1FA0],
	[0x1FA9, 0x1FA1],
	[0x1FAA, 0x1FA2],
	[0x1FAB, 0x1FA3],
	[0x1FAC, 0x1FA4],
	[0x1FAD, 0x1FA5],
	[0x1FAE, 0x1FA6],
	[0x1FAF, 0x1FA7],
	[0x1FB3, 0x1FBC],
	[0x1FBC, 0x1FB3],
	[0x1FBE, [
		0x345,
		0x399
	]],
	[0x1FC3, 0x1FCC],
	[0x1FCC, 0x1FC3],
	[0x1FF3, 0x1FFC],
	[0x1FFC, 0x1FF3],
	[0x2126, [
		0x3A9,
		0x3C9
	]],
	[0x212A, 0x4B],
	[0x212B, [
		0xC5,
		0xE5
	]],
	[0xA64A, 0x1C88],
	[0xA64B, 0x1C88],
	[0xA7AE, 0x26A],
	[0xA7B2, 0x29D],
	[0xA7B3, 0xAB53],
	[0xA7B4, 0xA7B5],
	[0xA7B5, 0xA7B4],
	[0xA7B6, 0xA7B7],
	[0xA7B7, 0xA7B6],
	[0xAB53, 0xA7B3],
	[0xAB70, 0x13A0],
	[0xAB71, 0x13A1],
	[0xAB72, 0x13A2],
	[0xAB73, 0x13A3],
	[0xAB74, 0x13A4],
	[0xAB75, 0x13A5],
	[0xAB76, 0x13A6],
	[0xAB77, 0x13A7],
	[0xAB78, 0x13A8],
	[0xAB79, 0x13A9],
	[0xAB7A, 0x13AA],
	[0xAB7B, 0x13AB],
	[0xAB7C, 0x13AC],
	[0xAB7D, 0x13AD],
	[0xAB7E, 0x13AE],
	[0xAB7F, 0x13AF],
	[0xAB80, 0x13B0],
	[0xAB81, 0x13B1],
	[0xAB82, 0x13B2],
	[0xAB83, 0x13B3],
	[0xAB84, 0x13B4],
	[0xAB85, 0x13B5],
	[0xAB86, 0x13B6],
	[0xAB87, 0x13B7],
	[0xAB88, 0x13B8],
	[0xAB89, 0x13B9],
	[0xAB8A, 0x13BA],
	[0xAB8B, 0x13BB],
	[0xAB8C, 0x13BC],
	[0xAB8D, 0x13BD],
	[0xAB8E, 0x13BE],
	[0xAB8F, 0x13BF],
	[0xAB90, 0x13C0],
	[0xAB91, 0x13C1],
	[0xAB92, 0x13C2],
	[0xAB93, 0x13C3],
	[0xAB94, 0x13C4],
	[0xAB95, 0x13C5],
	[0xAB96, 0x13C6],
	[0xAB97, 0x13C7],
	[0xAB98, 0x13C8],
	[0xAB99, 0x13C9],
	[0xAB9A, 0x13CA],
	[0xAB9B, 0x13CB],
	[0xAB9C, 0x13CC],
	[0xAB9D, 0x13CD],
	[0xAB9E, 0x13CE],
	[0xAB9F, 0x13CF],
	[0xABA0, 0x13D0],
	[0xABA1, 0x13D1],
	[0xABA2, 0x13D2],
	[0xABA3, 0x13D3],
	[0xABA4, 0x13D4],
	[0xABA5, 0x13D5],
	[0xABA6, 0x13D6],
	[0xABA7, 0x13D7],
	[0xABA8, 0x13D8],
	[0xABA9, 0x13D9],
	[0xABAA, 0x13DA],
	[0xABAB, 0x13DB],
	[0xABAC, 0x13DC],
	[0xABAD, 0x13DD],
	[0xABAE, 0x13DE],
	[0xABAF, 0x13DF],
	[0xABB0, 0x13E0],
	[0xABB1, 0x13E1],
	[0xABB2, 0x13E2],
	[0xABB3, 0x13E3],
	[0xABB4, 0x13E4],
	[0xABB5, 0x13E5],
	[0xABB6, 0x13E6],
	[0xABB7, 0x13E7],
	[0xABB8, 0x13E8],
	[0xABB9, 0x13E9],
	[0xABBA, 0x13EA],
	[0xABBB, 0x13EB],
	[0xABBC, 0x13EC],
	[0xABBD, 0x13ED],
	[0xABBE, 0x13EE],
	[0xABBF, 0x13EF],
	[0x10400, 0x10428],
	[0x10401, 0x10429],
	[0x10402, 0x1042A],
	[0x10403, 0x1042B],
	[0x10404, 0x1042C],
	[0x10405, 0x1042D],
	[0x10406, 0x1042E],
	[0x10407, 0x1042F],
	[0x10408, 0x10430],
	[0x10409, 0x10431],
	[0x1040A, 0x10432],
	[0x1040B, 0x10433],
	[0x1040C, 0x10434],
	[0x1040D, 0x10435],
	[0x1040E, 0x10436],
	[0x1040F, 0x10437],
	[0x10410, 0x10438],
	[0x10411, 0x10439],
	[0x10412, 0x1043A],
	[0x10413, 0x1043B],
	[0x10414, 0x1043C],
	[0x10415, 0x1043D],
	[0x10416, 0x1043E],
	[0x10417, 0x1043F],
	[0x10418, 0x10440],
	[0x10419, 0x10441],
	[0x1041A, 0x10442],
	[0x1041B, 0x10443],
	[0x1041C, 0x10444],
	[0x1041D, 0x10445],
	[0x1041E, 0x10446],
	[0x1041F, 0x10447],
	[0x10420, 0x10448],
	[0x10421, 0x10449],
	[0x10422, 0x1044A],
	[0x10423, 0x1044B],
	[0x10424, 0x1044C],
	[0x10425, 0x1044D],
	[0x10426, 0x1044E],
	[0x10427, 0x1044F],
	[0x10428, 0x10400],
	[0x10429, 0x10401],
	[0x1042A, 0x10402],
	[0x1042B, 0x10403],
	[0x1042C, 0x10404],
	[0x1042D, 0x10405],
	[0x1042E, 0x10406],
	[0x1042F, 0x10407],
	[0x10430, 0x10408],
	[0x10431, 0x10409],
	[0x10432, 0x1040A],
	[0x10433, 0x1040B],
	[0x10434, 0x1040C],
	[0x10435, 0x1040D],
	[0x10436, 0x1040E],
	[0x10437, 0x1040F],
	[0x10438, 0x10410],
	[0x10439, 0x10411],
	[0x1043A, 0x10412],
	[0x1043B, 0x10413],
	[0x1043C, 0x10414],
	[0x1043D, 0x10415],
	[0x1043E, 0x10416],
	[0x1043F, 0x10417],
	[0x10440, 0x10418],
	[0x10441, 0x10419],
	[0x10442, 0x1041A],
	[0x10443, 0x1041B],
	[0x10444, 0x1041C],
	[0x10445, 0x1041D],
	[0x10446, 0x1041E],
	[0x10447, 0x1041F],
	[0x10448, 0x10420],
	[0x10449, 0x10421],
	[0x1044A, 0x10422],
	[0x1044B, 0x10423],
	[0x1044C, 0x10424],
	[0x1044D, 0x10425],
	[0x1044E, 0x10426],
	[0x1044F, 0x10427],
	[0x104B0, 0x104D8],
	[0x104B1, 0x104D9],
	[0x104B2, 0x104DA],
	[0x104B3, 0x104DB],
	[0x104B4, 0x104DC],
	[0x104B5, 0x104DD],
	[0x104B6, 0x104DE],
	[0x104B7, 0x104DF],
	[0x104B8, 0x104E0],
	[0x104B9, 0x104E1],
	[0x104BA, 0x104E2],
	[0x104BB, 0x104E3],
	[0x104BC, 0x104E4],
	[0x104BD, 0x104E5],
	[0x104BE, 0x104E6],
	[0x104BF, 0x104E7],
	[0x104C0, 0x104E8],
	[0x104C1, 0x104E9],
	[0x104C2, 0x104EA],
	[0x104C3, 0x104EB],
	[0x104C4, 0x104EC],
	[0x104C5, 0x104ED],
	[0x104C6, 0x104EE],
	[0x104C7, 0x104EF],
	[0x104C8, 0x104F0],
	[0x104C9, 0x104F1],
	[0x104CA, 0x104F2],
	[0x104CB, 0x104F3],
	[0x104CC, 0x104F4],
	[0x104CD, 0x104F5],
	[0x104CE, 0x104F6],
	[0x104CF, 0x104F7],
	[0x104D0, 0x104F8],
	[0x104D1, 0x104F9],
	[0x104D2, 0x104FA],
	[0x104D3, 0x104FB],
	[0x104D8, 0x104B0],
	[0x104D9, 0x104B1],
	[0x104DA, 0x104B2],
	[0x104DB, 0x104B3],
	[0x104DC, 0x104B4],
	[0x104DD, 0x104B5],
	[0x104DE, 0x104B6],
	[0x104DF, 0x104B7],
	[0x104E0, 0x104B8],
	[0x104E1, 0x104B9],
	[0x104E2, 0x104BA],
	[0x104E3, 0x104BB],
	[0x104E4, 0x104BC],
	[0x104E5, 0x104BD],
	[0x104E6, 0x104BE],
	[0x104E7, 0x104BF],
	[0x104E8, 0x104C0],
	[0x104E9, 0x104C1],
	[0x104EA, 0x104C2],
	[0x104EB, 0x104C3],
	[0x104EC, 0x104C4],
	[0x104ED, 0x104C5],
	[0x104EE, 0x104C6],
	[0x104EF, 0x104C7],
	[0x104F0, 0x104C8],
	[0x104F1, 0x104C9],
	[0x104F2, 0x104CA],
	[0x104F3, 0x104CB],
	[0x104F4, 0x104CC],
	[0x104F5, 0x104CD],
	[0x104F6, 0x104CE],
	[0x104F7, 0x104CF],
	[0x104F8, 0x104D0],
	[0x104F9, 0x104D1],
	[0x104FA, 0x104D2],
	[0x104FB, 0x104D3],
	[0x10C80, 0x10CC0],
	[0x10C81, 0x10CC1],
	[0x10C82, 0x10CC2],
	[0x10C83, 0x10CC3],
	[0x10C84, 0x10CC4],
	[0x10C85, 0x10CC5],
	[0x10C86, 0x10CC6],
	[0x10C87, 0x10CC7],
	[0x10C88, 0x10CC8],
	[0x10C89, 0x10CC9],
	[0x10C8A, 0x10CCA],
	[0x10C8B, 0x10CCB],
	[0x10C8C, 0x10CCC],
	[0x10C8D, 0x10CCD],
	[0x10C8E, 0x10CCE],
	[0x10C8F, 0x10CCF],
	[0x10C90, 0x10CD0],
	[0x10C91, 0x10CD1],
	[0x10C92, 0x10CD2],
	[0x10C93, 0x10CD3],
	[0x10C94, 0x10CD4],
	[0x10C95, 0x10CD5],
	[0x10C96, 0x10CD6],
	[0x10C97, 0x10CD7],
	[0x10C98, 0x10CD8],
	[0x10C99, 0x10CD9],
	[0x10C9A, 0x10CDA],
	[0x10C9B, 0x10CDB],
	[0x10C9C, 0x10CDC],
	[0x10C9D, 0x10CDD],
	[0x10C9E, 0x10CDE],
	[0x10C9F, 0x10CDF],
	[0x10CA0, 0x10CE0],
	[0x10CA1, 0x10CE1],
	[0x10CA2, 0x10CE2],
	[0x10CA3, 0x10CE3],
	[0x10CA4, 0x10CE4],
	[0x10CA5, 0x10CE5],
	[0x10CA6, 0x10CE6],
	[0x10CA7, 0x10CE7],
	[0x10CA8, 0x10CE8],
	[0x10CA9, 0x10CE9],
	[0x10CAA, 0x10CEA],
	[0x10CAB, 0x10CEB],
	[0x10CAC, 0x10CEC],
	[0x10CAD, 0x10CED],
	[0x10CAE, 0x10CEE],
	[0x10CAF, 0x10CEF],
	[0x10CB0, 0x10CF0],
	[0x10CB1, 0x10CF1],
	[0x10CB2, 0x10CF2],
	[0x10CC0, 0x10C80],
	[0x10CC1, 0x10C81],
	[0x10CC2, 0x10C82],
	[0x10CC3, 0x10C83],
	[0x10CC4, 0x10C84],
	[0x10CC5, 0x10C85],
	[0x10CC6, 0x10C86],
	[0x10CC7, 0x10C87],
	[0x10CC8, 0x10C88],
	[0x10CC9, 0x10C89],
	[0x10CCA, 0x10C8A],
	[0x10CCB, 0x10C8B],
	[0x10CCC, 0x10C8C],
	[0x10CCD, 0x10C8D],
	[0x10CCE, 0x10C8E],
	[0x10CCF, 0x10C8F],
	[0x10CD0, 0x10C90],
	[0x10CD1, 0x10C91],
	[0x10CD2, 0x10C92],
	[0x10CD3, 0x10C93],
	[0x10CD4, 0x10C94],
	[0x10CD5, 0x10C95],
	[0x10CD6, 0x10C96],
	[0x10CD7, 0x10C97],
	[0x10CD8, 0x10C98],
	[0x10CD9, 0x10C99],
	[0x10CDA, 0x10C9A],
	[0x10CDB, 0x10C9B],
	[0x10CDC, 0x10C9C],
	[0x10CDD, 0x10C9D],
	[0x10CDE, 0x10C9E],
	[0x10CDF, 0x10C9F],
	[0x10CE0, 0x10CA0],
	[0x10CE1, 0x10CA1],
	[0x10CE2, 0x10CA2],
	[0x10CE3, 0x10CA3],
	[0x10CE4, 0x10CA4],
	[0x10CE5, 0x10CA5],
	[0x10CE6, 0x10CA6],
	[0x10CE7, 0x10CA7],
	[0x10CE8, 0x10CA8],
	[0x10CE9, 0x10CA9],
	[0x10CEA, 0x10CAA],
	[0x10CEB, 0x10CAB],
	[0x10CEC, 0x10CAC],
	[0x10CED, 0x10CAD],
	[0x10CEE, 0x10CAE],
	[0x10CEF, 0x10CAF],
	[0x10CF0, 0x10CB0],
	[0x10CF1, 0x10CB1],
	[0x10CF2, 0x10CB2],
	[0x118A0, 0x118C0],
	[0x118A1, 0x118C1],
	[0x118A2, 0x118C2],
	[0x118A3, 0x118C3],
	[0x118A4, 0x118C4],
	[0x118A5, 0x118C5],
	[0x118A6, 0x118C6],
	[0x118A7, 0x118C7],
	[0x118A8, 0x118C8],
	[0x118A9, 0x118C9],
	[0x118AA, 0x118CA],
	[0x118AB, 0x118CB],
	[0x118AC, 0x118CC],
	[0x118AD, 0x118CD],
	[0x118AE, 0x118CE],
	[0x118AF, 0x118CF],
	[0x118B0, 0x118D0],
	[0x118B1, 0x118D1],
	[0x118B2, 0x118D2],
	[0x118B3, 0x118D3],
	[0x118B4, 0x118D4],
	[0x118B5, 0x118D5],
	[0x118B6, 0x118D6],
	[0x118B7, 0x118D7],
	[0x118B8, 0x118D8],
	[0x118B9, 0x118D9],
	[0x118BA, 0x118DA],
	[0x118BB, 0x118DB],
	[0x118BC, 0x118DC],
	[0x118BD, 0x118DD],
	[0x118BE, 0x118DE],
	[0x118BF, 0x118DF],
	[0x118C0, 0x118A0],
	[0x118C1, 0x118A1],
	[0x118C2, 0x118A2],
	[0x118C3, 0x118A3],
	[0x118C4, 0x118A4],
	[0x118C5, 0x118A5],
	[0x118C6, 0x118A6],
	[0x118C7, 0x118A7],
	[0x118C8, 0x118A8],
	[0x118C9, 0x118A9],
	[0x118CA, 0x118AA],
	[0x118CB, 0x118AB],
	[0x118CC, 0x118AC],
	[0x118CD, 0x118AD],
	[0x118CE, 0x118AE],
	[0x118CF, 0x118AF],
	[0x118D0, 0x118B0],
	[0x118D1, 0x118B1],
	[0x118D2, 0x118B2],
	[0x118D3, 0x118B3],
	[0x118D4, 0x118B4],
	[0x118D5, 0x118B5],
	[0x118D6, 0x118B6],
	[0x118D7, 0x118B7],
	[0x118D8, 0x118B8],
	[0x118D9, 0x118B9],
	[0x118DA, 0x118BA],
	[0x118DB, 0x118BB],
	[0x118DC, 0x118BC],
	[0x118DD, 0x118BD],
	[0x118DE, 0x118BE],
	[0x118DF, 0x118BF],
	[0x1E900, 0x1E922],
	[0x1E901, 0x1E923],
	[0x1E902, 0x1E924],
	[0x1E903, 0x1E925],
	[0x1E904, 0x1E926],
	[0x1E905, 0x1E927],
	[0x1E906, 0x1E928],
	[0x1E907, 0x1E929],
	[0x1E908, 0x1E92A],
	[0x1E909, 0x1E92B],
	[0x1E90A, 0x1E92C],
	[0x1E90B, 0x1E92D],
	[0x1E90C, 0x1E92E],
	[0x1E90D, 0x1E92F],
	[0x1E90E, 0x1E930],
	[0x1E90F, 0x1E931],
	[0x1E910, 0x1E932],
	[0x1E911, 0x1E933],
	[0x1E912, 0x1E934],
	[0x1E913, 0x1E935],
	[0x1E914, 0x1E936],
	[0x1E915, 0x1E937],
	[0x1E916, 0x1E938],
	[0x1E917, 0x1E939],
	[0x1E918, 0x1E93A],
	[0x1E919, 0x1E93B],
	[0x1E91A, 0x1E93C],
	[0x1E91B, 0x1E93D],
	[0x1E91C, 0x1E93E],
	[0x1E91D, 0x1E93F],
	[0x1E91E, 0x1E940],
	[0x1E91F, 0x1E941],
	[0x1E920, 0x1E942],
	[0x1E921, 0x1E943],
	[0x1E922, 0x1E900],
	[0x1E923, 0x1E901],
	[0x1E924, 0x1E902],
	[0x1E925, 0x1E903],
	[0x1E926, 0x1E904],
	[0x1E927, 0x1E905],
	[0x1E928, 0x1E906],
	[0x1E929, 0x1E907],
	[0x1E92A, 0x1E908],
	[0x1E92B, 0x1E909],
	[0x1E92C, 0x1E90A],
	[0x1E92D, 0x1E90B],
	[0x1E92E, 0x1E90C],
	[0x1E92F, 0x1E90D],
	[0x1E930, 0x1E90E],
	[0x1E931, 0x1E90F],
	[0x1E932, 0x1E910],
	[0x1E933, 0x1E911],
	[0x1E934, 0x1E912],
	[0x1E935, 0x1E913],
	[0x1E936, 0x1E914],
	[0x1E937, 0x1E915],
	[0x1E938, 0x1E916],
	[0x1E939, 0x1E917],
	[0x1E93A, 0x1E918],
	[0x1E93B, 0x1E919],
	[0x1E93C, 0x1E91A],
	[0x1E93D, 0x1E91B],
	[0x1E93E, 0x1E91C],
	[0x1E93F, 0x1E91D],
	[0x1E940, 0x1E91E],
	[0x1E941, 0x1E91F],
	[0x1E942, 0x1E920],
	[0x1E943, 0x1E921]
]);

var REGULAR = new Map([
	['d', regenerate()
		.addRange(0x30, 0x39)],
	['D', regenerate()
		.addRange(0x0, 0x2F)
		.addRange(0x3A, 0xFFFF)],
	['s', regenerate(0x20, 0xA0, 0x1680, 0x202F, 0x205F, 0x3000, 0xFEFF)
		.addRange(0x9, 0xD)
		.addRange(0x2000, 0x200A)
		.addRange(0x2028, 0x2029)],
	['S', regenerate()
		.addRange(0x0, 0x8)
		.addRange(0xE, 0x1F)
		.addRange(0x21, 0x9F)
		.addRange(0xA1, 0x167F)
		.addRange(0x1681, 0x1FFF)
		.addRange(0x200B, 0x2027)
		.addRange(0x202A, 0x202E)
		.addRange(0x2030, 0x205E)
		.addRange(0x2060, 0x2FFF)
		.addRange(0x3001, 0xFEFE)
		.addRange(0xFF00, 0xFFFF)],
	['w', regenerate(0x5F)
		.addRange(0x30, 0x39)
		.addRange(0x41, 0x5A)
		.addRange(0x61, 0x7A)],
	['W', regenerate(0x60)
		.addRange(0x0, 0x2F)
		.addRange(0x3A, 0x40)
		.addRange(0x5B, 0x5E)
		.addRange(0x7B, 0xFFFF)]
]);

var UNICODE = new Map([
	['d', regenerate()
		.addRange(0x30, 0x39)],
	['D', regenerate()
		.addRange(0x0, 0x2F)
		.addRange(0x3A, 0x10FFFF)],
	['s', regenerate(0x20, 0xA0, 0x1680, 0x202F, 0x205F, 0x3000, 0xFEFF)
		.addRange(0x9, 0xD)
		.addRange(0x2000, 0x200A)
		.addRange(0x2028, 0x2029)],
	['S', regenerate()
		.addRange(0x0, 0x8)
		.addRange(0xE, 0x1F)
		.addRange(0x21, 0x9F)
		.addRange(0xA1, 0x167F)
		.addRange(0x1681, 0x1FFF)
		.addRange(0x200B, 0x2027)
		.addRange(0x202A, 0x202E)
		.addRange(0x2030, 0x205E)
		.addRange(0x2060, 0x2FFF)
		.addRange(0x3001, 0xFEFE)
		.addRange(0xFF00, 0x10FFFF)],
	['w', regenerate(0x5F)
		.addRange(0x30, 0x39)
		.addRange(0x41, 0x5A)
		.addRange(0x61, 0x7A)],
	['W', regenerate(0x60)
		.addRange(0x0, 0x2F)
		.addRange(0x3A, 0x40)
		.addRange(0x5B, 0x5E)
		.addRange(0x7B, 0x10FFFF)]
]);

var UNICODE_IGNORE_CASE = new Map([
	['d', regenerate()
		.addRange(0x30, 0x39)],
	['D', regenerate()
		.addRange(0x0, 0x2F)
		.addRange(0x3A, 0x10FFFF)],
	['s', regenerate(0x20, 0xA0, 0x1680, 0x202F, 0x205F, 0x3000, 0xFEFF)
		.addRange(0x9, 0xD)
		.addRange(0x2000, 0x200A)
		.addRange(0x2028, 0x2029)],
	['S', regenerate()
		.addRange(0x0, 0x8)
		.addRange(0xE, 0x1F)
		.addRange(0x21, 0x9F)
		.addRange(0xA1, 0x167F)
		.addRange(0x1681, 0x1FFF)
		.addRange(0x200B, 0x2027)
		.addRange(0x202A, 0x202E)
		.addRange(0x2030, 0x205E)
		.addRange(0x2060, 0x2FFF)
		.addRange(0x3001, 0xFEFE)
		.addRange(0xFF00, 0x10FFFF)],
	['w', regenerate(0x5F, 0x17F, 0x212A)
		.addRange(0x30, 0x39)
		.addRange(0x41, 0x5A)
		.addRange(0x61, 0x7A)],
	['W', regenerate(0x60)
		.addRange(0x0, 0x2F)
		.addRange(0x3A, 0x40)
		.addRange(0x5B, 0x5E)
		.addRange(0x7B, 0x17E)
		.addRange(0x180, 0x2129)
		.addRange(0x212B, 0x10FFFF)]
]);

var characterClassEscapeSets = {
	REGULAR: REGULAR,
	UNICODE: UNICODE,
	UNICODE_IGNORE_CASE: UNICODE_IGNORE_CASE
};

var rewritePattern_1 = createCommonjsModule(function (module) {
var generate = regjsgen.generate;
var parse = parser.parse;






// Prepare a Regenerate set containing all code points, used for negative
// character classes (if any).
var UNICODE_SET = regenerate().addRange(0x0, 0x10FFFF);
// Without the `u` flag, the range stops at 0xFFFF.
// https://mths.be/es6#sec-pattern-semantics
var BMP_SET = regenerate().addRange(0x0, 0xFFFF);

// Prepare a Regenerate set containing all code points that are supposed to be
// matched by `/./u`. https://mths.be/es6#sec-atom
var DOT_SET_UNICODE = UNICODE_SET.clone() // all Unicode code points
	.remove(
		// minus `LineTerminator`s (https://mths.be/es6#sec-line-terminators):
		0x000A, // Line Feed <LF>
		0x000D, // Carriage Return <CR>
		0x2028, // Line Separator <LS>
		0x2029  // Paragraph Separator <PS>
	);
// Prepare a Regenerate set containing all code points that are supposed to be
// matched by `/./` (only BMP code points).
var DOT_SET = DOT_SET_UNICODE.clone()
	.intersection(BMP_SET);

var getCharacterClassEscapeSet = function (character, unicode, ignoreCase) {
	if (unicode) {
		if (ignoreCase) {
			return characterClassEscapeSets.UNICODE_IGNORE_CASE.get(character);
		}
		return characterClassEscapeSets.UNICODE.get(character);
	}
	return characterClassEscapeSets.REGULAR.get(character);
};

var getDotSet = function (unicode, dotAll) {
	if (dotAll) {
		return unicode ? UNICODE_SET : BMP_SET;
	}
	return unicode ? DOT_SET_UNICODE : DOT_SET;
};

var getUnicodePropertyValueSet = function (property, value) {
	var path = value ?
		(property + "/" + value) :
		("Binary_Property/" + property);
	try {
		return commonjsRequire(("regenerate-unicode-properties/" + path + ".js"));
	} catch (exception) {
		throw new Error(
			"Failed to recognize value `" + value + "` for property " +
			"`" + property + "`."
		);
	}
};

var handleLoneUnicodePropertyNameOrValue = function (value) {
	// It could be a `General_Category` value or a binary property.
	// Note: `unicodeMatchPropertyValue` throws on invalid values.
	try {
		var property$1 = 'General_Category';
		var category = unicodeMatchPropertyValueEcmascript(property$1, value);
		return getUnicodePropertyValueSet(property$1, category);
	} catch (exception) {}
	// It’s not a `General_Category` value, so check if it’s a binary
	// property. Note: `unicodeMatchProperty` throws on invalid properties.
	var property = unicodeMatchPropertyEcmascript(value);
	return getUnicodePropertyValueSet(property);
};

var getUnicodePropertyEscapeSet = function (value, isNegative) {
	var parts = value.split('=');
	var firstPart = parts[0];
	var set;
	if (parts.length == 1) {
		set = handleLoneUnicodePropertyNameOrValue(firstPart);
	} else {
		// The pattern consists of two parts, i.e. `Property=Value`.
		var property = unicodeMatchPropertyEcmascript(firstPart);
		var value$1 = unicodeMatchPropertyValueEcmascript(property, parts[1]);
		set = getUnicodePropertyValueSet(property, value$1);
	}
	if (isNegative) {
		return UNICODE_SET.clone().remove(set);
	}
	return set.clone();
};

// Given a range of code points, add any case-folded code points in that range
// to a set.
regenerate.prototype.iuAddRange = function(min, max) {
	var $this = this;
	do {
		var folded = caseFold(min);
		if (folded) {
			$this.add(folded);
		}
	} while (++min <= max);
	return $this;
};

var update = function (item, pattern) {
	var tree = parse(pattern, config.useUnicodeFlag ? 'u' : '');
	switch (tree.type) {
		case 'characterClass':
		case 'group':
		case 'value':
			// No wrapping needed.
			break;
		default:
			// Wrap the pattern in a non-capturing group.
			tree = wrap(tree, pattern);
	}
	Object.assign(item, tree);
};

var wrap = function (tree, pattern) {
	// Wrap the pattern in a non-capturing group.
	return {
		'type': 'group',
		'behavior': 'ignore',
		'body': [tree],
		'raw': ("(?:" + pattern + ")")
	};
};

var caseFold = function (codePoint) {
	return iuMappings.get(codePoint) || false;
};

var processCharacterClass = function (characterClassItem, regenerateOptions) {
	var set = regenerate();
	for (var i = 0, list = characterClassItem.body; i < list.length; i += 1) {
		var item = list[i];

		switch (item.type) {
			case 'value':
				set.add(item.codePoint);
				if (config.ignoreCase && config.unicode && !config.useUnicodeFlag) {
					var folded = caseFold(item.codePoint);
					if (folded) {
						set.add(folded);
					}
				}
				break;
			case 'characterClassRange':
				var min = item.min.codePoint;
				var max = item.max.codePoint;
				set.addRange(min, max);
				if (config.ignoreCase && config.unicode && !config.useUnicodeFlag) {
					set.iuAddRange(min, max);
				}
				break;
			case 'characterClassEscape':
				set.add(getCharacterClassEscapeSet(
					item.value,
					config.unicode,
					config.ignoreCase
				));
				break;
			case 'unicodePropertyEscape':
				set.add(getUnicodePropertyEscapeSet(item.value, item.negative));
				break;
			// The `default` clause is only here as a safeguard; it should never be
			// reached. Code coverage tools should ignore it.
			/* istanbul ignore next */
			default:
				throw new Error(("Unknown term type: " + (item.type)));
		}
	}
	if (characterClassItem.negative) {
		set = (config.unicode ? UNICODE_SET : BMP_SET).clone().remove(set);
	}
	update(characterClassItem, set.toString(regenerateOptions));
	return characterClassItem;
};

var processTerm = function (item, regenerateOptions) {
	switch (item.type) {
		case 'dot':
			update(
				item,
				getDotSet(config.unicode, config.dotAll).toString(regenerateOptions)
			);
			break;
		case 'characterClass':
			item = processCharacterClass(item, regenerateOptions);
			break;
		case 'unicodePropertyEscape':
			update(
				item,
				getUnicodePropertyEscapeSet(item.value, item.negative)
					.toString(regenerateOptions)
			);
			break;
		case 'characterClassEscape':
			update(
				item,
				getCharacterClassEscapeSet(
					item.value,
					config.unicode,
					config.ignoreCase
				).toString(regenerateOptions)
			);
			break;
		case 'alternative':
		case 'disjunction':
		case 'group':
		case 'quantifier':
			item.body = item.body.map(function (term) {
				return processTerm(term, regenerateOptions);
			});
			break;
		case 'value':
			var codePoint = item.codePoint;
			var set = regenerate(codePoint);
			if (config.ignoreCase && config.unicode && !config.useUnicodeFlag) {
				var folded = caseFold(codePoint);
				if (folded) {
					set.add(folded);
				}
			}
			update(item, set.toString(regenerateOptions));
			break;
		case 'anchor':
		case 'empty':
		case 'group':
		case 'reference':
			// Nothing to do here.
			break;
		// The `default` clause is only here as a safeguard; it should never be
		// reached. Code coverage tools should ignore it.
		/* istanbul ignore next */
		default:
			throw new Error(("Unknown term type: " + (item.type)));
	}
	return item;
};

var config = {
	'ignoreCase': false,
	'unicode': false,
	'dotAll': false,
	'useUnicodeFlag': false
};
var rewritePattern = function (pattern, flags, options) {
	var regjsparserFeatures = {
		'unicodePropertyEscape': options && options.unicodePropertyEscape
	};
	config.ignoreCase = flags && flags.includes('i');
	config.unicode = flags && flags.includes('u');
	var supportDotAllFlag = options && options.dotAllFlag;
	config.dotAll = supportDotAllFlag && flags && flags.includes('s');
	config.useUnicodeFlag = options && options.useUnicodeFlag;
	var regenerateOptions = {
		'hasUnicodeFlag': config.useUnicodeFlag,
		'bmpOnly': !config.unicode
	};
	var tree = parse(pattern, flags, regjsparserFeatures);
	// Note: `processTerm` mutates `tree`.
	processTerm(tree, regenerateOptions);
	return generate(tree);
};

module.exports = rewritePattern;
});

var Literal = (function (Node$$1) {
	function Literal () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) Literal.__proto__ = Node$$1;
	Literal.prototype = Object.create( Node$$1 && Node$$1.prototype );
	Literal.prototype.constructor = Literal;

	Literal.prototype.initialise = function initialise () {
		if (typeof this.value === 'string') {
			this.program.indentExclusionElements.push(this);
		}
	};

	Literal.prototype.transpile = function transpile (code, transforms) {
		if (transforms.numericLiteral) {
			if (this.raw.match(/^0[bo]/i)) {
				code.overwrite(this.start, this.end, String(this.value), {
					storeName: true,
					contentOnly: true
				});
			}
		}

		if (this.regex) {
			var ref = this.regex;
			var pattern = ref.pattern;
			var flags = ref.flags;

			if (transforms.stickyRegExp && /y/.test(flags))
				{ throw new CompileError(
					'Regular expression sticky flag is not supported',
					this
				); }
			if (transforms.unicodeRegExp && /u/.test(flags)) {
				code.overwrite(
					this.start,
					this.end,
					("/" + (rewritePattern_1(pattern, flags)) + "/" + (flags.replace('u', ''))),
					{
						contentOnly: true
					}
				);
			}
		}
	};

	return Literal;
}(Node));

var MemberExpression = (function (Node$$1) {
	function MemberExpression () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) MemberExpression.__proto__ = Node$$1;
	MemberExpression.prototype = Object.create( Node$$1 && Node$$1.prototype );
	MemberExpression.prototype.constructor = MemberExpression;

	MemberExpression.prototype.transpile = function transpile (code, transforms) {
		if (transforms.reservedProperties && reserved[this.property.name]) {
			code.overwrite(this.object.end, this.property.start, "['");
			code.appendLeft(this.property.end, "']");
		}

		Node$$1.prototype.transpile.call(this, code, transforms);
	};

	return MemberExpression;
}(Node));

var NewExpression = (function (Node$$1) {
	function NewExpression () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) NewExpression.__proto__ = Node$$1;
	NewExpression.prototype = Object.create( Node$$1 && Node$$1.prototype );
	NewExpression.prototype.constructor = NewExpression;

	NewExpression.prototype.initialise = function initialise (transforms) {
		var this$1 = this;

		if (transforms.spreadRest && this.arguments.length) {
			var lexicalBoundary = this.findLexicalBoundary();

			var i = this.arguments.length;
			while (i--) {
				var arg = this$1.arguments[i];
				if (arg.type === 'SpreadElement' && isArguments(arg.argument)) {
					this$1.argumentsArrayAlias = lexicalBoundary.getArgumentsArrayAlias();
					break;
				}
			}
		}

		Node$$1.prototype.initialise.call(this, transforms);
	};

	NewExpression.prototype.transpile = function transpile (code, transforms) {
		Node$$1.prototype.transpile.call(this, code, transforms);

		if (transforms.spreadRest && this.arguments.length) {
			var firstArgument = this.arguments[0];
			var isNew = true;
			var hasSpreadElements = spread(
				code,
				this.arguments,
				firstArgument.start,
				this.argumentsArrayAlias,
				isNew
			);

			if (hasSpreadElements) {
				code.prependRight(
					this.start + 'new'.length,
					' (Function.prototype.bind.apply('
				);
				code.overwrite(
					this.callee.end,
					firstArgument.start,
					', [ null ].concat( '
				);
				code.appendLeft(this.end, ' ))');
			}
		}

		if (this.arguments.length) {
			removeTrailingComma(code, this.arguments[this.arguments.length - 1].end);
		}
	};

	return NewExpression;
}(Node));

var ObjectExpression = (function (Node$$1) {
	function ObjectExpression () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) ObjectExpression.__proto__ = Node$$1;
	ObjectExpression.prototype = Object.create( Node$$1 && Node$$1.prototype );
	ObjectExpression.prototype.constructor = ObjectExpression;

	ObjectExpression.prototype.transpile = function transpile (code, transforms) {
		var this$1 = this;

		Node$$1.prototype.transpile.call(this, code, transforms);

		var firstPropertyStart = this.start + 1;
		var regularPropertyCount = 0;
		var spreadPropertyCount = 0;
		var computedPropertyCount = 0;
		var firstSpreadProperty = null;
		var firstComputedProperty = null;

		for (var i = 0; i < this.properties.length; ++i) {
			var prop = this$1.properties[i];
			if (prop.type === 'SpreadElement') {
				spreadPropertyCount += 1;
				if (firstSpreadProperty === null) { firstSpreadProperty = i; }
			} else if (prop.computed) {
				computedPropertyCount += 1;
				if (firstComputedProperty === null) { firstComputedProperty = i; }
			} else if (prop.type === 'Property') {
				regularPropertyCount += 1;
			}
		}

		if (spreadPropertyCount) {
			if (!this.program.options.objectAssign) {
				throw new CompileError(
					"Object spread operator requires specified objectAssign option with 'Object.assign' or polyfill helper.",
					this
				);
			}
			// enclose run of non-spread properties in curlies
			var i$1 = this.properties.length;
			if (regularPropertyCount && !computedPropertyCount) {
				while (i$1--) {
					var prop$1 = this$1.properties[i$1];

					if (prop$1.type === 'Property' && !prop$1.computed) {
						var lastProp = this$1.properties[i$1 - 1];
						var nextProp = this$1.properties[i$1 + 1];

						if (
							!lastProp ||
							lastProp.type !== 'Property' ||
							lastProp.computed
						) {
							code.prependRight(prop$1.start, '{');
						}

						if (
							!nextProp ||
							nextProp.type !== 'Property' ||
							nextProp.computed
						) {
							code.appendLeft(prop$1.end, '}');
						}
					}
				}
			}

			// wrap the whole thing in Object.assign
			firstPropertyStart = this.properties[0].start;
			if (!computedPropertyCount) {
				code.overwrite(
					this.start,
					firstPropertyStart,
					((this.program.options.objectAssign) + "({}, ")
				);
				code.overwrite(
					this.properties[this.properties.length - 1].end,
					this.end,
					')'
				);
			} else if (this.properties[0].type === 'SpreadElement') {
				code.overwrite(
					this.start,
					firstPropertyStart,
					((this.program.options.objectAssign) + "({}, ")
				);
				code.remove(this.end - 1, this.end);
				code.appendRight(this.end, ')');
			} else {
				code.prependLeft(this.start, ((this.program.options.objectAssign) + "("));
				code.appendRight(this.end, ')');
			}
		}

		if (computedPropertyCount && transforms.computedProperty) {
			var i0 = this.getIndentation();

			var isSimpleAssignment;
			var name;

			if (
				this.parent.type === 'VariableDeclarator' &&
				this.parent.parent.declarations.length === 1 &&
				this.parent.id.type === 'Identifier'
			) {
				isSimpleAssignment = true;
				name = this.parent.id.alias || this.parent.id.name; // TODO is this right?
			} else if (
				this.parent.type === 'AssignmentExpression' &&
				this.parent.parent.type === 'ExpressionStatement' &&
				this.parent.left.type === 'Identifier'
			) {
				isSimpleAssignment = true;
				name = this.parent.left.alias || this.parent.left.name; // TODO is this right?
			} else if (
				this.parent.type === 'AssignmentPattern' &&
				this.parent.left.type === 'Identifier'
			) {
				isSimpleAssignment = true;
				name = this.parent.left.alias || this.parent.left.name; // TODO is this right?
			}

			if (spreadPropertyCount) { isSimpleAssignment = false; }

			// handle block scoping
			name = this.findScope(false).resolveName(name);

			var start = firstPropertyStart;
			var end = this.end;

			if (isSimpleAssignment) {
				// ???
			} else {
				if (
					firstSpreadProperty === null ||
					firstComputedProperty < firstSpreadProperty
				) {
					name = this.findScope(true).createDeclaration('obj');

					code.prependRight(this.start, ("( " + name + " = "));
				} else { name = null; } // We don't actually need this variable
			}

			var len = this.properties.length;
			var lastComputedProp;
			var sawNonComputedProperty = false;
			var isFirst = true;

			for (var i$2 = 0; i$2 < len; i$2 += 1) {
				var prop$2 = this$1.properties[i$2];
				var moveStart = i$2 > 0 ? this$1.properties[i$2 - 1].end : start;

				if (
					prop$2.type === 'Property' &&
					(prop$2.computed || (lastComputedProp && !spreadPropertyCount))
				) {
					if (i$2 === 0) { moveStart = this$1.start + 1; } // Trim leading whitespace
					lastComputedProp = prop$2;

					if (!name) {
						name = this$1.findScope(true).createDeclaration('obj');

						var propId = name + (prop$2.computed ? '' : '.');
						code.appendRight(prop$2.start, ("( " + name + " = {}, " + propId));
					} else {
						var propId$1 =
							(isSimpleAssignment ? (";\n" + i0 + name) : (", " + name)) +
							(prop$2.key.type === 'Literal' || prop$2.computed ? '' : '.');

						if (moveStart < prop$2.start) {
							code.overwrite(moveStart, prop$2.start, propId$1);
						} else {
							code.prependRight(prop$2.start, propId$1);
						}
					}

					var c = prop$2.key.end;
					if (prop$2.computed) {
						while (code.original[c] !== ']') { c += 1; }
						c += 1;
					}
					if (prop$2.key.type === 'Literal' && !prop$2.computed) {
						code.overwrite(
							prop$2.start,
							prop$2.key.end + 1,
							'[' + code.slice(prop$2.start, prop$2.key.end) + '] = '
						);
					} else if (prop$2.shorthand || (prop$2.method && !prop$2.computed && transforms.conciseMethodProperty)) {
						// Replace : with = if Property::transpile inserted the :
						code.overwrite(
							prop$2.key.start,
							prop$2.key.end,
							code.slice(prop$2.key.start, prop$2.key.end).replace(/:/, ' =')
						);
					} else {
						if (prop$2.value.start > c) { code.remove(c, prop$2.value.start); }
						code.prependLeft(c, ' = ');
					}

					// This duplicates behavior from Property::transpile which is disabled
					// for computed properties or if conciseMethodProperty is false
					if (prop$2.method && (prop$2.computed || !transforms.conciseMethodProperty)) {
						if (prop$2.value.generator) { code.remove(prop$2.start, prop$2.key.start); }
						code.prependRight(prop$2.value.start, ("function" + (prop$2.value.generator ? '*' : '') + " "));
					}
				} else if (prop$2.type === 'SpreadElement') {
					if (name && i$2 > 0) {
						if (!lastComputedProp) {
							lastComputedProp = this$1.properties[i$2 - 1];
						}
						code.appendLeft(lastComputedProp.end, (", " + name + " )"));

						lastComputedProp = null;
						name = null;
					}
				} else {
					if (!isFirst && spreadPropertyCount) {
						// We are in an Object.assign context, so we need to wrap regular properties
						code.prependRight(prop$2.start, '{');
						code.appendLeft(prop$2.end, '}');
					}
					sawNonComputedProperty = true;
				}
				if (isFirst && (prop$2.type === 'SpreadElement' || prop$2.computed)) {
					var beginEnd = sawNonComputedProperty
						? this$1.properties[this$1.properties.length - 1].end
						: this$1.end - 1;
					// Trim trailing comma because it can easily become a leading comma which is illegal
					if (code.original[beginEnd] == ',') { ++beginEnd; }
					var closing = code.slice(beginEnd, end);
					code.prependLeft(moveStart, closing);
					code.remove(beginEnd, end);
					isFirst = false;
				}

				// Clean up some extranous whitespace
				var c$1 = prop$2.end;
				if (i$2 < len - 1 && !sawNonComputedProperty) {
					while (code.original[c$1] !== ',') { c$1 += 1; }
				} else if (i$2 == len - 1) { c$1 = this$1.end; }
				code.remove(prop$2.end, c$1);
			}

			// special case
			if (computedPropertyCount === len) {
				code.remove(this.properties[len - 1].end, this.end - 1);
			}

			if (!isSimpleAssignment && name) {
				code.appendLeft(lastComputedProp.end, (", " + name + " )"));
			}
		}
	};

	return ObjectExpression;
}(Node));

var Property = (function (Node$$1) {
	function Property () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) Property.__proto__ = Node$$1;
	Property.prototype = Object.create( Node$$1 && Node$$1.prototype );
	Property.prototype.constructor = Property;

	Property.prototype.transpile = function transpile (code, transforms) {
		Node$$1.prototype.transpile.call(this, code, transforms);

		if (
			transforms.conciseMethodProperty &&
			!this.computed &&
			this.parent.type !== 'ObjectPattern'
		) {
			if (this.shorthand) {
				code.prependRight(this.start, ((this.key.name) + ": "));
			} else if (this.method) {
				var name = '';
				if (this.program.options.namedFunctionExpressions !== false) {
					if (
						this.key.type === 'Literal' &&
						typeof this.key.value === 'number'
					) {
						name = '';
					} else if (this.key.type === 'Identifier') {
						if (
							reserved[this.key.name] ||
							!/^[a-z_$][a-z0-9_$]*$/i.test(this.key.name) ||
							this.value.body.scope.references[this.key.name]
						) {
							name = this.findScope(true).createIdentifier(this.key.name);
						} else {
							name = this.key.name;
						}
					} else {
						name = this.findScope(true).createIdentifier(this.key.value);
					}
					name = ' ' + name;
				}

				if (this.value.generator) { code.remove(this.start, this.key.start); }
				code.appendLeft(
					this.key.end,
					(": function" + (this.value.generator ? '*' : '') + name)
				);
			}
		}

		if (transforms.reservedProperties && reserved[this.key.name]) {
			code.prependRight(this.key.start, "'");
			code.appendLeft(this.key.end, "'");
		}
	};

	return Property;
}(Node));

var ReturnStatement = (function (Node$$1) {
	function ReturnStatement () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) ReturnStatement.__proto__ = Node$$1;
	ReturnStatement.prototype = Object.create( Node$$1 && Node$$1.prototype );
	ReturnStatement.prototype.constructor = ReturnStatement;

	ReturnStatement.prototype.initialise = function initialise (transforms) {
		this.loop = this.findNearest(loopStatement);
		this.nearestFunction = this.findNearest(/Function/);

		if (
			this.loop &&
			(!this.nearestFunction || this.loop.depth > this.nearestFunction.depth)
		) {
			this.loop.canReturn = true;
			this.shouldWrap = true;
		}

		if (this.argument) { this.argument.initialise(transforms); }
	};

	ReturnStatement.prototype.transpile = function transpile (code, transforms) {
		var shouldWrap =
			this.shouldWrap && this.loop && this.loop.shouldRewriteAsFunction;

		if (this.argument) {
			if (shouldWrap) { code.prependRight(this.argument.start, "{ v: "); }
			this.argument.transpile(code, transforms);
			if (shouldWrap) { code.appendLeft(this.argument.end, " }"); }
		} else if (shouldWrap) {
			code.appendLeft(this.start + 6, ' {}');
		}
	};

	return ReturnStatement;
}(Node));

var SpreadElement = (function (Node$$1) {
	function SpreadElement () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) SpreadElement.__proto__ = Node$$1;
	SpreadElement.prototype = Object.create( Node$$1 && Node$$1.prototype );
	SpreadElement.prototype.constructor = SpreadElement;

	SpreadElement.prototype.transpile = function transpile (code, transforms) {
		if (this.parent.type == 'ObjectExpression') {
			code.remove(this.start, this.argument.start);
			code.remove(this.argument.end, this.end);
		}

		Node$$1.prototype.transpile.call(this, code, transforms);
	};

	return SpreadElement;
}(Node));

var Super = (function (Node$$1) {
	function Super () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) Super.__proto__ = Node$$1;
	Super.prototype = Object.create( Node$$1 && Node$$1.prototype );
	Super.prototype.constructor = Super;

	Super.prototype.initialise = function initialise (transforms) {
		if (transforms.classes) {
			this.method = this.findNearest('MethodDefinition');
			if (!this.method)
				{ throw new CompileError('use of super outside class method', this); }

			var parentClass = this.findNearest('ClassBody').parent;
			this.superClassName =
				parentClass.superClass && (parentClass.superClass.name || 'superclass');

			if (!this.superClassName)
				{ throw new CompileError('super used in base class', this); }

			this.isCalled =
				this.parent.type === 'CallExpression' && this === this.parent.callee;

			if (this.method.kind !== 'constructor' && this.isCalled) {
				throw new CompileError(
					'super() not allowed outside class constructor',
					this
				);
			}

			this.isMember = this.parent.type === 'MemberExpression';

			if (!this.isCalled && !this.isMember) {
				throw new CompileError(
					'Unexpected use of `super` (expected `super(...)` or `super.*`)',
					this
				);
			}
		}

		if (transforms.arrow) {
			var lexicalBoundary = this.findLexicalBoundary();
			var arrowFunction = this.findNearest('ArrowFunctionExpression');
			var loop = this.findNearest(loopStatement);

			if (arrowFunction && arrowFunction.depth > lexicalBoundary.depth) {
				this.thisAlias = lexicalBoundary.getThisAlias();
			}

			if (
				loop &&
				loop.body.contains(this) &&
				loop.depth > lexicalBoundary.depth
			) {
				this.thisAlias = lexicalBoundary.getThisAlias();
			}
		}
	};

	Super.prototype.transpile = function transpile (code, transforms) {
		if (transforms.classes) {
			var expression =
				this.isCalled || this.method.static
					? this.superClassName
					: ((this.superClassName) + ".prototype");

			code.overwrite(this.start, this.end, expression, {
				storeName: true,
				contentOnly: true
			});

			var callExpression = this.isCalled ? this.parent : this.parent.parent;

			if (callExpression && callExpression.type === 'CallExpression') {
				if (!this.noCall) {
					// special case – `super( ...args )`
					code.appendLeft(callExpression.callee.end, '.call');
				}

				var thisAlias = this.thisAlias || 'this';

				if (callExpression.arguments.length) {
					code.appendLeft(callExpression.arguments[0].start, (thisAlias + ", "));
				} else {
					code.appendLeft(callExpression.end - 1, ("" + thisAlias));
				}
			}
		}
	};

	return Super;
}(Node));

var TaggedTemplateExpression = (function (Node$$1) {
	function TaggedTemplateExpression () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) TaggedTemplateExpression.__proto__ = Node$$1;
	TaggedTemplateExpression.prototype = Object.create( Node$$1 && Node$$1.prototype );
	TaggedTemplateExpression.prototype.constructor = TaggedTemplateExpression;

	TaggedTemplateExpression.prototype.initialise = function initialise (transforms) {
		if (
			transforms.templateString &&
			!transforms.dangerousTaggedTemplateString
		) {
			throw new CompileError(
				"Tagged template strings are not supported. Use `transforms: { templateString: false }` to skip transformation and disable this error, or `transforms: { dangerousTaggedTemplateString: true }` if you know what you're doing",
				this
			);
		}

		Node$$1.prototype.initialise.call(this, transforms);
	};

	TaggedTemplateExpression.prototype.transpile = function transpile (code, transforms) {
		if (transforms.templateString && transforms.dangerousTaggedTemplateString) {
			var ordered = this.quasi.expressions
				.concat(this.quasi.quasis)
				.sort(function (a, b) { return a.start - b.start; });

			var program = this.program;
			var rootScope = program.body.scope;

			// insert strings at start
			var templateStrings = this.quasi.quasis.map(function (quasi) { return JSON.stringify(quasi.value.cooked); }
			).join(', ');

			var templateObject = this.program.templateLiteralQuasis[templateStrings];
			if (!templateObject) {
				templateObject = rootScope.createIdentifier('templateObject');
				code.prependRight(this.program.prependAt, ("var " + templateObject + " = Object.freeze([" + templateStrings + "]);\n"));

				this.program.templateLiteralQuasis[templateStrings] = templateObject;
			}

			code.overwrite(
				this.tag.end,
				ordered[0].start,
				("(" + templateObject)
			);

			var lastIndex = ordered[0].start;
			ordered.forEach(function (node) {
				if (node.type === 'TemplateElement') {
					code.remove(lastIndex, node.end);
				} else {
					code.overwrite(lastIndex, node.start, ', ');
				}

				lastIndex = node.end;
			});

			code.overwrite(lastIndex, this.end, ')');
		}

		Node$$1.prototype.transpile.call(this, code, transforms);
	};

	return TaggedTemplateExpression;
}(Node));

var TemplateElement = (function (Node$$1) {
	function TemplateElement () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) TemplateElement.__proto__ = Node$$1;
	TemplateElement.prototype = Object.create( Node$$1 && Node$$1.prototype );
	TemplateElement.prototype.constructor = TemplateElement;

	TemplateElement.prototype.initialise = function initialise () {
		this.program.indentExclusionElements.push(this);
	};

	return TemplateElement;
}(Node));

var TemplateLiteral = (function (Node$$1) {
	function TemplateLiteral () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) TemplateLiteral.__proto__ = Node$$1;
	TemplateLiteral.prototype = Object.create( Node$$1 && Node$$1.prototype );
	TemplateLiteral.prototype.constructor = TemplateLiteral;

	TemplateLiteral.prototype.transpile = function transpile (code, transforms) {
		Node$$1.prototype.transpile.call(this, code, transforms);

		if (
			transforms.templateString &&
			this.parent.type !== 'TaggedTemplateExpression'
		) {
			var ordered = this.expressions
				.concat(this.quasis)
				.sort(function (a, b) { return a.start - b.start || a.end - b.end; })
				.filter(function (node, i) {
					// include all expressions
					if (node.type !== 'TemplateElement') { return true; }

					// include all non-empty strings
					if (node.value.raw) { return true; }

					// exclude all empty strings not at the head
					return !i;
				});

			// special case – we may be able to skip the first element,
			// if it's the empty string, but only if the second and
			// third elements aren't both expressions (since they maybe
			// be numeric, and `1 + 2 + '3' === '33'`)
			if (ordered.length >= 3) {
				var first = ordered[0];
				var third = ordered[2];
				if (
					first.type === 'TemplateElement' &&
					first.value.raw === '' &&
					third.type === 'TemplateElement'
				) {
					ordered.shift();
				}
			}

			var parenthesise =
				(this.quasis.length !== 1 || this.expressions.length !== 0) &&
				this.parent.type !== 'TemplateLiteral' &&
				this.parent.type !== 'AssignmentExpression' &&
				this.parent.type !== 'AssignmentPattern' &&
				this.parent.type !== 'VariableDeclarator' &&
				(this.parent.type !== 'BinaryExpression' ||
					this.parent.operator !== '+');

			if (parenthesise) { code.appendRight(this.start, '('); }

			var lastIndex = this.start;

			ordered.forEach(function (node, i) {
				var prefix = i === 0 ? (parenthesise ? '(' : '') : ' + ';

				if (node.type === 'TemplateElement') {
					code.overwrite(
						lastIndex,
						node.end,
						prefix + JSON.stringify(node.value.cooked)
					);
				} else {
					var parenthesise$1 = node.type !== 'Identifier'; // TODO other cases where it's safe

					if (parenthesise$1) { prefix += '('; }

					code.remove(lastIndex, node.start);

					if (prefix) { code.prependRight(node.start, prefix); }
					if (parenthesise$1) { code.appendLeft(node.end, ')'); }
				}

				lastIndex = node.end;
			});

			if (parenthesise) { code.appendLeft(lastIndex, ')'); }
			code.overwrite(lastIndex, this.end, "", { contentOnly: true } );
		}
	};

	return TemplateLiteral;
}(Node));

var ThisExpression = (function (Node$$1) {
	function ThisExpression () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) ThisExpression.__proto__ = Node$$1;
	ThisExpression.prototype = Object.create( Node$$1 && Node$$1.prototype );
	ThisExpression.prototype.constructor = ThisExpression;

	ThisExpression.prototype.initialise = function initialise (transforms) {
		if (transforms.arrow) {
			var lexicalBoundary = this.findLexicalBoundary();
			var arrowFunction = this.findNearest('ArrowFunctionExpression');
			var loop = this.findNearest(loopStatement);

			if (
				(arrowFunction && arrowFunction.depth > lexicalBoundary.depth) ||
				(loop &&
					loop.body.contains(this) &&
					loop.depth > lexicalBoundary.depth) ||
				(loop && loop.right && loop.right.contains(this))
			) {
				this.alias = lexicalBoundary.getThisAlias();
			}
		}
	};

	ThisExpression.prototype.transpile = function transpile (code) {
		if (this.alias) {
			code.overwrite(this.start, this.end, this.alias, {
				storeName: true,
				contentOnly: true
			});
		}
	};

	return ThisExpression;
}(Node));

var UpdateExpression = (function (Node$$1) {
	function UpdateExpression () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) UpdateExpression.__proto__ = Node$$1;
	UpdateExpression.prototype = Object.create( Node$$1 && Node$$1.prototype );
	UpdateExpression.prototype.constructor = UpdateExpression;

	UpdateExpression.prototype.initialise = function initialise (transforms) {
		if (this.argument.type === 'Identifier') {
			var declaration = this.findScope(false).findDeclaration(
				this.argument.name
			);
			// special case – https://gitlab.com/Rich-Harris/buble/issues/150
			var statement = declaration && declaration.node.ancestor(3);
			if (
				statement &&
				statement.type === 'ForStatement' &&
				statement.body.contains(this)
			) {
				statement.reassigned[this.argument.name] = true;
			}
		}

		Node$$1.prototype.initialise.call(this, transforms);
	};

	UpdateExpression.prototype.transpile = function transpile (code, transforms) {
		if (this.argument.type === 'Identifier') {
			// Do this check after everything has been initialized to find
			// shadowing declarations after this expression
			checkConst(this.argument, this.findScope(false));
		}
		Node$$1.prototype.transpile.call(this, code, transforms);
	};

	return UpdateExpression;
}(Node));

var VariableDeclaration = (function (Node$$1) {
	function VariableDeclaration () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) VariableDeclaration.__proto__ = Node$$1;
	VariableDeclaration.prototype = Object.create( Node$$1 && Node$$1.prototype );
	VariableDeclaration.prototype.constructor = VariableDeclaration;

	VariableDeclaration.prototype.initialise = function initialise (transforms) {
		this.scope = this.findScope(this.kind === 'var');
		this.declarations.forEach(function (declarator) { return declarator.initialise(transforms); });
	};

	VariableDeclaration.prototype.transpile = function transpile (code, transforms) {
		var this$1 = this;

		var i0 = this.getIndentation();
		var kind = this.kind;

		if (transforms.letConst && kind !== 'var') {
			kind = 'var';
			code.overwrite(this.start, this.start + this.kind.length, kind, {
				contentOnly: true,
				storeName: true
			});
		}

		if (transforms.destructuring && this.parent.type !== 'ForOfStatement' && this.parent.type !== 'ForInStatement') {
			var c = this.start;
			var lastDeclaratorIsPattern;

			this.declarations.forEach(function (declarator, i) {
				declarator.transpile(code, transforms);

				if (declarator.id.type === 'Identifier') {
					if (i > 0 && this$1.declarations[i - 1].id.type !== 'Identifier') {
						code.overwrite(c, declarator.id.start, "var ");
					}
				} else {
					var inline = loopStatement.test(this$1.parent.type);

					if (i === 0) {
						code.remove(c, declarator.id.start);
					} else {
						code.overwrite(c, declarator.id.start, (";\n" + i0));
					}

					var simple =
						declarator.init.type === 'Identifier' && !declarator.init.rewritten;

					var name = simple
						? (declarator.init.alias || declarator.init.name)
						: declarator.findScope(true).createIdentifier('ref');

					c = declarator.start;

					var statementGenerators = [];

					if (simple) {
						code.remove(declarator.id.end, declarator.end);
					} else {
						statementGenerators.push(function (start, prefix, suffix) {
							code.prependRight(declarator.id.end, ("var " + name));
							code.appendLeft(declarator.init.end, ("" + suffix));
							code.move(declarator.id.end, declarator.end, start);
						});
					}

					var scope = declarator.findScope(false);
					destructure(
						code,
						function (id) { return scope.createIdentifier(id); },
						function (ref) {
							var name = ref.name;

							return scope.resolveName(name);
					},
						declarator.id,
						name,
						inline,
						statementGenerators
					);

					var prefix = inline ? 'var ' : '';
					var suffix = inline ? ", " : (";\n" + i0);
					statementGenerators.forEach(function (fn, j) {
						if (
							i === this$1.declarations.length - 1 &&
							j === statementGenerators.length - 1
						) {
							suffix = inline ? '' : ';';
						}

						fn(declarator.start, j === 0 ? prefix : '', suffix);
					});
				}

				c = declarator.end;
				lastDeclaratorIsPattern = declarator.id.type !== 'Identifier';
			});

			if (lastDeclaratorIsPattern && this.end > c) {
				code.overwrite(c, this.end, '', { contentOnly: true });
			}
		} else {
			this.declarations.forEach(function (declarator) {
				declarator.transpile(code, transforms);
			});
		}
	};

	return VariableDeclaration;
}(Node));

var VariableDeclarator = (function (Node$$1) {
	function VariableDeclarator () {
		Node$$1.apply(this, arguments);
	}

	if ( Node$$1 ) VariableDeclarator.__proto__ = Node$$1;
	VariableDeclarator.prototype = Object.create( Node$$1 && Node$$1.prototype );
	VariableDeclarator.prototype.constructor = VariableDeclarator;

	VariableDeclarator.prototype.initialise = function initialise (transforms) {
		var kind = this.parent.kind;
		if (kind === 'let' && this.parent.parent.type === 'ForStatement') {
			kind = 'for.let'; // special case...
		}

		this.parent.scope.addDeclaration(this.id, kind);
		Node$$1.prototype.initialise.call(this, transforms);
	};

	VariableDeclarator.prototype.transpile = function transpile (code, transforms) {
		if (!this.init && transforms.letConst && this.parent.kind !== 'var') {
			var inLoop = this.findNearest(
				/Function|^For(In|Of)?Statement|^(?:Do)?WhileStatement/
			);
			if (
				inLoop &&
				!/Function/.test(inLoop.type) &&
				!this.isLeftDeclaratorOfLoop()
			) {
				code.appendLeft(this.id.end, ' = (void 0)');
			}
		}

		if (this.id) { this.id.transpile(code, transforms); }
		if (this.init) { this.init.transpile(code, transforms); }
	};

	VariableDeclarator.prototype.isLeftDeclaratorOfLoop = function isLeftDeclaratorOfLoop () {
		return (
			this.parent &&
			this.parent.type === 'VariableDeclaration' &&
			this.parent.parent &&
			(this.parent.parent.type === 'ForInStatement' ||
				this.parent.parent.type === 'ForOfStatement') &&
			this.parent.parent.left &&
			this.parent.parent.left.declarations[0] === this
		);
	};

	return VariableDeclarator;
}(Node));

var types = {
	ArrayExpression: ArrayExpression,
	ArrowFunctionExpression: ArrowFunctionExpression,
	AssignmentExpression: AssignmentExpression,
	BinaryExpression: BinaryExpression,
	BreakStatement: BreakStatement,
	CallExpression: CallExpression,
	ClassBody: ClassBody,
	ClassDeclaration: ClassDeclaration,
	ClassExpression: ClassExpression,
	ContinueStatement: ContinueStatement,
	DoWhileStatement: LoopStatement,
	ExportNamedDeclaration: ExportNamedDeclaration,
	ExportDefaultDeclaration: ExportDefaultDeclaration,
	ForStatement: ForStatement,
	ForInStatement: ForInStatement,
	ForOfStatement: ForOfStatement,
	FunctionDeclaration: FunctionDeclaration,
	FunctionExpression: FunctionExpression,
	Identifier: Identifier,
	IfStatement: IfStatement,
	ImportDeclaration: ImportDeclaration,
	ImportDefaultSpecifier: ImportDefaultSpecifier,
	ImportSpecifier: ImportSpecifier,
	JSXAttribute: JSXAttribute,
	JSXClosingElement: JSXClosingElement,
	JSXClosingFragment: JSXClosingFragment,
	JSXElement: JSXElement,
	JSXExpressionContainer: JSXExpressionContainer,
	JSXFragment: JSXFragment,
	JSXOpeningElement: JSXOpeningElement,
	JSXOpeningFragment: JSXOpeningFragment,
	JSXSpreadAttribute: JSXSpreadAttribute,
	Literal: Literal,
	MemberExpression: MemberExpression,
	NewExpression: NewExpression,
	ObjectExpression: ObjectExpression,
	Property: Property,
	ReturnStatement: ReturnStatement,
	SpreadElement: SpreadElement,
	Super: Super,
	TaggedTemplateExpression: TaggedTemplateExpression,
	TemplateElement: TemplateElement,
	TemplateLiteral: TemplateLiteral,
	ThisExpression: ThisExpression,
	UpdateExpression: UpdateExpression,
	VariableDeclaration: VariableDeclaration,
	VariableDeclarator: VariableDeclarator,
	WhileStatement: LoopStatement
};

var keys = {
	Program: ['body'],
	Literal: []
};

var statementsWithBlocks = {
	IfStatement: 'consequent',
	ForStatement: 'body',
	ForInStatement: 'body',
	ForOfStatement: 'body',
	WhileStatement: 'body',
	DoWhileStatement: 'body',
	ArrowFunctionExpression: 'body'
};

function wrap(raw, parent) {
	if (!raw) { return; }

	if ('length' in raw) {
		var i = raw.length;
		while (i--) { wrap(raw[i], parent); }
		return;
	}

	// with e.g. shorthand properties, key and value are
	// the same node. We don't want to wrap an object twice
	if (raw.__wrapped) { return; }
	raw.__wrapped = true;

	if (!keys[raw.type]) {
		keys[raw.type] = Object.keys(raw).filter(
			function (key) { return typeof raw[key] === 'object'; }
		);
	}

	// special case – body-less if/for/while statements. TODO others?
	var bodyType = statementsWithBlocks[raw.type];
	if (bodyType && raw[bodyType].type !== 'BlockStatement') {
		var expression = raw[bodyType];

		// create a synthetic block statement, otherwise all hell
		// breaks loose when it comes to block scoping
		raw[bodyType] = {
			start: expression.start,
			end: expression.end,
			type: 'BlockStatement',
			body: [expression],
			synthetic: true
		};
	}

	raw.parent = parent;
	raw.program = parent.program || parent;
	raw.depth = parent.depth + 1;
	raw.keys = keys[raw.type];
	raw.indentation = undefined;

	for (var i$1 = 0, list = keys[raw.type]; i$1 < list.length; i$1 += 1) {
		var key = list[i$1];

		wrap(raw[key], raw);
	}

	raw.program.magicString.addSourcemapLocation(raw.start);
	raw.program.magicString.addSourcemapLocation(raw.end);

	var type =
		(raw.type === 'BlockStatement' ? BlockStatement : types[raw.type]) || Node;
	raw.__proto__ = type.prototype;
}

function Program(source, ast, transforms, options) {
	var this$1 = this;

	this.type = 'Root';

	// options
	this.jsx = options.jsx || 'React.createElement';
	this.options = options;

	this.source = source;
	this.magicString = new magic_string__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"](source);

	this.ast = ast;
	this.depth = 0;

	wrap((this.body = ast), this);
	this.body.__proto__ = BlockStatement.prototype;

	this.templateLiteralQuasis = Object.create(null);
	for (var i = 0; i < this.body.body.length; ++i) {
		if (!this$1.body.body[i].directive) {
			this$1.prependAt = this$1.body.body[i].start;
			break;
		}
	}
	this.objectWithoutPropertiesHelper = null;

	this.indentExclusionElements = [];
	this.body.initialise(transforms);

	this.indentExclusions = Object.create(null);
	for (var i$2 = 0, list = this$1.indentExclusionElements; i$2 < list.length; i$2 += 1) {
		var node = list[i$2];

		for (var i$1 = node.start; i$1 < node.end; i$1 += 1) {
			this$1.indentExclusions[i$1] = true;
		}
	}

	this.body.transpile(this.magicString, transforms);
}

Program.prototype = {
	export: function export$1(options) {
		if ( options === void 0 ) options = {};

		return {
			code: this.magicString.toString(),
			map: this.magicString.generateMap({
				file: options.file,
				source: options.source,
				includeContent: options.includeContent !== false
			})
		};
	},

	findNearest: function findNearest() {
		return null;
	},

	findScope: function findScope() {
		return null;
	},

	getObjectWithoutPropertiesHelper: function getObjectWithoutPropertiesHelper(code) {
		if (!this.objectWithoutPropertiesHelper) {
			this.objectWithoutPropertiesHelper = this.body.scope.createIdentifier('objectWithoutProperties');
			code.prependLeft(this.prependAt, "function " + (this.objectWithoutPropertiesHelper) + " (obj, exclude) { " +
				"var target = {}; for (var k in obj) " +
				"if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) " +
				"target[k] = obj[k]; return target; }\n"
			);
		}
		return this.objectWithoutPropertiesHelper;
	}
};

var matrix = {
	chrome: {
		    48: 305359,
		    49: 326143,
		    50: 391679,
		    51: 391679,
		    52: 522751,
		    53: 522751,
		    54: 522751,
		    55: 522751,
		    56: 522751,
		    57: 522751,
		    58: 1047039,
		    59: 1047039,
		    60: 1047039,
		    61: 1047039,
		    62: 1047039,
		    63: 1047039
	},
	firefox: {
		    43: 321757,
		    44: 322013,
		    45: 322015,
		    46: 387551,
		    47: 387583,
		    48: 387583,
		    49: 387583,
		    50: 387583,
		    51: 387583,
		    52: 1047039,
		    53: 1047039,
		    54: 1047039,
		    55: 1047039,
		    56: 1047039,
		    57: 1047039,
		    58: 1047039
	},
	safari: {
		     8: 262148,
		     9: 301166,
		    10: 915967,
		'10.1': 1047039,
		    11: 1047039
	},
	ie: {
		     8: 0,
		     9: 262144,
		    10: 262144,
		    11: 262400
	},
	edge: {
		    12: 305485,
		    13: 387535,
		    14: 1042943,
		    15: 1042943,
		    16: 1042943
	},
	node: {
		'0.10': 262144,
		'0.12': 262208,
		     4: 297167,
		     5: 297167,
		     6: 391679,
		     8: 1047039,
		 '8.3': 1047039,
		 '8.7': 1047039
	}
};

var features = [
	'arrow',
	'classes',
	'computedProperty',
	'conciseMethodProperty',
	'defaultParameter',
	'destructuring',
	'forOf',
	'generator',
	'letConst',
	'moduleExport',
	'moduleImport',
	'numericLiteral',
	'parameterDestructuring',
	'spreadRest',
	'stickyRegExp',
	'templateString',
	'unicodeRegExp',

	// ES2016
	'exponentiation',

	// additional transforms, not from
	// https://featuretests.io
	'reservedProperties',

	'trailingFunctionCommas'
];

var version = "0.19.4";

var ref = [inject, acornDynamicImport].reduce(
	function (final, plugin) { return plugin(final); },
	acorn__WEBPACK_IMPORTED_MODULE_1__
);
var parse = ref.parse;

var dangerousTransforms = ['dangerousTaggedTemplateString', 'dangerousForOf'];

function target(target) {
	var targets = Object.keys(target);
	var bitmask = targets.length
		? 1048575
		: 262144;

	Object.keys(target).forEach(function (environment) {
		var versions = matrix[environment];
		if (!versions)
			{ throw new Error(
				("Unknown environment '" + environment + "'. Please raise an issue at https://github.com/Rich-Harris/buble/issues")
			); }

		var targetVersion = target[environment];
		if (!(targetVersion in versions))
			{ throw new Error(
				("Support data exists for the following versions of " + environment + ": " + (Object.keys(
					versions
				).join(
					', '
				)) + ". Please raise an issue at https://github.com/Rich-Harris/buble/issues")
			); }
		var support = versions[targetVersion];

		bitmask &= support;
	});

	var transforms = Object.create(null);
	features.forEach(function (name, i) {
		transforms[name] = !(bitmask & (1 << i));
	});

	dangerousTransforms.forEach(function (name) {
		transforms[name] = false;
	});

	return transforms;
}

function transform(source, options) {
	if ( options === void 0 ) options = {};

	var ast;
	var jsx = null;

	try {
		ast = parse(source, {
			ecmaVersion: 9,
			preserveParens: true,
			sourceType: 'module',
			onComment: function (block, text) {
				if (!jsx) {
					var match = /@jsx\s+([^\s]+)/.exec(text);
					if (match) { jsx = match[1]; }
				}
			},
			plugins: {
				jsx: true,
				dynamicImport: true
			}
		});
		options.jsx = jsx || options.jsx;
	} catch (err) {
		err.snippet = getSnippet(source, err.loc);
		err.toString = function () { return ((err.name) + ": " + (err.message) + "\n" + (err.snippet)); };
		throw err;
	}

	var transforms = target(options.target || {});
	Object.keys(options.transforms || {}).forEach(function (name) {
		if (name === 'modules') {
			if (!('moduleImport' in options.transforms))
				{ transforms.moduleImport = options.transforms.modules; }
			if (!('moduleExport' in options.transforms))
				{ transforms.moduleExport = options.transforms.modules; }
			return;
		}

		if (!(name in transforms)) { throw new Error(("Unknown transform '" + name + "'")); }
		transforms[name] = options.transforms[name];
	});

	return new Program(source, ast, transforms, options).export(options);
}


//# sourceMappingURL=buble-browser.es.js.map

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(11)))

/***/ }),
/* 242 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer, process) {/* unused harmony export Bundle */
/* harmony import */ var vlq__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(243);


function Chunk ( start, end, content ) {
	this.start = start;
	this.end = end;
	this.original = content;

	this.intro = '';
	this.outro = '';

	this.content = content;
	this.storeName = false;
	this.edited = false;

	// we make these non-enumerable, for sanity while debugging
	Object.defineProperties( this, {
		previous: { writable: true, value: null },
		next: { writable: true, value: null }
	});
}

Chunk.prototype = {
	appendLeft: function appendLeft ( content ) {
		this.outro += content;
	},

	appendRight: function appendRight ( content ) {
		this.intro = this.intro + content;
	},

	clone: function clone () {
		var chunk = new Chunk( this.start, this.end, this.original );

		chunk.intro = this.intro;
		chunk.outro = this.outro;
		chunk.content = this.content;
		chunk.storeName = this.storeName;
		chunk.edited = this.edited;

		return chunk;
	},

	contains: function contains ( index ) {
		return this.start < index && index < this.end;
	},

	eachNext: function eachNext ( fn ) {
		var chunk = this;
		while ( chunk ) {
			fn( chunk );
			chunk = chunk.next;
		}
	},

	eachPrevious: function eachPrevious ( fn ) {
		var chunk = this;
		while ( chunk ) {
			fn( chunk );
			chunk = chunk.previous;
		}
	},

	edit: function edit ( content, storeName, contentOnly ) {
		this.content = content;
		if ( !contentOnly ) {
			this.intro = '';
			this.outro = '';
		}
		this.storeName = storeName;

		this.edited = true;

		return this;
	},

	prependLeft: function prependLeft ( content ) {
		this.outro = content + this.outro;
	},

	prependRight: function prependRight ( content ) {
		this.intro = content + this.intro;
	},

	split: function split ( index ) {
		var sliceIndex = index - this.start;

		var originalBefore = this.original.slice( 0, sliceIndex );
		var originalAfter = this.original.slice( sliceIndex );

		this.original = originalBefore;

		var newChunk = new Chunk( index, this.end, originalAfter );
		newChunk.outro = this.outro;
		this.outro = '';

		this.end = index;

		if ( this.edited ) {
			// TODO is this block necessary?...
			newChunk.edit( '', false );
			this.content = '';
		} else {
			this.content = originalBefore;
		}

		newChunk.next = this.next;
		if ( newChunk.next ) { newChunk.next.previous = newChunk; }
		newChunk.previous = this;
		this.next = newChunk;

		return newChunk;
	},

	toString: function toString () {
		return this.intro + this.content + this.outro;
	},

	trimEnd: function trimEnd ( rx ) {
		this.outro = this.outro.replace( rx, '' );
		if ( this.outro.length ) { return true; }

		var trimmed = this.content.replace( rx, '' );

		if ( trimmed.length ) {
			if ( trimmed !== this.content ) {
				this.split( this.start + trimmed.length ).edit( '', false );
			}

			return true;
		} else {
			this.edit( '', false );

			this.intro = this.intro.replace( rx, '' );
			if ( this.intro.length ) { return true; }
		}
	},

	trimStart: function trimStart ( rx ) {
		this.intro = this.intro.replace( rx, '' );
		if ( this.intro.length ) { return true; }

		var trimmed = this.content.replace( rx, '' );

		if ( trimmed.length ) {
			if ( trimmed !== this.content ) {
				this.split( this.end - trimmed.length );
				this.edit( '', false );
			}

			return true;
		} else {
			this.edit( '', false );

			this.outro = this.outro.replace( rx, '' );
			if ( this.outro.length ) { return true; }
		}
	}
};

var _btoa;

if ( typeof window !== 'undefined' && typeof window.btoa === 'function' ) {
	_btoa = window.btoa;
} else if ( typeof Buffer === 'function' ) {
	_btoa = function (str) { return new Buffer( str ).toString( 'base64' ); };
} else {
	_btoa = function () {
		throw new Error( 'Unsupported environment: `window.btoa` or `Buffer` should be supported.' );
	};
}

var btoa = _btoa;

function SourceMap ( properties ) {
	this.version = 3;

	this.file           = properties.file;
	this.sources        = properties.sources;
	this.sourcesContent = properties.sourcesContent;
	this.names          = properties.names;
	this.mappings       = properties.mappings;
}

SourceMap.prototype = {
	toString: function toString () {
		return JSON.stringify( this );
	},

	toUrl: function toUrl () {
		return 'data:application/json;charset=utf-8;base64,' + btoa( this.toString() );
	}
};

function guessIndent ( code ) {
	var lines = code.split( '\n' );

	var tabbed = lines.filter( function (line) { return /^\t+/.test( line ); } );
	var spaced = lines.filter( function (line) { return /^ {2,}/.test( line ); } );

	if ( tabbed.length === 0 && spaced.length === 0 ) {
		return null;
	}

	// More lines tabbed than spaced? Assume tabs, and
	// default to tabs in the case of a tie (or nothing
	// to go on)
	if ( tabbed.length >= spaced.length ) {
		return '\t';
	}

	// Otherwise, we need to guess the multiple
	var min = spaced.reduce( function ( previous, current ) {
		var numSpaces = /^ +/.exec( current )[0].length;
		return Math.min( numSpaces, previous );
	}, Infinity );

	return new Array( min + 1 ).join( ' ' );
}

function getRelativePath ( from, to ) {
	var fromParts = from.split( /[\/\\]/ );
	var toParts = to.split( /[\/\\]/ );

	fromParts.pop(); // get dirname

	while ( fromParts[0] === toParts[0] ) {
		fromParts.shift();
		toParts.shift();
	}

	if ( fromParts.length ) {
		var i = fromParts.length;
		while ( i-- ) { fromParts[i] = '..'; }
	}

	return fromParts.concat( toParts ).join( '/' );
}

var toString = Object.prototype.toString;

function isObject ( thing ) {
	return toString.call( thing ) === '[object Object]';
}

function getLocator ( source ) {
	var originalLines = source.split( '\n' );

	var start = 0;
	var lineRanges = originalLines.map( function ( line, i ) {
		var end = start + line.length + 1;
		var range = { start: start, end: end, line: i };

		start = end;
		return range;
	});

	var i = 0;

	function rangeContains ( range, index ) {
		return range.start <= index && index < range.end;
	}

	function getLocation ( range, index ) {
		return { line: range.line, column: index - range.start };
	}

	return function locate ( index ) {
		var range = lineRanges[i];

		var d = index >= range.end ? 1 : -1;

		while ( range ) {
			if ( rangeContains( range, index ) ) { return getLocation( range, index ); }

			i += d;
			range = lineRanges[i];
		}
	};
}

function Mappings ( hires ) {
	var this$1 = this;

	var offsets = {
		generatedCodeColumn: 0,
		sourceIndex: 0,
		sourceCodeLine: 0,
		sourceCodeColumn: 0,
		sourceCodeName: 0
	};

	var generatedCodeLine = 0;
	var generatedCodeColumn = 0;

	this.raw = [];
	var rawSegments = this.raw[ generatedCodeLine ] = [];

	var pending = null;

	this.addEdit = function ( sourceIndex, content, original, loc, nameIndex ) {
		if ( content.length ) {
			rawSegments.push([
				generatedCodeColumn,
				sourceIndex,
				loc.line,
				loc.column,
				nameIndex ]);
		} else if ( pending ) {
			rawSegments.push( pending );
		}

		this$1.advance( content );
		pending = null;
	};

	this.addUneditedChunk = function ( sourceIndex, chunk, original, loc, sourcemapLocations ) {
		var originalCharIndex = chunk.start;
		var first = true;

		while ( originalCharIndex < chunk.end ) {
			if ( hires || first || sourcemapLocations[ originalCharIndex ] ) {
				rawSegments.push([
					generatedCodeColumn,
					sourceIndex,
					loc.line,
					loc.column,
					-1
				]);
			}

			if ( original[ originalCharIndex ] === '\n' ) {
				loc.line += 1;
				loc.column = 0;
				generatedCodeLine += 1;
				this$1.raw[ generatedCodeLine ] = rawSegments = [];
				generatedCodeColumn = 0;
			} else {
				loc.column += 1;
				generatedCodeColumn += 1;
			}

			originalCharIndex += 1;
			first = false;
		}

		pending = [
			generatedCodeColumn,
			sourceIndex,
			loc.line,
			loc.column,
			-1 ];
	};

	this.advance = function (str) {
		if ( !str ) { return; }

		var lines = str.split( '\n' );
		var lastLine = lines.pop();

		if ( lines.length ) {
			generatedCodeLine += lines.length;
			this$1.raw[ generatedCodeLine ] = rawSegments = [];
			generatedCodeColumn = lastLine.length;
		} else {
			generatedCodeColumn += lastLine.length;
		}
	};

	this.encode = function () {
		return this$1.raw.map( function (segments) {
			var generatedCodeColumn = 0;

			return segments.map( function (segment) {
				var arr = [
					segment[0] - generatedCodeColumn,
					segment[1] - offsets.sourceIndex,
					segment[2] - offsets.sourceCodeLine,
					segment[3] - offsets.sourceCodeColumn
				];

				generatedCodeColumn = segment[0];
				offsets.sourceIndex = segment[1];
				offsets.sourceCodeLine = segment[2];
				offsets.sourceCodeColumn = segment[3];

				if ( ~segment[4] ) {
					arr.push( segment[4] - offsets.sourceCodeName );
					offsets.sourceCodeName = segment[4];
				}

				return Object(vlq__WEBPACK_IMPORTED_MODULE_0__[/* encode */ "a"])( arr );
			}).join( ',' );
		}).join( ';' );
	};
}

var Stats = function Stats () {
	Object.defineProperties( this, {
		startTimes: { value: {} }
	});
};

Stats.prototype.time = function time ( label ) {
	this.startTimes[ label ] = process.hrtime();
};

Stats.prototype.timeEnd = function timeEnd ( label ) {
	var elapsed = process.hrtime( this.startTimes[ label ] );

	if ( !this[ label ] ) { this[ label ] = 0; }
	this[ label ] += elapsed[0] * 1e3 + elapsed[1] * 1e-6;
};

var warned = {
	insertLeft: false,
	insertRight: false,
	storeName: false
};

function MagicString$1 ( string, options ) {
	if ( options === void 0 ) options = {};

	var chunk = new Chunk( 0, string.length, string );

	Object.defineProperties( this, {
		original:              { writable: true, value: string },
		outro:                 { writable: true, value: '' },
		intro:                 { writable: true, value: '' },
		firstChunk:            { writable: true, value: chunk },
		lastChunk:             { writable: true, value: chunk },
		lastSearchedChunk:     { writable: true, value: chunk },
		byStart:               { writable: true, value: {} },
		byEnd:                 { writable: true, value: {} },
		filename:              { writable: true, value: options.filename },
		indentExclusionRanges: { writable: true, value: options.indentExclusionRanges },
		sourcemapLocations:    { writable: true, value: {} },
		storedNames:           { writable: true, value: {} },
		indentStr:             { writable: true, value: guessIndent( string ) }
	});

	this.byStart[ 0 ] = chunk;
	this.byEnd[ string.length ] = chunk;
}

MagicString$1.prototype = {
	addSourcemapLocation: function addSourcemapLocation ( char ) {
		this.sourcemapLocations[ char ] = true;
	},

	append: function append ( content ) {
		if ( typeof content !== 'string' ) { throw new TypeError( 'outro content must be a string' ); }

		this.outro += content;
		return this;
	},

	appendLeft: function appendLeft ( index, content ) {
		if ( typeof content !== 'string' ) { throw new TypeError( 'inserted content must be a string' ); }

		this._split( index );

		var chunk = this.byEnd[ index ];

		if ( chunk ) {
			chunk.appendLeft( content );
		} else {
			this.intro += content;
		}

		return this;
	},

	appendRight: function appendRight ( index, content ) {
		if ( typeof content !== 'string' ) { throw new TypeError( 'inserted content must be a string' ); }

		this._split( index );

		var chunk = this.byStart[ index ];

		if ( chunk ) {
			chunk.appendRight( content );
		} else {
			this.outro += content;
		}

		return this;
	},

	clone: function clone () {
		var cloned = new MagicString$1( this.original, { filename: this.filename });

		var originalChunk = this.firstChunk;
		var clonedChunk = cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone();

		while ( originalChunk ) {
			cloned.byStart[ clonedChunk.start ] = clonedChunk;
			cloned.byEnd[ clonedChunk.end ] = clonedChunk;

			var nextOriginalChunk = originalChunk.next;
			var nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();

			if ( nextClonedChunk ) {
				clonedChunk.next = nextClonedChunk;
				nextClonedChunk.previous = clonedChunk;

				clonedChunk = nextClonedChunk;
			}

			originalChunk = nextOriginalChunk;
		}

		cloned.lastChunk = clonedChunk;

		if ( this.indentExclusionRanges ) {
			cloned.indentExclusionRanges = this.indentExclusionRanges.slice();
		}

		Object.keys( this.sourcemapLocations ).forEach( function (loc) {
			cloned.sourcemapLocations[ loc ] = true;
		});

		return cloned;
	},

	generateMap: function generateMap ( options ) {
		var this$1 = this;

		options = options || {};

		var sourceIndex = 0;
		var names = Object.keys( this.storedNames );
		var mappings = new Mappings( options.hires );

		var locate = getLocator( this.original );

		if ( this.intro ) {
			mappings.advance( this.intro );
		}

		this.firstChunk.eachNext( function (chunk) {
			var loc = locate( chunk.start );

			if ( chunk.intro.length ) { mappings.advance( chunk.intro ); }

			if ( chunk.edited ) {
				mappings.addEdit( sourceIndex, chunk.content, chunk.original, loc, chunk.storeName ? names.indexOf( chunk.original ) : -1 );
			} else {
				mappings.addUneditedChunk( sourceIndex, chunk, this$1.original, loc, this$1.sourcemapLocations );
			}

			if ( chunk.outro.length ) { mappings.advance( chunk.outro ); }
		});

		var map = new SourceMap({
			file: ( options.file ? options.file.split( /[\/\\]/ ).pop() : null ),
			sources: [ options.source ? getRelativePath( options.file || '', options.source ) : null ],
			sourcesContent: options.includeContent ? [ this.original ] : [ null ],
			names: names,
			mappings: mappings.encode()
		});
		return map;
	},

	getIndentString: function getIndentString () {
		return this.indentStr === null ? '\t' : this.indentStr;
	},

	indent: function indent ( indentStr, options ) {
		var this$1 = this;

		var pattern = /^[^\r\n]/gm;

		if ( isObject( indentStr ) ) {
			options = indentStr;
			indentStr = undefined;
		}

		indentStr = indentStr !== undefined ? indentStr : ( this.indentStr || '\t' );

		if ( indentStr === '' ) { return this; } // noop

		options = options || {};

		// Process exclusion ranges
		var isExcluded = {};

		if ( options.exclude ) {
			var exclusions = typeof options.exclude[0] === 'number' ? [ options.exclude ] : options.exclude;
			exclusions.forEach( function (exclusion) {
				for ( var i = exclusion[0]; i < exclusion[1]; i += 1 ) {
					isExcluded[i] = true;
				}
			});
		}

		var shouldIndentNextCharacter = options.indentStart !== false;
		var replacer = function (match) {
			if ( shouldIndentNextCharacter ) { return ("" + indentStr + match); }
			shouldIndentNextCharacter = true;
			return match;
		};

		this.intro = this.intro.replace( pattern, replacer );

		var charIndex = 0;

		var chunk = this.firstChunk;

		while ( chunk ) {
			var end = chunk.end;

			if ( chunk.edited ) {
				if ( !isExcluded[ charIndex ] ) {
					chunk.content = chunk.content.replace( pattern, replacer );

					if ( chunk.content.length ) {
						shouldIndentNextCharacter = chunk.content[ chunk.content.length - 1 ] === '\n';
					}
				}
			} else {
				charIndex = chunk.start;

				while ( charIndex < end ) {
					if ( !isExcluded[ charIndex ] ) {
						var char = this$1.original[ charIndex ];

						if ( char === '\n' ) {
							shouldIndentNextCharacter = true;
						} else if ( char !== '\r' && shouldIndentNextCharacter ) {
							shouldIndentNextCharacter = false;

							if ( charIndex === chunk.start ) {
								chunk.prependRight( indentStr );
							} else {
								this$1._splitChunk( chunk, charIndex );
								chunk = chunk.next;
								chunk.prependRight( indentStr );
							}
						}
					}

					charIndex += 1;
				}
			}

			charIndex = chunk.end;
			chunk = chunk.next;
		}

		this.outro = this.outro.replace( pattern, replacer );

		return this;
	},

	insert: function insert () {
		throw new Error( 'magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)' );
	},

	insertLeft: function insertLeft ( index, content ) {
		if ( !warned.insertLeft ) {
			console.warn( 'magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead' ); // eslint-disable-line no-console
			warned.insertLeft = true;
		}

		return this.appendLeft( index, content );
	},

	insertRight: function insertRight ( index, content ) {
		if ( !warned.insertRight ) {
			console.warn( 'magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead' ); // eslint-disable-line no-console
			warned.insertRight = true;
		}

		return this.prependRight( index, content );
	},

	move: function move ( start, end, index ) {
		if ( index >= start && index <= end ) { throw new Error( 'Cannot move a selection inside itself' ); }

		this._split( start );
		this._split( end );
		this._split( index );

		var first = this.byStart[ start ];
		var last = this.byEnd[ end ];

		var oldLeft = first.previous;
		var oldRight = last.next;

		var newRight = this.byStart[ index ];
		if ( !newRight && last === this.lastChunk ) { return this; }
		var newLeft = newRight ? newRight.previous : this.lastChunk;

		if ( oldLeft ) { oldLeft.next = oldRight; }
		if ( oldRight ) { oldRight.previous = oldLeft; }

		if ( newLeft ) { newLeft.next = first; }
		if ( newRight ) { newRight.previous = last; }

		if ( !first.previous ) { this.firstChunk = last.next; }
		if ( !last.next ) {
			this.lastChunk = first.previous;
			this.lastChunk.next = null;
		}

		first.previous = newLeft;
		last.next = newRight || null;

		if ( !newLeft ) { this.firstChunk = first; }
		if ( !newRight ) { this.lastChunk = last; }

		return this;
	},

	overwrite: function overwrite ( start, end, content, options ) {
		var this$1 = this;

		if ( typeof content !== 'string' ) { throw new TypeError( 'replacement content must be a string' ); }

		while ( start < 0 ) { start += this$1.original.length; }
		while ( end < 0 ) { end += this$1.original.length; }

		if ( end > this.original.length ) { throw new Error( 'end is out of bounds' ); }
		if ( start === end ) { throw new Error( 'Cannot overwrite a zero-length range – use appendLeft or prependRight instead' ); }

		this._split( start );
		this._split( end );

		if ( options === true ) {
			if ( !warned.storeName ) {
				console.warn( 'The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string' ); // eslint-disable-line no-console
				warned.storeName = true;
			}

			options = { storeName: true };
		}
		var storeName = options !== undefined ? options.storeName : false;
		var contentOnly = options !== undefined ? options.contentOnly : false;

		if ( storeName ) {
			var original = this.original.slice( start, end );
			this.storedNames[ original ] = true;
		}

		var first = this.byStart[ start ];
		var last = this.byEnd[ end ];

		if ( first ) {
			if ( end > first.end && first.next !== this.byStart[ first.end ] ) {
				throw new Error( 'Cannot overwrite across a split point' );
			}

			first.edit( content, storeName, contentOnly );

			if ( first !== last ) {
				var chunk = first.next;
				while ( chunk !== last ) {
					chunk.edit( '', false );
					chunk = chunk.next;
				}

				chunk.edit( '', false );
			}
		}

		else {
			// must be inserting at the end
			var newChunk = new Chunk( start, end, '' ).edit( content, storeName );

			// TODO last chunk in the array may not be the last chunk, if it's moved...
			last.next = newChunk;
			newChunk.previous = last;
		}

		return this;
	},

	prepend: function prepend ( content ) {
		if ( typeof content !== 'string' ) { throw new TypeError( 'outro content must be a string' ); }

		this.intro = content + this.intro;
		return this;
	},

	prependLeft: function prependLeft ( index, content ) {
		if ( typeof content !== 'string' ) { throw new TypeError( 'inserted content must be a string' ); }

		this._split( index );

		var chunk = this.byEnd[ index ];

		if ( chunk ) {
			chunk.prependLeft( content );
		} else {
			this.intro = content + this.intro;
		}

		return this;
	},

	prependRight: function prependRight ( index, content ) {
		if ( typeof content !== 'string' ) { throw new TypeError( 'inserted content must be a string' ); }

		this._split( index );

		var chunk = this.byStart[ index ];

		if ( chunk ) {
			chunk.prependRight( content );
		} else {
			this.outro = content + this.outro;
		}

		return this;
	},

	remove: function remove ( start, end ) {
		var this$1 = this;

		while ( start < 0 ) { start += this$1.original.length; }
		while ( end < 0 ) { end += this$1.original.length; }

		if ( start === end ) { return this; }

		if ( start < 0 || end > this.original.length ) { throw new Error( 'Character is out of bounds' ); }
		if ( start > end ) { throw new Error( 'end must be greater than start' ); }

		this._split( start );
		this._split( end );

		var chunk = this.byStart[ start ];

		while ( chunk ) {
			chunk.intro = '';
			chunk.outro = '';
			chunk.edit( '' );

			chunk = end > chunk.end ? this$1.byStart[ chunk.end ] : null;
		}

		return this;
	},

	slice: function slice ( start, end ) {
		var this$1 = this;
		if ( start === void 0 ) start = 0;
		if ( end === void 0 ) end = this.original.length;

		while ( start < 0 ) { start += this$1.original.length; }
		while ( end < 0 ) { end += this$1.original.length; }

		var result = '';

		// find start chunk
		var chunk = this.firstChunk;
		while ( chunk && ( chunk.start > start || chunk.end <= start ) ) {

			// found end chunk before start
			if ( chunk.start < end && chunk.end >= end ) {
				return result;
			}

			chunk = chunk.next;
		}

		if ( chunk && chunk.edited && chunk.start !== start ) { throw new Error(("Cannot use replaced character " + start + " as slice start anchor.")); }

		var startChunk = chunk;
		while ( chunk ) {
			if ( chunk.intro && ( startChunk !== chunk || chunk.start === start ) ) {
				result += chunk.intro;
			}

			var containsEnd = chunk.start < end && chunk.end >= end;
			if ( containsEnd && chunk.edited && chunk.end !== end ) { throw new Error(("Cannot use replaced character " + end + " as slice end anchor.")); }

			var sliceStart = startChunk === chunk ? start - chunk.start : 0;
			var sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;

			result += chunk.content.slice( sliceStart, sliceEnd );

			if ( chunk.outro && ( !containsEnd || chunk.end === end ) ) {
				result += chunk.outro;
			}

			if ( containsEnd ) {
				break;
			}

			chunk = chunk.next;
		}

		return result;
	},

	// TODO deprecate this? not really very useful
	snip: function snip ( start, end ) {
		var clone = this.clone();
		clone.remove( 0, start );
		clone.remove( end, clone.original.length );

		return clone;
	},

	_split: function _split ( index ) {
		var this$1 = this;

		if ( this.byStart[ index ] || this.byEnd[ index ] ) { return; }

		var chunk = this.lastSearchedChunk;
		var searchForward = index > chunk.end;

		while ( true ) {
			if ( chunk.contains( index ) ) { return this$1._splitChunk( chunk, index ); }

			chunk = searchForward ?
				this$1.byStart[ chunk.end ] :
				this$1.byEnd[ chunk.start ];
		}
	},

	_splitChunk: function _splitChunk ( chunk, index ) {
		if ( chunk.edited && chunk.content.length ) { // zero-length edited chunks are a special case (overlapping replacements)
			var loc = getLocator( this.original )( index );
			throw new Error( ("Cannot split a chunk that has already been edited (" + (loc.line) + ":" + (loc.column) + " – \"" + (chunk.original) + "\")") );
		}

		var newChunk = chunk.split( index );

		this.byEnd[ index ] = chunk;
		this.byStart[ index ] = newChunk;
		this.byEnd[ newChunk.end ] = newChunk;

		if ( chunk === this.lastChunk ) { this.lastChunk = newChunk; }

		this.lastSearchedChunk = chunk;
		return true;
	},

	toString: function toString () {
		var str = this.intro;

		var chunk = this.firstChunk;
		while ( chunk ) {
			str += chunk.toString();
			chunk = chunk.next;
		}

		return str + this.outro;
	},

	trimLines: function trimLines () {
		return this.trim('[\\r\\n]');
	},

	trim: function trim ( charType ) {
		return this.trimStart( charType ).trimEnd( charType );
	},

	trimEnd: function trimEnd ( charType ) {
		var this$1 = this;

		var rx = new RegExp( ( charType || '\\s' ) + '+$' );

		this.outro = this.outro.replace( rx, '' );
		if ( this.outro.length ) { return this; }

		var chunk = this.lastChunk;

		do {
			var end = chunk.end;
			var aborted = chunk.trimEnd( rx );

			// if chunk was trimmed, we have a new lastChunk
			if ( chunk.end !== end ) {
				if ( this$1.lastChunk === chunk ) {
					this$1.lastChunk = chunk.next;
				}

				this$1.byEnd[ chunk.end ] = chunk;
				this$1.byStart[ chunk.next.start ] = chunk.next;
				this$1.byEnd[ chunk.next.end ] = chunk.next;
			}

			if ( aborted ) { return this$1; }
			chunk = chunk.previous;
		} while ( chunk );

		return this;
	},

	trimStart: function trimStart ( charType ) {
		var this$1 = this;

		var rx = new RegExp( '^' + ( charType || '\\s' ) + '+' );

		this.intro = this.intro.replace( rx, '' );
		if ( this.intro.length ) { return this; }

		var chunk = this.firstChunk;

		do {
			var end = chunk.end;
			var aborted = chunk.trimStart( rx );

			if ( chunk.end !== end ) {
				// special case...
				if ( chunk === this$1.lastChunk ) { this$1.lastChunk = chunk.next; }

				this$1.byEnd[ chunk.end ] = chunk;
				this$1.byStart[ chunk.next.start ] = chunk.next;
				this$1.byEnd[ chunk.next.end ] = chunk.next;
			}

			if ( aborted ) { return this$1; }
			chunk = chunk.next;
		} while ( chunk );

		return this;
	}
};

var hasOwnProp = Object.prototype.hasOwnProperty;

function Bundle ( options ) {
	if ( options === void 0 ) options = {};

	this.intro = options.intro || '';
	this.separator = options.separator !== undefined ? options.separator : '\n';

	this.sources = [];

	this.uniqueSources = [];
	this.uniqueSourceIndexByFilename = {};
}

Bundle.prototype = {
	addSource: function addSource ( source ) {
		if ( source instanceof MagicString$1 ) {
			return this.addSource({
				content: source,
				filename: source.filename,
				separator: this.separator
			});
		}

		if ( !isObject( source ) || !source.content ) {
			throw new Error( 'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`' );
		}

		[ 'filename', 'indentExclusionRanges', 'separator' ].forEach( function (option) {
			if ( !hasOwnProp.call( source, option ) ) { source[ option ] = source.content[ option ]; }
		});

		if ( source.separator === undefined ) { // TODO there's a bunch of this sort of thing, needs cleaning up
			source.separator = this.separator;
		}

		if ( source.filename ) {
			if ( !hasOwnProp.call( this.uniqueSourceIndexByFilename, source.filename ) ) {
				this.uniqueSourceIndexByFilename[ source.filename ] = this.uniqueSources.length;
				this.uniqueSources.push({ filename: source.filename, content: source.content.original });
			} else {
				var uniqueSource = this.uniqueSources[ this.uniqueSourceIndexByFilename[ source.filename ] ];
				if ( source.content.original !== uniqueSource.content ) {
					throw new Error( ("Illegal source: same filename (" + (source.filename) + "), different contents") );
				}
			}
		}

		this.sources.push( source );
		return this;
	},

	append: function append ( str, options ) {
		this.addSource({
			content: new MagicString$1( str ),
			separator: ( options && options.separator ) || ''
		});

		return this;
	},

	clone: function clone () {
		var bundle = new Bundle({
			intro: this.intro,
			separator: this.separator
		});

		this.sources.forEach( function (source) {
			bundle.addSource({
				filename: source.filename,
				content: source.content.clone(),
				separator: source.separator
			});
		});

		return bundle;
	},

	generateMap: function generateMap ( options ) {
		var this$1 = this;
		if ( options === void 0 ) options = {};

		var names = [];
		this.sources.forEach( function (source) {
			Object.keys( source.content.storedNames ).forEach( function (name) {
				if ( !~names.indexOf( name ) ) { names.push( name ); }
			});
		});

		var mappings = new Mappings( options.hires );

		if ( this.intro ) {
			mappings.advance( this.intro );
		}

		this.sources.forEach( function ( source, i ) {
			if ( i > 0 ) {
				mappings.advance( this$1.separator );
			}

			var sourceIndex = source.filename ? this$1.uniqueSourceIndexByFilename[ source.filename ] : -1;
			var magicString = source.content;
			var locate = getLocator( magicString.original );

			if ( magicString.intro ) {
				mappings.advance( magicString.intro );
			}

			magicString.firstChunk.eachNext( function (chunk) {
				var loc = locate( chunk.start );

				if ( chunk.intro.length ) { mappings.advance( chunk.intro ); }

				if ( source.filename ) {
					if ( chunk.edited ) {
						mappings.addEdit( sourceIndex, chunk.content, chunk.original, loc, chunk.storeName ? names.indexOf( chunk.original ) : -1 );
					} else {
						mappings.addUneditedChunk( sourceIndex, chunk, magicString.original, loc, magicString.sourcemapLocations );
					}
				}

				else {
					mappings.advance( chunk.content );
				}

				if ( chunk.outro.length ) { mappings.advance( chunk.outro ); }
			});

			if ( magicString.outro ) {
				mappings.advance( magicString.outro );
			}
		});

		return new SourceMap({
			file: ( options.file ? options.file.split( /[\/\\]/ ).pop() : null ),
			sources: this.uniqueSources.map( function (source) {
				return options.file ? getRelativePath( options.file, source.filename ) : source.filename;
			}),
			sourcesContent: this.uniqueSources.map( function (source) {
				return options.includeContent ? source.content : null;
			}),
			names: names,
			mappings: mappings.encode()
		});
	},

	getIndentString: function getIndentString () {
		var indentStringCounts = {};

		this.sources.forEach( function (source) {
			var indentStr = source.content.indentStr;

			if ( indentStr === null ) { return; }

			if ( !indentStringCounts[ indentStr ] ) { indentStringCounts[ indentStr ] = 0; }
			indentStringCounts[ indentStr ] += 1;
		});

		return ( Object.keys( indentStringCounts ).sort( function ( a, b ) {
			return indentStringCounts[a] - indentStringCounts[b];
		})[0] ) || '\t';
	},

	indent: function indent ( indentStr ) {
		var this$1 = this;

		if ( !arguments.length ) {
			indentStr = this.getIndentString();
		}

		if ( indentStr === '' ) { return this; } // noop

		var trailingNewline = !this.intro || this.intro.slice( -1 ) === '\n';

		this.sources.forEach( function ( source, i ) {
			var separator = source.separator !== undefined ? source.separator : this$1.separator;
			var indentStart = trailingNewline || ( i > 0 && /\r?\n$/.test( separator ) );

			source.content.indent( indentStr, {
				exclude: source.indentExclusionRanges,
				indentStart: indentStart//: trailingNewline || /\r?\n$/.test( separator )  //true///\r?\n/.test( separator )
			});

			// TODO this is a very slow way to determine this
			trailingNewline = source.content.toString().slice( 0, -1 ) === '\n';
		});

		if ( this.intro ) {
			this.intro = indentStr + this.intro.replace( /^[^\n]/gm, function ( match, index ) {
				return index > 0 ? indentStr + match : match;
			});
		}

		return this;
	},

	prepend: function prepend ( str ) {
		this.intro = str + this.intro;
		return this;
	},

	toString: function toString () {
		var this$1 = this;

		var body = this.sources.map( function ( source, i ) {
			var separator = source.separator !== undefined ? source.separator : this$1.separator;
			var str = ( i > 0 ? separator : '' ) + source.content.toString();

			return str;
		}).join( '' );

		return this.intro + body;
	},

	trimLines: function trimLines () {
		return this.trim('[\\r\\n]');
	},

	trim: function trim ( charType ) {
		return this.trimStart( charType ).trimEnd( charType );
	},

	trimStart: function trimStart ( charType ) {
		var this$1 = this;

		var rx = new RegExp( '^' + ( charType || '\\s' ) + '+' );
		this.intro = this.intro.replace( rx, '' );

		if ( !this.intro ) {
			var source;
			var i = 0;

			do {
				source = this$1.sources[i];

				if ( !source ) {
					break;
				}

				source.content.trimStart( charType );
				i += 1;
			} while ( source.content.toString() === '' ); // TODO faster way to determine non-empty source?
		}

		return this;
	},

	trimEnd: function trimEnd ( charType ) {
		var this$1 = this;

		var rx = new RegExp( ( charType || '\\s' ) + '+$' );

		var source;
		var i = this.sources.length - 1;

		do {
			source = this$1.sources[i];

			if ( !source ) {
				this$1.intro = this$1.intro.replace( rx, '' );
				break;
			}

			source.content.trimEnd( charType );
			i -= 1;
		} while ( source.content.toString() === '' ); // TODO faster way to determine non-empty source?

		return this;
	}
};


/* harmony default export */ __webpack_exports__["a"] = (MagicString$1);
//# sourceMappingURL=magic-string.es.js.map

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(167).Buffer, __webpack_require__(99)))

/***/ }),
/* 243 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export decode */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return encode; });
var charToInteger = {};
var integerToChar = {};

'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='.split( '' ).forEach( function ( char, i ) {
	charToInteger[ char ] = i;
	integerToChar[ i ] = char;
});

function decode ( string ) {
	var result = [];
	var shift = 0;
	var value = 0;

	for ( var i = 0; i < string.length; i += 1 ) {
		var integer = charToInteger[ string[i] ];

		if ( integer === undefined ) {
			throw new Error( 'Invalid character (' + string[i] + ')' );
		}

		var hasContinuationBit = integer & 32;

		integer &= 31;
		value += integer << shift;

		if ( hasContinuationBit ) {
			shift += 5;
		} else {
			var shouldNegate = value & 1;
			value >>= 1;

			result.push( shouldNegate ? -value : value );

			// reset
			value = shift = 0;
		}
	}

	return result;
}

function encode ( value ) {
	var result;

	if ( typeof value === 'number' ) {
		result = encodeInteger( value );
	} else {
		result = '';
		for ( var i = 0; i < value.length; i += 1 ) {
			result += encodeInteger( value[i] );
		}
	}

	return result;
}

function encodeInteger ( num ) {
	var result = '';

	if ( num < 0 ) {
		num = ( -num << 1 ) | 1;
	} else {
		num <<= 1;
	}

	do {
		var clamped = num & 31;
		num >>= 5;

		if ( num > 0 ) {
			clamped |= 32;
		}

		result += integerToChar[ clamped ];
	} while ( num > 0 );

	return result;
}


/***/ }),
/* 244 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "version", function() { return version; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parse", function() { return parse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseExpressionAt", function() { return parseExpressionAt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tokenizer", function() { return tokenizer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parse_dammit", function() { return parse_dammit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LooseParser", function() { return LooseParser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pluginsLoose", function() { return pluginsLoose; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addLooseExports", function() { return addLooseExports; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Parser", function() { return Parser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "plugins", function() { return plugins; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultOptions", function() { return defaultOptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Position", function() { return Position; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SourceLocation", function() { return SourceLocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLineInfo", function() { return getLineInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Node", function() { return Node; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TokenType", function() { return TokenType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tokTypes", function() { return types; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keywordTypes", function() { return keywords$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TokContext", function() { return TokContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tokContexts", function() { return types$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isIdentifierChar", function() { return isIdentifierChar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isIdentifierStart", function() { return isIdentifierStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Token", function() { return Token; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNewLine", function() { return isNewLine; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lineBreak", function() { return lineBreak; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lineBreakG", function() { return lineBreakG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nonASCIIwhitespace", function() { return nonASCIIwhitespace; });
// Reserved word lists for various dialects of the language

var reservedWords = {
  3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",
  5: "class enum extends super const export import",
  6: "enum",
  strict: "implements interface let package private protected public static yield",
  strictBind: "eval arguments"
};

// And the keywords

var ecma5AndLessKeywords = "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this";

var keywords = {
  5: ecma5AndLessKeywords,
  6: ecma5AndLessKeywords + " const class extends export import super"
};

var keywordRelationalOperator = /^in(stanceof)?$/;

// ## Character categories

// Big ugly regular expressions that match characters in the
// whitespace, identifier, and identifier-start categories. These
// are only applied when a character is found to actually have a
// code point above 128.
// Generated by `bin/generate-identifier-regex.js`.

var nonASCIIidentifierStartChars = "\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u037f\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u052f\u0531-\u0556\u0559\u0561-\u0587\u05d0-\u05ea\u05f0-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u0860-\u086a\u08a0-\u08b4\u08b6-\u08bd\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u09fc\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0af9\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c39\u0c3d\u0c58-\u0c5a\u0c60\u0c61\u0c80\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d54-\u0d56\u0d5f-\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f5\u13f8-\u13fd\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f8\u1700-\u170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1877\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191e\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4b\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1c80-\u1c88\u1ce9-\u1cec\u1cee-\u1cf1\u1cf5\u1cf6\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2118-\u211d\u2124\u2126\u2128\u212a-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309b-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312e\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fea\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua69d\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua7ae\ua7b0-\ua7b7\ua7f7-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua8fd\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\ua9e0-\ua9e4\ua9e6-\ua9ef\ua9fa-\ua9fe\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa7e-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uab30-\uab5a\uab5c-\uab65\uab70-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc";
var nonASCIIidentifierChars = "\u200c\u200d\xb7\u0300-\u036f\u0387\u0483-\u0487\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610-\u061a\u064b-\u0669\u0670\u06d6-\u06dc\u06df-\u06e4\u06e7\u06e8\u06ea-\u06ed\u06f0-\u06f9\u0711\u0730-\u074a\u07a6-\u07b0\u07c0-\u07c9\u07eb-\u07f3\u0816-\u0819\u081b-\u0823\u0825-\u0827\u0829-\u082d\u0859-\u085b\u08d4-\u08e1\u08e3-\u0903\u093a-\u093c\u093e-\u094f\u0951-\u0957\u0962\u0963\u0966-\u096f\u0981-\u0983\u09bc\u09be-\u09c4\u09c7\u09c8\u09cb-\u09cd\u09d7\u09e2\u09e3\u09e6-\u09ef\u0a01-\u0a03\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a66-\u0a71\u0a75\u0a81-\u0a83\u0abc\u0abe-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ae2\u0ae3\u0ae6-\u0aef\u0afa-\u0aff\u0b01-\u0b03\u0b3c\u0b3e-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b56\u0b57\u0b62\u0b63\u0b66-\u0b6f\u0b82\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd7\u0be6-\u0bef\u0c00-\u0c03\u0c3e-\u0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c62\u0c63\u0c66-\u0c6f\u0c81-\u0c83\u0cbc\u0cbe-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0ce2\u0ce3\u0ce6-\u0cef\u0d00-\u0d03\u0d3b\u0d3c\u0d3e-\u0d44\u0d46-\u0d48\u0d4a-\u0d4d\u0d57\u0d62\u0d63\u0d66-\u0d6f\u0d82\u0d83\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0de6-\u0def\u0df2\u0df3\u0e31\u0e34-\u0e3a\u0e47-\u0e4e\u0e50-\u0e59\u0eb1\u0eb4-\u0eb9\u0ebb\u0ebc\u0ec8-\u0ecd\u0ed0-\u0ed9\u0f18\u0f19\u0f20-\u0f29\u0f35\u0f37\u0f39\u0f3e\u0f3f\u0f71-\u0f84\u0f86\u0f87\u0f8d-\u0f97\u0f99-\u0fbc\u0fc6\u102b-\u103e\u1040-\u1049\u1056-\u1059\u105e-\u1060\u1062-\u1064\u1067-\u106d\u1071-\u1074\u1082-\u108d\u108f-\u109d\u135d-\u135f\u1369-\u1371\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17b4-\u17d3\u17dd\u17e0-\u17e9\u180b-\u180d\u1810-\u1819\u18a9\u1920-\u192b\u1930-\u193b\u1946-\u194f\u19d0-\u19da\u1a17-\u1a1b\u1a55-\u1a5e\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1ab0-\u1abd\u1b00-\u1b04\u1b34-\u1b44\u1b50-\u1b59\u1b6b-\u1b73\u1b80-\u1b82\u1ba1-\u1bad\u1bb0-\u1bb9\u1be6-\u1bf3\u1c24-\u1c37\u1c40-\u1c49\u1c50-\u1c59\u1cd0-\u1cd2\u1cd4-\u1ce8\u1ced\u1cf2-\u1cf4\u1cf7-\u1cf9\u1dc0-\u1df9\u1dfb-\u1dff\u203f\u2040\u2054\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2cef-\u2cf1\u2d7f\u2de0-\u2dff\u302a-\u302f\u3099\u309a\ua620-\ua629\ua66f\ua674-\ua67d\ua69e\ua69f\ua6f0\ua6f1\ua802\ua806\ua80b\ua823-\ua827\ua880\ua881\ua8b4-\ua8c5\ua8d0-\ua8d9\ua8e0-\ua8f1\ua900-\ua909\ua926-\ua92d\ua947-\ua953\ua980-\ua983\ua9b3-\ua9c0\ua9d0-\ua9d9\ua9e5\ua9f0-\ua9f9\uaa29-\uaa36\uaa43\uaa4c\uaa4d\uaa50-\uaa59\uaa7b-\uaa7d\uaab0\uaab2-\uaab4\uaab7\uaab8\uaabe\uaabf\uaac1\uaaeb-\uaaef\uaaf5\uaaf6\uabe3-\uabea\uabec\uabed\uabf0-\uabf9\ufb1e\ufe00-\ufe0f\ufe20-\ufe2f\ufe33\ufe34\ufe4d-\ufe4f\uff10-\uff19\uff3f";

var nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");
var nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");

nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;

// These are a run-length and offset encoded representation of the
// >0xffff code points that are a valid part of identifiers. The
// offset starts at 0x10000, and each pair of numbers represents an
// offset to the next range, and then a size of the range. They were
// generated by bin/generate-identifier-regex.js

// eslint-disable-next-line comma-spacing
var astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,26,45,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,785,52,76,44,33,24,27,35,42,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,54,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,86,25,391,63,32,0,257,0,11,39,8,0,22,0,12,39,3,3,55,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,698,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,881,68,12,0,67,12,65,1,31,6124,20,754,9486,286,82,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,60,67,1213,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541];

// eslint-disable-next-line comma-spacing
var astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,1306,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,52,0,13,2,49,13,10,2,4,9,83,11,7,0,161,11,6,9,7,3,57,0,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,87,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,423,9,280,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,19719,9,135,4,60,6,26,9,1016,45,17,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,2214,6,110,6,6,9,792487,239];

// This has a complexity linear to the value of the code. The
// assumption is that looking up astral identifier characters is
// rare.
function isInAstralSet(code, set) {
  var pos = 0x10000;
  for (var i = 0; i < set.length; i += 2) {
    pos += set[i];
    if (pos > code) { return false }
    pos += set[i + 1];
    if (pos >= code) { return true }
  }
}

// Test whether a given character code starts an identifier.

function isIdentifierStart(code, astral) {
  if (code < 65) { return code === 36 }
  if (code < 91) { return true }
  if (code < 97) { return code === 95 }
  if (code < 123) { return true }
  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }
  if (astral === false) { return false }
  return isInAstralSet(code, astralIdentifierStartCodes)
}

// Test whether a given character is part of an identifier.

function isIdentifierChar(code, astral) {
  if (code < 48) { return code === 36 }
  if (code < 58) { return true }
  if (code < 65) { return false }
  if (code < 91) { return true }
  if (code < 97) { return code === 95 }
  if (code < 123) { return true }
  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }
  if (astral === false) { return false }
  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)
}

// ## Token types

// The assignment of fine-grained, information-carrying type objects
// allows the tokenizer to store the information it has about a
// token in a way that is very cheap for the parser to look up.

// All token type variables start with an underscore, to make them
// easy to recognize.

// The `beforeExpr` property is used to disambiguate between regular
// expressions and divisions. It is set on all token types that can
// be followed by an expression (thus, a slash after them would be a
// regular expression).
//
// The `startsExpr` property is used to check if the token ends a
// `yield` expression. It is set on all token types that either can
// directly start an expression (like a quotation mark) or can
// continue an expression (like the body of a string).
//
// `isLoop` marks a keyword as starting a loop, which is important
// to know when parsing a label, in order to allow or disallow
// continue jumps to that label.

var TokenType = function TokenType(label, conf) {
  if ( conf === void 0 ) conf = {};

  this.label = label;
  this.keyword = conf.keyword;
  this.beforeExpr = !!conf.beforeExpr;
  this.startsExpr = !!conf.startsExpr;
  this.isLoop = !!conf.isLoop;
  this.isAssign = !!conf.isAssign;
  this.prefix = !!conf.prefix;
  this.postfix = !!conf.postfix;
  this.binop = conf.binop || null;
  this.updateContext = null;
};

function binop(name, prec) {
  return new TokenType(name, {beforeExpr: true, binop: prec})
}
var beforeExpr = {beforeExpr: true};
var startsExpr = {startsExpr: true};

// Map keyword names to token types.

var keywords$1 = {};

// Succinct definitions of keyword token types
function kw(name, options) {
  if ( options === void 0 ) options = {};

  options.keyword = name;
  return keywords$1[name] = new TokenType(name, options)
}

var types = {
  num: new TokenType("num", startsExpr),
  regexp: new TokenType("regexp", startsExpr),
  string: new TokenType("string", startsExpr),
  name: new TokenType("name", startsExpr),
  eof: new TokenType("eof"),

  // Punctuation token types.
  bracketL: new TokenType("[", {beforeExpr: true, startsExpr: true}),
  bracketR: new TokenType("]"),
  braceL: new TokenType("{", {beforeExpr: true, startsExpr: true}),
  braceR: new TokenType("}"),
  parenL: new TokenType("(", {beforeExpr: true, startsExpr: true}),
  parenR: new TokenType(")"),
  comma: new TokenType(",", beforeExpr),
  semi: new TokenType(";", beforeExpr),
  colon: new TokenType(":", beforeExpr),
  dot: new TokenType("."),
  question: new TokenType("?", beforeExpr),
  arrow: new TokenType("=>", beforeExpr),
  template: new TokenType("template"),
  invalidTemplate: new TokenType("invalidTemplate"),
  ellipsis: new TokenType("...", beforeExpr),
  backQuote: new TokenType("`", startsExpr),
  dollarBraceL: new TokenType("${", {beforeExpr: true, startsExpr: true}),

  // Operators. These carry several kinds of properties to help the
  // parser use them properly (the presence of these properties is
  // what categorizes them as operators).
  //
  // `binop`, when present, specifies that this operator is a binary
  // operator, and will refer to its precedence.
  //
  // `prefix` and `postfix` mark the operator as a prefix or postfix
  // unary operator.
  //
  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as
  // binary operators with a very low precedence, that should result
  // in AssignmentExpression nodes.

  eq: new TokenType("=", {beforeExpr: true, isAssign: true}),
  assign: new TokenType("_=", {beforeExpr: true, isAssign: true}),
  incDec: new TokenType("++/--", {prefix: true, postfix: true, startsExpr: true}),
  prefix: new TokenType("!/~", {beforeExpr: true, prefix: true, startsExpr: true}),
  logicalOR: binop("||", 1),
  logicalAND: binop("&&", 2),
  bitwiseOR: binop("|", 3),
  bitwiseXOR: binop("^", 4),
  bitwiseAND: binop("&", 5),
  equality: binop("==/!=/===/!==", 6),
  relational: binop("</>/<=/>=", 7),
  bitShift: binop("<</>>/>>>", 8),
  plusMin: new TokenType("+/-", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),
  modulo: binop("%", 10),
  star: binop("*", 10),
  slash: binop("/", 10),
  starstar: new TokenType("**", {beforeExpr: true}),

  // Keyword token types.
  _break: kw("break"),
  _case: kw("case", beforeExpr),
  _catch: kw("catch"),
  _continue: kw("continue"),
  _debugger: kw("debugger"),
  _default: kw("default", beforeExpr),
  _do: kw("do", {isLoop: true, beforeExpr: true}),
  _else: kw("else", beforeExpr),
  _finally: kw("finally"),
  _for: kw("for", {isLoop: true}),
  _function: kw("function", startsExpr),
  _if: kw("if"),
  _return: kw("return", beforeExpr),
  _switch: kw("switch"),
  _throw: kw("throw", beforeExpr),
  _try: kw("try"),
  _var: kw("var"),
  _const: kw("const"),
  _while: kw("while", {isLoop: true}),
  _with: kw("with"),
  _new: kw("new", {beforeExpr: true, startsExpr: true}),
  _this: kw("this", startsExpr),
  _super: kw("super", startsExpr),
  _class: kw("class", startsExpr),
  _extends: kw("extends", beforeExpr),
  _export: kw("export"),
  _import: kw("import"),
  _null: kw("null", startsExpr),
  _true: kw("true", startsExpr),
  _false: kw("false", startsExpr),
  _in: kw("in", {beforeExpr: true, binop: 7}),
  _instanceof: kw("instanceof", {beforeExpr: true, binop: 7}),
  _typeof: kw("typeof", {beforeExpr: true, prefix: true, startsExpr: true}),
  _void: kw("void", {beforeExpr: true, prefix: true, startsExpr: true}),
  _delete: kw("delete", {beforeExpr: true, prefix: true, startsExpr: true})
};

// Matches a whole line break (where CRLF is considered a single
// line break). Used to count lines.

var lineBreak = /\r\n?|\n|\u2028|\u2029/;
var lineBreakG = new RegExp(lineBreak.source, "g");

function isNewLine(code, ecma2019String) {
  return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))
}

var nonASCIIwhitespace = /[\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff]/;

var skipWhiteSpace = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;

var ref = Object.prototype;
var hasOwnProperty = ref.hasOwnProperty;
var toString = ref.toString;

// Checks if an object has a property.

function has(obj, propName) {
  return hasOwnProperty.call(obj, propName)
}

var isArray = Array.isArray || (function (obj) { return (
  toString.call(obj) === "[object Array]"
); });

// These are used when `options.locations` is on, for the
// `startLoc` and `endLoc` properties.

var Position = function Position(line, col) {
  this.line = line;
  this.column = col;
};

Position.prototype.offset = function offset (n) {
  return new Position(this.line, this.column + n)
};

var SourceLocation = function SourceLocation(p, start, end) {
  this.start = start;
  this.end = end;
  if (p.sourceFile !== null) { this.source = p.sourceFile; }
};

// The `getLineInfo` function is mostly useful when the
// `locations` option is off (for performance reasons) and you
// want to find the line/column position for a given character
// offset. `input` should be the code string that the offset refers
// into.

function getLineInfo(input, offset) {
  for (var line = 1, cur = 0;;) {
    lineBreakG.lastIndex = cur;
    var match = lineBreakG.exec(input);
    if (match && match.index < offset) {
      ++line;
      cur = match.index + match[0].length;
    } else {
      return new Position(line, offset - cur)
    }
  }
}

// A second optional argument can be given to further configure
// the parser process. These options are recognized:

var defaultOptions = {
  // `ecmaVersion` indicates the ECMAScript version to parse. Must
  // be either 3, 5, 6 (2015), 7 (2016), or 8 (2017). This influences support
  // for strict mode, the set of reserved words, and support for
  // new syntax features. The default is 7.
  ecmaVersion: 7,
  // `sourceType` indicates the mode the code should be parsed in.
  // Can be either `"script"` or `"module"`. This influences global
  // strict mode and parsing of `import` and `export` declarations.
  sourceType: "script",
  // `onInsertedSemicolon` can be a callback that will be called
  // when a semicolon is automatically inserted. It will be passed
  // th position of the comma as an offset, and if `locations` is
  // enabled, it is given the location as a `{line, column}` object
  // as second argument.
  onInsertedSemicolon: null,
  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for
  // trailing commas.
  onTrailingComma: null,
  // By default, reserved words are only enforced if ecmaVersion >= 5.
  // Set `allowReserved` to a boolean value to explicitly turn this on
  // an off. When this option has the value "never", reserved words
  // and keywords can also not be used as property names.
  allowReserved: null,
  // When enabled, a return at the top level is not considered an
  // error.
  allowReturnOutsideFunction: false,
  // When enabled, import/export statements are not constrained to
  // appearing at the top of the program.
  allowImportExportEverywhere: false,
  // When enabled, await identifiers are allowed to appear at the top-level scope,
  // but they are still not allowed in non-async functions.
  allowAwaitOutsideFunction: false,
  // When enabled, hashbang directive in the beginning of file
  // is allowed and treated as a line comment.
  allowHashBang: false,
  // When `locations` is on, `loc` properties holding objects with
  // `start` and `end` properties in `{line, column}` form (with
  // line being 1-based and column 0-based) will be attached to the
  // nodes.
  locations: false,
  // A function can be passed as `onToken` option, which will
  // cause Acorn to call that function with object in the same
  // format as tokens returned from `tokenizer().getToken()`. Note
  // that you are not allowed to call the parser from the
  // callback—that will corrupt its internal state.
  onToken: null,
  // A function can be passed as `onComment` option, which will
  // cause Acorn to call that function with `(block, text, start,
  // end)` parameters whenever a comment is skipped. `block` is a
  // boolean indicating whether this is a block (`/* */`) comment,
  // `text` is the content of the comment, and `start` and `end` are
  // character offsets that denote the start and end of the comment.
  // When the `locations` option is on, two more parameters are
  // passed, the full `{line, column}` locations of the start and
  // end of the comments. Note that you are not allowed to call the
  // parser from the callback—that will corrupt its internal state.
  onComment: null,
  // Nodes have their start and end characters offsets recorded in
  // `start` and `end` properties (directly on the node, rather than
  // the `loc` object, which holds line/column data. To also add a
  // [semi-standardized][range] `range` property holding a `[start,
  // end]` array with the same numbers, set the `ranges` option to
  // `true`.
  //
  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678
  ranges: false,
  // It is possible to parse multiple files into a single AST by
  // passing the tree produced by parsing the first file as
  // `program` option in subsequent parses. This will add the
  // toplevel forms of the parsed file to the `Program` (top) node
  // of an existing parse tree.
  program: null,
  // When `locations` is on, you can pass this to record the source
  // file in every node's `loc` object.
  sourceFile: null,
  // This value, if given, is stored in every node, whether
  // `locations` is on or off.
  directSourceFile: null,
  // When enabled, parenthesized expressions are represented by
  // (non-standard) ParenthesizedExpression nodes
  preserveParens: false,
  plugins: {}
};

// Interpret and default an options object

function getOptions(opts) {
  var options = {};

  for (var opt in defaultOptions)
    { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }

  if (options.ecmaVersion >= 2015)
    { options.ecmaVersion -= 2009; }

  if (options.allowReserved == null)
    { options.allowReserved = options.ecmaVersion < 5; }

  if (isArray(options.onToken)) {
    var tokens = options.onToken;
    options.onToken = function (token) { return tokens.push(token); };
  }
  if (isArray(options.onComment))
    { options.onComment = pushComment(options, options.onComment); }

  return options
}

function pushComment(options, array) {
  return function(block, text, start, end, startLoc, endLoc) {
    var comment = {
      type: block ? "Block" : "Line",
      value: text,
      start: start,
      end: end
    };
    if (options.locations)
      { comment.loc = new SourceLocation(this, startLoc, endLoc); }
    if (options.ranges)
      { comment.range = [start, end]; }
    array.push(comment);
  }
}

// Registered plugins
var plugins = {};

function keywordRegexp(words) {
  return new RegExp("^(?:" + words.replace(/ /g, "|") + ")$")
}

var Parser = function Parser(options, input, startPos) {
  this.options = options = getOptions(options);
  this.sourceFile = options.sourceFile;
  this.keywords = keywordRegexp(keywords[options.ecmaVersion >= 6 ? 6 : 5]);
  var reserved = "";
  if (!options.allowReserved) {
    for (var v = options.ecmaVersion;; v--)
      { if (reserved = reservedWords[v]) { break } }
    if (options.sourceType == "module") { reserved += " await"; }
  }
  this.reservedWords = keywordRegexp(reserved);
  var reservedStrict = (reserved ? reserved + " " : "") + reservedWords.strict;
  this.reservedWordsStrict = keywordRegexp(reservedStrict);
  this.reservedWordsStrictBind = keywordRegexp(reservedStrict + " " + reservedWords.strictBind);
  this.input = String(input);

  // Used to signal to callers of `readWord1` whether the word
  // contained any escape sequences. This is needed because words with
  // escape sequences must not be interpreted as keywords.
  this.containsEsc = false;

  // Load plugins
  this.loadPlugins(options.plugins);

  // Set up token state

  // The current position of the tokenizer in the input.
  if (startPos) {
    this.pos = startPos;
    this.lineStart = this.input.lastIndexOf("\n", startPos - 1) + 1;
    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;
  } else {
    this.pos = this.lineStart = 0;
    this.curLine = 1;
  }

  // Properties of the current token:
  // Its type
  this.type = types.eof;
  // For tokens that include more information than their type, the value
  this.value = null;
  // Its start and end offset
  this.start = this.end = this.pos;
  // And, if locations are used, the {line, column} object
  // corresponding to those offsets
  this.startLoc = this.endLoc = this.curPosition();

  // Position information for the previous token
  this.lastTokEndLoc = this.lastTokStartLoc = null;
  this.lastTokStart = this.lastTokEnd = this.pos;

  // The context stack is used to superficially track syntactic
  // context to predict whether a regular expression is allowed in a
  // given position.
  this.context = this.initialContext();
  this.exprAllowed = true;

  // Figure out if it's a module code.
  this.inModule = options.sourceType === "module";
  this.strict = this.inModule || this.strictDirective(this.pos);

  // Used to signify the start of a potential arrow function
  this.potentialArrowAt = -1;

  // Flags to track whether we are in a function, a generator, an async function.
  this.inFunction = this.inGenerator = this.inAsync = false;
  // Positions to delayed-check that yield/await does not exist in default parameters.
  this.yieldPos = this.awaitPos = 0;
  // Labels in scope.
  this.labels = [];

  // If enabled, skip leading hashbang line.
  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === "#!")
    { this.skipLineComment(2); }

  // Scope tracking for duplicate variable names (see scope.js)
  this.scopeStack = [];
  this.enterFunctionScope();

  // For RegExp validation
  this.regexpState = null;
};

// DEPRECATED Kept for backwards compatibility until 3.0 in case a plugin uses them
Parser.prototype.isKeyword = function isKeyword (word) { return this.keywords.test(word) };
Parser.prototype.isReservedWord = function isReservedWord (word) { return this.reservedWords.test(word) };

Parser.prototype.extend = function extend (name, f) {
  this[name] = f(this[name]);
};

Parser.prototype.loadPlugins = function loadPlugins (pluginConfigs) {
    var this$1 = this;

  for (var name in pluginConfigs) {
    var plugin = plugins[name];
    if (!plugin) { throw new Error("Plugin '" + name + "' not found") }
    plugin(this$1, pluginConfigs[name]);
  }
};

Parser.prototype.parse = function parse () {
  var node = this.options.program || this.startNode();
  this.nextToken();
  return this.parseTopLevel(node)
};

var pp = Parser.prototype;

// ## Parser utilities

var literal = /^(?:'((?:\\.|[^'])*?)'|"((?:\\.|[^"])*?)"|;)/;
pp.strictDirective = function(start) {
  var this$1 = this;

  for (;;) {
    skipWhiteSpace.lastIndex = start;
    start += skipWhiteSpace.exec(this$1.input)[0].length;
    var match = literal.exec(this$1.input.slice(start));
    if (!match) { return false }
    if ((match[1] || match[2]) == "use strict") { return true }
    start += match[0].length;
  }
};

// Predicate that tests whether the next token is of the given
// type, and if yes, consumes it as a side effect.

pp.eat = function(type) {
  if (this.type === type) {
    this.next();
    return true
  } else {
    return false
  }
};

// Tests whether parsed token is a contextual keyword.

pp.isContextual = function(name) {
  return this.type === types.name && this.value === name && !this.containsEsc
};

// Consumes contextual keyword if possible.

pp.eatContextual = function(name) {
  if (!this.isContextual(name)) { return false }
  this.next();
  return true
};

// Asserts that following token is given contextual keyword.

pp.expectContextual = function(name) {
  if (!this.eatContextual(name)) { this.unexpected(); }
};

// Test whether a semicolon can be inserted at the current position.

pp.canInsertSemicolon = function() {
  return this.type === types.eof ||
    this.type === types.braceR ||
    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))
};

pp.insertSemicolon = function() {
  if (this.canInsertSemicolon()) {
    if (this.options.onInsertedSemicolon)
      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }
    return true
  }
};

// Consume a semicolon, or, failing that, see if we are allowed to
// pretend that there is a semicolon at this position.

pp.semicolon = function() {
  if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }
};

pp.afterTrailingComma = function(tokType, notNext) {
  if (this.type == tokType) {
    if (this.options.onTrailingComma)
      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }
    if (!notNext)
      { this.next(); }
    return true
  }
};

// Expect a token of a given type. If found, consume it, otherwise,
// raise an unexpected token error.

pp.expect = function(type) {
  this.eat(type) || this.unexpected();
};

// Raise an unexpected token error.

pp.unexpected = function(pos) {
  this.raise(pos != null ? pos : this.start, "Unexpected token");
};

function DestructuringErrors() {
  this.shorthandAssign =
  this.trailingComma =
  this.parenthesizedAssign =
  this.parenthesizedBind =
  this.doubleProto =
    -1;
}

pp.checkPatternErrors = function(refDestructuringErrors, isAssign) {
  if (!refDestructuringErrors) { return }
  if (refDestructuringErrors.trailingComma > -1)
    { this.raiseRecoverable(refDestructuringErrors.trailingComma, "Comma is not permitted after the rest element"); }
  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;
  if (parens > -1) { this.raiseRecoverable(parens, "Parenthesized pattern"); }
};

pp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {
  if (!refDestructuringErrors) { return false }
  var shorthandAssign = refDestructuringErrors.shorthandAssign;
  var doubleProto = refDestructuringErrors.doubleProto;
  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }
  if (shorthandAssign >= 0)
    { this.raise(shorthandAssign, "Shorthand property assignments are valid only in destructuring patterns"); }
  if (doubleProto >= 0)
    { this.raiseRecoverable(doubleProto, "Redefinition of __proto__ property"); }
};

pp.checkYieldAwaitInDefaultParams = function() {
  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))
    { this.raise(this.yieldPos, "Yield expression cannot be a default value"); }
  if (this.awaitPos)
    { this.raise(this.awaitPos, "Await expression cannot be a default value"); }
};

pp.isSimpleAssignTarget = function(expr) {
  if (expr.type === "ParenthesizedExpression")
    { return this.isSimpleAssignTarget(expr.expression) }
  return expr.type === "Identifier" || expr.type === "MemberExpression"
};

var pp$1 = Parser.prototype;

// ### Statement parsing

// Parse a program. Initializes the parser, reads any number of
// statements, and wraps them in a Program node.  Optionally takes a
// `program` argument.  If present, the statements will be appended
// to its body instead of creating a new node.

pp$1.parseTopLevel = function(node) {
  var this$1 = this;

  var exports = {};
  if (!node.body) { node.body = []; }
  while (this.type !== types.eof) {
    var stmt = this$1.parseStatement(true, true, exports);
    node.body.push(stmt);
  }
  this.adaptDirectivePrologue(node.body);
  this.next();
  if (this.options.ecmaVersion >= 6) {
    node.sourceType = this.options.sourceType;
  }
  return this.finishNode(node, "Program")
};

var loopLabel = {kind: "loop"};
var switchLabel = {kind: "switch"};

pp$1.isLet = function() {
  if (this.options.ecmaVersion < 6 || !this.isContextual("let")) { return false }
  skipWhiteSpace.lastIndex = this.pos;
  var skip = skipWhiteSpace.exec(this.input);
  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);
  if (nextCh === 91 || nextCh == 123) { return true } // '{' and '['
  if (isIdentifierStart(nextCh, true)) {
    var pos = next + 1;
    while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }
    var ident = this.input.slice(next, pos);
    if (!keywordRelationalOperator.test(ident)) { return true }
  }
  return false
};

// check 'async [no LineTerminator here] function'
// - 'async /*foo*/ function' is OK.
// - 'async /*\n*/ function' is invalid.
pp$1.isAsyncFunction = function() {
  if (this.options.ecmaVersion < 8 || !this.isContextual("async"))
    { return false }

  skipWhiteSpace.lastIndex = this.pos;
  var skip = skipWhiteSpace.exec(this.input);
  var next = this.pos + skip[0].length;
  return !lineBreak.test(this.input.slice(this.pos, next)) &&
    this.input.slice(next, next + 8) === "function" &&
    (next + 8 == this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))
};

// Parse a single statement.
//
// If expecting a statement and finding a slash operator, parse a
// regular expression literal. This is to handle cases like
// `if (foo) /blah/.exec(foo)`, where looking at the previous token
// does not help.

pp$1.parseStatement = function(declaration, topLevel, exports) {
  var starttype = this.type, node = this.startNode(), kind;

  if (this.isLet()) {
    starttype = types._var;
    kind = "let";
  }

  // Most types of statements are recognized by the keyword they
  // start with. Many are trivial to parse, some require a bit of
  // complexity.

  switch (starttype) {
  case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)
  case types._debugger: return this.parseDebuggerStatement(node)
  case types._do: return this.parseDoStatement(node)
  case types._for: return this.parseForStatement(node)
  case types._function:
    if (!declaration && this.options.ecmaVersion >= 6) { this.unexpected(); }
    return this.parseFunctionStatement(node, false)
  case types._class:
    if (!declaration) { this.unexpected(); }
    return this.parseClass(node, true)
  case types._if: return this.parseIfStatement(node)
  case types._return: return this.parseReturnStatement(node)
  case types._switch: return this.parseSwitchStatement(node)
  case types._throw: return this.parseThrowStatement(node)
  case types._try: return this.parseTryStatement(node)
  case types._const: case types._var:
    kind = kind || this.value;
    if (!declaration && kind != "var") { this.unexpected(); }
    return this.parseVarStatement(node, kind)
  case types._while: return this.parseWhileStatement(node)
  case types._with: return this.parseWithStatement(node)
  case types.braceL: return this.parseBlock()
  case types.semi: return this.parseEmptyStatement(node)
  case types._export:
  case types._import:
    if (!this.options.allowImportExportEverywhere) {
      if (!topLevel)
        { this.raise(this.start, "'import' and 'export' may only appear at the top level"); }
      if (!this.inModule)
        { this.raise(this.start, "'import' and 'export' may appear only with 'sourceType: module'"); }
    }
    return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)

    // If the statement does not start with a statement keyword or a
    // brace, it's an ExpressionStatement or LabeledStatement. We
    // simply start parsing an expression, and afterwards, if the
    // next token is a colon and the expression was a simple
    // Identifier node, we switch to interpreting it as a label.
  default:
    if (this.isAsyncFunction()) {
      if (!declaration) { this.unexpected(); }
      this.next();
      return this.parseFunctionStatement(node, true)
    }

    var maybeName = this.value, expr = this.parseExpression();
    if (starttype === types.name && expr.type === "Identifier" && this.eat(types.colon))
      { return this.parseLabeledStatement(node, maybeName, expr) }
    else { return this.parseExpressionStatement(node, expr) }
  }
};

pp$1.parseBreakContinueStatement = function(node, keyword) {
  var this$1 = this;

  var isBreak = keyword == "break";
  this.next();
  if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }
  else if (this.type !== types.name) { this.unexpected(); }
  else {
    node.label = this.parseIdent();
    this.semicolon();
  }

  // Verify that there is an actual destination to break or
  // continue to.
  var i = 0;
  for (; i < this.labels.length; ++i) {
    var lab = this$1.labels[i];
    if (node.label == null || lab.name === node.label.name) {
      if (lab.kind != null && (isBreak || lab.kind === "loop")) { break }
      if (node.label && isBreak) { break }
    }
  }
  if (i === this.labels.length) { this.raise(node.start, "Unsyntactic " + keyword); }
  return this.finishNode(node, isBreak ? "BreakStatement" : "ContinueStatement")
};

pp$1.parseDebuggerStatement = function(node) {
  this.next();
  this.semicolon();
  return this.finishNode(node, "DebuggerStatement")
};

pp$1.parseDoStatement = function(node) {
  this.next();
  this.labels.push(loopLabel);
  node.body = this.parseStatement(false);
  this.labels.pop();
  this.expect(types._while);
  node.test = this.parseParenExpression();
  if (this.options.ecmaVersion >= 6)
    { this.eat(types.semi); }
  else
    { this.semicolon(); }
  return this.finishNode(node, "DoWhileStatement")
};

// Disambiguating between a `for` and a `for`/`in` or `for`/`of`
// loop is non-trivial. Basically, we have to parse the init `var`
// statement or expression, disallowing the `in` operator (see
// the second parameter to `parseExpression`), and then check
// whether the next token is `in` or `of`. When there is no init
// part (semicolon immediately after the opening parenthesis), it
// is a regular `for` loop.

pp$1.parseForStatement = function(node) {
  this.next();
  var awaitAt = (this.options.ecmaVersion >= 9 && this.inAsync && this.eatContextual("await")) ? this.lastTokStart : -1;
  this.labels.push(loopLabel);
  this.enterLexicalScope();
  this.expect(types.parenL);
  if (this.type === types.semi) {
    if (awaitAt > -1) { this.unexpected(awaitAt); }
    return this.parseFor(node, null)
  }
  var isLet = this.isLet();
  if (this.type === types._var || this.type === types._const || isLet) {
    var init$1 = this.startNode(), kind = isLet ? "let" : this.value;
    this.next();
    this.parseVar(init$1, true, kind);
    this.finishNode(init$1, "VariableDeclaration");
    if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual("of"))) && init$1.declarations.length === 1 &&
        !(kind !== "var" && init$1.declarations[0].init)) {
      if (this.options.ecmaVersion >= 9) {
        if (this.type === types._in) {
          if (awaitAt > -1) { this.unexpected(awaitAt); }
        } else { node.await = awaitAt > -1; }
      }
      return this.parseForIn(node, init$1)
    }
    if (awaitAt > -1) { this.unexpected(awaitAt); }
    return this.parseFor(node, init$1)
  }
  var refDestructuringErrors = new DestructuringErrors;
  var init = this.parseExpression(true, refDestructuringErrors);
  if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual("of"))) {
    if (this.options.ecmaVersion >= 9) {
      if (this.type === types._in) {
        if (awaitAt > -1) { this.unexpected(awaitAt); }
      } else { node.await = awaitAt > -1; }
    }
    this.toAssignable(init, false, refDestructuringErrors);
    this.checkLVal(init);
    return this.parseForIn(node, init)
  } else {
    this.checkExpressionErrors(refDestructuringErrors, true);
  }
  if (awaitAt > -1) { this.unexpected(awaitAt); }
  return this.parseFor(node, init)
};

pp$1.parseFunctionStatement = function(node, isAsync) {
  this.next();
  return this.parseFunction(node, true, false, isAsync)
};

pp$1.parseIfStatement = function(node) {
  this.next();
  node.test = this.parseParenExpression();
  // allow function declarations in branches, but only in non-strict mode
  node.consequent = this.parseStatement(!this.strict && this.type == types._function);
  node.alternate = this.eat(types._else) ? this.parseStatement(!this.strict && this.type == types._function) : null;
  return this.finishNode(node, "IfStatement")
};

pp$1.parseReturnStatement = function(node) {
  if (!this.inFunction && !this.options.allowReturnOutsideFunction)
    { this.raise(this.start, "'return' outside of function"); }
  this.next();

  // In `return` (and `break`/`continue`), the keywords with
  // optional arguments, we eagerly look for a semicolon or the
  // possibility to insert one.

  if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }
  else { node.argument = this.parseExpression(); this.semicolon(); }
  return this.finishNode(node, "ReturnStatement")
};

pp$1.parseSwitchStatement = function(node) {
  var this$1 = this;

  this.next();
  node.discriminant = this.parseParenExpression();
  node.cases = [];
  this.expect(types.braceL);
  this.labels.push(switchLabel);
  this.enterLexicalScope();

  // Statements under must be grouped (by label) in SwitchCase
  // nodes. `cur` is used to keep the node that we are currently
  // adding statements to.

  var cur;
  for (var sawDefault = false; this.type != types.braceR;) {
    if (this$1.type === types._case || this$1.type === types._default) {
      var isCase = this$1.type === types._case;
      if (cur) { this$1.finishNode(cur, "SwitchCase"); }
      node.cases.push(cur = this$1.startNode());
      cur.consequent = [];
      this$1.next();
      if (isCase) {
        cur.test = this$1.parseExpression();
      } else {
        if (sawDefault) { this$1.raiseRecoverable(this$1.lastTokStart, "Multiple default clauses"); }
        sawDefault = true;
        cur.test = null;
      }
      this$1.expect(types.colon);
    } else {
      if (!cur) { this$1.unexpected(); }
      cur.consequent.push(this$1.parseStatement(true));
    }
  }
  this.exitLexicalScope();
  if (cur) { this.finishNode(cur, "SwitchCase"); }
  this.next(); // Closing brace
  this.labels.pop();
  return this.finishNode(node, "SwitchStatement")
};

pp$1.parseThrowStatement = function(node) {
  this.next();
  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))
    { this.raise(this.lastTokEnd, "Illegal newline after throw"); }
  node.argument = this.parseExpression();
  this.semicolon();
  return this.finishNode(node, "ThrowStatement")
};

// Reused empty array added for node fields that are always empty.

var empty = [];

pp$1.parseTryStatement = function(node) {
  this.next();
  node.block = this.parseBlock();
  node.handler = null;
  if (this.type === types._catch) {
    var clause = this.startNode();
    this.next();
    if (this.eat(types.parenL)) {
      clause.param = this.parseBindingAtom();
      this.enterLexicalScope();
      this.checkLVal(clause.param, "let");
      this.expect(types.parenR);
    } else {
      if (this.options.ecmaVersion < 10) { this.unexpected(); }
      clause.param = null;
      this.enterLexicalScope();
    }
    clause.body = this.parseBlock(false);
    this.exitLexicalScope();
    node.handler = this.finishNode(clause, "CatchClause");
  }
  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;
  if (!node.handler && !node.finalizer)
    { this.raise(node.start, "Missing catch or finally clause"); }
  return this.finishNode(node, "TryStatement")
};

pp$1.parseVarStatement = function(node, kind) {
  this.next();
  this.parseVar(node, false, kind);
  this.semicolon();
  return this.finishNode(node, "VariableDeclaration")
};

pp$1.parseWhileStatement = function(node) {
  this.next();
  node.test = this.parseParenExpression();
  this.labels.push(loopLabel);
  node.body = this.parseStatement(false);
  this.labels.pop();
  return this.finishNode(node, "WhileStatement")
};

pp$1.parseWithStatement = function(node) {
  if (this.strict) { this.raise(this.start, "'with' in strict mode"); }
  this.next();
  node.object = this.parseParenExpression();
  node.body = this.parseStatement(false);
  return this.finishNode(node, "WithStatement")
};

pp$1.parseEmptyStatement = function(node) {
  this.next();
  return this.finishNode(node, "EmptyStatement")
};

pp$1.parseLabeledStatement = function(node, maybeName, expr) {
  var this$1 = this;

  for (var i$1 = 0, list = this$1.labels; i$1 < list.length; i$1 += 1)
    {
    var label = list[i$1];

    if (label.name === maybeName)
      { this$1.raise(expr.start, "Label '" + maybeName + "' is already declared");
  } }
  var kind = this.type.isLoop ? "loop" : this.type === types._switch ? "switch" : null;
  for (var i = this.labels.length - 1; i >= 0; i--) {
    var label$1 = this$1.labels[i];
    if (label$1.statementStart == node.start) {
      // Update information about previous labels on this node
      label$1.statementStart = this$1.start;
      label$1.kind = kind;
    } else { break }
  }
  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});
  node.body = this.parseStatement(true);
  if (node.body.type == "ClassDeclaration" ||
      node.body.type == "VariableDeclaration" && node.body.kind != "var" ||
      node.body.type == "FunctionDeclaration" && (this.strict || node.body.generator))
    { this.raiseRecoverable(node.body.start, "Invalid labeled declaration"); }
  this.labels.pop();
  node.label = expr;
  return this.finishNode(node, "LabeledStatement")
};

pp$1.parseExpressionStatement = function(node, expr) {
  node.expression = expr;
  this.semicolon();
  return this.finishNode(node, "ExpressionStatement")
};

// Parse a semicolon-enclosed block of statements, handling `"use
// strict"` declarations when `allowStrict` is true (used for
// function bodies).

pp$1.parseBlock = function(createNewLexicalScope) {
  var this$1 = this;
  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;

  var node = this.startNode();
  node.body = [];
  this.expect(types.braceL);
  if (createNewLexicalScope) {
    this.enterLexicalScope();
  }
  while (!this.eat(types.braceR)) {
    var stmt = this$1.parseStatement(true);
    node.body.push(stmt);
  }
  if (createNewLexicalScope) {
    this.exitLexicalScope();
  }
  return this.finishNode(node, "BlockStatement")
};

// Parse a regular `for` loop. The disambiguation code in
// `parseStatement` will already have parsed the init statement or
// expression.

pp$1.parseFor = function(node, init) {
  node.init = init;
  this.expect(types.semi);
  node.test = this.type === types.semi ? null : this.parseExpression();
  this.expect(types.semi);
  node.update = this.type === types.parenR ? null : this.parseExpression();
  this.expect(types.parenR);
  this.exitLexicalScope();
  node.body = this.parseStatement(false);
  this.labels.pop();
  return this.finishNode(node, "ForStatement")
};

// Parse a `for`/`in` and `for`/`of` loop, which are almost
// same from parser's perspective.

pp$1.parseForIn = function(node, init) {
  var type = this.type === types._in ? "ForInStatement" : "ForOfStatement";
  this.next();
  if (type == "ForInStatement") {
    if (init.type === "AssignmentPattern" ||
      (init.type === "VariableDeclaration" && init.declarations[0].init != null &&
       (this.strict || init.declarations[0].id.type !== "Identifier")))
      { this.raise(init.start, "Invalid assignment in for-in loop head"); }
  }
  node.left = init;
  node.right = type == "ForInStatement" ? this.parseExpression() : this.parseMaybeAssign();
  this.expect(types.parenR);
  this.exitLexicalScope();
  node.body = this.parseStatement(false);
  this.labels.pop();
  return this.finishNode(node, type)
};

// Parse a list of variable declarations.

pp$1.parseVar = function(node, isFor, kind) {
  var this$1 = this;

  node.declarations = [];
  node.kind = kind;
  for (;;) {
    var decl = this$1.startNode();
    this$1.parseVarId(decl, kind);
    if (this$1.eat(types.eq)) {
      decl.init = this$1.parseMaybeAssign(isFor);
    } else if (kind === "const" && !(this$1.type === types._in || (this$1.options.ecmaVersion >= 6 && this$1.isContextual("of")))) {
      this$1.unexpected();
    } else if (decl.id.type != "Identifier" && !(isFor && (this$1.type === types._in || this$1.isContextual("of")))) {
      this$1.raise(this$1.lastTokEnd, "Complex binding patterns require an initialization value");
    } else {
      decl.init = null;
    }
    node.declarations.push(this$1.finishNode(decl, "VariableDeclarator"));
    if (!this$1.eat(types.comma)) { break }
  }
  return node
};

pp$1.parseVarId = function(decl, kind) {
  decl.id = this.parseBindingAtom(kind);
  this.checkLVal(decl.id, kind, false);
};

// Parse a function declaration or literal (depending on the
// `isStatement` parameter).

pp$1.parseFunction = function(node, isStatement, allowExpressionBody, isAsync) {
  this.initFunction(node);
  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync)
    { node.generator = this.eat(types.star); }
  if (this.options.ecmaVersion >= 8)
    { node.async = !!isAsync; }

  if (isStatement) {
    node.id = isStatement === "nullableID" && this.type != types.name ? null : this.parseIdent();
    if (node.id) {
      this.checkLVal(node.id, "var");
    }
  }

  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,
      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;
  this.inGenerator = node.generator;
  this.inAsync = node.async;
  this.yieldPos = 0;
  this.awaitPos = 0;
  this.inFunction = true;
  this.enterFunctionScope();

  if (!isStatement)
    { node.id = this.type == types.name ? this.parseIdent() : null; }

  this.parseFunctionParams(node);
  this.parseFunctionBody(node, allowExpressionBody);

  this.inGenerator = oldInGen;
  this.inAsync = oldInAsync;
  this.yieldPos = oldYieldPos;
  this.awaitPos = oldAwaitPos;
  this.inFunction = oldInFunc;
  return this.finishNode(node, isStatement ? "FunctionDeclaration" : "FunctionExpression")
};

pp$1.parseFunctionParams = function(node) {
  this.expect(types.parenL);
  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);
  this.checkYieldAwaitInDefaultParams();
};

// Parse a class declaration or literal (depending on the
// `isStatement` parameter).

pp$1.parseClass = function(node, isStatement) {
  var this$1 = this;

  this.next();

  this.parseClassId(node, isStatement);
  this.parseClassSuper(node);
  var classBody = this.startNode();
  var hadConstructor = false;
  classBody.body = [];
  this.expect(types.braceL);
  while (!this.eat(types.braceR)) {
    var member = this$1.parseClassMember(classBody);
    if (member && member.type === "MethodDefinition" && member.kind === "constructor") {
      if (hadConstructor) { this$1.raise(member.start, "Duplicate constructor in the same class"); }
      hadConstructor = true;
    }
  }
  node.body = this.finishNode(classBody, "ClassBody");
  return this.finishNode(node, isStatement ? "ClassDeclaration" : "ClassExpression")
};

pp$1.parseClassMember = function(classBody) {
  var this$1 = this;

  if (this.eat(types.semi)) { return null }

  var method = this.startNode();
  var tryContextual = function (k, noLineBreak) {
    if ( noLineBreak === void 0 ) noLineBreak = false;

    var start = this$1.start, startLoc = this$1.startLoc;
    if (!this$1.eatContextual(k)) { return false }
    if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }
    if (method.key) { this$1.unexpected(); }
    method.computed = false;
    method.key = this$1.startNodeAt(start, startLoc);
    method.key.name = k;
    this$1.finishNode(method.key, "Identifier");
    return false
  };

  method.kind = "method";
  method.static = tryContextual("static");
  var isGenerator = this.eat(types.star);
  var isAsync = false;
  if (!isGenerator) {
    if (this.options.ecmaVersion >= 8 && tryContextual("async", true)) {
      isAsync = true;
      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);
    } else if (tryContextual("get")) {
      method.kind = "get";
    } else if (tryContextual("set")) {
      method.kind = "set";
    }
  }
  if (!method.key) { this.parsePropertyName(method); }
  var key = method.key;
  if (!method.computed && !method.static && (key.type === "Identifier" && key.name === "constructor" ||
      key.type === "Literal" && key.value === "constructor")) {
    if (method.kind !== "method") { this.raise(key.start, "Constructor can't have get/set modifier"); }
    if (isGenerator) { this.raise(key.start, "Constructor can't be a generator"); }
    if (isAsync) { this.raise(key.start, "Constructor can't be an async method"); }
    method.kind = "constructor";
  } else if (method.static && key.type === "Identifier" && key.name === "prototype") {
    this.raise(key.start, "Classes may not have a static property named prototype");
  }
  this.parseClassMethod(classBody, method, isGenerator, isAsync);
  if (method.kind === "get" && method.value.params.length !== 0)
    { this.raiseRecoverable(method.value.start, "getter should have no params"); }
  if (method.kind === "set" && method.value.params.length !== 1)
    { this.raiseRecoverable(method.value.start, "setter should have exactly one param"); }
  if (method.kind === "set" && method.value.params[0].type === "RestElement")
    { this.raiseRecoverable(method.value.params[0].start, "Setter cannot use rest params"); }
  return method
};

pp$1.parseClassMethod = function(classBody, method, isGenerator, isAsync) {
  method.value = this.parseMethod(isGenerator, isAsync);
  classBody.body.push(this.finishNode(method, "MethodDefinition"));
};

pp$1.parseClassId = function(node, isStatement) {
  node.id = this.type === types.name ? this.parseIdent() : isStatement === true ? this.unexpected() : null;
};

pp$1.parseClassSuper = function(node) {
  node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;
};

// Parses module export declaration.

pp$1.parseExport = function(node, exports) {
  var this$1 = this;

  this.next();
  // export * from '...'
  if (this.eat(types.star)) {
    this.expectContextual("from");
    if (this.type !== types.string) { this.unexpected(); }
    node.source = this.parseExprAtom();
    this.semicolon();
    return this.finishNode(node, "ExportAllDeclaration")
  }
  if (this.eat(types._default)) { // export default ...
    this.checkExport(exports, "default", this.lastTokStart);
    var isAsync;
    if (this.type === types._function || (isAsync = this.isAsyncFunction())) {
      var fNode = this.startNode();
      this.next();
      if (isAsync) { this.next(); }
      node.declaration = this.parseFunction(fNode, "nullableID", false, isAsync);
    } else if (this.type === types._class) {
      var cNode = this.startNode();
      node.declaration = this.parseClass(cNode, "nullableID");
    } else {
      node.declaration = this.parseMaybeAssign();
      this.semicolon();
    }
    return this.finishNode(node, "ExportDefaultDeclaration")
  }
  // export var|const|let|function|class ...
  if (this.shouldParseExportStatement()) {
    node.declaration = this.parseStatement(true);
    if (node.declaration.type === "VariableDeclaration")
      { this.checkVariableExport(exports, node.declaration.declarations); }
    else
      { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }
    node.specifiers = [];
    node.source = null;
  } else { // export { x, y as z } [from '...']
    node.declaration = null;
    node.specifiers = this.parseExportSpecifiers(exports);
    if (this.eatContextual("from")) {
      if (this.type !== types.string) { this.unexpected(); }
      node.source = this.parseExprAtom();
    } else {
      // check for keywords used as local names
      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {
        var spec = list[i];

        this$1.checkUnreserved(spec.local);
      }

      node.source = null;
    }
    this.semicolon();
  }
  return this.finishNode(node, "ExportNamedDeclaration")
};

pp$1.checkExport = function(exports, name, pos) {
  if (!exports) { return }
  if (has(exports, name))
    { this.raiseRecoverable(pos, "Duplicate export '" + name + "'"); }
  exports[name] = true;
};

pp$1.checkPatternExport = function(exports, pat) {
  var this$1 = this;

  var type = pat.type;
  if (type == "Identifier")
    { this.checkExport(exports, pat.name, pat.start); }
  else if (type == "ObjectPattern")
    { for (var i = 0, list = pat.properties; i < list.length; i += 1)
      {
        var prop = list[i];

        this$1.checkPatternExport(exports, prop);
      } }
  else if (type == "ArrayPattern")
    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {
      var elt = list$1[i$1];

        if (elt) { this$1.checkPatternExport(exports, elt); }
    } }
  else if (type == "Property")
    { this.checkPatternExport(exports, pat.value); }
  else if (type == "AssignmentPattern")
    { this.checkPatternExport(exports, pat.left); }
  else if (type == "RestElement")
    { this.checkPatternExport(exports, pat.argument); }
  else if (type == "ParenthesizedExpression")
    { this.checkPatternExport(exports, pat.expression); }
};

pp$1.checkVariableExport = function(exports, decls) {
  var this$1 = this;

  if (!exports) { return }
  for (var i = 0, list = decls; i < list.length; i += 1)
    {
    var decl = list[i];

    this$1.checkPatternExport(exports, decl.id);
  }
};

pp$1.shouldParseExportStatement = function() {
  return this.type.keyword === "var" ||
    this.type.keyword === "const" ||
    this.type.keyword === "class" ||
    this.type.keyword === "function" ||
    this.isLet() ||
    this.isAsyncFunction()
};

// Parses a comma-separated list of module exports.

pp$1.parseExportSpecifiers = function(exports) {
  var this$1 = this;

  var nodes = [], first = true;
  // export { x, y as z } [from '...']
  this.expect(types.braceL);
  while (!this.eat(types.braceR)) {
    if (!first) {
      this$1.expect(types.comma);
      if (this$1.afterTrailingComma(types.braceR)) { break }
    } else { first = false; }

    var node = this$1.startNode();
    node.local = this$1.parseIdent(true);
    node.exported = this$1.eatContextual("as") ? this$1.parseIdent(true) : node.local;
    this$1.checkExport(exports, node.exported.name, node.exported.start);
    nodes.push(this$1.finishNode(node, "ExportSpecifier"));
  }
  return nodes
};

// Parses import declaration.

pp$1.parseImport = function(node) {
  this.next();
  // import '...'
  if (this.type === types.string) {
    node.specifiers = empty;
    node.source = this.parseExprAtom();
  } else {
    node.specifiers = this.parseImportSpecifiers();
    this.expectContextual("from");
    node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();
  }
  this.semicolon();
  return this.finishNode(node, "ImportDeclaration")
};

// Parses a comma-separated list of module imports.

pp$1.parseImportSpecifiers = function() {
  var this$1 = this;

  var nodes = [], first = true;
  if (this.type === types.name) {
    // import defaultObj, { x, y as z } from '...'
    var node = this.startNode();
    node.local = this.parseIdent();
    this.checkLVal(node.local, "let");
    nodes.push(this.finishNode(node, "ImportDefaultSpecifier"));
    if (!this.eat(types.comma)) { return nodes }
  }
  if (this.type === types.star) {
    var node$1 = this.startNode();
    this.next();
    this.expectContextual("as");
    node$1.local = this.parseIdent();
    this.checkLVal(node$1.local, "let");
    nodes.push(this.finishNode(node$1, "ImportNamespaceSpecifier"));
    return nodes
  }
  this.expect(types.braceL);
  while (!this.eat(types.braceR)) {
    if (!first) {
      this$1.expect(types.comma);
      if (this$1.afterTrailingComma(types.braceR)) { break }
    } else { first = false; }

    var node$2 = this$1.startNode();
    node$2.imported = this$1.parseIdent(true);
    if (this$1.eatContextual("as")) {
      node$2.local = this$1.parseIdent();
    } else {
      this$1.checkUnreserved(node$2.imported);
      node$2.local = node$2.imported;
    }
    this$1.checkLVal(node$2.local, "let");
    nodes.push(this$1.finishNode(node$2, "ImportSpecifier"));
  }
  return nodes
};

// Set `ExpressionStatement#directive` property for directive prologues.
pp$1.adaptDirectivePrologue = function(statements) {
  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {
    statements[i].directive = statements[i].expression.raw.slice(1, -1);
  }
};
pp$1.isDirectiveCandidate = function(statement) {
  return (
    statement.type === "ExpressionStatement" &&
    statement.expression.type === "Literal" &&
    typeof statement.expression.value === "string" &&
    // Reject parenthesized strings.
    (this.input[statement.start] === "\"" || this.input[statement.start] === "'")
  )
};

var pp$2 = Parser.prototype;

// Convert existing expression atom to assignable pattern
// if possible.

pp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {
  var this$1 = this;

  if (this.options.ecmaVersion >= 6 && node) {
    switch (node.type) {
    case "Identifier":
      if (this.inAsync && node.name === "await")
        { this.raise(node.start, "Can not use 'await' as identifier inside an async function"); }
      break

    case "ObjectPattern":
    case "ArrayPattern":
    case "RestElement":
      break

    case "ObjectExpression":
      node.type = "ObjectPattern";
      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }
      for (var i = 0, list = node.properties; i < list.length; i += 1) {
        var prop = list[i];

      this$1.toAssignable(prop, isBinding);
        // Early error:
        //   AssignmentRestProperty[Yield, Await] :
        //     `...` DestructuringAssignmentTarget[Yield, Await]
        //
        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.
        if (
          prop.type === "RestElement" &&
          (prop.argument.type === "ArrayPattern" || prop.argument.type === "ObjectPattern")
        ) {
          this$1.raise(prop.argument.start, "Unexpected token");
        }
      }
      break

    case "Property":
      // AssignmentProperty has type == "Property"
      if (node.kind !== "init") { this.raise(node.key.start, "Object pattern can't contain getter or setter"); }
      this.toAssignable(node.value, isBinding);
      break

    case "ArrayExpression":
      node.type = "ArrayPattern";
      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }
      this.toAssignableList(node.elements, isBinding);
      break

    case "SpreadElement":
      node.type = "RestElement";
      this.toAssignable(node.argument, isBinding);
      if (node.argument.type === "AssignmentPattern")
        { this.raise(node.argument.start, "Rest elements cannot have a default value"); }
      break

    case "AssignmentExpression":
      if (node.operator !== "=") { this.raise(node.left.end, "Only '=' operator can be used for specifying default value."); }
      node.type = "AssignmentPattern";
      delete node.operator;
      this.toAssignable(node.left, isBinding);
      // falls through to AssignmentPattern

    case "AssignmentPattern":
      break

    case "ParenthesizedExpression":
      this.toAssignable(node.expression, isBinding);
      break

    case "MemberExpression":
      if (!isBinding) { break }

    default:
      this.raise(node.start, "Assigning to rvalue");
    }
  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }
  return node
};

// Convert list of expression atoms to binding list.

pp$2.toAssignableList = function(exprList, isBinding) {
  var this$1 = this;

  var end = exprList.length;
  for (var i = 0; i < end; i++) {
    var elt = exprList[i];
    if (elt) { this$1.toAssignable(elt, isBinding); }
  }
  if (end) {
    var last = exprList[end - 1];
    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === "RestElement" && last.argument.type !== "Identifier")
      { this.unexpected(last.argument.start); }
  }
  return exprList
};

// Parses spread element.

pp$2.parseSpread = function(refDestructuringErrors) {
  var node = this.startNode();
  this.next();
  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);
  return this.finishNode(node, "SpreadElement")
};

pp$2.parseRestBinding = function() {
  var node = this.startNode();
  this.next();

  // RestElement inside of a function parameter must be an identifier
  if (this.options.ecmaVersion === 6 && this.type !== types.name)
    { this.unexpected(); }

  node.argument = this.parseBindingAtom();

  return this.finishNode(node, "RestElement")
};

// Parses lvalue (assignable) atom.

pp$2.parseBindingAtom = function() {
  if (this.options.ecmaVersion >= 6) {
    switch (this.type) {
    case types.bracketL:
      var node = this.startNode();
      this.next();
      node.elements = this.parseBindingList(types.bracketR, true, true);
      return this.finishNode(node, "ArrayPattern")

    case types.braceL:
      return this.parseObj(true)
    }
  }
  return this.parseIdent()
};

pp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {
  var this$1 = this;

  var elts = [], first = true;
  while (!this.eat(close)) {
    if (first) { first = false; }
    else { this$1.expect(types.comma); }
    if (allowEmpty && this$1.type === types.comma) {
      elts.push(null);
    } else if (allowTrailingComma && this$1.afterTrailingComma(close)) {
      break
    } else if (this$1.type === types.ellipsis) {
      var rest = this$1.parseRestBinding();
      this$1.parseBindingListItem(rest);
      elts.push(rest);
      if (this$1.type === types.comma) { this$1.raise(this$1.start, "Comma is not permitted after the rest element"); }
      this$1.expect(close);
      break
    } else {
      var elem = this$1.parseMaybeDefault(this$1.start, this$1.startLoc);
      this$1.parseBindingListItem(elem);
      elts.push(elem);
    }
  }
  return elts
};

pp$2.parseBindingListItem = function(param) {
  return param
};

// Parses assignment pattern around given atom if possible.

pp$2.parseMaybeDefault = function(startPos, startLoc, left) {
  left = left || this.parseBindingAtom();
  if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }
  var node = this.startNodeAt(startPos, startLoc);
  node.left = left;
  node.right = this.parseMaybeAssign();
  return this.finishNode(node, "AssignmentPattern")
};

// Verify that a node is an lval — something that can be assigned
// to.
// bindingType can be either:
// 'var' indicating that the lval creates a 'var' binding
// 'let' indicating that the lval creates a lexical ('let' or 'const') binding
// 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references

pp$2.checkLVal = function(expr, bindingType, checkClashes) {
  var this$1 = this;

  switch (expr.type) {
  case "Identifier":
    if (this.strict && this.reservedWordsStrictBind.test(expr.name))
      { this.raiseRecoverable(expr.start, (bindingType ? "Binding " : "Assigning to ") + expr.name + " in strict mode"); }
    if (checkClashes) {
      if (has(checkClashes, expr.name))
        { this.raiseRecoverable(expr.start, "Argument name clash"); }
      checkClashes[expr.name] = true;
    }
    if (bindingType && bindingType !== "none") {
      if (
        bindingType === "var" && !this.canDeclareVarName(expr.name) ||
        bindingType !== "var" && !this.canDeclareLexicalName(expr.name)
      ) {
        this.raiseRecoverable(expr.start, ("Identifier '" + (expr.name) + "' has already been declared"));
      }
      if (bindingType === "var") {
        this.declareVarName(expr.name);
      } else {
        this.declareLexicalName(expr.name);
      }
    }
    break

  case "MemberExpression":
    if (bindingType) { this.raiseRecoverable(expr.start, "Binding member expression"); }
    break

  case "ObjectPattern":
    for (var i = 0, list = expr.properties; i < list.length; i += 1)
      {
    var prop = list[i];

    this$1.checkLVal(prop, bindingType, checkClashes);
  }
    break

  case "Property":
    // AssignmentProperty has type == "Property"
    this.checkLVal(expr.value, bindingType, checkClashes);
    break

  case "ArrayPattern":
    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {
      var elem = list$1[i$1];

    if (elem) { this$1.checkLVal(elem, bindingType, checkClashes); }
    }
    break

  case "AssignmentPattern":
    this.checkLVal(expr.left, bindingType, checkClashes);
    break

  case "RestElement":
    this.checkLVal(expr.argument, bindingType, checkClashes);
    break

  case "ParenthesizedExpression":
    this.checkLVal(expr.expression, bindingType, checkClashes);
    break

  default:
    this.raise(expr.start, (bindingType ? "Binding" : "Assigning to") + " rvalue");
  }
};

// A recursive descent parser operates by defining functions for all
// syntactic elements, and recursively calling those, each function
// advancing the input stream and returning an AST node. Precedence
// of constructs (for example, the fact that `!x[1]` means `!(x[1])`
// instead of `(!x)[1]` is handled by the fact that the parser
// function that parses unary prefix operators is called first, and
// in turn calls the function that parses `[]` subscripts — that
// way, it'll receive the node for `x[1]` already parsed, and wraps
// *that* in the unary operator node.
//
// Acorn uses an [operator precedence parser][opp] to handle binary
// operator precedence, because it is much more compact than using
// the technique outlined above, which uses different, nesting
// functions to specify precedence, for all of the ten binary
// precedence levels that JavaScript defines.
//
// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser

var pp$3 = Parser.prototype;

// Check if property name clashes with already added.
// Object/class getters and setters are not allowed to clash —
// either with each other or with an init property — and in
// strict mode, init properties are also not allowed to be repeated.

pp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {
  if (this.options.ecmaVersion >= 9 && prop.type === "SpreadElement")
    { return }
  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))
    { return }
  var key = prop.key;
  var name;
  switch (key.type) {
  case "Identifier": name = key.name; break
  case "Literal": name = String(key.value); break
  default: return
  }
  var kind = prop.kind;
  if (this.options.ecmaVersion >= 6) {
    if (name === "__proto__" && kind === "init") {
      if (propHash.proto) {
        if (refDestructuringErrors && refDestructuringErrors.doubleProto < 0) { refDestructuringErrors.doubleProto = key.start; }
        // Backwards-compat kludge. Can be removed in version 6.0
        else { this.raiseRecoverable(key.start, "Redefinition of __proto__ property"); }
      }
      propHash.proto = true;
    }
    return
  }
  name = "$" + name;
  var other = propHash[name];
  if (other) {
    var redefinition;
    if (kind === "init") {
      redefinition = this.strict && other.init || other.get || other.set;
    } else {
      redefinition = other.init || other[kind];
    }
    if (redefinition)
      { this.raiseRecoverable(key.start, "Redefinition of property"); }
  } else {
    other = propHash[name] = {
      init: false,
      get: false,
      set: false
    };
  }
  other[kind] = true;
};

// ### Expression parsing

// These nest, from the most general expression type at the top to
// 'atomic', nondivisible expression types at the bottom. Most of
// the functions will simply let the function(s) below them parse,
// and, *if* the syntactic construct they handle is present, wrap
// the AST node that the inner parser gave them in another node.

// Parse a full expression. The optional arguments are used to
// forbid the `in` operator (in for loops initalization expressions)
// and provide reference for storing '=' operator inside shorthand
// property assignment in contexts where both object expression
// and object pattern might appear (so it's possible to raise
// delayed syntax error at correct position).

pp$3.parseExpression = function(noIn, refDestructuringErrors) {
  var this$1 = this;

  var startPos = this.start, startLoc = this.startLoc;
  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);
  if (this.type === types.comma) {
    var node = this.startNodeAt(startPos, startLoc);
    node.expressions = [expr];
    while (this.eat(types.comma)) { node.expressions.push(this$1.parseMaybeAssign(noIn, refDestructuringErrors)); }
    return this.finishNode(node, "SequenceExpression")
  }
  return expr
};

// Parse an assignment expression. This includes applications of
// operators like `+=`.

pp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {
  if (this.inGenerator && this.isContextual("yield")) { return this.parseYield() }

  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;
  if (refDestructuringErrors) {
    oldParenAssign = refDestructuringErrors.parenthesizedAssign;
    oldTrailingComma = refDestructuringErrors.trailingComma;
    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;
  } else {
    refDestructuringErrors = new DestructuringErrors;
    ownDestructuringErrors = true;
  }

  var startPos = this.start, startLoc = this.startLoc;
  if (this.type == types.parenL || this.type == types.name)
    { this.potentialArrowAt = this.start; }
  var left = this.parseMaybeConditional(noIn, refDestructuringErrors);
  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }
  if (this.type.isAssign) {
    var node = this.startNodeAt(startPos, startLoc);
    node.operator = this.value;
    node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;
    if (!ownDestructuringErrors) { DestructuringErrors.call(refDestructuringErrors); }
    refDestructuringErrors.shorthandAssign = -1; // reset because shorthand default was used correctly
    this.checkLVal(left);
    this.next();
    node.right = this.parseMaybeAssign(noIn);
    return this.finishNode(node, "AssignmentExpression")
  } else {
    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }
  }
  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }
  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }
  return left
};

// Parse a ternary conditional (`?:`) operator.

pp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {
  var startPos = this.start, startLoc = this.startLoc;
  var expr = this.parseExprOps(noIn, refDestructuringErrors);
  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }
  if (this.eat(types.question)) {
    var node = this.startNodeAt(startPos, startLoc);
    node.test = expr;
    node.consequent = this.parseMaybeAssign();
    this.expect(types.colon);
    node.alternate = this.parseMaybeAssign(noIn);
    return this.finishNode(node, "ConditionalExpression")
  }
  return expr
};

// Start the precedence parser.

pp$3.parseExprOps = function(noIn, refDestructuringErrors) {
  var startPos = this.start, startLoc = this.startLoc;
  var expr = this.parseMaybeUnary(refDestructuringErrors, false);
  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }
  return expr.start == startPos && expr.type === "ArrowFunctionExpression" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)
};

// Parse binary operators with the operator precedence parsing
// algorithm. `left` is the left-hand side of the operator.
// `minPrec` provides context that allows the function to stop and
// defer further parser to one of its callers when it encounters an
// operator that has a lower precedence than the set it is parsing.

pp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {
  var prec = this.type.binop;
  if (prec != null && (!noIn || this.type !== types._in)) {
    if (prec > minPrec) {
      var logical = this.type === types.logicalOR || this.type === types.logicalAND;
      var op = this.value;
      this.next();
      var startPos = this.start, startLoc = this.startLoc;
      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);
      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);
      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)
    }
  }
  return left
};

pp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {
  var node = this.startNodeAt(startPos, startLoc);
  node.left = left;
  node.operator = op;
  node.right = right;
  return this.finishNode(node, logical ? "LogicalExpression" : "BinaryExpression")
};

// Parse unary operators, both prefix and postfix.

pp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {
  var this$1 = this;

  var startPos = this.start, startLoc = this.startLoc, expr;
  if (this.isContextual("await") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {
    expr = this.parseAwait();
    sawUnary = true;
  } else if (this.type.prefix) {
    var node = this.startNode(), update = this.type === types.incDec;
    node.operator = this.value;
    node.prefix = true;
    this.next();
    node.argument = this.parseMaybeUnary(null, true);
    this.checkExpressionErrors(refDestructuringErrors, true);
    if (update) { this.checkLVal(node.argument); }
    else if (this.strict && node.operator === "delete" &&
             node.argument.type === "Identifier")
      { this.raiseRecoverable(node.start, "Deleting local variable in strict mode"); }
    else { sawUnary = true; }
    expr = this.finishNode(node, update ? "UpdateExpression" : "UnaryExpression");
  } else {
    expr = this.parseExprSubscripts(refDestructuringErrors);
    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }
    while (this.type.postfix && !this.canInsertSemicolon()) {
      var node$1 = this$1.startNodeAt(startPos, startLoc);
      node$1.operator = this$1.value;
      node$1.prefix = false;
      node$1.argument = expr;
      this$1.checkLVal(expr);
      this$1.next();
      expr = this$1.finishNode(node$1, "UpdateExpression");
    }
  }

  if (!sawUnary && this.eat(types.starstar))
    { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), "**", false) }
  else
    { return expr }
};

// Parse call, dot, and `[]`-subscript expressions.

pp$3.parseExprSubscripts = function(refDestructuringErrors) {
  var startPos = this.start, startLoc = this.startLoc;
  var expr = this.parseExprAtom(refDestructuringErrors);
  var skipArrowSubscripts = expr.type === "ArrowFunctionExpression" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== ")";
  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) { return expr }
  var result = this.parseSubscripts(expr, startPos, startLoc);
  if (refDestructuringErrors && result.type === "MemberExpression") {
    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }
    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }
  }
  return result
};

pp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {
  var this$1 = this;

  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === "Identifier" && base.name === "async" &&
      this.lastTokEnd == base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === "async";
  for (var computed = (void 0);;) {
    if ((computed = this$1.eat(types.bracketL)) || this$1.eat(types.dot)) {
      var node = this$1.startNodeAt(startPos, startLoc);
      node.object = base;
      node.property = computed ? this$1.parseExpression() : this$1.parseIdent(true);
      node.computed = !!computed;
      if (computed) { this$1.expect(types.bracketR); }
      base = this$1.finishNode(node, "MemberExpression");
    } else if (!noCalls && this$1.eat(types.parenL)) {
      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this$1.yieldPos, oldAwaitPos = this$1.awaitPos;
      this$1.yieldPos = 0;
      this$1.awaitPos = 0;
      var exprList = this$1.parseExprList(types.parenR, this$1.options.ecmaVersion >= 8, false, refDestructuringErrors);
      if (maybeAsyncArrow && !this$1.canInsertSemicolon() && this$1.eat(types.arrow)) {
        this$1.checkPatternErrors(refDestructuringErrors, false);
        this$1.checkYieldAwaitInDefaultParams();
        this$1.yieldPos = oldYieldPos;
        this$1.awaitPos = oldAwaitPos;
        return this$1.parseArrowExpression(this$1.startNodeAt(startPos, startLoc), exprList, true)
      }
      this$1.checkExpressionErrors(refDestructuringErrors, true);
      this$1.yieldPos = oldYieldPos || this$1.yieldPos;
      this$1.awaitPos = oldAwaitPos || this$1.awaitPos;
      var node$1 = this$1.startNodeAt(startPos, startLoc);
      node$1.callee = base;
      node$1.arguments = exprList;
      base = this$1.finishNode(node$1, "CallExpression");
    } else if (this$1.type === types.backQuote) {
      var node$2 = this$1.startNodeAt(startPos, startLoc);
      node$2.tag = base;
      node$2.quasi = this$1.parseTemplate({isTagged: true});
      base = this$1.finishNode(node$2, "TaggedTemplateExpression");
    } else {
      return base
    }
  }
};

// Parse an atomic expression — either a single token that is an
// expression, an expression started by a keyword like `function` or
// `new`, or an expression wrapped in punctuation like `()`, `[]`,
// or `{}`.

pp$3.parseExprAtom = function(refDestructuringErrors) {
  var node, canBeArrow = this.potentialArrowAt == this.start;
  switch (this.type) {
  case types._super:
    if (!this.inFunction)
      { this.raise(this.start, "'super' outside of function or class"); }
    node = this.startNode();
    this.next();
    // The `super` keyword can appear at below:
    // SuperProperty:
    //     super [ Expression ]
    //     super . IdentifierName
    // SuperCall:
    //     super Arguments
    if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)
      { this.unexpected(); }
    return this.finishNode(node, "Super")

  case types._this:
    node = this.startNode();
    this.next();
    return this.finishNode(node, "ThisExpression")

  case types.name:
    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;
    var id = this.parseIdent(this.type !== types.name);
    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === "async" && !this.canInsertSemicolon() && this.eat(types._function))
      { return this.parseFunction(this.startNodeAt(startPos, startLoc), false, false, true) }
    if (canBeArrow && !this.canInsertSemicolon()) {
      if (this.eat(types.arrow))
        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }
      if (this.options.ecmaVersion >= 8 && id.name === "async" && this.type === types.name && !containsEsc) {
        id = this.parseIdent();
        if (this.canInsertSemicolon() || !this.eat(types.arrow))
          { this.unexpected(); }
        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)
      }
    }
    return id

  case types.regexp:
    var value = this.value;
    node = this.parseLiteral(value.value);
    node.regex = {pattern: value.pattern, flags: value.flags};
    return node

  case types.num: case types.string:
    return this.parseLiteral(this.value)

  case types._null: case types._true: case types._false:
    node = this.startNode();
    node.value = this.type === types._null ? null : this.type === types._true;
    node.raw = this.type.keyword;
    this.next();
    return this.finishNode(node, "Literal")

  case types.parenL:
    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);
    if (refDestructuringErrors) {
      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))
        { refDestructuringErrors.parenthesizedAssign = start; }
      if (refDestructuringErrors.parenthesizedBind < 0)
        { refDestructuringErrors.parenthesizedBind = start; }
    }
    return expr

  case types.bracketL:
    node = this.startNode();
    this.next();
    node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);
    return this.finishNode(node, "ArrayExpression")

  case types.braceL:
    return this.parseObj(false, refDestructuringErrors)

  case types._function:
    node = this.startNode();
    this.next();
    return this.parseFunction(node, false)

  case types._class:
    return this.parseClass(this.startNode(), false)

  case types._new:
    return this.parseNew()

  case types.backQuote:
    return this.parseTemplate()

  default:
    this.unexpected();
  }
};

pp$3.parseLiteral = function(value) {
  var node = this.startNode();
  node.value = value;
  node.raw = this.input.slice(this.start, this.end);
  this.next();
  return this.finishNode(node, "Literal")
};

pp$3.parseParenExpression = function() {
  this.expect(types.parenL);
  var val = this.parseExpression();
  this.expect(types.parenR);
  return val
};

pp$3.parseParenAndDistinguishExpression = function(canBeArrow) {
  var this$1 = this;

  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;
  if (this.options.ecmaVersion >= 6) {
    this.next();

    var innerStartPos = this.start, innerStartLoc = this.startLoc;
    var exprList = [], first = true, lastIsComma = false;
    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;
    this.yieldPos = 0;
    this.awaitPos = 0;
    while (this.type !== types.parenR) {
      first ? first = false : this$1.expect(types.comma);
      if (allowTrailingComma && this$1.afterTrailingComma(types.parenR, true)) {
        lastIsComma = true;
        break
      } else if (this$1.type === types.ellipsis) {
        spreadStart = this$1.start;
        exprList.push(this$1.parseParenItem(this$1.parseRestBinding()));
        if (this$1.type === types.comma) { this$1.raise(this$1.start, "Comma is not permitted after the rest element"); }
        break
      } else {
        exprList.push(this$1.parseMaybeAssign(false, refDestructuringErrors, this$1.parseParenItem));
      }
    }
    var innerEndPos = this.start, innerEndLoc = this.startLoc;
    this.expect(types.parenR);

    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {
      this.checkPatternErrors(refDestructuringErrors, false);
      this.checkYieldAwaitInDefaultParams();
      this.yieldPos = oldYieldPos;
      this.awaitPos = oldAwaitPos;
      return this.parseParenArrowList(startPos, startLoc, exprList)
    }

    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }
    if (spreadStart) { this.unexpected(spreadStart); }
    this.checkExpressionErrors(refDestructuringErrors, true);
    this.yieldPos = oldYieldPos || this.yieldPos;
    this.awaitPos = oldAwaitPos || this.awaitPos;

    if (exprList.length > 1) {
      val = this.startNodeAt(innerStartPos, innerStartLoc);
      val.expressions = exprList;
      this.finishNodeAt(val, "SequenceExpression", innerEndPos, innerEndLoc);
    } else {
      val = exprList[0];
    }
  } else {
    val = this.parseParenExpression();
  }

  if (this.options.preserveParens) {
    var par = this.startNodeAt(startPos, startLoc);
    par.expression = val;
    return this.finishNode(par, "ParenthesizedExpression")
  } else {
    return val
  }
};

pp$3.parseParenItem = function(item) {
  return item
};

pp$3.parseParenArrowList = function(startPos, startLoc, exprList) {
  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)
};

// New's precedence is slightly tricky. It must allow its argument to
// be a `[]` or dot subscript expression, but not a call — at least,
// not without wrapping it in parentheses. Thus, it uses the noCalls
// argument to parseSubscripts to prevent it from consuming the
// argument list.

var empty$1 = [];

pp$3.parseNew = function() {
  var node = this.startNode();
  var meta = this.parseIdent(true);
  if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {
    node.meta = meta;
    var containsEsc = this.containsEsc;
    node.property = this.parseIdent(true);
    if (node.property.name !== "target" || containsEsc)
      { this.raiseRecoverable(node.property.start, "The only valid meta property for new is new.target"); }
    if (!this.inFunction)
      { this.raiseRecoverable(node.start, "new.target can only be used in functions"); }
    return this.finishNode(node, "MetaProperty")
  }
  var startPos = this.start, startLoc = this.startLoc;
  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);
  if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }
  else { node.arguments = empty$1; }
  return this.finishNode(node, "NewExpression")
};

// Parse template expression.

pp$3.parseTemplateElement = function(ref) {
  var isTagged = ref.isTagged;

  var elem = this.startNode();
  if (this.type === types.invalidTemplate) {
    if (!isTagged) {
      this.raiseRecoverable(this.start, "Bad escape sequence in untagged template literal");
    }
    elem.value = {
      raw: this.value,
      cooked: null
    };
  } else {
    elem.value = {
      raw: this.input.slice(this.start, this.end).replace(/\r\n?/g, "\n"),
      cooked: this.value
    };
  }
  this.next();
  elem.tail = this.type === types.backQuote;
  return this.finishNode(elem, "TemplateElement")
};

pp$3.parseTemplate = function(ref) {
  var this$1 = this;
  if ( ref === void 0 ) ref = {};
  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;

  var node = this.startNode();
  this.next();
  node.expressions = [];
  var curElt = this.parseTemplateElement({isTagged: isTagged});
  node.quasis = [curElt];
  while (!curElt.tail) {
    this$1.expect(types.dollarBraceL);
    node.expressions.push(this$1.parseExpression());
    this$1.expect(types.braceR);
    node.quasis.push(curElt = this$1.parseTemplateElement({isTagged: isTagged}));
  }
  this.next();
  return this.finishNode(node, "TemplateLiteral")
};

pp$3.isAsyncProp = function(prop) {
  return !prop.computed && prop.key.type === "Identifier" && prop.key.name === "async" &&
    (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&
    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))
};

// Parse an object literal or binding pattern.

pp$3.parseObj = function(isPattern, refDestructuringErrors) {
  var this$1 = this;

  var node = this.startNode(), first = true, propHash = {};
  node.properties = [];
  this.next();
  while (!this.eat(types.braceR)) {
    if (!first) {
      this$1.expect(types.comma);
      if (this$1.afterTrailingComma(types.braceR)) { break }
    } else { first = false; }

    var prop = this$1.parseProperty(isPattern, refDestructuringErrors);
    if (!isPattern) { this$1.checkPropClash(prop, propHash, refDestructuringErrors); }
    node.properties.push(prop);
  }
  return this.finishNode(node, isPattern ? "ObjectPattern" : "ObjectExpression")
};

pp$3.parseProperty = function(isPattern, refDestructuringErrors) {
  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;
  if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {
    if (isPattern) {
      prop.argument = this.parseIdent(false);
      if (this.type === types.comma) {
        this.raise(this.start, "Comma is not permitted after the rest element");
      }
      return this.finishNode(prop, "RestElement")
    }
    // To disallow parenthesized identifier via `this.toAssignable()`.
    if (this.type === types.parenL && refDestructuringErrors) {
      if (refDestructuringErrors.parenthesizedAssign < 0) {
        refDestructuringErrors.parenthesizedAssign = this.start;
      }
      if (refDestructuringErrors.parenthesizedBind < 0) {
        refDestructuringErrors.parenthesizedBind = this.start;
      }
    }
    // Parse argument.
    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);
    // To disallow trailing comma via `this.toAssignable()`.
    if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {
      refDestructuringErrors.trailingComma = this.start;
    }
    // Finish
    return this.finishNode(prop, "SpreadElement")
  }
  if (this.options.ecmaVersion >= 6) {
    prop.method = false;
    prop.shorthand = false;
    if (isPattern || refDestructuringErrors) {
      startPos = this.start;
      startLoc = this.startLoc;
    }
    if (!isPattern)
      { isGenerator = this.eat(types.star); }
  }
  var containsEsc = this.containsEsc;
  this.parsePropertyName(prop);
  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {
    isAsync = true;
    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);
    this.parsePropertyName(prop, refDestructuringErrors);
  } else {
    isAsync = false;
  }
  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);
  return this.finishNode(prop, "Property")
};

pp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {
  if ((isGenerator || isAsync) && this.type === types.colon)
    { this.unexpected(); }

  if (this.eat(types.colon)) {
    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);
    prop.kind = "init";
  } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {
    if (isPattern) { this.unexpected(); }
    prop.kind = "init";
    prop.method = true;
    prop.value = this.parseMethod(isGenerator, isAsync);
  } else if (!isPattern && !containsEsc &&
             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === "Identifier" &&
             (prop.key.name === "get" || prop.key.name === "set") &&
             (this.type != types.comma && this.type != types.braceR)) {
    if (isGenerator || isAsync) { this.unexpected(); }
    prop.kind = prop.key.name;
    this.parsePropertyName(prop);
    prop.value = this.parseMethod(false);
    var paramCount = prop.kind === "get" ? 0 : 1;
    if (prop.value.params.length !== paramCount) {
      var start = prop.value.start;
      if (prop.kind === "get")
        { this.raiseRecoverable(start, "getter should have no params"); }
      else
        { this.raiseRecoverable(start, "setter should have exactly one param"); }
    } else {
      if (prop.kind === "set" && prop.value.params[0].type === "RestElement")
        { this.raiseRecoverable(prop.value.params[0].start, "Setter cannot use rest params"); }
    }
  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === "Identifier") {
    this.checkUnreserved(prop.key);
    prop.kind = "init";
    if (isPattern) {
      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);
    } else if (this.type === types.eq && refDestructuringErrors) {
      if (refDestructuringErrors.shorthandAssign < 0)
        { refDestructuringErrors.shorthandAssign = this.start; }
      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);
    } else {
      prop.value = prop.key;
    }
    prop.shorthand = true;
  } else { this.unexpected(); }
};

pp$3.parsePropertyName = function(prop) {
  if (this.options.ecmaVersion >= 6) {
    if (this.eat(types.bracketL)) {
      prop.computed = true;
      prop.key = this.parseMaybeAssign();
      this.expect(types.bracketR);
      return prop.key
    } else {
      prop.computed = false;
    }
  }
  return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(true)
};

// Initialize empty function node.

pp$3.initFunction = function(node) {
  node.id = null;
  if (this.options.ecmaVersion >= 6) {
    node.generator = false;
    node.expression = false;
  }
  if (this.options.ecmaVersion >= 8)
    { node.async = false; }
};

// Parse object or class method.

pp$3.parseMethod = function(isGenerator, isAsync) {
  var node = this.startNode(), oldInGen = this.inGenerator, oldInAsync = this.inAsync,
      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;

  this.initFunction(node);
  if (this.options.ecmaVersion >= 6)
    { node.generator = isGenerator; }
  if (this.options.ecmaVersion >= 8)
    { node.async = !!isAsync; }

  this.inGenerator = node.generator;
  this.inAsync = node.async;
  this.yieldPos = 0;
  this.awaitPos = 0;
  this.inFunction = true;
  this.enterFunctionScope();

  this.expect(types.parenL);
  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);
  this.checkYieldAwaitInDefaultParams();
  this.parseFunctionBody(node, false);

  this.inGenerator = oldInGen;
  this.inAsync = oldInAsync;
  this.yieldPos = oldYieldPos;
  this.awaitPos = oldAwaitPos;
  this.inFunction = oldInFunc;
  return this.finishNode(node, "FunctionExpression")
};

// Parse arrow function expression with given parameters.

pp$3.parseArrowExpression = function(node, params, isAsync) {
  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,
      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;

  this.enterFunctionScope();
  this.initFunction(node);
  if (this.options.ecmaVersion >= 8)
    { node.async = !!isAsync; }

  this.inGenerator = false;
  this.inAsync = node.async;
  this.yieldPos = 0;
  this.awaitPos = 0;
  this.inFunction = true;

  node.params = this.toAssignableList(params, true);
  this.parseFunctionBody(node, true);

  this.inGenerator = oldInGen;
  this.inAsync = oldInAsync;
  this.yieldPos = oldYieldPos;
  this.awaitPos = oldAwaitPos;
  this.inFunction = oldInFunc;
  return this.finishNode(node, "ArrowFunctionExpression")
};

// Parse function body and check parameters.

pp$3.parseFunctionBody = function(node, isArrowFunction) {
  var isExpression = isArrowFunction && this.type !== types.braceL;
  var oldStrict = this.strict, useStrict = false;

  if (isExpression) {
    node.body = this.parseMaybeAssign();
    node.expression = true;
    this.checkParams(node, false);
  } else {
    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);
    if (!oldStrict || nonSimple) {
      useStrict = this.strictDirective(this.end);
      // If this is a strict mode function, verify that argument names
      // are not repeated, and it does not try to bind the words `eval`
      // or `arguments`.
      if (useStrict && nonSimple)
        { this.raiseRecoverable(node.start, "Illegal 'use strict' directive in function with non-simple parameter list"); }
    }
    // Start a new scope with regard to labels and the `inFunction`
    // flag (restore them to their old value afterwards).
    var oldLabels = this.labels;
    this.labels = [];
    if (useStrict) { this.strict = true; }

    // Add the params to varDeclaredNames to ensure that an error is thrown
    // if a let/const declaration in the function clashes with one of the params.
    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && this.isSimpleParamList(node.params));
    node.body = this.parseBlock(false);
    node.expression = false;
    this.adaptDirectivePrologue(node.body.body);
    this.labels = oldLabels;
  }
  this.exitFunctionScope();

  if (this.strict && node.id) {
    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'
    this.checkLVal(node.id, "none");
  }
  this.strict = oldStrict;
};

pp$3.isSimpleParamList = function(params) {
  for (var i = 0, list = params; i < list.length; i += 1)
    {
    var param = list[i];

    if (param.type !== "Identifier") { return false
  } }
  return true
};

// Checks function params for various disallowed patterns such as using "eval"
// or "arguments" and duplicate parameters.

pp$3.checkParams = function(node, allowDuplicates) {
  var this$1 = this;

  var nameHash = {};
  for (var i = 0, list = node.params; i < list.length; i += 1)
    {
    var param = list[i];

    this$1.checkLVal(param, "var", allowDuplicates ? null : nameHash);
  }
};

// Parses a comma-separated list of expressions, and returns them as
// an array. `close` is the token type that ends the list, and
// `allowEmpty` can be turned on to allow subsequent commas with
// nothing in between them to be parsed as `null` (which is needed
// for array literals).

pp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {
  var this$1 = this;

  var elts = [], first = true;
  while (!this.eat(close)) {
    if (!first) {
      this$1.expect(types.comma);
      if (allowTrailingComma && this$1.afterTrailingComma(close)) { break }
    } else { first = false; }

    var elt = (void 0);
    if (allowEmpty && this$1.type === types.comma)
      { elt = null; }
    else if (this$1.type === types.ellipsis) {
      elt = this$1.parseSpread(refDestructuringErrors);
      if (refDestructuringErrors && this$1.type === types.comma && refDestructuringErrors.trailingComma < 0)
        { refDestructuringErrors.trailingComma = this$1.start; }
    } else {
      elt = this$1.parseMaybeAssign(false, refDestructuringErrors);
    }
    elts.push(elt);
  }
  return elts
};

pp$3.checkUnreserved = function(ref) {
  var start = ref.start;
  var end = ref.end;
  var name = ref.name;

  if (this.inGenerator && name === "yield")
    { this.raiseRecoverable(start, "Can not use 'yield' as identifier inside a generator"); }
  if (this.inAsync && name === "await")
    { this.raiseRecoverable(start, "Can not use 'await' as identifier inside an async function"); }
  if (this.isKeyword(name))
    { this.raise(start, ("Unexpected keyword '" + name + "'")); }
  if (this.options.ecmaVersion < 6 &&
    this.input.slice(start, end).indexOf("\\") != -1) { return }
  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;
  if (re.test(name)) {
    if (!this.inAsync && name === "await")
      { this.raiseRecoverable(start, "Can not use keyword 'await' outside an async function"); }
    this.raiseRecoverable(start, ("The keyword '" + name + "' is reserved"));
  }
};

// Parse the next token as an identifier. If `liberal` is true (used
// when parsing properties), it will also convert keywords into
// identifiers.

pp$3.parseIdent = function(liberal, isBinding) {
  var node = this.startNode();
  if (liberal && this.options.allowReserved == "never") { liberal = false; }
  if (this.type === types.name) {
    node.name = this.value;
  } else if (this.type.keyword) {
    node.name = this.type.keyword;

    // To fix https://github.com/acornjs/acorn/issues/575
    // `class` and `function` keywords push new context into this.context.
    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.
    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword
    if ((node.name === "class" || node.name === "function") &&
        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {
      this.context.pop();
    }
  } else {
    this.unexpected();
  }
  this.next();
  this.finishNode(node, "Identifier");
  if (!liberal) { this.checkUnreserved(node); }
  return node
};

// Parses yield expression inside generator.

pp$3.parseYield = function() {
  if (!this.yieldPos) { this.yieldPos = this.start; }

  var node = this.startNode();
  this.next();
  if (this.type == types.semi || this.canInsertSemicolon() || (this.type != types.star && !this.type.startsExpr)) {
    node.delegate = false;
    node.argument = null;
  } else {
    node.delegate = this.eat(types.star);
    node.argument = this.parseMaybeAssign();
  }
  return this.finishNode(node, "YieldExpression")
};

pp$3.parseAwait = function() {
  if (!this.awaitPos) { this.awaitPos = this.start; }

  var node = this.startNode();
  this.next();
  node.argument = this.parseMaybeUnary(null, true);
  return this.finishNode(node, "AwaitExpression")
};

var pp$4 = Parser.prototype;

// This function is used to raise exceptions on parse errors. It
// takes an offset integer (into the current `input`) to indicate
// the location of the error, attaches the position to the end
// of the error message, and then raises a `SyntaxError` with that
// message.

pp$4.raise = function(pos, message) {
  var loc = getLineInfo(this.input, pos);
  message += " (" + loc.line + ":" + loc.column + ")";
  var err = new SyntaxError(message);
  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;
  throw err
};

pp$4.raiseRecoverable = pp$4.raise;

pp$4.curPosition = function() {
  if (this.options.locations) {
    return new Position(this.curLine, this.pos - this.lineStart)
  }
};

var pp$5 = Parser.prototype;

// Object.assign polyfill
var assign = Object.assign || function(target) {
  var sources = [], len = arguments.length - 1;
  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];

  for (var i = 0, list = sources; i < list.length; i += 1) {
    var source = list[i];

    for (var key in source) {
      if (has(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target
};

// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.

pp$5.enterFunctionScope = function() {
  // var: a hash of var-declared names in the current lexical scope
  // lexical: a hash of lexically-declared names in the current lexical scope
  // childVar: a hash of var-declared names in all child lexical scopes of the current lexical scope (within the current function scope)
  // parentLexical: a hash of lexically-declared names in all parent lexical scopes of the current lexical scope (within the current function scope)
  this.scopeStack.push({var: {}, lexical: {}, childVar: {}, parentLexical: {}});
};

pp$5.exitFunctionScope = function() {
  this.scopeStack.pop();
};

pp$5.enterLexicalScope = function() {
  var parentScope = this.scopeStack[this.scopeStack.length - 1];
  var childScope = {var: {}, lexical: {}, childVar: {}, parentLexical: {}};

  this.scopeStack.push(childScope);
  assign(childScope.parentLexical, parentScope.lexical, parentScope.parentLexical);
};

pp$5.exitLexicalScope = function() {
  var childScope = this.scopeStack.pop();
  var parentScope = this.scopeStack[this.scopeStack.length - 1];

  assign(parentScope.childVar, childScope.var, childScope.childVar);
};

/**
 * A name can be declared with `var` if there are no variables with the same name declared with `let`/`const`
 * in the current lexical scope or any of the parent lexical scopes in this function.
 */
pp$5.canDeclareVarName = function(name) {
  var currentScope = this.scopeStack[this.scopeStack.length - 1];

  return !has(currentScope.lexical, name) && !has(currentScope.parentLexical, name)
};

/**
 * A name can be declared with `let`/`const` if there are no variables with the same name declared with `let`/`const`
 * in the current scope, and there are no variables with the same name declared with `var` in the current scope or in
 * any child lexical scopes in this function.
 */
pp$5.canDeclareLexicalName = function(name) {
  var currentScope = this.scopeStack[this.scopeStack.length - 1];

  return !has(currentScope.lexical, name) && !has(currentScope.var, name) && !has(currentScope.childVar, name)
};

pp$5.declareVarName = function(name) {
  this.scopeStack[this.scopeStack.length - 1].var[name] = true;
};

pp$5.declareLexicalName = function(name) {
  this.scopeStack[this.scopeStack.length - 1].lexical[name] = true;
};

var Node = function Node(parser, pos, loc) {
  this.type = "";
  this.start = pos;
  this.end = 0;
  if (parser.options.locations)
    { this.loc = new SourceLocation(parser, loc); }
  if (parser.options.directSourceFile)
    { this.sourceFile = parser.options.directSourceFile; }
  if (parser.options.ranges)
    { this.range = [pos, 0]; }
};

// Start an AST node, attaching a start offset.

var pp$6 = Parser.prototype;

pp$6.startNode = function() {
  return new Node(this, this.start, this.startLoc)
};

pp$6.startNodeAt = function(pos, loc) {
  return new Node(this, pos, loc)
};

// Finish an AST node, adding `type` and `end` properties.

function finishNodeAt(node, type, pos, loc) {
  node.type = type;
  node.end = pos;
  if (this.options.locations)
    { node.loc.end = loc; }
  if (this.options.ranges)
    { node.range[1] = pos; }
  return node
}

pp$6.finishNode = function(node, type) {
  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)
};

// Finish node at given position

pp$6.finishNodeAt = function(node, type, pos, loc) {
  return finishNodeAt.call(this, node, type, pos, loc)
};

// The algorithm used to determine whether a regexp can appear at a
// given point in the program is loosely based on sweet.js' approach.
// See https://github.com/mozilla/sweet.js/wiki/design

var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {
  this.token = token;
  this.isExpr = !!isExpr;
  this.preserveSpace = !!preserveSpace;
  this.override = override;
  this.generator = !!generator;
};

var types$1 = {
  b_stat: new TokContext("{", false),
  b_expr: new TokContext("{", true),
  b_tmpl: new TokContext("${", false),
  p_stat: new TokContext("(", false),
  p_expr: new TokContext("(", true),
  q_tmpl: new TokContext("`", true, true, function (p) { return p.tryReadTemplateToken(); }),
  f_stat: new TokContext("function", false),
  f_expr: new TokContext("function", true),
  f_expr_gen: new TokContext("function", true, false, null, true),
  f_gen: new TokContext("function", false, false, null, true)
};

var pp$7 = Parser.prototype;

pp$7.initialContext = function() {
  return [types$1.b_stat]
};

pp$7.braceIsBlock = function(prevType) {
  var parent = this.curContext();
  if (parent === types$1.f_expr || parent === types$1.f_stat)
    { return true }
  if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))
    { return !parent.isExpr }

  // The check for `tt.name && exprAllowed` detects whether we are
  // after a `yield` or `of` construct. See the `updateContext` for
  // `tt.name`.
  if (prevType === types._return || prevType == types.name && this.exprAllowed)
    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }
  if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType == types.arrow)
    { return true }
  if (prevType == types.braceL)
    { return parent === types$1.b_stat }
  if (prevType == types._var || prevType == types.name)
    { return false }
  return !this.exprAllowed
};

pp$7.inGeneratorContext = function() {
  var this$1 = this;

  for (var i = this.context.length - 1; i >= 1; i--) {
    var context = this$1.context[i];
    if (context.token === "function")
      { return context.generator }
  }
  return false
};

pp$7.updateContext = function(prevType) {
  var update, type = this.type;
  if (type.keyword && prevType == types.dot)
    { this.exprAllowed = false; }
  else if (update = type.updateContext)
    { update.call(this, prevType); }
  else
    { this.exprAllowed = type.beforeExpr; }
};

// Token-specific context update code

types.parenR.updateContext = types.braceR.updateContext = function() {
  if (this.context.length == 1) {
    this.exprAllowed = true;
    return
  }
  var out = this.context.pop();
  if (out === types$1.b_stat && this.curContext().token === "function") {
    out = this.context.pop();
  }
  this.exprAllowed = !out.isExpr;
};

types.braceL.updateContext = function(prevType) {
  this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);
  this.exprAllowed = true;
};

types.dollarBraceL.updateContext = function() {
  this.context.push(types$1.b_tmpl);
  this.exprAllowed = true;
};

types.parenL.updateContext = function(prevType) {
  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;
  this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);
  this.exprAllowed = true;
};

types.incDec.updateContext = function() {
  // tokExprAllowed stays unchanged
};

types._function.updateContext = types._class.updateContext = function(prevType) {
  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&
      !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))
    { this.context.push(types$1.f_expr); }
  else
    { this.context.push(types$1.f_stat); }
  this.exprAllowed = false;
};

types.backQuote.updateContext = function() {
  if (this.curContext() === types$1.q_tmpl)
    { this.context.pop(); }
  else
    { this.context.push(types$1.q_tmpl); }
  this.exprAllowed = false;
};

types.star.updateContext = function(prevType) {
  if (prevType == types._function) {
    var index = this.context.length - 1;
    if (this.context[index] === types$1.f_expr)
      { this.context[index] = types$1.f_expr_gen; }
    else
      { this.context[index] = types$1.f_gen; }
  }
  this.exprAllowed = true;
};

types.name.updateContext = function(prevType) {
  var allowed = false;
  if (this.options.ecmaVersion >= 6) {
    if (this.value == "of" && !this.exprAllowed ||
        this.value == "yield" && this.inGeneratorContext())
      { allowed = true; }
  }
  this.exprAllowed = allowed;
};

var data = {
  "$LONE": [
    "ASCII",
    "ASCII_Hex_Digit",
    "AHex",
    "Alphabetic",
    "Alpha",
    "Any",
    "Assigned",
    "Bidi_Control",
    "Bidi_C",
    "Bidi_Mirrored",
    "Bidi_M",
    "Case_Ignorable",
    "CI",
    "Cased",
    "Changes_When_Casefolded",
    "CWCF",
    "Changes_When_Casemapped",
    "CWCM",
    "Changes_When_Lowercased",
    "CWL",
    "Changes_When_NFKC_Casefolded",
    "CWKCF",
    "Changes_When_Titlecased",
    "CWT",
    "Changes_When_Uppercased",
    "CWU",
    "Dash",
    "Default_Ignorable_Code_Point",
    "DI",
    "Deprecated",
    "Dep",
    "Diacritic",
    "Dia",
    "Emoji",
    "Emoji_Component",
    "Emoji_Modifier",
    "Emoji_Modifier_Base",
    "Emoji_Presentation",
    "Extender",
    "Ext",
    "Grapheme_Base",
    "Gr_Base",
    "Grapheme_Extend",
    "Gr_Ext",
    "Hex_Digit",
    "Hex",
    "IDS_Binary_Operator",
    "IDSB",
    "IDS_Trinary_Operator",
    "IDST",
    "ID_Continue",
    "IDC",
    "ID_Start",
    "IDS",
    "Ideographic",
    "Ideo",
    "Join_Control",
    "Join_C",
    "Logical_Order_Exception",
    "LOE",
    "Lowercase",
    "Lower",
    "Math",
    "Noncharacter_Code_Point",
    "NChar",
    "Pattern_Syntax",
    "Pat_Syn",
    "Pattern_White_Space",
    "Pat_WS",
    "Quotation_Mark",
    "QMark",
    "Radical",
    "Regional_Indicator",
    "RI",
    "Sentence_Terminal",
    "STerm",
    "Soft_Dotted",
    "SD",
    "Terminal_Punctuation",
    "Term",
    "Unified_Ideograph",
    "UIdeo",
    "Uppercase",
    "Upper",
    "Variation_Selector",
    "VS",
    "White_Space",
    "space",
    "XID_Continue",
    "XIDC",
    "XID_Start",
    "XIDS"
  ],
  "General_Category": [
    "Cased_Letter",
    "LC",
    "Close_Punctuation",
    "Pe",
    "Connector_Punctuation",
    "Pc",
    "Control",
    "Cc",
    "cntrl",
    "Currency_Symbol",
    "Sc",
    "Dash_Punctuation",
    "Pd",
    "Decimal_Number",
    "Nd",
    "digit",
    "Enclosing_Mark",
    "Me",
    "Final_Punctuation",
    "Pf",
    "Format",
    "Cf",
    "Initial_Punctuation",
    "Pi",
    "Letter",
    "L",
    "Letter_Number",
    "Nl",
    "Line_Separator",
    "Zl",
    "Lowercase_Letter",
    "Ll",
    "Mark",
    "M",
    "Combining_Mark",
    "Math_Symbol",
    "Sm",
    "Modifier_Letter",
    "Lm",
    "Modifier_Symbol",
    "Sk",
    "Nonspacing_Mark",
    "Mn",
    "Number",
    "N",
    "Open_Punctuation",
    "Ps",
    "Other",
    "C",
    "Other_Letter",
    "Lo",
    "Other_Number",
    "No",
    "Other_Punctuation",
    "Po",
    "Other_Symbol",
    "So",
    "Paragraph_Separator",
    "Zp",
    "Private_Use",
    "Co",
    "Punctuation",
    "P",
    "punct",
    "Separator",
    "Z",
    "Space_Separator",
    "Zs",
    "Spacing_Mark",
    "Mc",
    "Surrogate",
    "Cs",
    "Symbol",
    "S",
    "Titlecase_Letter",
    "Lt",
    "Unassigned",
    "Cn",
    "Uppercase_Letter",
    "Lu"
  ],
  "Script": [
    "Adlam",
    "Adlm",
    "Ahom",
    "Anatolian_Hieroglyphs",
    "Hluw",
    "Arabic",
    "Arab",
    "Armenian",
    "Armn",
    "Avestan",
    "Avst",
    "Balinese",
    "Bali",
    "Bamum",
    "Bamu",
    "Bassa_Vah",
    "Bass",
    "Batak",
    "Batk",
    "Bengali",
    "Beng",
    "Bhaiksuki",
    "Bhks",
    "Bopomofo",
    "Bopo",
    "Brahmi",
    "Brah",
    "Braille",
    "Brai",
    "Buginese",
    "Bugi",
    "Buhid",
    "Buhd",
    "Canadian_Aboriginal",
    "Cans",
    "Carian",
    "Cari",
    "Caucasian_Albanian",
    "Aghb",
    "Chakma",
    "Cakm",
    "Cham",
    "Cherokee",
    "Cher",
    "Common",
    "Zyyy",
    "Coptic",
    "Copt",
    "Qaac",
    "Cuneiform",
    "Xsux",
    "Cypriot",
    "Cprt",
    "Cyrillic",
    "Cyrl",
    "Deseret",
    "Dsrt",
    "Devanagari",
    "Deva",
    "Duployan",
    "Dupl",
    "Egyptian_Hieroglyphs",
    "Egyp",
    "Elbasan",
    "Elba",
    "Ethiopic",
    "Ethi",
    "Georgian",
    "Geor",
    "Glagolitic",
    "Glag",
    "Gothic",
    "Goth",
    "Grantha",
    "Gran",
    "Greek",
    "Grek",
    "Gujarati",
    "Gujr",
    "Gurmukhi",
    "Guru",
    "Han",
    "Hani",
    "Hangul",
    "Hang",
    "Hanunoo",
    "Hano",
    "Hatran",
    "Hatr",
    "Hebrew",
    "Hebr",
    "Hiragana",
    "Hira",
    "Imperial_Aramaic",
    "Armi",
    "Inherited",
    "Zinh",
    "Qaai",
    "Inscriptional_Pahlavi",
    "Phli",
    "Inscriptional_Parthian",
    "Prti",
    "Javanese",
    "Java",
    "Kaithi",
    "Kthi",
    "Kannada",
    "Knda",
    "Katakana",
    "Kana",
    "Kayah_Li",
    "Kali",
    "Kharoshthi",
    "Khar",
    "Khmer",
    "Khmr",
    "Khojki",
    "Khoj",
    "Khudawadi",
    "Sind",
    "Lao",
    "Laoo",
    "Latin",
    "Latn",
    "Lepcha",
    "Lepc",
    "Limbu",
    "Limb",
    "Linear_A",
    "Lina",
    "Linear_B",
    "Linb",
    "Lisu",
    "Lycian",
    "Lyci",
    "Lydian",
    "Lydi",
    "Mahajani",
    "Mahj",
    "Malayalam",
    "Mlym",
    "Mandaic",
    "Mand",
    "Manichaean",
    "Mani",
    "Marchen",
    "Marc",
    "Masaram_Gondi",
    "Gonm",
    "Meetei_Mayek",
    "Mtei",
    "Mende_Kikakui",
    "Mend",
    "Meroitic_Cursive",
    "Merc",
    "Meroitic_Hieroglyphs",
    "Mero",
    "Miao",
    "Plrd",
    "Modi",
    "Mongolian",
    "Mong",
    "Mro",
    "Mroo",
    "Multani",
    "Mult",
    "Myanmar",
    "Mymr",
    "Nabataean",
    "Nbat",
    "New_Tai_Lue",
    "Talu",
    "Newa",
    "Nko",
    "Nkoo",
    "Nushu",
    "Nshu",
    "Ogham",
    "Ogam",
    "Ol_Chiki",
    "Olck",
    "Old_Hungarian",
    "Hung",
    "Old_Italic",
    "Ital",
    "Old_North_Arabian",
    "Narb",
    "Old_Permic",
    "Perm",
    "Old_Persian",
    "Xpeo",
    "Old_South_Arabian",
    "Sarb",
    "Old_Turkic",
    "Orkh",
    "Oriya",
    "Orya",
    "Osage",
    "Osge",
    "Osmanya",
    "Osma",
    "Pahawh_Hmong",
    "Hmng",
    "Palmyrene",
    "Palm",
    "Pau_Cin_Hau",
    "Pauc",
    "Phags_Pa",
    "Phag",
    "Phoenician",
    "Phnx",
    "Psalter_Pahlavi",
    "Phlp",
    "Rejang",
    "Rjng",
    "Runic",
    "Runr",
    "Samaritan",
    "Samr",
    "Saurashtra",
    "Saur",
    "Sharada",
    "Shrd",
    "Shavian",
    "Shaw",
    "Siddham",
    "Sidd",
    "SignWriting",
    "Sgnw",
    "Sinhala",
    "Sinh",
    "Sora_Sompeng",
    "Sora",
    "Soyombo",
    "Soyo",
    "Sundanese",
    "Sund",
    "Syloti_Nagri",
    "Sylo",
    "Syriac",
    "Syrc",
    "Tagalog",
    "Tglg",
    "Tagbanwa",
    "Tagb",
    "Tai_Le",
    "Tale",
    "Tai_Tham",
    "Lana",
    "Tai_Viet",
    "Tavt",
    "Takri",
    "Takr",
    "Tamil",
    "Taml",
    "Tangut",
    "Tang",
    "Telugu",
    "Telu",
    "Thaana",
    "Thaa",
    "Thai",
    "Tibetan",
    "Tibt",
    "Tifinagh",
    "Tfng",
    "Tirhuta",
    "Tirh",
    "Ugaritic",
    "Ugar",
    "Vai",
    "Vaii",
    "Warang_Citi",
    "Wara",
    "Yi",
    "Yiii",
    "Zanabazar_Square",
    "Zanb"
  ]
};
Array.prototype.push.apply(data.$LONE, data.General_Category);
data.gc = data.General_Category;
data.sc = data.Script_Extensions = data.scx = data.Script;

var pp$9 = Parser.prototype;

var RegExpValidationState = function RegExpValidationState(parser) {
  this.parser = parser;
  this.validFlags = "gim" + (parser.options.ecmaVersion >= 6 ? "uy" : "") + (parser.options.ecmaVersion >= 9 ? "s" : "");
  this.source = "";
  this.flags = "";
  this.start = 0;
  this.switchU = false;
  this.switchN = false;
  this.pos = 0;
  this.lastIntValue = 0;
  this.lastStringValue = "";
  this.lastAssertionIsQuantifiable = false;
  this.numCapturingParens = 0;
  this.maxBackReference = 0;
  this.groupNames = [];
  this.backReferenceNames = [];
};

RegExpValidationState.prototype.reset = function reset (start, pattern, flags) {
  var unicode = flags.indexOf("u") !== -1;
  this.start = start | 0;
  this.source = pattern + "";
  this.flags = flags;
  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;
  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;
};

RegExpValidationState.prototype.raise = function raise (message) {
  this.parser.raiseRecoverable(this.start, ("Invalid regular expression: /" + (this.source) + "/: " + message));
};

// If u flag is given, this returns the code point at the index (it combines a surrogate pair).
// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).
RegExpValidationState.prototype.at = function at (i) {
  var s = this.source;
  var l = s.length;
  if (i >= l) {
    return -1
  }
  var c = s.charCodeAt(i);
  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {
    return c
  }
  return (c << 10) + s.charCodeAt(i + 1) - 0x35FDC00
};

RegExpValidationState.prototype.nextIndex = function nextIndex (i) {
  var s = this.source;
  var l = s.length;
  if (i >= l) {
    return l
  }
  var c = s.charCodeAt(i);
  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {
    return i + 1
  }
  return i + 2
};

RegExpValidationState.prototype.current = function current () {
  return this.at(this.pos)
};

RegExpValidationState.prototype.lookahead = function lookahead () {
  return this.at(this.nextIndex(this.pos))
};

RegExpValidationState.prototype.advance = function advance () {
  this.pos = this.nextIndex(this.pos);
};

RegExpValidationState.prototype.eat = function eat (ch) {
  if (this.current() === ch) {
    this.advance();
    return true
  }
  return false
};

function codePointToString$1(ch) {
  if (ch <= 0xFFFF) { return String.fromCharCode(ch) }
  ch -= 0x10000;
  return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)
}

/**
 * Validate the flags part of a given RegExpLiteral.
 *
 * @param {RegExpValidationState} state The state to validate RegExp.
 * @returns {void}
 */
pp$9.validateRegExpFlags = function(state) {
  var this$1 = this;

  var validFlags = state.validFlags;
  var flags = state.flags;

  for (var i = 0; i < flags.length; i++) {
    var flag = flags.charAt(i);
    if (validFlags.indexOf(flag) == -1) {
      this$1.raise(state.start, "Invalid regular expression flag");
    }
    if (flags.indexOf(flag, i + 1) > -1) {
      this$1.raise(state.start, "Duplicate regular expression flag");
    }
  }
};

/**
 * Validate the pattern part of a given RegExpLiteral.
 *
 * @param {RegExpValidationState} state The state to validate RegExp.
 * @returns {void}
 */
pp$9.validateRegExpPattern = function(state) {
  this.regexp_pattern(state);

  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of
  // parsing contains a |GroupName|, reparse with the goal symbol
  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*
  // exception if _P_ did not conform to the grammar, if any elements of _P_
  // were not matched by the parse, or if any Early Error conditions exist.
  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {
    state.switchN = true;
    this.regexp_pattern(state);
  }
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern
pp$9.regexp_pattern = function(state) {
  state.pos = 0;
  state.lastIntValue = 0;
  state.lastStringValue = "";
  state.lastAssertionIsQuantifiable = false;
  state.numCapturingParens = 0;
  state.maxBackReference = 0;
  state.groupNames.length = 0;
  state.backReferenceNames.length = 0;

  this.regexp_disjunction(state);

  if (state.pos !== state.source.length) {
    // Make the same messages as V8.
    if (state.eat(0x29 /* ) */)) {
      state.raise("Unmatched ')'");
    }
    if (state.eat(0x5D /* [ */) || state.eat(0x7D /* } */)) {
      state.raise("Lone quantifier brackets");
    }
  }
  if (state.maxBackReference > state.numCapturingParens) {
    state.raise("Invalid escape");
  }
  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {
    var name = list[i];

    if (state.groupNames.indexOf(name) === -1) {
      state.raise("Invalid named capture referenced");
    }
  }
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction
pp$9.regexp_disjunction = function(state) {
  var this$1 = this;

  this.regexp_alternative(state);
  while (state.eat(0x7C /* | */)) {
    this$1.regexp_alternative(state);
  }

  // Make the same message as V8.
  if (this.regexp_eatQuantifier(state, true)) {
    state.raise("Nothing to repeat");
  }
  if (state.eat(0x7B /* { */)) {
    state.raise("Lone quantifier brackets");
  }
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative
pp$9.regexp_alternative = function(state) {
  while (state.pos < state.source.length && this.regexp_eatTerm(state))
    {  }
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term
pp$9.regexp_eatTerm = function(state) {
  if (this.regexp_eatAssertion(state)) {
    // Handle `QuantifiableAssertion Quantifier` alternative.
    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion
    // is a QuantifiableAssertion.
    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {
      // Make the same message as V8.
      if (state.switchU) {
        state.raise("Invalid quantifier");
      }
    }
    return true
  }

  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {
    this.regexp_eatQuantifier(state);
    return true
  }

  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion
pp$9.regexp_eatAssertion = function(state) {
  var start = state.pos;
  state.lastAssertionIsQuantifiable = false;

  // ^, $
  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {
    return true
  }

  // \b \B
  if (state.eat(0x5C /* \ */)) {
    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {
      return true
    }
    state.pos = start;
  }

  // Lookahead / Lookbehind
  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {
    var lookbehind = false;
    if (this.options.ecmaVersion >= 9) {
      lookbehind = state.eat(0x3C /* < */);
    }
    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {
      this.regexp_disjunction(state);
      if (!state.eat(0x29 /* ) */)) {
        state.raise("Unterminated group");
      }
      state.lastAssertionIsQuantifiable = !lookbehind;
      return true
    }
  }

  state.pos = start;
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier
pp$9.regexp_eatQuantifier = function(state, noError) {
  if ( noError === void 0 ) noError = false;

  if (this.regexp_eatQuantifierPrefix(state, noError)) {
    state.eat(0x3F /* ? */);
    return true
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix
pp$9.regexp_eatQuantifierPrefix = function(state, noError) {
  return (
    state.eat(0x2A /* * */) ||
    state.eat(0x2B /* + */) ||
    state.eat(0x3F /* ? */) ||
    this.regexp_eatBracedQuantifier(state, noError)
  )
};
pp$9.regexp_eatBracedQuantifier = function(state, noError) {
  var start = state.pos;
  if (state.eat(0x7B /* { */)) {
    var min = 0, max = -1;
    if (this.regexp_eatDecimalDigits(state)) {
      min = state.lastIntValue;
      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {
        max = state.lastIntValue;
      }
      if (state.eat(0x7D /* } */)) {
        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term
        if (max !== -1 && max < min && !noError) {
          state.raise("numbers out of order in {} quantifier");
        }
        return true
      }
    }
    if (state.switchU && !noError) {
      state.raise("Incomplete quantifier");
    }
    state.pos = start;
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom
pp$9.regexp_eatAtom = function(state) {
  return (
    this.regexp_eatPatternCharacters(state) ||
    state.eat(0x2E /* . */) ||
    this.regexp_eatReverseSolidusAtomEscape(state) ||
    this.regexp_eatCharacterClass(state) ||
    this.regexp_eatUncapturingGroup(state) ||
    this.regexp_eatCapturingGroup(state)
  )
};
pp$9.regexp_eatReverseSolidusAtomEscape = function(state) {
  var start = state.pos;
  if (state.eat(0x5C /* \ */)) {
    if (this.regexp_eatAtomEscape(state)) {
      return true
    }
    state.pos = start;
  }
  return false
};
pp$9.regexp_eatUncapturingGroup = function(state) {
  var start = state.pos;
  if (state.eat(0x28 /* ( */)) {
    if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {
      this.regexp_disjunction(state);
      if (state.eat(0x29 /* ) */)) {
        return true
      }
      state.raise("Unterminated group");
    }
    state.pos = start;
  }
  return false
};
pp$9.regexp_eatCapturingGroup = function(state) {
  if (state.eat(0x28 /* ( */)) {
    if (this.options.ecmaVersion >= 9) {
      this.regexp_groupSpecifier(state);
    } else if (state.current() === 0x3F /* ? */) {
      state.raise("Invalid group");
    }
    this.regexp_disjunction(state);
    if (state.eat(0x29 /* ) */)) {
      state.numCapturingParens += 1;
      return true
    }
    state.raise("Unterminated group");
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom
pp$9.regexp_eatExtendedAtom = function(state) {
  return (
    state.eat(0x2E /* . */) ||
    this.regexp_eatReverseSolidusAtomEscape(state) ||
    this.regexp_eatCharacterClass(state) ||
    this.regexp_eatUncapturingGroup(state) ||
    this.regexp_eatCapturingGroup(state) ||
    this.regexp_eatInvalidBracedQuantifier(state) ||
    this.regexp_eatExtendedPatternCharacter(state)
  )
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier
pp$9.regexp_eatInvalidBracedQuantifier = function(state) {
  if (this.regexp_eatBracedQuantifier(state, true)) {
    state.raise("Nothing to repeat");
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter
pp$9.regexp_eatSyntaxCharacter = function(state) {
  var ch = state.current();
  if (isSyntaxCharacter(ch)) {
    state.lastIntValue = ch;
    state.advance();
    return true
  }
  return false
};
function isSyntaxCharacter(ch) {
  return (
    ch === 0x24 /* $ */ ||
    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||
    ch === 0x2E /* . */ ||
    ch === 0x3F /* ? */ ||
    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||
    ch >= 0x7B /* { */ && ch <= 0x7D /* } */
  )
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter
// But eat eager.
pp$9.regexp_eatPatternCharacters = function(state) {
  var start = state.pos;
  var ch = 0;
  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {
    state.advance();
  }
  return state.pos !== start
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter
pp$9.regexp_eatExtendedPatternCharacter = function(state) {
  var ch = state.current();
  if (
    ch !== -1 &&
    ch !== 0x24 /* $ */ &&
    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&
    ch !== 0x2E /* . */ &&
    ch !== 0x3F /* ? */ &&
    ch !== 0x5B /* [ */ &&
    ch !== 0x5E /* ^ */ &&
    ch !== 0x7C /* | */
  ) {
    state.advance();
    return true
  }
  return false
};

// GroupSpecifier[U] ::
//   [empty]
//   `?` GroupName[?U]
pp$9.regexp_groupSpecifier = function(state) {
  if (state.eat(0x3F /* ? */)) {
    if (this.regexp_eatGroupName(state)) {
      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {
        state.raise("Duplicate capture group name");
      }
      state.groupNames.push(state.lastStringValue);
      return
    }
    state.raise("Invalid group");
  }
};

// GroupName[U] ::
//   `<` RegExpIdentifierName[?U] `>`
// Note: this updates `state.lastStringValue` property with the eaten name.
pp$9.regexp_eatGroupName = function(state) {
  state.lastStringValue = "";
  if (state.eat(0x3C /* < */)) {
    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {
      return true
    }
    state.raise("Invalid capture group name");
  }
  return false
};

// RegExpIdentifierName[U] ::
//   RegExpIdentifierStart[?U]
//   RegExpIdentifierName[?U] RegExpIdentifierPart[?U]
// Note: this updates `state.lastStringValue` property with the eaten name.
pp$9.regexp_eatRegExpIdentifierName = function(state) {
  state.lastStringValue = "";
  if (this.regexp_eatRegExpIdentifierStart(state)) {
    state.lastStringValue += codePointToString$1(state.lastIntValue);
    while (this.regexp_eatRegExpIdentifierPart(state)) {
      state.lastStringValue += codePointToString$1(state.lastIntValue);
    }
    return true
  }
  return false
};

// RegExpIdentifierStart[U] ::
//   UnicodeIDStart
//   `$`
//   `_`
//   `\` RegExpUnicodeEscapeSequence[?U]
pp$9.regexp_eatRegExpIdentifierStart = function(state) {
  var start = state.pos;
  var ch = state.current();
  state.advance();

  if (ch === 0x5C /* \ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {
    ch = state.lastIntValue;
  }
  if (isRegExpIdentifierStart(ch)) {
    state.lastIntValue = ch;
    return true
  }

  state.pos = start;
  return false
};
function isRegExpIdentifierStart(ch) {
  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */
}

// RegExpIdentifierPart[U] ::
//   UnicodeIDContinue
//   `$`
//   `_`
//   `\` RegExpUnicodeEscapeSequence[?U]
//   <ZWNJ>
//   <ZWJ>
pp$9.regexp_eatRegExpIdentifierPart = function(state) {
  var start = state.pos;
  var ch = state.current();
  state.advance();

  if (ch === 0x5C /* \ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {
    ch = state.lastIntValue;
  }
  if (isRegExpIdentifierPart(ch)) {
    state.lastIntValue = ch;
    return true
  }

  state.pos = start;
  return false
};
function isRegExpIdentifierPart(ch) {
  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape
pp$9.regexp_eatAtomEscape = function(state) {
  if (
    this.regexp_eatBackReference(state) ||
    this.regexp_eatCharacterClassEscape(state) ||
    this.regexp_eatCharacterEscape(state) ||
    (state.switchN && this.regexp_eatKGroupName(state))
  ) {
    return true
  }
  if (state.switchU) {
    // Make the same message as V8.
    if (state.current() === 0x63 /* c */) {
      state.raise("Invalid unicode escape");
    }
    state.raise("Invalid escape");
  }
  return false
};
pp$9.regexp_eatBackReference = function(state) {
  var start = state.pos;
  if (this.regexp_eatDecimalEscape(state)) {
    var n = state.lastIntValue;
    if (state.switchU) {
      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape
      if (n > state.maxBackReference) {
        state.maxBackReference = n;
      }
      return true
    }
    if (n <= state.numCapturingParens) {
      return true
    }
    state.pos = start;
  }
  return false
};
pp$9.regexp_eatKGroupName = function(state) {
  if (state.eat(0x6B /* k */)) {
    if (this.regexp_eatGroupName(state)) {
      state.backReferenceNames.push(state.lastStringValue);
      return true
    }
    state.raise("Invalid named reference");
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape
pp$9.regexp_eatCharacterEscape = function(state) {
  return (
    this.regexp_eatControlEscape(state) ||
    this.regexp_eatCControlLetter(state) ||
    this.regexp_eatZero(state) ||
    this.regexp_eatHexEscapeSequence(state) ||
    this.regexp_eatRegExpUnicodeEscapeSequence(state) ||
    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||
    this.regexp_eatIdentityEscape(state)
  )
};
pp$9.regexp_eatCControlLetter = function(state) {
  var start = state.pos;
  if (state.eat(0x63 /* c */)) {
    if (this.regexp_eatControlLetter(state)) {
      return true
    }
    state.pos = start;
  }
  return false
};
pp$9.regexp_eatZero = function(state) {
  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {
    state.lastIntValue = 0;
    state.advance();
    return true
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape
pp$9.regexp_eatControlEscape = function(state) {
  var ch = state.current();
  if (ch === 0x74 /* t */) {
    state.lastIntValue = 0x09; /* \t */
    state.advance();
    return true
  }
  if (ch === 0x6E /* n */) {
    state.lastIntValue = 0x0A; /* \n */
    state.advance();
    return true
  }
  if (ch === 0x76 /* v */) {
    state.lastIntValue = 0x0B; /* \v */
    state.advance();
    return true
  }
  if (ch === 0x66 /* f */) {
    state.lastIntValue = 0x0C; /* \f */
    state.advance();
    return true
  }
  if (ch === 0x72 /* r */) {
    state.lastIntValue = 0x0D; /* \r */
    state.advance();
    return true
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter
pp$9.regexp_eatControlLetter = function(state) {
  var ch = state.current();
  if (isControlLetter(ch)) {
    state.lastIntValue = ch % 0x20;
    state.advance();
    return true
  }
  return false
};
function isControlLetter(ch) {
  return (
    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||
    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)
  )
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence
pp$9.regexp_eatRegExpUnicodeEscapeSequence = function(state) {
  var start = state.pos;

  if (state.eat(0x75 /* u */)) {
    if (this.regexp_eatFixedHexDigits(state, 4)) {
      var lead = state.lastIntValue;
      if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {
        var leadSurrogateEnd = state.pos;
        if (state.eat(0x5C /* \ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {
          var trail = state.lastIntValue;
          if (trail >= 0xDC00 && trail <= 0xDFFF) {
            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;
            return true
          }
        }
        state.pos = leadSurrogateEnd;
        state.lastIntValue = lead;
      }
      return true
    }
    if (
      state.switchU &&
      state.eat(0x7B /* { */) &&
      this.regexp_eatHexDigits(state) &&
      state.eat(0x7D /* } */) &&
      isValidUnicode(state.lastIntValue)
    ) {
      return true
    }
    if (state.switchU) {
      state.raise("Invalid unicode escape");
    }
    state.pos = start;
  }

  return false
};
function isValidUnicode(ch) {
  return ch >= 0 && ch <= 0x10FFFF
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape
pp$9.regexp_eatIdentityEscape = function(state) {
  if (state.switchU) {
    if (this.regexp_eatSyntaxCharacter(state)) {
      return true
    }
    if (state.eat(0x2F /* / */)) {
      state.lastIntValue = 0x2F; /* / */
      return true
    }
    return false
  }

  var ch = state.current();
  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {
    state.lastIntValue = ch;
    state.advance();
    return true
  }

  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape
pp$9.regexp_eatDecimalEscape = function(state) {
  state.lastIntValue = 0;
  var ch = state.current();
  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {
    do {
      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);
      state.advance();
    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)
    return true
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape
pp$9.regexp_eatCharacterClassEscape = function(state) {
  var ch = state.current();

  if (isCharacterClassEscape(ch)) {
    state.lastIntValue = -1;
    state.advance();
    return true
  }

  if (
    state.switchU &&
    this.options.ecmaVersion >= 9 &&
    (ch === 0x50 /* P */ || ch === 0x70 /* p */)
  ) {
    state.lastIntValue = -1;
    state.advance();
    if (
      state.eat(0x7B /* { */) &&
      this.regexp_eatUnicodePropertyValueExpression(state) &&
      state.eat(0x7D /* } */)
    ) {
      return true
    }
    state.raise("Invalid property name");
  }

  return false
};
function isCharacterClassEscape(ch) {
  return (
    ch === 0x64 /* d */ ||
    ch === 0x44 /* D */ ||
    ch === 0x73 /* s */ ||
    ch === 0x53 /* S */ ||
    ch === 0x77 /* w */ ||
    ch === 0x57 /* W */
  )
}

// UnicodePropertyValueExpression ::
//   UnicodePropertyName `=` UnicodePropertyValue
//   LoneUnicodePropertyNameOrValue
pp$9.regexp_eatUnicodePropertyValueExpression = function(state) {
  var start = state.pos;

  // UnicodePropertyName `=` UnicodePropertyValue
  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {
    var name = state.lastStringValue;
    if (this.regexp_eatUnicodePropertyValue(state)) {
      var value = state.lastStringValue;
      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);
      return true
    }
  }
  state.pos = start;

  // LoneUnicodePropertyNameOrValue
  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {
    var nameOrValue = state.lastStringValue;
    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);
    return true
  }
  return false
};
pp$9.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {
  if (!data.hasOwnProperty(name) || data[name].indexOf(value) === -1) {
    state.raise("Invalid property name");
  }
};
pp$9.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {
  if (data.$LONE.indexOf(nameOrValue) === -1) {
    state.raise("Invalid property name");
  }
};

// UnicodePropertyName ::
//   UnicodePropertyNameCharacters
pp$9.regexp_eatUnicodePropertyName = function(state) {
  var ch = 0;
  state.lastStringValue = "";
  while (isUnicodePropertyNameCharacter(ch = state.current())) {
    state.lastStringValue += codePointToString$1(ch);
    state.advance();
  }
  return state.lastStringValue !== ""
};
function isUnicodePropertyNameCharacter(ch) {
  return isControlLetter(ch) || ch === 0x5F /* _ */
}

// UnicodePropertyValue ::
//   UnicodePropertyValueCharacters
pp$9.regexp_eatUnicodePropertyValue = function(state) {
  var ch = 0;
  state.lastStringValue = "";
  while (isUnicodePropertyValueCharacter(ch = state.current())) {
    state.lastStringValue += codePointToString$1(ch);
    state.advance();
  }
  return state.lastStringValue !== ""
};
function isUnicodePropertyValueCharacter(ch) {
  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)
}

// LoneUnicodePropertyNameOrValue ::
//   UnicodePropertyValueCharacters
pp$9.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {
  return this.regexp_eatUnicodePropertyValue(state)
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass
pp$9.regexp_eatCharacterClass = function(state) {
  if (state.eat(0x5B /* [ */)) {
    state.eat(0x5E /* ^ */);
    this.regexp_classRanges(state);
    if (state.eat(0x5D /* [ */)) {
      return true
    }
    // Unreachable since it threw "unterminated regular expression" error before.
    state.raise("Unterminated character class");
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges
// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges
// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash
pp$9.regexp_classRanges = function(state) {
  var this$1 = this;

  while (this.regexp_eatClassAtom(state)) {
    var left = state.lastIntValue;
    if (state.eat(0x2D /* - */) && this$1.regexp_eatClassAtom(state)) {
      var right = state.lastIntValue;
      if (state.switchU && (left === -1 || right === -1)) {
        state.raise("Invalid character class");
      }
      if (left !== -1 && right !== -1 && left > right) {
        state.raise("Range out of order in character class");
      }
    }
  }
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom
// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash
pp$9.regexp_eatClassAtom = function(state) {
  var start = state.pos;

  if (state.eat(0x5C /* \ */)) {
    if (this.regexp_eatClassEscape(state)) {
      return true
    }
    if (state.switchU) {
      // Make the same message as V8.
      var ch$1 = state.current();
      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {
        state.raise("Invalid class escape");
      }
      state.raise("Invalid escape");
    }
    state.pos = start;
  }

  var ch = state.current();
  if (ch !== 0x5D /* [ */) {
    state.lastIntValue = ch;
    state.advance();
    return true
  }

  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape
pp$9.regexp_eatClassEscape = function(state) {
  var start = state.pos;

  if (state.eat(0x62 /* b */)) {
    state.lastIntValue = 0x08; /* <BS> */
    return true
  }

  if (state.switchU && state.eat(0x2D /* - */)) {
    state.lastIntValue = 0x2D; /* - */
    return true
  }

  if (!state.switchU && state.eat(0x63 /* c */)) {
    if (this.regexp_eatClassControlLetter(state)) {
      return true
    }
    state.pos = start;
  }

  return (
    this.regexp_eatCharacterClassEscape(state) ||
    this.regexp_eatCharacterEscape(state)
  )
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter
pp$9.regexp_eatClassControlLetter = function(state) {
  var ch = state.current();
  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {
    state.lastIntValue = ch % 0x20;
    state.advance();
    return true
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence
pp$9.regexp_eatHexEscapeSequence = function(state) {
  var start = state.pos;
  if (state.eat(0x78 /* x */)) {
    if (this.regexp_eatFixedHexDigits(state, 2)) {
      return true
    }
    if (state.switchU) {
      state.raise("Invalid escape");
    }
    state.pos = start;
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits
pp$9.regexp_eatDecimalDigits = function(state) {
  var start = state.pos;
  var ch = 0;
  state.lastIntValue = 0;
  while (isDecimalDigit(ch = state.current())) {
    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);
    state.advance();
  }
  return state.pos !== start
};
function isDecimalDigit(ch) {
  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits
pp$9.regexp_eatHexDigits = function(state) {
  var start = state.pos;
  var ch = 0;
  state.lastIntValue = 0;
  while (isHexDigit(ch = state.current())) {
    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);
    state.advance();
  }
  return state.pos !== start
};
function isHexDigit(ch) {
  return (
    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||
    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||
    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)
  )
}
function hexToInt(ch) {
  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {
    return 10 + (ch - 0x41 /* A */)
  }
  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {
    return 10 + (ch - 0x61 /* a */)
  }
  return ch - 0x30 /* 0 */
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence
// Allows only 0-377(octal) i.e. 0-255(decimal).
pp$9.regexp_eatLegacyOctalEscapeSequence = function(state) {
  if (this.regexp_eatOctalDigit(state)) {
    var n1 = state.lastIntValue;
    if (this.regexp_eatOctalDigit(state)) {
      var n2 = state.lastIntValue;
      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {
        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;
      } else {
        state.lastIntValue = n1 * 8 + n2;
      }
    } else {
      state.lastIntValue = n1;
    }
    return true
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit
pp$9.regexp_eatOctalDigit = function(state) {
  var ch = state.current();
  if (isOctalDigit(ch)) {
    state.lastIntValue = ch - 0x30; /* 0 */
    state.advance();
    return true
  }
  state.lastIntValue = 0;
  return false
};
function isOctalDigit(ch) {
  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits
// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit
// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence
pp$9.regexp_eatFixedHexDigits = function(state, length) {
  var start = state.pos;
  state.lastIntValue = 0;
  for (var i = 0; i < length; ++i) {
    var ch = state.current();
    if (!isHexDigit(ch)) {
      state.pos = start;
      return false
    }
    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);
    state.advance();
  }
  return true
};

// Object type used to represent tokens. Note that normally, tokens
// simply exist as properties on the parser object. This is only
// used for the onToken callback and the external tokenizer.

var Token = function Token(p) {
  this.type = p.type;
  this.value = p.value;
  this.start = p.start;
  this.end = p.end;
  if (p.options.locations)
    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }
  if (p.options.ranges)
    { this.range = [p.start, p.end]; }
};

// ## Tokenizer

var pp$8 = Parser.prototype;

// Move to the next token

pp$8.next = function() {
  if (this.options.onToken)
    { this.options.onToken(new Token(this)); }

  this.lastTokEnd = this.end;
  this.lastTokStart = this.start;
  this.lastTokEndLoc = this.endLoc;
  this.lastTokStartLoc = this.startLoc;
  this.nextToken();
};

pp$8.getToken = function() {
  this.next();
  return new Token(this)
};

// If we're in an ES6 environment, make parsers iterable
if (typeof Symbol !== "undefined")
  { pp$8[Symbol.iterator] = function() {
    var this$1 = this;

    return {
      next: function () {
        var token = this$1.getToken();
        return {
          done: token.type === types.eof,
          value: token
        }
      }
    }
  }; }

// Toggle strict mode. Re-reads the next number or string to please
// pedantic tests (`"use strict"; 010;` should fail).

pp$8.curContext = function() {
  return this.context[this.context.length - 1]
};

// Read a single token, updating the parser object's token-related
// properties.

pp$8.nextToken = function() {
  var curContext = this.curContext();
  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }

  this.start = this.pos;
  if (this.options.locations) { this.startLoc = this.curPosition(); }
  if (this.pos >= this.input.length) { return this.finishToken(types.eof) }

  if (curContext.override) { return curContext.override(this) }
  else { this.readToken(this.fullCharCodeAtPos()); }
};

pp$8.readToken = function(code) {
  // Identifier or keyword. '\uXXXX' sequences are allowed in
  // identifiers, so '\' also dispatches to that.
  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\' */)
    { return this.readWord() }

  return this.getTokenFromCode(code)
};

pp$8.fullCharCodeAtPos = function() {
  var code = this.input.charCodeAt(this.pos);
  if (code <= 0xd7ff || code >= 0xe000) { return code }
  var next = this.input.charCodeAt(this.pos + 1);
  return (code << 10) + next - 0x35fdc00
};

pp$8.skipBlockComment = function() {
  var this$1 = this;

  var startLoc = this.options.onComment && this.curPosition();
  var start = this.pos, end = this.input.indexOf("*/", this.pos += 2);
  if (end === -1) { this.raise(this.pos - 2, "Unterminated comment"); }
  this.pos = end + 2;
  if (this.options.locations) {
    lineBreakG.lastIndex = start;
    var match;
    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {
      ++this$1.curLine;
      this$1.lineStart = match.index + match[0].length;
    }
  }
  if (this.options.onComment)
    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,
                           startLoc, this.curPosition()); }
};

pp$8.skipLineComment = function(startSkip) {
  var this$1 = this;

  var start = this.pos;
  var startLoc = this.options.onComment && this.curPosition();
  var ch = this.input.charCodeAt(this.pos += startSkip);
  while (this.pos < this.input.length && !isNewLine(ch)) {
    ch = this$1.input.charCodeAt(++this$1.pos);
  }
  if (this.options.onComment)
    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,
                           startLoc, this.curPosition()); }
};

// Called at the start of the parse and after every token. Skips
// whitespace and comments, and.

pp$8.skipSpace = function() {
  var this$1 = this;

  loop: while (this.pos < this.input.length) {
    var ch = this$1.input.charCodeAt(this$1.pos);
    switch (ch) {
    case 32: case 160: // ' '
      ++this$1.pos;
      break
    case 13:
      if (this$1.input.charCodeAt(this$1.pos + 1) === 10) {
        ++this$1.pos;
      }
    case 10: case 8232: case 8233:
      ++this$1.pos;
      if (this$1.options.locations) {
        ++this$1.curLine;
        this$1.lineStart = this$1.pos;
      }
      break
    case 47: // '/'
      switch (this$1.input.charCodeAt(this$1.pos + 1)) {
      case 42: // '*'
        this$1.skipBlockComment();
        break
      case 47:
        this$1.skipLineComment(2);
        break
      default:
        break loop
      }
      break
    default:
      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {
        ++this$1.pos;
      } else {
        break loop
      }
    }
  }
};

// Called at the end of every token. Sets `end`, `val`, and
// maintains `context` and `exprAllowed`, and skips the space after
// the token, so that the next one's `start` will point at the
// right position.

pp$8.finishToken = function(type, val) {
  this.end = this.pos;
  if (this.options.locations) { this.endLoc = this.curPosition(); }
  var prevType = this.type;
  this.type = type;
  this.value = val;

  this.updateContext(prevType);
};

// ### Token reading

// This is the function that is called to fetch the next token. It
// is somewhat obscure, because it works in character codes rather
// than characters, and because operator parsing has been inlined
// into it.
//
// All in the name of speed.
//
pp$8.readToken_dot = function() {
  var next = this.input.charCodeAt(this.pos + 1);
  if (next >= 48 && next <= 57) { return this.readNumber(true) }
  var next2 = this.input.charCodeAt(this.pos + 2);
  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'
    this.pos += 3;
    return this.finishToken(types.ellipsis)
  } else {
    ++this.pos;
    return this.finishToken(types.dot)
  }
};

pp$8.readToken_slash = function() { // '/'
  var next = this.input.charCodeAt(this.pos + 1);
  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }
  if (next === 61) { return this.finishOp(types.assign, 2) }
  return this.finishOp(types.slash, 1)
};

pp$8.readToken_mult_modulo_exp = function(code) { // '%*'
  var next = this.input.charCodeAt(this.pos + 1);
  var size = 1;
  var tokentype = code === 42 ? types.star : types.modulo;

  // exponentiation operator ** and **=
  if (this.options.ecmaVersion >= 7 && code == 42 && next === 42) {
    ++size;
    tokentype = types.starstar;
    next = this.input.charCodeAt(this.pos + 2);
  }

  if (next === 61) { return this.finishOp(types.assign, size + 1) }
  return this.finishOp(tokentype, size)
};

pp$8.readToken_pipe_amp = function(code) { // '|&'
  var next = this.input.charCodeAt(this.pos + 1);
  if (next === code) { return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }
  if (next === 61) { return this.finishOp(types.assign, 2) }
  return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)
};

pp$8.readToken_caret = function() { // '^'
  var next = this.input.charCodeAt(this.pos + 1);
  if (next === 61) { return this.finishOp(types.assign, 2) }
  return this.finishOp(types.bitwiseXOR, 1)
};

pp$8.readToken_plus_min = function(code) { // '+-'
  var next = this.input.charCodeAt(this.pos + 1);
  if (next === code) {
    if (next == 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) == 62 &&
        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {
      // A `-->` line comment
      this.skipLineComment(3);
      this.skipSpace();
      return this.nextToken()
    }
    return this.finishOp(types.incDec, 2)
  }
  if (next === 61) { return this.finishOp(types.assign, 2) }
  return this.finishOp(types.plusMin, 1)
};

pp$8.readToken_lt_gt = function(code) { // '<>'
  var next = this.input.charCodeAt(this.pos + 1);
  var size = 1;
  if (next === code) {
    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;
    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }
    return this.finishOp(types.bitShift, size)
  }
  if (next == 33 && code == 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) == 45 &&
      this.input.charCodeAt(this.pos + 3) == 45) {
    // `<!--`, an XML-style comment that should be interpreted as a line comment
    this.skipLineComment(4);
    this.skipSpace();
    return this.nextToken()
  }
  if (next === 61) { size = 2; }
  return this.finishOp(types.relational, size)
};

pp$8.readToken_eq_excl = function(code) { // '=!'
  var next = this.input.charCodeAt(this.pos + 1);
  if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }
  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'
    this.pos += 2;
    return this.finishToken(types.arrow)
  }
  return this.finishOp(code === 61 ? types.eq : types.prefix, 1)
};

pp$8.getTokenFromCode = function(code) {
  switch (code) {
  // The interpretation of a dot depends on whether it is followed
  // by a digit or another two dots.
  case 46: // '.'
    return this.readToken_dot()

  // Punctuation tokens.
  case 40: ++this.pos; return this.finishToken(types.parenL)
  case 41: ++this.pos; return this.finishToken(types.parenR)
  case 59: ++this.pos; return this.finishToken(types.semi)
  case 44: ++this.pos; return this.finishToken(types.comma)
  case 91: ++this.pos; return this.finishToken(types.bracketL)
  case 93: ++this.pos; return this.finishToken(types.bracketR)
  case 123: ++this.pos; return this.finishToken(types.braceL)
  case 125: ++this.pos; return this.finishToken(types.braceR)
  case 58: ++this.pos; return this.finishToken(types.colon)
  case 63: ++this.pos; return this.finishToken(types.question)

  case 96: // '`'
    if (this.options.ecmaVersion < 6) { break }
    ++this.pos;
    return this.finishToken(types.backQuote)

  case 48: // '0'
    var next = this.input.charCodeAt(this.pos + 1);
    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number
    if (this.options.ecmaVersion >= 6) {
      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number
      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number
    }

  // Anything else beginning with a digit is an integer, octal
  // number, or float.
  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9
    return this.readNumber(false)

  // Quotes produce strings.
  case 34: case 39: // '"', "'"
    return this.readString(code)

  // Operators are parsed inline in tiny state machines. '=' (61) is
  // often referred to. `finishOp` simply skips the amount of
  // characters it is given as second argument, and returns a token
  // of the type given by its first argument.

  case 47: // '/'
    return this.readToken_slash()

  case 37: case 42: // '%*'
    return this.readToken_mult_modulo_exp(code)

  case 124: case 38: // '|&'
    return this.readToken_pipe_amp(code)

  case 94: // '^'
    return this.readToken_caret()

  case 43: case 45: // '+-'
    return this.readToken_plus_min(code)

  case 60: case 62: // '<>'
    return this.readToken_lt_gt(code)

  case 61: case 33: // '=!'
    return this.readToken_eq_excl(code)

  case 126: // '~'
    return this.finishOp(types.prefix, 1)
  }

  this.raise(this.pos, "Unexpected character '" + codePointToString(code) + "'");
};

pp$8.finishOp = function(type, size) {
  var str = this.input.slice(this.pos, this.pos + size);
  this.pos += size;
  return this.finishToken(type, str)
};

pp$8.readRegexp = function() {
  var this$1 = this;

  var escaped, inClass, start = this.pos;
  for (;;) {
    if (this$1.pos >= this$1.input.length) { this$1.raise(start, "Unterminated regular expression"); }
    var ch = this$1.input.charAt(this$1.pos);
    if (lineBreak.test(ch)) { this$1.raise(start, "Unterminated regular expression"); }
    if (!escaped) {
      if (ch === "[") { inClass = true; }
      else if (ch === "]" && inClass) { inClass = false; }
      else if (ch === "/" && !inClass) { break }
      escaped = ch === "\\";
    } else { escaped = false; }
    ++this$1.pos;
  }
  var pattern = this.input.slice(start, this.pos);
  ++this.pos;
  var flagsStart = this.pos;
  var flags = this.readWord1();
  if (this.containsEsc) { this.unexpected(flagsStart); }

  // Validate pattern
  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));
  state.reset(start, pattern, flags);
  this.validateRegExpFlags(state);
  this.validateRegExpPattern(state);

  // Create Literal#value property value.
  var value = null;
  try {
    value = new RegExp(pattern, flags);
  } catch (e) {
    // ESTree requires null if it failed to instantiate RegExp object.
    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral
  }

  return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})
};

// Read an integer in the given radix. Return null if zero digits
// were read, the integer value otherwise. When `len` is given, this
// will return `null` unless the integer has exactly `len` digits.

pp$8.readInt = function(radix, len) {
  var this$1 = this;

  var start = this.pos, total = 0;
  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {
    var code = this$1.input.charCodeAt(this$1.pos), val = (void 0);
    if (code >= 97) { val = code - 97 + 10; } // a
    else if (code >= 65) { val = code - 65 + 10; } // A
    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9
    else { val = Infinity; }
    if (val >= radix) { break }
    ++this$1.pos;
    total = total * radix + val;
  }
  if (this.pos === start || len != null && this.pos - start !== len) { return null }

  return total
};

pp$8.readRadixNumber = function(radix) {
  this.pos += 2; // 0x
  var val = this.readInt(radix);
  if (val == null) { this.raise(this.start + 2, "Expected number in radix " + radix); }
  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, "Identifier directly after number"); }
  return this.finishToken(types.num, val)
};

// Read an integer, octal integer, or floating-point number.

pp$8.readNumber = function(startsWithDot) {
  var start = this.pos;
  if (!startsWithDot && this.readInt(10) === null) { this.raise(start, "Invalid number"); }
  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;
  if (octal && this.strict) { this.raise(start, "Invalid number"); }
  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }
  var next = this.input.charCodeAt(this.pos);
  if (next === 46 && !octal) { // '.'
    ++this.pos;
    this.readInt(10);
    next = this.input.charCodeAt(this.pos);
  }
  if ((next === 69 || next === 101) && !octal) { // 'eE'
    next = this.input.charCodeAt(++this.pos);
    if (next === 43 || next === 45) { ++this.pos; } // '+-'
    if (this.readInt(10) === null) { this.raise(start, "Invalid number"); }
  }
  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, "Identifier directly after number"); }

  var str = this.input.slice(start, this.pos);
  var val = octal ? parseInt(str, 8) : parseFloat(str);
  return this.finishToken(types.num, val)
};

// Read a string value, interpreting backslash-escapes.

pp$8.readCodePoint = function() {
  var ch = this.input.charCodeAt(this.pos), code;

  if (ch === 123) { // '{'
    if (this.options.ecmaVersion < 6) { this.unexpected(); }
    var codePos = ++this.pos;
    code = this.readHexChar(this.input.indexOf("}", this.pos) - this.pos);
    ++this.pos;
    if (code > 0x10FFFF) { this.invalidStringToken(codePos, "Code point out of bounds"); }
  } else {
    code = this.readHexChar(4);
  }
  return code
};

function codePointToString(code) {
  // UTF-16 Decoding
  if (code <= 0xFFFF) { return String.fromCharCode(code) }
  code -= 0x10000;
  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)
}

pp$8.readString = function(quote) {
  var this$1 = this;

  var out = "", chunkStart = ++this.pos;
  for (;;) {
    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, "Unterminated string constant"); }
    var ch = this$1.input.charCodeAt(this$1.pos);
    if (ch === quote) { break }
    if (ch === 92) { // '\'
      out += this$1.input.slice(chunkStart, this$1.pos);
      out += this$1.readEscapedChar(false);
      chunkStart = this$1.pos;
    } else {
      if (isNewLine(ch, this$1.options.ecmaVersion >= 10)) { this$1.raise(this$1.start, "Unterminated string constant"); }
      ++this$1.pos;
    }
  }
  out += this.input.slice(chunkStart, this.pos++);
  return this.finishToken(types.string, out)
};

// Reads template string tokens.

var INVALID_TEMPLATE_ESCAPE_ERROR = {};

pp$8.tryReadTemplateToken = function() {
  this.inTemplateElement = true;
  try {
    this.readTmplToken();
  } catch (err) {
    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {
      this.readInvalidTemplateToken();
    } else {
      throw err
    }
  }

  this.inTemplateElement = false;
};

pp$8.invalidStringToken = function(position, message) {
  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {
    throw INVALID_TEMPLATE_ESCAPE_ERROR
  } else {
    this.raise(position, message);
  }
};

pp$8.readTmplToken = function() {
  var this$1 = this;

  var out = "", chunkStart = this.pos;
  for (;;) {
    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, "Unterminated template"); }
    var ch = this$1.input.charCodeAt(this$1.pos);
    if (ch === 96 || ch === 36 && this$1.input.charCodeAt(this$1.pos + 1) === 123) { // '`', '${'
      if (this$1.pos === this$1.start && (this$1.type === types.template || this$1.type === types.invalidTemplate)) {
        if (ch === 36) {
          this$1.pos += 2;
          return this$1.finishToken(types.dollarBraceL)
        } else {
          ++this$1.pos;
          return this$1.finishToken(types.backQuote)
        }
      }
      out += this$1.input.slice(chunkStart, this$1.pos);
      return this$1.finishToken(types.template, out)
    }
    if (ch === 92) { // '\'
      out += this$1.input.slice(chunkStart, this$1.pos);
      out += this$1.readEscapedChar(true);
      chunkStart = this$1.pos;
    } else if (isNewLine(ch)) {
      out += this$1.input.slice(chunkStart, this$1.pos);
      ++this$1.pos;
      switch (ch) {
      case 13:
        if (this$1.input.charCodeAt(this$1.pos) === 10) { ++this$1.pos; }
      case 10:
        out += "\n";
        break
      default:
        out += String.fromCharCode(ch);
        break
      }
      if (this$1.options.locations) {
        ++this$1.curLine;
        this$1.lineStart = this$1.pos;
      }
      chunkStart = this$1.pos;
    } else {
      ++this$1.pos;
    }
  }
};

// Reads a template token to search for the end, without validating any escape sequences
pp$8.readInvalidTemplateToken = function() {
  var this$1 = this;

  for (; this.pos < this.input.length; this.pos++) {
    switch (this$1.input[this$1.pos]) {
    case "\\":
      ++this$1.pos;
      break

    case "$":
      if (this$1.input[this$1.pos + 1] !== "{") {
        break
      }
    // falls through

    case "`":
      return this$1.finishToken(types.invalidTemplate, this$1.input.slice(this$1.start, this$1.pos))

    // no default
    }
  }
  this.raise(this.start, "Unterminated template");
};

// Used to read escaped characters

pp$8.readEscapedChar = function(inTemplate) {
  var ch = this.input.charCodeAt(++this.pos);
  ++this.pos;
  switch (ch) {
  case 110: return "\n" // 'n' -> '\n'
  case 114: return "\r" // 'r' -> '\r'
  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'
  case 117: return codePointToString(this.readCodePoint()) // 'u'
  case 116: return "\t" // 't' -> '\t'
  case 98: return "\b" // 'b' -> '\b'
  case 118: return "\u000b" // 'v' -> '\u000b'
  case 102: return "\f" // 'f' -> '\f'
  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\r\n'
  case 10: // ' \n'
    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }
    return ""
  default:
    if (ch >= 48 && ch <= 55) {
      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];
      var octal = parseInt(octalStr, 8);
      if (octal > 255) {
        octalStr = octalStr.slice(0, -1);
        octal = parseInt(octalStr, 8);
      }
      this.pos += octalStr.length - 1;
      ch = this.input.charCodeAt(this.pos);
      if ((octalStr !== "0" || ch == 56 || ch == 57) && (this.strict || inTemplate)) {
        this.invalidStringToken(
          this.pos - 1 - octalStr.length,
          inTemplate
            ? "Octal literal in template string"
            : "Octal literal in strict mode"
        );
      }
      return String.fromCharCode(octal)
    }
    return String.fromCharCode(ch)
  }
};

// Used to read character escape sequences ('\x', '\u', '\U').

pp$8.readHexChar = function(len) {
  var codePos = this.pos;
  var n = this.readInt(16, len);
  if (n === null) { this.invalidStringToken(codePos, "Bad character escape sequence"); }
  return n
};

// Read an identifier, and return it as a string. Sets `this.containsEsc`
// to whether the word contained a '\u' escape.
//
// Incrementally adds only escaped chars, adding other chunks as-is
// as a micro-optimization.

pp$8.readWord1 = function() {
  var this$1 = this;

  this.containsEsc = false;
  var word = "", first = true, chunkStart = this.pos;
  var astral = this.options.ecmaVersion >= 6;
  while (this.pos < this.input.length) {
    var ch = this$1.fullCharCodeAtPos();
    if (isIdentifierChar(ch, astral)) {
      this$1.pos += ch <= 0xffff ? 1 : 2;
    } else if (ch === 92) { // "\"
      this$1.containsEsc = true;
      word += this$1.input.slice(chunkStart, this$1.pos);
      var escStart = this$1.pos;
      if (this$1.input.charCodeAt(++this$1.pos) != 117) // "u"
        { this$1.invalidStringToken(this$1.pos, "Expecting Unicode escape sequence \\uXXXX"); }
      ++this$1.pos;
      var esc = this$1.readCodePoint();
      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))
        { this$1.invalidStringToken(escStart, "Invalid Unicode escape"); }
      word += codePointToString(esc);
      chunkStart = this$1.pos;
    } else {
      break
    }
    first = false;
  }
  return word + this.input.slice(chunkStart, this.pos)
};

// Read an identifier or keyword token. Will check for reserved
// words when necessary.

pp$8.readWord = function() {
  var word = this.readWord1();
  var type = types.name;
  if (this.keywords.test(word)) {
    if (this.containsEsc) { this.raiseRecoverable(this.start, "Escape sequence in keyword " + word); }
    type = keywords$1[word];
  }
  return this.finishToken(type, word)
};

// Acorn is a tiny, fast JavaScript parser written in JavaScript.
//
// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and
// various contributors and released under an MIT license.
//
// Git repositories for Acorn are available at
//
//     http://marijnhaverbeke.nl/git/acorn
//     https://github.com/acornjs/acorn.git
//
// Please use the [github bug tracker][ghbt] to report issues.
//
// [ghbt]: https://github.com/acornjs/acorn/issues
//
// This file defines the main parser interface. The library also comes
// with a [error-tolerant parser][dammit] and an
// [abstract syntax tree walker][walk], defined in other files.
//
// [dammit]: acorn_loose.js
// [walk]: util/walk.js

var version = "5.6.2";

// The main exported interface (under `self.acorn` when in the
// browser) is a `parse` function that takes a code string and
// returns an abstract syntax tree as specified by [Mozilla parser
// API][api].
//
// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API

function parse(input, options) {
  return new Parser(options, input).parse()
}

// This function tries to parse a single expression at a given
// offset in a string. Useful for parsing mixed-language formats
// that embed JavaScript expressions.

function parseExpressionAt(input, pos, options) {
  var p = new Parser(options, input, pos);
  p.nextToken();
  return p.parseExpression()
}

// Acorn is organized as a tokenizer and a recursive-descent parser.
// The `tokenizer` export provides an interface to the tokenizer.

function tokenizer(input, options) {
  return new Parser(options, input)
}

// This is a terrible kludge to support the existing, pre-ES6
// interface where the loose parser module retroactively adds exports
// to this module.
var parse_dammit;
var LooseParser;
var pluginsLoose; // eslint-disable-line camelcase
function addLooseExports(parse, Parser$$1, plugins$$1) {
  parse_dammit = parse; // eslint-disable-line camelcase
  LooseParser = Parser$$1;
  pluginsLoose = plugins$$1;
}




/***/ }),
/* 245 */
/***/ (function(module, exports) {

module.exports = clipboardCopy

function clipboardCopy (text) {
  // Use the Async Clipboard API when available
  if (navigator.clipboard) {
    return navigator.clipboard.writeText(text)
  }

  // ...Otherwise, use document.execCommand() fallback

  // Put the text to copy into a <span>
  var span = document.createElement('span')
  span.textContent = text

  // Preserve consecutive spaces and newlines
  span.style.whiteSpace = 'pre'

  // An <iframe> isolates the <span> from the page's styles
  var iframe = document.createElement('iframe')
  iframe.sandbox = 'allow-same-origin'

  // Add the <iframe> to the page
  document.body.appendChild(iframe)
  var win = iframe.contentWindow

  // Add the <span> to the <iframe>
  win.document.body.appendChild(span)

  // Get a Selection object representing the range of text selected by the user
  var selection = win.getSelection()

  // Fallback for Firefox which fails to get a selection from an <iframe>
  if (!selection) {
    win = window
    selection = win.getSelection()
    document.body.appendChild(span)
  }

  var range = win.document.createRange()
  selection.removeAllRanges()
  range.selectNode(span)
  selection.addRange(range)

  var success = false
  try {
    success = win.document.execCommand('copy')
  } catch (err) {}

  selection.removeAllRanges()
  win.document.body.removeChild(span)
  document.body.removeChild(iframe)

  // The Async Clipboard API returns a promise that may reject with `undefined` so we
  // match that here for consistency.
  return success
    ? Promise.resolve()
    : Promise.reject() // eslint-disable-line prefer-promise-reject-errors
}


/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactIconBase = __webpack_require__(112);

var _reactIconBase2 = _interopRequireDefault(_reactIconBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MdContentCopy = function MdContentCopy(props) {
    return _react2.default.createElement(
        _reactIconBase2.default,
        _extends({ viewBox: '0 0 40 40' }, props),
        _react2.default.createElement(
            'g',
            null,
            _react2.default.createElement('path', { d: 'm31.6 35v-23.4h-18.2v23.4h18.2z m0-26.6c1.8 0 3.4 1.4 3.4 3.2v23.4c0 1.8-1.6 3.4-3.4 3.4h-18.2c-1.8 0-3.4-1.6-3.4-3.4v-23.4c0-1.8 1.6-3.2 3.4-3.2h18.2z m-5-6.8v3.4h-20v23.4h-3.2v-23.4c0-1.8 1.4-3.4 3.2-3.4h20z' })
        )
    );
};

exports.default = MdContentCopy;
module.exports = exports['default'];

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(9);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsFinite = root.isFinite;

/**
 * Checks if `value` is a finite primitive number.
 *
 * **Note:** This method is based on
 * [`Number.isFinite`](https://mdn.io/Number/isFinite).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
 * @example
 *
 * _.isFinite(3);
 * // => true
 *
 * _.isFinite(Number.MIN_VALUE);
 * // => true
 *
 * _.isFinite(Infinity);
 * // => false
 *
 * _.isFinite('3');
 * // => false
 */
function isFinite(value) {
  return typeof value == 'number' && nativeIsFinite(value);
}

module.exports = isFinite;


/***/ }),
/* 248 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return globalizeComponent; });
/* harmony import */ var _getComponent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(249);


/**
 * Expose component as global variables.
 *
 * @param {Object} component
 */
function globalizeComponent(component) {
  if (!component.name) {
    return;
  }

  global[component.name] = Object(_getComponent__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(component.module, component.name);
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(11)))

/***/ }),
/* 249 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return getComponent; });
/**
 * Given a component module and a name,
 * return the appropriate export.
 * See /docs/Components.md
 *
 * @param  {object} module
 * @param  {string} name
 * @return {function|object}
 */
function getComponent(module, name) {
	//
	// If the module defines a default export, return that
	// e.g.
	//
	// ```
	// export default function Component() { ... }
	// ```
	//
	if (module.default) {
		return module.default;
	}

	// If it is a CommonJS module which exports a function, return that
	// e.g.
	//
	// ```
	// function Component() { ... }
	// module.exports = Component;
	// ```
	//
	if (!module.__esModule && typeof module === 'function') {
		return module;
	}
	var moduleKeys = Object.keys(module);

	// If the module exports just one named export, return that
	// e.g.
	//
	// ```
	// export function Component() { ... }
	// ```
	//
	if (moduleKeys.length === 1) {
		return module[moduleKeys[0]];
	}

	// If the module exports a named export with the same name as the
	// understood Component identifier, return that
	// e.g.
	//
	// ```
	// // /component.js
	// export function someUtil() { ... }
	// export Component() { ... } // if identifier is Component, return this named export
	// ```
	//
	// Else return the module itself
	//
	return module[name] || module;
}

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

var toString = __webpack_require__(204);

/** Used to generate unique IDs. */
var idCounter = 0;

/**
 * Generates a unique ID. If `prefix` is given, the ID is appended to it.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {string} [prefix=''] The value to prefix the ID with.
 * @returns {string} Returns the unique ID.
 * @example
 *
 * _.uniqueId('contact_');
 * // => 'contact_104'
 *
 * _.uniqueId();
 * // => '105'
 */
function uniqueId(prefix) {
  var id = ++idCounter;
  return toString(prefix) + id;
}

module.exports = uniqueId;


/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(206),
    baseClone = __webpack_require__(449),
    baseUnset = __webpack_require__(513),
    castPath = __webpack_require__(140),
    copyObject = __webpack_require__(57),
    customOmitClone = __webpack_require__(522),
    flatRest = __webpack_require__(524),
    getAllKeysIn = __webpack_require__(225);

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/**
 * The opposite of `_.pick`; this method creates an object composed of the
 * own and inherited enumerable property paths of `object` that are not omitted.
 *
 * **Note:** This method is considerably slower than `_.pick`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The source object.
 * @param {...(string|string[])} [paths] The property paths to omit.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.omit(object, ['a', 'c']);
 * // => { 'b': '2' }
 */
var omit = flatRest(function(object, paths) {
  var result = {};
  if (object == null) {
    return result;
  }
  var isDeep = false;
  paths = arrayMap(paths, function(path) {
    path = castPath(path, object);
    isDeep || (isDeep = path.length > 1);
    return path;
  });
  copyObject(object, getAllKeysIn(object), result);
  if (isDeep) {
    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
  }
  var length = paths.length;
  while (length--) {
    baseUnset(result, paths[length]);
  }
  return result;
});

module.exports = omit;


/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Scrollbars = undefined;

var _Scrollbars = __webpack_require__(535);

var _Scrollbars2 = _interopRequireDefault(_Scrollbars);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

exports["default"] = _Scrollbars2["default"];
exports.Scrollbars = _Scrollbars2["default"];

/***/ }),
/* 253 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getTarget = function (target, parent) {
  if (parent){
    return parent.querySelector(target);
  }
  return document.querySelector(target);
};

var getElement = (function (fn) {
	var memo = {};

	return function(target, parent) {
                // If passing function in options, then use it for resolve "head" element.
                // Useful for Shadow Root style i.e
                // {
                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }
                // }
                if (typeof target === 'function') {
                        return target();
                }
                if (typeof memo[target] === "undefined") {
			var styleTarget = getTarget.call(this, target, parent);
			// Special case to return head of iframe instead of iframe itself
			if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
				try {
					// This will throw an exception if access to iframe is blocked
					// due to cross-origin restrictions
					styleTarget = styleTarget.contentDocument.head;
				} catch(e) {
					styleTarget = null;
				}
			}
			memo[target] = styleTarget;
		}
		return memo[target]
	};
})();

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(361);

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
        if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else if (typeof options.insertAt === "object" && options.insertAt.before) {
		var nextSibling = getElement(options.insertAt.before, target);
		target.insertBefore(style, nextSibling);
	} else {
		throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}

	if(options.attrs.nonce === undefined) {
		var nonce = getNonce();
		if (nonce) {
			options.attrs.nonce = nonce;
		}
	}

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function getNonce() {
	if (false) {}

	return __webpack_require__.nc;
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = typeof options.transform === 'function'
		 ? options.transform(obj.css) 
		 : options.transform.default(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(256);
__webpack_require__(257);
__webpack_require__(258);
module.exports = __webpack_require__(561);


/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 259 */
/***/ (function(module, exports) {

(function() {

var fnNameMatchRegex = /^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^\(\s\/]*)\s*/;

function _name() {
  var match, name;
  if (this === Function || this === Function.prototype.constructor) {
    name = "Function";
  }
  else if (this !== Function.prototype) {
    match = ("" + this).match(fnNameMatchRegex);
    name = match && match[1];
  }
  return name || "";
}

// Inspect the polyfill-ability of this browser
var needsPolyfill = !("name" in Function.prototype && "name" in (function x() {}));
var canDefineProp = typeof Object.defineProperty === "function" &&
  (function() {
    var result;
    try {
      Object.defineProperty(Function.prototype, "_xyz", {
        get: function() {
          return "blah";
        },
        configurable: true
      });
      result = Function.prototype._xyz === "blah";
      delete Function.prototype._xyz;
    }
    catch (e) {
      result = false;
    }
    return result;
  })();
var canDefineGetter = typeof Object.prototype.__defineGetter__ === "function" &&
  (function() {
    var result;
    try {
      Function.prototype.__defineGetter__("_abc", function() {
        return "foo";
      });
      result = Function.prototype._abc === "foo";
      delete Function.prototype._abc;
    }
    catch (e) {
      result = false;
    }
    return result;
  })();



// Add the "private" property for testing, even if the real property can be polyfilled
Function.prototype._name = _name;


// Polyfill it!
// For:
//  * IE >=9 <12
//  * Chrome <33
if (needsPolyfill) {
  // For:
  //  * IE >=9 <12
  //  * Chrome >=5 <33
  if (canDefineProp) {
    Object.defineProperty(Function.prototype, "name", {
      get: function() {
        var name = _name.call(this);

        // Since named function definitions have immutable names, also memoize the
        // output by defining the `name` property directly on this Function
        // instance so that this polyfill will not need to be invoked again
        if (this !== Function.prototype) {
          Object.defineProperty(this, "name", {
            value: name,
            configurable: true
          });
        }

        return name;
      },
      configurable: true
    });
  }
  // For:
  //  * Chrome <5
  else if (canDefineGetter) {
    // NOTE:
    // The snippet:
    //
    //     x.__defineGetter__('y', z);
    //
    // ...is essentially equivalent to:
    //
    //     Object.defineProperty(x, 'y', {
    //       get: z,
    //       configurable: true,  // <-- key difference #1
    //       enumerable: true     // <-- key difference #2
    //     });
    //
    Function.prototype.__defineGetter__("name", function() {
      var name = _name.call(this);

      // Since named function definitions have immutable names, also memoize the
      // output by defining the `name` property directly on this Function
      // instance so that this polyfill will not need to be invoked again
      if (this !== Function.prototype) {
        this.__defineGetter__("name", function() { return name; });
      }

      return name;
    });
  }
}

})();


/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(261).polyfill();


/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Code refactored from Mozilla Developer Network:
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign
 */



function assign(target, firstSource) {
  if (target === undefined || target === null) {
    throw new TypeError('Cannot convert first argument to object');
  }

  var to = Object(target);
  for (var i = 1; i < arguments.length; i++) {
    var nextSource = arguments[i];
    if (nextSource === undefined || nextSource === null) {
      continue;
    }

    var keysArray = Object.keys(Object(nextSource));
    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {
      var nextKey = keysArray[nextIndex];
      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);
      if (desc !== undefined && desc.enumerable) {
        to[nextKey] = nextSource[nextKey];
      }
    }
  }
  return to;
}

function polyfill() {
  if (!Object.assign) {
    Object.defineProperty(Object, 'assign', {
      enumerable: false,
      configurable: true,
      writable: true,
      value: assign
    });
  }
}

module.exports = {
  assign: assign,
  polyfill: polyfill
};


/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// This file can be required in Browserify and Node.js for automatic polyfill
// To use it:  require('es6-promise/auto');

module.exports = __webpack_require__(263).polyfill();


/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process, global) {/*!
 * @overview es6-promise - a tiny implementation of Promises/A+.
 * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
 * @license   Licensed under MIT license
 *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
 * @version   v4.2.4+314e4831
 */

(function (global, factory) {
	 true ? module.exports = factory() :
	undefined;
}(this, (function () { 'use strict';

function objectOrFunction(x) {
  var type = typeof x;
  return x !== null && (type === 'object' || type === 'function');
}

function isFunction(x) {
  return typeof x === 'function';
}



var _isArray = void 0;
if (Array.isArray) {
  _isArray = Array.isArray;
} else {
  _isArray = function (x) {
    return Object.prototype.toString.call(x) === '[object Array]';
  };
}

var isArray = _isArray;

var len = 0;
var vertxNext = void 0;
var customSchedulerFn = void 0;

var asap = function asap(callback, arg) {
  queue[len] = callback;
  queue[len + 1] = arg;
  len += 2;
  if (len === 2) {
    // If len is 2, that means that we need to schedule an async flush.
    // If additional callbacks are queued before the queue is flushed, they
    // will be processed by this flush that we are scheduling.
    if (customSchedulerFn) {
      customSchedulerFn(flush);
    } else {
      scheduleFlush();
    }
  }
};

function setScheduler(scheduleFn) {
  customSchedulerFn = scheduleFn;
}

function setAsap(asapFn) {
  asap = asapFn;
}

var browserWindow = typeof window !== 'undefined' ? window : undefined;
var browserGlobal = browserWindow || {};
var BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;
var isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';

// test for web worker but not in IE10
var isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';

// node
function useNextTick() {
  // node version 0.10.x displays a deprecation warning when nextTick is used recursively
  // see https://github.com/cujojs/when/issues/410 for details
  return function () {
    return process.nextTick(flush);
  };
}

// vertx
function useVertxTimer() {
  if (typeof vertxNext !== 'undefined') {
    return function () {
      vertxNext(flush);
    };
  }

  return useSetTimeout();
}

function useMutationObserver() {
  var iterations = 0;
  var observer = new BrowserMutationObserver(flush);
  var node = document.createTextNode('');
  observer.observe(node, { characterData: true });

  return function () {
    node.data = iterations = ++iterations % 2;
  };
}

// web worker
function useMessageChannel() {
  var channel = new MessageChannel();
  channel.port1.onmessage = flush;
  return function () {
    return channel.port2.postMessage(0);
  };
}

function useSetTimeout() {
  // Store setTimeout reference so es6-promise will be unaffected by
  // other code modifying setTimeout (like sinon.useFakeTimers())
  var globalSetTimeout = setTimeout;
  return function () {
    return globalSetTimeout(flush, 1);
  };
}

var queue = new Array(1000);
function flush() {
  for (var i = 0; i < len; i += 2) {
    var callback = queue[i];
    var arg = queue[i + 1];

    callback(arg);

    queue[i] = undefined;
    queue[i + 1] = undefined;
  }

  len = 0;
}

function attemptVertx() {
  try {
    var vertx = Function('return this')().require('vertx');
    vertxNext = vertx.runOnLoop || vertx.runOnContext;
    return useVertxTimer();
  } catch (e) {
    return useSetTimeout();
  }
}

var scheduleFlush = void 0;
// Decide what async method to use to triggering processing of queued callbacks:
if (isNode) {
  scheduleFlush = useNextTick();
} else if (BrowserMutationObserver) {
  scheduleFlush = useMutationObserver();
} else if (isWorker) {
  scheduleFlush = useMessageChannel();
} else if (browserWindow === undefined && "function" === 'function') {
  scheduleFlush = attemptVertx();
} else {
  scheduleFlush = useSetTimeout();
}

function then(onFulfillment, onRejection) {
  var parent = this;

  var child = new this.constructor(noop);

  if (child[PROMISE_ID] === undefined) {
    makePromise(child);
  }

  var _state = parent._state;


  if (_state) {
    var callback = arguments[_state - 1];
    asap(function () {
      return invokeCallback(_state, child, callback, parent._result);
    });
  } else {
    subscribe(parent, child, onFulfillment, onRejection);
  }

  return child;
}

/**
  `Promise.resolve` returns a promise that will become resolved with the
  passed `value`. It is shorthand for the following:

  ```javascript
  let promise = new Promise(function(resolve, reject){
    resolve(1);
  });

  promise.then(function(value){
    // value === 1
  });
  ```

  Instead of writing the above, your code now simply becomes the following:

  ```javascript
  let promise = Promise.resolve(1);

  promise.then(function(value){
    // value === 1
  });
  ```

  @method resolve
  @static
  @param {Any} value value that the returned promise will be resolved with
  Useful for tooling.
  @return {Promise} a promise that will become fulfilled with the given
  `value`
*/
function resolve$1(object) {
  /*jshint validthis:true */
  var Constructor = this;

  if (object && typeof object === 'object' && object.constructor === Constructor) {
    return object;
  }

  var promise = new Constructor(noop);
  resolve(promise, object);
  return promise;
}

var PROMISE_ID = Math.random().toString(36).substring(2);

function noop() {}

var PENDING = void 0;
var FULFILLED = 1;
var REJECTED = 2;

var TRY_CATCH_ERROR = { error: null };

function selfFulfillment() {
  return new TypeError("You cannot resolve a promise with itself");
}

function cannotReturnOwn() {
  return new TypeError('A promises callback cannot return that same promise.');
}

function getThen(promise) {
  try {
    return promise.then;
  } catch (error) {
    TRY_CATCH_ERROR.error = error;
    return TRY_CATCH_ERROR;
  }
}

function tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {
  try {
    then$$1.call(value, fulfillmentHandler, rejectionHandler);
  } catch (e) {
    return e;
  }
}

function handleForeignThenable(promise, thenable, then$$1) {
  asap(function (promise) {
    var sealed = false;
    var error = tryThen(then$$1, thenable, function (value) {
      if (sealed) {
        return;
      }
      sealed = true;
      if (thenable !== value) {
        resolve(promise, value);
      } else {
        fulfill(promise, value);
      }
    }, function (reason) {
      if (sealed) {
        return;
      }
      sealed = true;

      reject(promise, reason);
    }, 'Settle: ' + (promise._label || ' unknown promise'));

    if (!sealed && error) {
      sealed = true;
      reject(promise, error);
    }
  }, promise);
}

function handleOwnThenable(promise, thenable) {
  if (thenable._state === FULFILLED) {
    fulfill(promise, thenable._result);
  } else if (thenable._state === REJECTED) {
    reject(promise, thenable._result);
  } else {
    subscribe(thenable, undefined, function (value) {
      return resolve(promise, value);
    }, function (reason) {
      return reject(promise, reason);
    });
  }
}

function handleMaybeThenable(promise, maybeThenable, then$$1) {
  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {
    handleOwnThenable(promise, maybeThenable);
  } else {
    if (then$$1 === TRY_CATCH_ERROR) {
      reject(promise, TRY_CATCH_ERROR.error);
      TRY_CATCH_ERROR.error = null;
    } else if (then$$1 === undefined) {
      fulfill(promise, maybeThenable);
    } else if (isFunction(then$$1)) {
      handleForeignThenable(promise, maybeThenable, then$$1);
    } else {
      fulfill(promise, maybeThenable);
    }
  }
}

function resolve(promise, value) {
  if (promise === value) {
    reject(promise, selfFulfillment());
  } else if (objectOrFunction(value)) {
    handleMaybeThenable(promise, value, getThen(value));
  } else {
    fulfill(promise, value);
  }
}

function publishRejection(promise) {
  if (promise._onerror) {
    promise._onerror(promise._result);
  }

  publish(promise);
}

function fulfill(promise, value) {
  if (promise._state !== PENDING) {
    return;
  }

  promise._result = value;
  promise._state = FULFILLED;

  if (promise._subscribers.length !== 0) {
    asap(publish, promise);
  }
}

function reject(promise, reason) {
  if (promise._state !== PENDING) {
    return;
  }
  promise._state = REJECTED;
  promise._result = reason;

  asap(publishRejection, promise);
}

function subscribe(parent, child, onFulfillment, onRejection) {
  var _subscribers = parent._subscribers;
  var length = _subscribers.length;


  parent._onerror = null;

  _subscribers[length] = child;
  _subscribers[length + FULFILLED] = onFulfillment;
  _subscribers[length + REJECTED] = onRejection;

  if (length === 0 && parent._state) {
    asap(publish, parent);
  }
}

function publish(promise) {
  var subscribers = promise._subscribers;
  var settled = promise._state;

  if (subscribers.length === 0) {
    return;
  }

  var child = void 0,
      callback = void 0,
      detail = promise._result;

  for (var i = 0; i < subscribers.length; i += 3) {
    child = subscribers[i];
    callback = subscribers[i + settled];

    if (child) {
      invokeCallback(settled, child, callback, detail);
    } else {
      callback(detail);
    }
  }

  promise._subscribers.length = 0;
}

function tryCatch(callback, detail) {
  try {
    return callback(detail);
  } catch (e) {
    TRY_CATCH_ERROR.error = e;
    return TRY_CATCH_ERROR;
  }
}

function invokeCallback(settled, promise, callback, detail) {
  var hasCallback = isFunction(callback),
      value = void 0,
      error = void 0,
      succeeded = void 0,
      failed = void 0;

  if (hasCallback) {
    value = tryCatch(callback, detail);

    if (value === TRY_CATCH_ERROR) {
      failed = true;
      error = value.error;
      value.error = null;
    } else {
      succeeded = true;
    }

    if (promise === value) {
      reject(promise, cannotReturnOwn());
      return;
    }
  } else {
    value = detail;
    succeeded = true;
  }

  if (promise._state !== PENDING) {
    // noop
  } else if (hasCallback && succeeded) {
    resolve(promise, value);
  } else if (failed) {
    reject(promise, error);
  } else if (settled === FULFILLED) {
    fulfill(promise, value);
  } else if (settled === REJECTED) {
    reject(promise, value);
  }
}

function initializePromise(promise, resolver) {
  try {
    resolver(function resolvePromise(value) {
      resolve(promise, value);
    }, function rejectPromise(reason) {
      reject(promise, reason);
    });
  } catch (e) {
    reject(promise, e);
  }
}

var id = 0;
function nextId() {
  return id++;
}

function makePromise(promise) {
  promise[PROMISE_ID] = id++;
  promise._state = undefined;
  promise._result = undefined;
  promise._subscribers = [];
}

function validationError() {
  return new Error('Array Methods must be provided an Array');
}

var Enumerator = function () {
  function Enumerator(Constructor, input) {
    this._instanceConstructor = Constructor;
    this.promise = new Constructor(noop);

    if (!this.promise[PROMISE_ID]) {
      makePromise(this.promise);
    }

    if (isArray(input)) {
      this.length = input.length;
      this._remaining = input.length;

      this._result = new Array(this.length);

      if (this.length === 0) {
        fulfill(this.promise, this._result);
      } else {
        this.length = this.length || 0;
        this._enumerate(input);
        if (this._remaining === 0) {
          fulfill(this.promise, this._result);
        }
      }
    } else {
      reject(this.promise, validationError());
    }
  }

  Enumerator.prototype._enumerate = function _enumerate(input) {
    for (var i = 0; this._state === PENDING && i < input.length; i++) {
      this._eachEntry(input[i], i);
    }
  };

  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {
    var c = this._instanceConstructor;
    var resolve$$1 = c.resolve;


    if (resolve$$1 === resolve$1) {
      var _then = getThen(entry);

      if (_then === then && entry._state !== PENDING) {
        this._settledAt(entry._state, i, entry._result);
      } else if (typeof _then !== 'function') {
        this._remaining--;
        this._result[i] = entry;
      } else if (c === Promise$1) {
        var promise = new c(noop);
        handleMaybeThenable(promise, entry, _then);
        this._willSettleAt(promise, i);
      } else {
        this._willSettleAt(new c(function (resolve$$1) {
          return resolve$$1(entry);
        }), i);
      }
    } else {
      this._willSettleAt(resolve$$1(entry), i);
    }
  };

  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {
    var promise = this.promise;


    if (promise._state === PENDING) {
      this._remaining--;

      if (state === REJECTED) {
        reject(promise, value);
      } else {
        this._result[i] = value;
      }
    }

    if (this._remaining === 0) {
      fulfill(promise, this._result);
    }
  };

  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {
    var enumerator = this;

    subscribe(promise, undefined, function (value) {
      return enumerator._settledAt(FULFILLED, i, value);
    }, function (reason) {
      return enumerator._settledAt(REJECTED, i, reason);
    });
  };

  return Enumerator;
}();

/**
  `Promise.all` accepts an array of promises, and returns a new promise which
  is fulfilled with an array of fulfillment values for the passed promises, or
  rejected with the reason of the first passed promise to be rejected. It casts all
  elements of the passed iterable to promises as it runs this algorithm.

  Example:

  ```javascript
  let promise1 = resolve(1);
  let promise2 = resolve(2);
  let promise3 = resolve(3);
  let promises = [ promise1, promise2, promise3 ];

  Promise.all(promises).then(function(array){
    // The array here would be [ 1, 2, 3 ];
  });
  ```

  If any of the `promises` given to `all` are rejected, the first promise
  that is rejected will be given as an argument to the returned promises's
  rejection handler. For example:

  Example:

  ```javascript
  let promise1 = resolve(1);
  let promise2 = reject(new Error("2"));
  let promise3 = reject(new Error("3"));
  let promises = [ promise1, promise2, promise3 ];

  Promise.all(promises).then(function(array){
    // Code here never runs because there are rejected promises!
  }, function(error) {
    // error.message === "2"
  });
  ```

  @method all
  @static
  @param {Array} entries array of promises
  @param {String} label optional string for labeling the promise.
  Useful for tooling.
  @return {Promise} promise that is fulfilled when all `promises` have been
  fulfilled, or rejected if any of them become rejected.
  @static
*/
function all(entries) {
  return new Enumerator(this, entries).promise;
}

/**
  `Promise.race` returns a new promise which is settled in the same way as the
  first passed promise to settle.

  Example:

  ```javascript
  let promise1 = new Promise(function(resolve, reject){
    setTimeout(function(){
      resolve('promise 1');
    }, 200);
  });

  let promise2 = new Promise(function(resolve, reject){
    setTimeout(function(){
      resolve('promise 2');
    }, 100);
  });

  Promise.race([promise1, promise2]).then(function(result){
    // result === 'promise 2' because it was resolved before promise1
    // was resolved.
  });
  ```

  `Promise.race` is deterministic in that only the state of the first
  settled promise matters. For example, even if other promises given to the
  `promises` array argument are resolved, but the first settled promise has
  become rejected before the other promises became fulfilled, the returned
  promise will become rejected:

  ```javascript
  let promise1 = new Promise(function(resolve, reject){
    setTimeout(function(){
      resolve('promise 1');
    }, 200);
  });

  let promise2 = new Promise(function(resolve, reject){
    setTimeout(function(){
      reject(new Error('promise 2'));
    }, 100);
  });

  Promise.race([promise1, promise2]).then(function(result){
    // Code here never runs
  }, function(reason){
    // reason.message === 'promise 2' because promise 2 became rejected before
    // promise 1 became fulfilled
  });
  ```

  An example real-world use case is implementing timeouts:

  ```javascript
  Promise.race([ajax('foo.json'), timeout(5000)])
  ```

  @method race
  @static
  @param {Array} promises array of promises to observe
  Useful for tooling.
  @return {Promise} a promise which settles in the same way as the first passed
  promise to settle.
*/
function race(entries) {
  /*jshint validthis:true */
  var Constructor = this;

  if (!isArray(entries)) {
    return new Constructor(function (_, reject) {
      return reject(new TypeError('You must pass an array to race.'));
    });
  } else {
    return new Constructor(function (resolve, reject) {
      var length = entries.length;
      for (var i = 0; i < length; i++) {
        Constructor.resolve(entries[i]).then(resolve, reject);
      }
    });
  }
}

/**
  `Promise.reject` returns a promise rejected with the passed `reason`.
  It is shorthand for the following:

  ```javascript
  let promise = new Promise(function(resolve, reject){
    reject(new Error('WHOOPS'));
  });

  promise.then(function(value){
    // Code here doesn't run because the promise is rejected!
  }, function(reason){
    // reason.message === 'WHOOPS'
  });
  ```

  Instead of writing the above, your code now simply becomes the following:

  ```javascript
  let promise = Promise.reject(new Error('WHOOPS'));

  promise.then(function(value){
    // Code here doesn't run because the promise is rejected!
  }, function(reason){
    // reason.message === 'WHOOPS'
  });
  ```

  @method reject
  @static
  @param {Any} reason value that the returned promise will be rejected with.
  Useful for tooling.
  @return {Promise} a promise rejected with the given `reason`.
*/
function reject$1(reason) {
  /*jshint validthis:true */
  var Constructor = this;
  var promise = new Constructor(noop);
  reject(promise, reason);
  return promise;
}

function needsResolver() {
  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');
}

function needsNew() {
  throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
}

/**
  Promise objects represent the eventual result of an asynchronous operation. The
  primary way of interacting with a promise is through its `then` method, which
  registers callbacks to receive either a promise's eventual value or the reason
  why the promise cannot be fulfilled.

  Terminology
  -----------

  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.
  - `thenable` is an object or function that defines a `then` method.
  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).
  - `exception` is a value that is thrown using the throw statement.
  - `reason` is a value that indicates why a promise was rejected.
  - `settled` the final resting state of a promise, fulfilled or rejected.

  A promise can be in one of three states: pending, fulfilled, or rejected.

  Promises that are fulfilled have a fulfillment value and are in the fulfilled
  state.  Promises that are rejected have a rejection reason and are in the
  rejected state.  A fulfillment value is never a thenable.

  Promises can also be said to *resolve* a value.  If this value is also a
  promise, then the original promise's settled state will match the value's
  settled state.  So a promise that *resolves* a promise that rejects will
  itself reject, and a promise that *resolves* a promise that fulfills will
  itself fulfill.


  Basic Usage:
  ------------

  ```js
  let promise = new Promise(function(resolve, reject) {
    // on success
    resolve(value);

    // on failure
    reject(reason);
  });

  promise.then(function(value) {
    // on fulfillment
  }, function(reason) {
    // on rejection
  });
  ```

  Advanced Usage:
  ---------------

  Promises shine when abstracting away asynchronous interactions such as
  `XMLHttpRequest`s.

  ```js
  function getJSON(url) {
    return new Promise(function(resolve, reject){
      let xhr = new XMLHttpRequest();

      xhr.open('GET', url);
      xhr.onreadystatechange = handler;
      xhr.responseType = 'json';
      xhr.setRequestHeader('Accept', 'application/json');
      xhr.send();

      function handler() {
        if (this.readyState === this.DONE) {
          if (this.status === 200) {
            resolve(this.response);
          } else {
            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));
          }
        }
      };
    });
  }

  getJSON('/posts.json').then(function(json) {
    // on fulfillment
  }, function(reason) {
    // on rejection
  });
  ```

  Unlike callbacks, promises are great composable primitives.

  ```js
  Promise.all([
    getJSON('/posts'),
    getJSON('/comments')
  ]).then(function(values){
    values[0] // => postsJSON
    values[1] // => commentsJSON

    return values;
  });
  ```

  @class Promise
  @param {Function} resolver
  Useful for tooling.
  @constructor
*/

var Promise$1 = function () {
  function Promise(resolver) {
    this[PROMISE_ID] = nextId();
    this._result = this._state = undefined;
    this._subscribers = [];

    if (noop !== resolver) {
      typeof resolver !== 'function' && needsResolver();
      this instanceof Promise ? initializePromise(this, resolver) : needsNew();
    }
  }

  /**
  The primary way of interacting with a promise is through its `then` method,
  which registers callbacks to receive either a promise's eventual value or the
  reason why the promise cannot be fulfilled.
   ```js
  findUser().then(function(user){
    // user is available
  }, function(reason){
    // user is unavailable, and you are given the reason why
  });
  ```
   Chaining
  --------
   The return value of `then` is itself a promise.  This second, 'downstream'
  promise is resolved with the return value of the first promise's fulfillment
  or rejection handler, or rejected if the handler throws an exception.
   ```js
  findUser().then(function (user) {
    return user.name;
  }, function (reason) {
    return 'default name';
  }).then(function (userName) {
    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it
    // will be `'default name'`
  });
   findUser().then(function (user) {
    throw new Error('Found user, but still unhappy');
  }, function (reason) {
    throw new Error('`findUser` rejected and we're unhappy');
  }).then(function (value) {
    // never reached
  }, function (reason) {
    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.
    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.
  });
  ```
  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.
   ```js
  findUser().then(function (user) {
    throw new PedagogicalException('Upstream error');
  }).then(function (value) {
    // never reached
  }).then(function (value) {
    // never reached
  }, function (reason) {
    // The `PedgagocialException` is propagated all the way down to here
  });
  ```
   Assimilation
  ------------
   Sometimes the value you want to propagate to a downstream promise can only be
  retrieved asynchronously. This can be achieved by returning a promise in the
  fulfillment or rejection handler. The downstream promise will then be pending
  until the returned promise is settled. This is called *assimilation*.
   ```js
  findUser().then(function (user) {
    return findCommentsByAuthor(user);
  }).then(function (comments) {
    // The user's comments are now available
  });
  ```
   If the assimliated promise rejects, then the downstream promise will also reject.
   ```js
  findUser().then(function (user) {
    return findCommentsByAuthor(user);
  }).then(function (comments) {
    // If `findCommentsByAuthor` fulfills, we'll have the value here
  }, function (reason) {
    // If `findCommentsByAuthor` rejects, we'll have the reason here
  });
  ```
   Simple Example
  --------------
   Synchronous Example
   ```javascript
  let result;
   try {
    result = findResult();
    // success
  } catch(reason) {
    // failure
  }
  ```
   Errback Example
   ```js
  findResult(function(result, err){
    if (err) {
      // failure
    } else {
      // success
    }
  });
  ```
   Promise Example;
   ```javascript
  findResult().then(function(result){
    // success
  }, function(reason){
    // failure
  });
  ```
   Advanced Example
  --------------
   Synchronous Example
   ```javascript
  let author, books;
   try {
    author = findAuthor();
    books  = findBooksByAuthor(author);
    // success
  } catch(reason) {
    // failure
  }
  ```
   Errback Example
   ```js
   function foundBooks(books) {
   }
   function failure(reason) {
   }
   findAuthor(function(author, err){
    if (err) {
      failure(err);
      // failure
    } else {
      try {
        findBoooksByAuthor(author, function(books, err) {
          if (err) {
            failure(err);
          } else {
            try {
              foundBooks(books);
            } catch(reason) {
              failure(reason);
            }
          }
        });
      } catch(error) {
        failure(err);
      }
      // success
    }
  });
  ```
   Promise Example;
   ```javascript
  findAuthor().
    then(findBooksByAuthor).
    then(function(books){
      // found books
  }).catch(function(reason){
    // something went wrong
  });
  ```
   @method then
  @param {Function} onFulfilled
  @param {Function} onRejected
  Useful for tooling.
  @return {Promise}
  */

  /**
  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same
  as the catch block of a try/catch statement.
  ```js
  function findAuthor(){
  throw new Error('couldn't find that author');
  }
  // synchronous
  try {
  findAuthor();
  } catch(reason) {
  // something went wrong
  }
  // async with promises
  findAuthor().catch(function(reason){
  // something went wrong
  });
  ```
  @method catch
  @param {Function} onRejection
  Useful for tooling.
  @return {Promise}
  */


  Promise.prototype.catch = function _catch(onRejection) {
    return this.then(null, onRejection);
  };

  /**
    `finally` will be invoked regardless of the promise's fate just as native
    try/catch/finally behaves
  
    Synchronous example:
  
    ```js
    findAuthor() {
      if (Math.random() > 0.5) {
        throw new Error();
      }
      return new Author();
    }
  
    try {
      return findAuthor(); // succeed or fail
    } catch(error) {
      return findOtherAuther();
    } finally {
      // always runs
      // doesn't affect the return value
    }
    ```
  
    Asynchronous example:
  
    ```js
    findAuthor().catch(function(reason){
      return findOtherAuther();
    }).finally(function(){
      // author was either found, or not
    });
    ```
  
    @method finally
    @param {Function} callback
    @return {Promise}
  */


  Promise.prototype.finally = function _finally(callback) {
    var promise = this;
    var constructor = promise.constructor;

    return promise.then(function (value) {
      return constructor.resolve(callback()).then(function () {
        return value;
      });
    }, function (reason) {
      return constructor.resolve(callback()).then(function () {
        throw reason;
      });
    });
  };

  return Promise;
}();

Promise$1.prototype.then = then;
Promise$1.all = all;
Promise$1.race = race;
Promise$1.resolve = resolve$1;
Promise$1.reject = reject$1;
Promise$1._setScheduler = setScheduler;
Promise$1._setAsap = setAsap;
Promise$1._asap = asap;

/*global self*/
function polyfill() {
  var local = void 0;

  if (typeof global !== 'undefined') {
    local = global;
  } else if (typeof self !== 'undefined') {
    local = self;
  } else {
    try {
      local = Function('return this')();
    } catch (e) {
      throw new Error('polyfill failed because global object is unavailable in this environment');
    }
  }

  var P = local.Promise;

  if (P) {
    var promiseToString = null;
    try {
      promiseToString = Object.prototype.toString.call(P.resolve());
    } catch (e) {
      // silently ignored
    }

    if (promiseToString === '[object Promise]' && !P.cast) {
      return;
    }
  }

  local.Promise = Promise$1;
}

// Strange compat..
Promise$1.polyfill = polyfill;
Promise$1.Promise = Promise$1;

return Promise$1;

})));



//# sourceMappingURL=es6-promise.map

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(99), __webpack_require__(11)))

/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports['default'] = getDynamicStyles;
/**
 * Extracts a styles object with only props that contain function values.
 */
function getDynamicStyles(styles) {
  var to = null;

  for (var key in styles) {
    var value = styles[key];
    var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);

    if (type === 'function') {
      if (!to) to = {};
      to[key] = value;
    } else if (type === 'object' && value !== null && !Array.isArray(value)) {
      var extracted = getDynamicStyles(value);
      if (extracted) {
        if (!to) to = {};
        to[key] = extracted;
      }
    }
  }

  return to;
}

/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _warning = __webpack_require__(21);

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * SheetsManager is like a WeakMap which is designed to count StyleSheet
 * instances and attach/detach automatically.
 */
var SheetsManager = function () {
  function SheetsManager() {
    _classCallCheck(this, SheetsManager);

    this.sheets = [];
    this.refs = [];
    this.keys = [];
  }

  _createClass(SheetsManager, [{
    key: 'get',
    value: function get(key) {
      var index = this.keys.indexOf(key);
      return this.sheets[index];
    }
  }, {
    key: 'add',
    value: function add(key, sheet) {
      var sheets = this.sheets,
          refs = this.refs,
          keys = this.keys;

      var index = sheets.indexOf(sheet);

      if (index !== -1) return index;

      sheets.push(sheet);
      refs.push(0);
      keys.push(key);

      return sheets.length - 1;
    }
  }, {
    key: 'manage',
    value: function manage(key) {
      var index = this.keys.indexOf(key);
      var sheet = this.sheets[index];
      if (this.refs[index] === 0) sheet.attach();
      this.refs[index]++;
      if (!this.keys[index]) this.keys.splice(index, 0, key);
      return sheet;
    }
  }, {
    key: 'unmanage',
    value: function unmanage(key) {
      var index = this.keys.indexOf(key);
      if (index === -1) {
        // eslint-ignore-next-line no-console
        (0, _warning2['default'])(false, "SheetsManager: can't find sheet to unmanage");
        return;
      }
      if (this.refs[index] > 0) {
        this.refs[index]--;
        if (this.refs[index] === 0) this.sheets[index].detach();
      }
    }
  }, {
    key: 'size',
    get: function get() {
      return this.keys.length;
    }
  }]);

  return SheetsManager;
}();

exports['default'] = SheetsManager;

/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports['default'] = cloneStyle;

var _isObservable = __webpack_require__(148);

var _isObservable2 = _interopRequireDefault(_isObservable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var isArray = Array.isArray;
function cloneStyle(style) {
  // Support empty values in case user ends up with them by accident.
  if (style == null) return style;

  // Support string value for SimpleRule.
  var typeOfStyle = typeof style === 'undefined' ? 'undefined' : _typeof(style);

  if (typeOfStyle === 'string' || typeOfStyle === 'number' || typeOfStyle === 'function') {
    return style;
  }

  // Support array for FontFaceRule.
  if (isArray(style)) return style.map(cloneStyle);

  // Support Observable styles.  Observables are immutable, so we don't need to
  // copy them.
  if ((0, _isObservable2['default'])(style)) return style;

  var newStyle = {};
  for (var name in style) {
    var value = style[name];
    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
      newStyle[name] = cloneStyle(value);
      continue;
    }
    newStyle[name] = value;
  }

  return newStyle;
}

/***/ }),
/* 267 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global, module) {/* harmony import */ var _ponyfill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(228);
/* global window */


var root;

if (typeof self !== 'undefined') {
  root = self;
} else if (typeof window !== 'undefined') {
  root = window;
} else if (typeof global !== 'undefined') {
  root = global;
} else if (true) {
  root = module;
} else {}

var result = Object(_ponyfill_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(root);
/* harmony default export */ __webpack_exports__["default"] = (result);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(11), __webpack_require__(268)(module)))

/***/ }),
/* 268 */
/***/ (function(module, exports) {

module.exports = function(originalModule) {
	if (!originalModule.webpackPolyfill) {
		var module = Object.create(originalModule);
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		Object.defineProperty(module, "exports", {
			enumerable: true
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
var CSS = global.CSS;

var env = "production";

var escapeRegex = /([[\].#*$><+~=|^:(),"'`])/g;

exports['default'] = function (str) {
  // We don't need to escape it in production, because we are not using user's
  // input for selectors, we are generating a valid selector.
  if (env === 'production') return str;

  if (!CSS || !CSS.escape) {
    return str.replace(escapeRegex, '\\$1');
  }

  return CSS.escape(str);
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(11)))

/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
var ns = '2f1acc6c3a606b082e5eef5e54414ffb';
if (global[ns] == null) global[ns] = 0;

// Bundle may contain multiple JSS versions at the same time. In order to identify
// the current version with just one short number and use it for classes generation
// we use a counter. Also it is more accurate, because user can manually reevaluate
// the module.
exports['default'] = global[ns]++;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(11)))

/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _isInBrowser = __webpack_require__(272);

var _isInBrowser2 = _interopRequireDefault(_isInBrowser);

var _StyleSheet = __webpack_require__(151);

var _StyleSheet2 = _interopRequireDefault(_StyleSheet);

var _PluginsRegistry = __webpack_require__(273);

var _PluginsRegistry2 = _interopRequireDefault(_PluginsRegistry);

var _rules = __webpack_require__(274);

var _rules2 = _interopRequireDefault(_rules);

var _observables = __webpack_require__(280);

var _observables2 = _interopRequireDefault(_observables);

var _functions = __webpack_require__(281);

var _functions2 = _interopRequireDefault(_functions);

var _sheets = __webpack_require__(101);

var _sheets2 = _interopRequireDefault(_sheets);

var _StyleRule = __webpack_require__(37);

var _StyleRule2 = _interopRequireDefault(_StyleRule);

var _createGenerateClassName = __webpack_require__(150);

var _createGenerateClassName2 = _interopRequireDefault(_createGenerateClassName);

var _createRule2 = __webpack_require__(62);

var _createRule3 = _interopRequireDefault(_createRule2);

var _DomRenderer = __webpack_require__(282);

var _DomRenderer2 = _interopRequireDefault(_DomRenderer);

var _VirtualRenderer = __webpack_require__(283);

var _VirtualRenderer2 = _interopRequireDefault(_VirtualRenderer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var defaultPlugins = _rules2['default'].concat([_observables2['default'], _functions2['default']]);

var instanceCounter = 0;

var Jss = function () {
  function Jss(options) {
    _classCallCheck(this, Jss);

    this.id = instanceCounter++;
    this.version = "9.8.7";
    this.plugins = new _PluginsRegistry2['default']();
    this.options = {
      createGenerateClassName: _createGenerateClassName2['default'],
      Renderer: _isInBrowser2['default'] ? _DomRenderer2['default'] : _VirtualRenderer2['default'],
      plugins: []
    };
    this.generateClassName = (0, _createGenerateClassName2['default'])();

    // eslint-disable-next-line prefer-spread
    this.use.apply(this, defaultPlugins);
    this.setup(options);
  }

  _createClass(Jss, [{
    key: 'setup',
    value: function setup() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      if (options.createGenerateClassName) {
        this.options.createGenerateClassName = options.createGenerateClassName;
        // $FlowFixMe
        this.generateClassName = options.createGenerateClassName();
      }

      if (options.insertionPoint != null) this.options.insertionPoint = options.insertionPoint;
      if (options.virtual || options.Renderer) {
        this.options.Renderer = options.Renderer || (options.virtual ? _VirtualRenderer2['default'] : _DomRenderer2['default']);
      }

      // eslint-disable-next-line prefer-spread
      if (options.plugins) this.use.apply(this, options.plugins);

      return this;
    }

    /**
     * Create a Style Sheet.
     */

  }, {
    key: 'createStyleSheet',
    value: function createStyleSheet(styles) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var index = options.index;
      if (typeof index !== 'number') {
        index = _sheets2['default'].index === 0 ? 0 : _sheets2['default'].index + 1;
      }
      var sheet = new _StyleSheet2['default'](styles, _extends({}, options, {
        jss: this,
        generateClassName: options.generateClassName || this.generateClassName,
        insertionPoint: this.options.insertionPoint,
        Renderer: this.options.Renderer,
        index: index
      }));
      this.plugins.onProcessSheet(sheet);

      return sheet;
    }

    /**
     * Detach the Style Sheet and remove it from the registry.
     */

  }, {
    key: 'removeStyleSheet',
    value: function removeStyleSheet(sheet) {
      sheet.detach();
      _sheets2['default'].remove(sheet);
      return this;
    }

    /**
     * Create a rule without a Style Sheet.
     */

  }, {
    key: 'createRule',
    value: function createRule(name) {
      var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      // Enable rule without name for inline styles.
      if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object') {
        options = style;
        style = name;
        name = undefined;
      }

      // Cast from RuleFactoryOptions to RuleOptions
      // https://stackoverflow.com/questions/41328728/force-casting-in-flow
      var ruleOptions = options;

      ruleOptions.jss = this;
      ruleOptions.Renderer = this.options.Renderer;
      if (!ruleOptions.generateClassName) ruleOptions.generateClassName = this.generateClassName;
      if (!ruleOptions.classes) ruleOptions.classes = {};
      var rule = (0, _createRule3['default'])(name, style, ruleOptions);

      if (!ruleOptions.selector && rule instanceof _StyleRule2['default']) {
        rule.selector = '.' + ruleOptions.generateClassName(rule);
      }

      this.plugins.onProcessRule(rule);

      return rule;
    }

    /**
     * Register plugin. Passed function will be invoked with a rule instance.
     */

  }, {
    key: 'use',
    value: function use() {
      var _this = this;

      for (var _len = arguments.length, plugins = Array(_len), _key = 0; _key < _len; _key++) {
        plugins[_key] = arguments[_key];
      }

      plugins.forEach(function (plugin) {
        // Avoids applying same plugin twice, at least based on ref.
        if (_this.options.plugins.indexOf(plugin) === -1) {
          _this.options.plugins.push(plugin);
          _this.plugins.use(plugin);
        }
      });

      return this;
    }
  }]);

  return Jss;
}();

exports['default'] = Jss;

/***/ }),
/* 272 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBrowser", function() { return isBrowser; });
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var isBrowser = (typeof window === "undefined" ? "undefined" : _typeof(window)) === "object" && (typeof document === "undefined" ? "undefined" : _typeof(document)) === 'object' && document.nodeType === 9;

/* harmony default export */ __webpack_exports__["default"] = (isBrowser);


/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _warning = __webpack_require__(21);

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var PluginsRegistry = function () {
  function PluginsRegistry() {
    _classCallCheck(this, PluginsRegistry);

    this.hooks = {
      onCreateRule: [],
      onProcessRule: [],
      onProcessStyle: [],
      onProcessSheet: [],
      onChangeValue: [],
      onUpdate: []

      /**
       * Call `onCreateRule` hooks and return an object if returned by a hook.
       */
    };
  }

  _createClass(PluginsRegistry, [{
    key: 'onCreateRule',
    value: function onCreateRule(name, decl, options) {
      for (var i = 0; i < this.hooks.onCreateRule.length; i++) {
        var rule = this.hooks.onCreateRule[i](name, decl, options);
        if (rule) return rule;
      }
      return null;
    }

    /**
     * Call `onProcessRule` hooks.
     */

  }, {
    key: 'onProcessRule',
    value: function onProcessRule(rule) {
      if (rule.isProcessed) return;
      var sheet = rule.options.sheet;

      for (var i = 0; i < this.hooks.onProcessRule.length; i++) {
        this.hooks.onProcessRule[i](rule, sheet);
      }

      // $FlowFixMe
      if (rule.style) this.onProcessStyle(rule.style, rule, sheet);

      rule.isProcessed = true;
    }

    /**
     * Call `onProcessStyle` hooks.
     */

  }, {
    key: 'onProcessStyle',
    value: function onProcessStyle(style, rule, sheet) {
      var nextStyle = style;

      for (var i = 0; i < this.hooks.onProcessStyle.length; i++) {
        nextStyle = this.hooks.onProcessStyle[i](nextStyle, rule, sheet);
        // $FlowFixMe
        rule.style = nextStyle;
      }
    }

    /**
     * Call `onProcessSheet` hooks.
     */

  }, {
    key: 'onProcessSheet',
    value: function onProcessSheet(sheet) {
      for (var i = 0; i < this.hooks.onProcessSheet.length; i++) {
        this.hooks.onProcessSheet[i](sheet);
      }
    }

    /**
     * Call `onUpdate` hooks.
     */

  }, {
    key: 'onUpdate',
    value: function onUpdate(data, rule, sheet) {
      for (var i = 0; i < this.hooks.onUpdate.length; i++) {
        this.hooks.onUpdate[i](data, rule, sheet);
      }
    }

    /**
     * Call `onChangeValue` hooks.
     */

  }, {
    key: 'onChangeValue',
    value: function onChangeValue(value, prop, rule) {
      var processedValue = value;
      for (var i = 0; i < this.hooks.onChangeValue.length; i++) {
        processedValue = this.hooks.onChangeValue[i](processedValue, prop, rule);
      }
      return processedValue;
    }

    /**
     * Register a plugin.
     * If function is passed, it is a shortcut for `{onProcessRule}`.
     */

  }, {
    key: 'use',
    value: function use(plugin) {
      for (var name in plugin) {
        if (this.hooks[name]) this.hooks[name].push(plugin[name]);else (0, _warning2['default'])(false, '[JSS] Unknown hook "%s".', name);
      }
    }
  }]);

  return PluginsRegistry;
}();

exports['default'] = PluginsRegistry;

/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _SimpleRule = __webpack_require__(275);

var _SimpleRule2 = _interopRequireDefault(_SimpleRule);

var _KeyframesRule = __webpack_require__(276);

var _KeyframesRule2 = _interopRequireDefault(_KeyframesRule);

var _ConditionalRule = __webpack_require__(277);

var _ConditionalRule2 = _interopRequireDefault(_ConditionalRule);

var _FontFaceRule = __webpack_require__(278);

var _FontFaceRule2 = _interopRequireDefault(_FontFaceRule);

var _ViewportRule = __webpack_require__(279);

var _ViewportRule2 = _interopRequireDefault(_ViewportRule);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var classes = {
  '@charset': _SimpleRule2['default'],
  '@import': _SimpleRule2['default'],
  '@namespace': _SimpleRule2['default'],
  '@keyframes': _KeyframesRule2['default'],
  '@media': _ConditionalRule2['default'],
  '@supports': _ConditionalRule2['default'],
  '@font-face': _FontFaceRule2['default'],
  '@viewport': _ViewportRule2['default'],
  '@-ms-viewport': _ViewportRule2['default']

  /**
   * Generate plugins which will register all rules.
   */
};
var plugins = Object.keys(classes).map(function (key) {
  // https://jsperf.com/indexof-vs-substr-vs-regex-at-the-beginning-3
  var re = new RegExp('^' + key);
  var RuleClass = classes[key];
  var onCreateRule = function onCreateRule(name, decl, options) {
    return re.test(name) ? new RuleClass(name, decl, options) : null;
  };
  return { onCreateRule: onCreateRule };
});

exports['default'] = plugins;

/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var SimpleRule = function () {
  function SimpleRule(key, value, options) {
    _classCallCheck(this, SimpleRule);

    this.type = 'simple';
    this.isProcessed = false;

    this.key = key;
    this.value = value;
    this.options = options;
  }

  /**
   * Generates a CSS string.
   */
  // eslint-disable-next-line no-unused-vars


  _createClass(SimpleRule, [{
    key: 'toString',
    value: function toString(options) {
      if (Array.isArray(this.value)) {
        var str = '';
        for (var index = 0; index < this.value.length; index++) {
          str += this.key + ' ' + this.value[index] + ';';
          if (this.value[index + 1]) str += '\n';
        }
        return str;
      }

      return this.key + ' ' + this.value + ';';
    }
  }]);

  return SimpleRule;
}();

exports['default'] = SimpleRule;

/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _RuleList = __webpack_require__(49);

var _RuleList2 = _interopRequireDefault(_RuleList);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Rule for @keyframes
 */
var KeyframesRule = function () {
  function KeyframesRule(key, frames, options) {
    _classCallCheck(this, KeyframesRule);

    this.type = 'keyframes';
    this.isProcessed = false;

    this.key = key;
    this.options = options;
    this.rules = new _RuleList2['default'](_extends({}, options, { parent: this }));

    for (var name in frames) {
      this.rules.add(name, frames[name], _extends({}, this.options, {
        parent: this,
        selector: name
      }));
    }

    this.rules.process();
  }

  /**
   * Generates a CSS string.
   */


  _createClass(KeyframesRule, [{
    key: 'toString',
    value: function toString() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { indent: 1 };

      var inner = this.rules.toString(options);
      if (inner) inner += '\n';
      return this.key + ' {\n' + inner + '}';
    }
  }]);

  return KeyframesRule;
}();

exports['default'] = KeyframesRule;

/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _RuleList = __webpack_require__(49);

var _RuleList2 = _interopRequireDefault(_RuleList);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Conditional rule for @media, @supports
 */
var ConditionalRule = function () {
  function ConditionalRule(key, styles, options) {
    _classCallCheck(this, ConditionalRule);

    this.type = 'conditional';
    this.isProcessed = false;

    this.key = key;
    this.options = options;
    this.rules = new _RuleList2['default'](_extends({}, options, { parent: this }));

    for (var name in styles) {
      this.rules.add(name, styles[name]);
    }

    this.rules.process();
  }

  /**
   * Get a rule.
   */


  _createClass(ConditionalRule, [{
    key: 'getRule',
    value: function getRule(name) {
      return this.rules.get(name);
    }

    /**
     * Get index of a rule.
     */

  }, {
    key: 'indexOf',
    value: function indexOf(rule) {
      return this.rules.indexOf(rule);
    }

    /**
     * Create and register rule, run plugins.
     */

  }, {
    key: 'addRule',
    value: function addRule(name, style, options) {
      var rule = this.rules.add(name, style, options);
      this.options.jss.plugins.onProcessRule(rule);
      return rule;
    }

    /**
     * Generates a CSS string.
     */

  }, {
    key: 'toString',
    value: function toString() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { indent: 1 };

      var inner = this.rules.toString(options);
      return inner ? this.key + ' {\n' + inner + '\n}' : '';
    }
  }]);

  return ConditionalRule;
}();

exports['default'] = ConditionalRule;

/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _toCss = __webpack_require__(100);

var _toCss2 = _interopRequireDefault(_toCss);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var FontFaceRule = function () {
  function FontFaceRule(key, style, options) {
    _classCallCheck(this, FontFaceRule);

    this.type = 'font-face';
    this.isProcessed = false;

    this.key = key;
    this.style = style;
    this.options = options;
  }

  /**
   * Generates a CSS string.
   */


  _createClass(FontFaceRule, [{
    key: 'toString',
    value: function toString(options) {
      if (Array.isArray(this.style)) {
        var str = '';
        for (var index = 0; index < this.style.length; index++) {
          str += (0, _toCss2['default'])(this.key, this.style[index]);
          if (this.style[index + 1]) str += '\n';
        }
        return str;
      }

      return (0, _toCss2['default'])(this.key, this.style, options);
    }
  }]);

  return FontFaceRule;
}();

exports['default'] = FontFaceRule;

/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _toCss = __webpack_require__(100);

var _toCss2 = _interopRequireDefault(_toCss);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ViewportRule = function () {
  function ViewportRule(key, style, options) {
    _classCallCheck(this, ViewportRule);

    this.type = 'viewport';
    this.isProcessed = false;

    this.key = key;
    this.style = style;
    this.options = options;
  }

  /**
   * Generates a CSS string.
   */


  _createClass(ViewportRule, [{
    key: 'toString',
    value: function toString(options) {
      return (0, _toCss2['default'])(this.key, this.style, options);
    }
  }]);

  return ViewportRule;
}();

exports['default'] = ViewportRule;

/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _StyleRule = __webpack_require__(37);

var _StyleRule2 = _interopRequireDefault(_StyleRule);

var _createRule = __webpack_require__(62);

var _createRule2 = _interopRequireDefault(_createRule);

var _isObservable = __webpack_require__(148);

var _isObservable2 = _interopRequireDefault(_isObservable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

exports['default'] = {
  onCreateRule: function onCreateRule(name, decl, options) {
    if (!(0, _isObservable2['default'])(decl)) return null;

    // Cast `decl` to `Observable`, since it passed the type guard.
    var style$ = decl;

    var rule = (0, _createRule2['default'])(name, {}, options);

    // TODO
    // Call `stream.subscribe()` returns a subscription, which should be explicitly
    // unsubscribed from when we know this sheet is no longer needed.
    style$.subscribe(function (style) {
      for (var prop in style) {
        rule.prop(prop, style[prop]);
      }
    });

    return rule;
  },
  onProcessRule: function onProcessRule(rule) {
    if (!(rule instanceof _StyleRule2['default'])) return;
    var styleRule = rule;
    var style = styleRule.style;

    var _loop = function _loop(prop) {
      var value = style[prop];
      if (!(0, _isObservable2['default'])(value)) return 'continue';
      delete style[prop];
      value.subscribe({
        next: function next(nextValue) {
          styleRule.prop(prop, nextValue);
        }
      });
    };

    for (var prop in style) {
      var _ret = _loop(prop);

      if (_ret === 'continue') continue;
    }
  }
};

/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _RuleList = __webpack_require__(49);

var _RuleList2 = _interopRequireDefault(_RuleList);

var _StyleRule = __webpack_require__(37);

var _StyleRule2 = _interopRequireDefault(_StyleRule);

var _createRule = __webpack_require__(62);

var _createRule2 = _interopRequireDefault(_createRule);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

// A symbol replacement.
var now = Date.now();

var fnValuesNs = 'fnValues' + now;
var fnStyleNs = 'fnStyle' + ++now;

exports['default'] = {
  onCreateRule: function onCreateRule(name, decl, options) {
    if (typeof decl !== 'function') return null;
    var rule = (0, _createRule2['default'])(name, {}, options);
    rule[fnStyleNs] = decl;
    return rule;
  },
  onProcessStyle: function onProcessStyle(style, rule) {
    var fn = {};
    for (var prop in style) {
      var value = style[prop];
      if (typeof value !== 'function') continue;
      delete style[prop];
      fn[prop] = value;
    }
    rule = rule;
    rule[fnValuesNs] = fn;
    return style;
  },
  onUpdate: function onUpdate(data, rule) {
    // It is a rules container like for e.g. ConditionalRule.
    if (rule.rules instanceof _RuleList2['default']) {
      rule.rules.update(data);
      return;
    }
    if (!(rule instanceof _StyleRule2['default'])) return;

    rule = rule;

    // If we have a fn values map, it is a rule with function values.
    if (rule[fnValuesNs]) {
      for (var prop in rule[fnValuesNs]) {
        rule.prop(prop, rule[fnValuesNs][prop](data));
      }
    }

    rule = rule;

    var fnStyle = rule[fnStyleNs];

    // If we have a style function, the entire rule is dynamic and style object
    // will be returned from that function.
    if (fnStyle) {
      var style = fnStyle(data);
      for (var _prop in style) {
        rule.prop(_prop, style[_prop]);
      }
    }
  }
};

/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _warning = __webpack_require__(21);

var _warning2 = _interopRequireDefault(_warning);

var _sheets = __webpack_require__(101);

var _sheets2 = _interopRequireDefault(_sheets);

var _StyleRule = __webpack_require__(37);

var _StyleRule2 = _interopRequireDefault(_StyleRule);

var _toCssValue = __webpack_require__(61);

var _toCssValue2 = _interopRequireDefault(_toCssValue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Cache the value from the first time a function is called.
 */
var memoize = function memoize(fn) {
  var value = void 0;
  return function () {
    if (!value) value = fn();
    return value;
  };
};

/**
 * Get a style property value.
 */
function getPropertyValue(cssRule, prop) {
  try {
    return cssRule.style.getPropertyValue(prop);
  } catch (err) {
    // IE may throw if property is unknown.
    return '';
  }
}

/**
 * Set a style property.
 */
function setProperty(cssRule, prop, value) {
  try {
    var cssValue = value;

    if (Array.isArray(value)) {
      cssValue = (0, _toCssValue2['default'])(value, true);

      if (value[value.length - 1] === '!important') {
        cssRule.style.setProperty(prop, cssValue, 'important');
        return true;
      }
    }

    cssRule.style.setProperty(prop, cssValue);
  } catch (err) {
    // IE may throw if property is unknown.
    return false;
  }
  return true;
}

/**
 * Remove a style property.
 */
function removeProperty(cssRule, prop) {
  try {
    cssRule.style.removeProperty(prop);
  } catch (err) {
    (0, _warning2['default'])(false, '[JSS] DOMException "%s" was thrown. Tried to remove property "%s".', err.message, prop);
  }
}

var CSSRuleTypes = {
  STYLE_RULE: 1,
  KEYFRAMES_RULE: 7

  /**
   * Get the CSS Rule key.
   */

};var getKey = function () {
  var extractKey = function extractKey(cssText) {
    var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    return cssText.substr(from, cssText.indexOf('{') - 1);
  };

  return function (cssRule) {
    if (cssRule.type === CSSRuleTypes.STYLE_RULE) return cssRule.selectorText;
    if (cssRule.type === CSSRuleTypes.KEYFRAMES_RULE) {
      var name = cssRule.name;

      if (name) return '@keyframes ' + name;

      // There is no rule.name in the following browsers:
      // - IE 9
      // - Safari 7.1.8
      // - Mobile Safari 9.0.0
      var cssText = cssRule.cssText;

      return '@' + extractKey(cssText, cssText.indexOf('keyframes'));
    }

    // Conditionals.
    return extractKey(cssRule.cssText);
  };
}();

/**
 * Set the selector.
 */
function setSelector(cssRule, selectorText) {
  cssRule.selectorText = selectorText;

  // Return false if setter was not successful.
  // Currently works in chrome only.
  return cssRule.selectorText === selectorText;
}

/**
 * Gets the `head` element upon the first call and caches it.
 */
var getHead = memoize(function () {
  return document.head || document.getElementsByTagName('head')[0];
});

/**
 * Gets a map of rule keys, where the property is an unescaped key and value
 * is a potentially escaped one.
 * It is used to identify CSS rules and the corresponding JSS rules. As an identifier
 * for CSSStyleRule we normally use `selectorText`. Though if original selector text
 * contains escaped code points e.g. `:not(#\\20)`, CSSOM will compile it to `:not(# )`
 * and so CSS rule's `selectorText` won't match JSS rule selector.
 *
 * https://www.w3.org/International/questions/qa-escapes#cssescapes
 */
var getUnescapedKeysMap = function () {
  var style = void 0;
  var isAttached = false;

  return function (rules) {
    var map = {};
    // https://github.com/facebook/flow/issues/2696
    if (!style) style = document.createElement('style');
    for (var i = 0; i < rules.length; i++) {
      var rule = rules[i];
      if (!(rule instanceof _StyleRule2['default'])) continue;
      var selector = rule.selector;
      // Only unescape selector over CSSOM if it contains a back slash.

      if (selector && selector.indexOf('\\') !== -1) {
        // Lazilly attach when needed.
        if (!isAttached) {
          getHead().appendChild(style);
          isAttached = true;
        }
        style.textContent = selector + ' {}';
        var _style = style,
            sheet = _style.sheet;

        if (sheet) {
          var cssRules = sheet.cssRules;

          if (cssRules) map[cssRules[0].selectorText] = rule.key;
        }
      }
    }
    if (isAttached) {
      getHead().removeChild(style);
      isAttached = false;
    }
    return map;
  };
}();

/**
 * Find attached sheet with an index higher than the passed one.
 */
function findHigherSheet(registry, options) {
  for (var i = 0; i < registry.length; i++) {
    var sheet = registry[i];
    if (sheet.attached && sheet.options.index > options.index && sheet.options.insertionPoint === options.insertionPoint) {
      return sheet;
    }
  }
  return null;
}

/**
 * Find attached sheet with the highest index.
 */
function findHighestSheet(registry, options) {
  for (var i = registry.length - 1; i >= 0; i--) {
    var sheet = registry[i];
    if (sheet.attached && sheet.options.insertionPoint === options.insertionPoint) {
      return sheet;
    }
  }
  return null;
}

/**
 * Find a comment with "jss" inside.
 */
function findCommentNode(text) {
  var head = getHead();
  for (var i = 0; i < head.childNodes.length; i++) {
    var node = head.childNodes[i];
    if (node.nodeType === 8 && node.nodeValue.trim() === text) {
      return node;
    }
  }
  return null;
}

/**
 * Find a node before which we can insert the sheet.
 */
function findPrevNode(options) {
  var registry = _sheets2['default'].registry;


  if (registry.length > 0) {
    // Try to insert before the next higher sheet.
    var sheet = findHigherSheet(registry, options);
    if (sheet) return sheet.renderer.element;

    // Otherwise insert after the last attached.
    sheet = findHighestSheet(registry, options);
    if (sheet) return sheet.renderer.element.nextElementSibling;
  }

  // Try to find a comment placeholder if registry is empty.
  var insertionPoint = options.insertionPoint;

  if (insertionPoint && typeof insertionPoint === 'string') {
    var comment = findCommentNode(insertionPoint);
    if (comment) return comment.nextSibling;
    // If user specifies an insertion point and it can't be found in the document -
    // bad specificity issues may appear.
    (0, _warning2['default'])(insertionPoint === 'jss', '[JSS] Insertion point "%s" not found.', insertionPoint);
  }

  return null;
}

/**
 * Insert style element into the DOM.
 */
function insertStyle(style, options) {
  var insertionPoint = options.insertionPoint;

  var prevNode = findPrevNode(options);

  if (prevNode) {
    var parentNode = prevNode.parentNode;

    if (parentNode) parentNode.insertBefore(style, prevNode);
    return;
  }

  // Works with iframes and any node types.
  if (insertionPoint && typeof insertionPoint.nodeType === 'number') {
    // https://stackoverflow.com/questions/41328728/force-casting-in-flow
    var insertionPointElement = insertionPoint;
    var _parentNode = insertionPointElement.parentNode;

    if (_parentNode) _parentNode.insertBefore(style, insertionPointElement.nextSibling);else (0, _warning2['default'])(false, '[JSS] Insertion point is not in the DOM.');
    return;
  }

  getHead().insertBefore(style, prevNode);
}

/**
 * Read jss nonce setting from the page if the user has set it.
 */
var getNonce = memoize(function () {
  var node = document.querySelector('meta[property="csp-nonce"]');
  return node ? node.getAttribute('content') : null;
});

var DomRenderer = function () {
  function DomRenderer(sheet) {
    _classCallCheck(this, DomRenderer);

    this.getPropertyValue = getPropertyValue;
    this.setProperty = setProperty;
    this.removeProperty = removeProperty;
    this.setSelector = setSelector;
    this.getKey = getKey;
    this.getUnescapedKeysMap = getUnescapedKeysMap;
    this.hasInsertedRules = false;

    // There is no sheet when the renderer is used from a standalone StyleRule.
    if (sheet) _sheets2['default'].add(sheet);

    this.sheet = sheet;

    var _ref = this.sheet ? this.sheet.options : {},
        media = _ref.media,
        meta = _ref.meta,
        element = _ref.element;

    this.element = element || document.createElement('style');
    this.element.setAttribute('data-jss', '');
    if (media) this.element.setAttribute('media', media);
    if (meta) this.element.setAttribute('data-meta', meta);
    var nonce = getNonce();
    if (nonce) this.element.setAttribute('nonce', nonce);
  }

  /**
   * Insert style element into render tree.
   */


  // HTMLStyleElement needs fixing https://github.com/facebook/flow/issues/2696


  _createClass(DomRenderer, [{
    key: 'attach',
    value: function attach() {
      // In the case the element node is external and it is already in the DOM.
      if (this.element.parentNode || !this.sheet) return;

      // When rules are inserted using `insertRule` API, after `sheet.detach().attach()`
      // browsers remove those rules.
      // TODO figure out if its a bug and if it is known.
      // Workaround is to redeploy the sheet before attaching as a string.
      if (this.hasInsertedRules) {
        this.deploy();
        this.hasInsertedRules = false;
      }

      insertStyle(this.element, this.sheet.options);
    }

    /**
     * Remove style element from render tree.
     */

  }, {
    key: 'detach',
    value: function detach() {
      this.element.parentNode.removeChild(this.element);
    }

    /**
     * Inject CSS string into element.
     */

  }, {
    key: 'deploy',
    value: function deploy() {
      if (!this.sheet) return;
      this.element.textContent = '\n' + this.sheet.toString() + '\n';
    }

    /**
     * Insert a rule into element.
     */

  }, {
    key: 'insertRule',
    value: function insertRule(rule, index) {
      var sheet = this.element.sheet;
      var cssRules = sheet.cssRules;

      var str = rule.toString();
      if (!index) index = cssRules.length;

      if (!str) return false;

      try {
        sheet.insertRule(str, index);
      } catch (err) {
        (0, _warning2['default'])(false, '[JSS] Can not insert an unsupported rule \n\r%s', rule);
        return false;
      }
      this.hasInsertedRules = true;

      return cssRules[index];
    }

    /**
     * Delete a rule.
     */

  }, {
    key: 'deleteRule',
    value: function deleteRule(cssRule) {
      var sheet = this.element.sheet;

      var index = this.indexOf(cssRule);
      if (index === -1) return false;
      sheet.deleteRule(index);
      return true;
    }

    /**
     * Get index of a CSS Rule.
     */

  }, {
    key: 'indexOf',
    value: function indexOf(cssRule) {
      var cssRules = this.element.sheet.cssRules;

      for (var _index = 0; _index < cssRules.length; _index++) {
        if (cssRule === cssRules[_index]) return _index;
      }
      return -1;
    }

    /**
     * Generate a new CSS rule and replace the existing one.
     */

  }, {
    key: 'replaceRule',
    value: function replaceRule(cssRule, rule) {
      var index = this.indexOf(cssRule);
      var newCssRule = this.insertRule(rule, index);
      this.element.sheet.deleteRule(index);
      return newCssRule;
    }

    /**
     * Get all rules elements.
     */

  }, {
    key: 'getRules',
    value: function getRules() {
      return this.element.sheet.cssRules;
    }
  }]);

  return DomRenderer;
}();

exports['default'] = DomRenderer;

/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/* eslint-disable class-methods-use-this */

/**
 * Rendering backend to do nothing in nodejs.
 */
var VirtualRenderer = function () {
  function VirtualRenderer() {
    _classCallCheck(this, VirtualRenderer);
  }

  _createClass(VirtualRenderer, [{
    key: 'setProperty',
    value: function setProperty() {
      return true;
    }
  }, {
    key: 'getPropertyValue',
    value: function getPropertyValue() {
      return '';
    }
  }, {
    key: 'removeProperty',
    value: function removeProperty() {}
  }, {
    key: 'setSelector',
    value: function setSelector() {
      return true;
    }
  }, {
    key: 'getKey',
    value: function getKey() {
      return '';
    }
  }, {
    key: 'attach',
    value: function attach() {}
  }, {
    key: 'detach',
    value: function detach() {}
  }, {
    key: 'deploy',
    value: function deploy() {}
  }, {
    key: 'insertRule',
    value: function insertRule() {
      return false;
    }
  }, {
    key: 'deleteRule',
    value: function deleteRule() {
      return true;
    }
  }, {
    key: 'replaceRule',
    value: function replaceRule() {
      return false;
    }
  }, {
    key: 'getRules',
    value: function getRules() {}
  }, {
    key: 'indexOf',
    value: function indexOf() {
      return -1;
    }
  }]);

  return VirtualRenderer;
}();

exports['default'] = VirtualRenderer;

/***/ }),
/* 284 */
/***/ (function(module, exports) {

module.exports = {
  "azimuth": "center",
  "border-collapse": "separate",
  "border-spacing": "0",
  "caption-side": "top",
  "caret-color": "auto",
  "color": "initial",
  "cursor": "auto",
  "empty-cells": "show",
  "font-family": "initial",
  "font-feature-settings": "normal",
  "font-kerning": "auto",
  "font-language-override": "normal",
  "font-size": "medium",
  "font-size-adjust": "none",
  "font-stretch": "normal",
  "font-style": "normal",
  "font-synthesis": "weight style",
  "font-variant": "normal",
  "font-variant-alternates": "normal",
  "font-variant-caps": "normal",
  "font-variant-east-asian": "normal",
  "font-variant-ligatures": "normal",
  "font-variant-numeric": "normal",
  "font-variant-position": "normal",
  "font-weight": "normal",
  "hyphens": "manual",
  "image-orientation": "0deg",
  "image-rendering": "auto",
  "image-resolution": "1dppx",
  "letter-spacing": "normal",
  "line-height": "normal",
  "list-style-image": "none",
  "list-style-position": "outside",
  "list-style-type": "disc",
  "object-position": "50% 50%",
  "orphans": "2",
  "overflow-wrap": "normal",
  "pointer-events": "auto",
  "quotes": "initial",
  "ruby-align": "space-around",
  "ruby-merge": "separate",
  "ruby-position": "over",
  "tab-size": "8",
  "text-align": "initial",
  "text-align-last": "auto",
  "text-combine-upright": "none",
  "text-indent": "0",
  "text-justify": "auto",
  "text-orientation": "mixed",
  "text-rendering": "auto",
  "text-shadow": "none",
  "text-transform": "none",
  "text-underline-position": "auto",
  "visibility": "visible",
  "white-space": "normal",
  "widows": "2",
  "word-break": "normal",
  "word-spacing": "normal",
  "word-wrap": "normal",
  "writing-mode": "horizontal-tb",
  "-webkit-appearance": "none",
  "-moz-appearance": "none",
  "-ms-appearance": "none",
  "appearance": "none"
};

/***/ }),
/* 285 */
/***/ (function(module, exports) {

module.exports = {
  "align-content": "stretch",
  "align-items": "stretch",
  "align-self": "auto",
  "animation-delay": "0s",
  "animation-direction": "normal",
  "animation-duration": "0s",
  "animation-fill-mode": "none",
  "animation-iteration-count": "1",
  "animation-name": "none",
  "animation-play-state": "running",
  "animation-timing-function": "ease",
  "azimuth": "center",
  "backface-visibility": "visible",
  "background-attachment": "scroll",
  "background-blend-mode": "normal",
  "background-clip": "border-box",
  "background-color": "transparent",
  "background-image": "none",
  "background-origin": "padding-box",
  "background-position": "0% 0%",
  "background-repeat": "repeat",
  "background-size": "auto auto",
  "block-size": "auto",
  "border-block-end-color": "currentcolor",
  "border-block-end-style": "none",
  "border-block-end-width": "medium",
  "border-block-start-color": "currentcolor",
  "border-block-start-style": "none",
  "border-block-start-width": "medium",
  "border-bottom-color": "currentcolor",
  "border-bottom-left-radius": "0",
  "border-bottom-right-radius": "0",
  "border-bottom-style": "none",
  "border-bottom-width": "medium",
  "border-collapse": "separate",
  "border-image-outset": "0s",
  "border-image-repeat": "stretch",
  "border-image-slice": "100%",
  "border-image-source": "none",
  "border-image-width": "1",
  "border-inline-end-color": "currentcolor",
  "border-inline-end-style": "none",
  "border-inline-end-width": "medium",
  "border-inline-start-color": "currentcolor",
  "border-inline-start-style": "none",
  "border-inline-start-width": "medium",
  "border-left-color": "currentcolor",
  "border-left-style": "none",
  "border-left-width": "medium",
  "border-right-color": "currentcolor",
  "border-right-style": "none",
  "border-right-width": "medium",
  "border-spacing": "0",
  "border-top-color": "currentcolor",
  "border-top-left-radius": "0",
  "border-top-right-radius": "0",
  "border-top-style": "none",
  "border-top-width": "medium",
  "bottom": "auto",
  "box-decoration-break": "slice",
  "box-shadow": "none",
  "box-sizing": "content-box",
  "break-after": "auto",
  "break-before": "auto",
  "break-inside": "auto",
  "caption-side": "top",
  "caret-color": "auto",
  "clear": "none",
  "clip": "auto",
  "clip-path": "none",
  "color": "initial",
  "column-count": "auto",
  "column-fill": "balance",
  "column-gap": "normal",
  "column-rule-color": "currentcolor",
  "column-rule-style": "none",
  "column-rule-width": "medium",
  "column-span": "none",
  "column-width": "auto",
  "content": "normal",
  "counter-increment": "none",
  "counter-reset": "none",
  "cursor": "auto",
  "display": "inline",
  "empty-cells": "show",
  "filter": "none",
  "flex-basis": "auto",
  "flex-direction": "row",
  "flex-grow": "0",
  "flex-shrink": "1",
  "flex-wrap": "nowrap",
  "float": "none",
  "font-family": "initial",
  "font-feature-settings": "normal",
  "font-kerning": "auto",
  "font-language-override": "normal",
  "font-size": "medium",
  "font-size-adjust": "none",
  "font-stretch": "normal",
  "font-style": "normal",
  "font-synthesis": "weight style",
  "font-variant": "normal",
  "font-variant-alternates": "normal",
  "font-variant-caps": "normal",
  "font-variant-east-asian": "normal",
  "font-variant-ligatures": "normal",
  "font-variant-numeric": "normal",
  "font-variant-position": "normal",
  "font-weight": "normal",
  "grid-auto-columns": "auto",
  "grid-auto-flow": "row",
  "grid-auto-rows": "auto",
  "grid-column-end": "auto",
  "grid-column-gap": "0",
  "grid-column-start": "auto",
  "grid-row-end": "auto",
  "grid-row-gap": "0",
  "grid-row-start": "auto",
  "grid-template-areas": "none",
  "grid-template-columns": "none",
  "grid-template-rows": "none",
  "height": "auto",
  "hyphens": "manual",
  "image-orientation": "0deg",
  "image-rendering": "auto",
  "image-resolution": "1dppx",
  "ime-mode": "auto",
  "inline-size": "auto",
  "isolation": "auto",
  "justify-content": "flex-start",
  "left": "auto",
  "letter-spacing": "normal",
  "line-break": "auto",
  "line-height": "normal",
  "list-style-image": "none",
  "list-style-position": "outside",
  "list-style-type": "disc",
  "margin-block-end": "0",
  "margin-block-start": "0",
  "margin-bottom": "0",
  "margin-inline-end": "0",
  "margin-inline-start": "0",
  "margin-left": "0",
  "margin-right": "0",
  "margin-top": "0",
  "mask-clip": "border-box",
  "mask-composite": "add",
  "mask-image": "none",
  "mask-mode": "match-source",
  "mask-origin": "border-box",
  "mask-position": "0% 0%",
  "mask-repeat": "repeat",
  "mask-size": "auto",
  "mask-type": "luminance",
  "max-height": "none",
  "max-width": "none",
  "min-block-size": "0",
  "min-height": "0",
  "min-inline-size": "0",
  "min-width": "0",
  "mix-blend-mode": "normal",
  "object-fit": "fill",
  "object-position": "50% 50%",
  "offset-block-end": "auto",
  "offset-block-start": "auto",
  "offset-inline-end": "auto",
  "offset-inline-start": "auto",
  "opacity": "1.0",
  "order": "0",
  "orphans": "2",
  "outline-color": "initial",
  "outline-offset": "0",
  "outline-style": "none",
  "outline-width": "medium",
  "overflow": "visible",
  "overflow-wrap": "normal",
  "overflow-x": "visible",
  "overflow-y": "visible",
  "padding-block-end": "0",
  "padding-block-start": "0",
  "padding-bottom": "0",
  "padding-inline-end": "0",
  "padding-inline-start": "0",
  "padding-left": "0",
  "padding-right": "0",
  "padding-top": "0",
  "page-break-after": "auto",
  "page-break-before": "auto",
  "page-break-inside": "auto",
  "perspective": "none",
  "perspective-origin": "50% 50%",
  "pointer-events": "auto",
  "position": "static",
  "quotes": "initial",
  "resize": "none",
  "right": "auto",
  "ruby-align": "space-around",
  "ruby-merge": "separate",
  "ruby-position": "over",
  "scroll-behavior": "auto",
  "scroll-snap-coordinate": "none",
  "scroll-snap-destination": "0px 0px",
  "scroll-snap-points-x": "none",
  "scroll-snap-points-y": "none",
  "scroll-snap-type": "none",
  "shape-image-threshold": "0.0",
  "shape-margin": "0",
  "shape-outside": "none",
  "tab-size": "8",
  "table-layout": "auto",
  "text-align": "initial",
  "text-align-last": "auto",
  "text-combine-upright": "none",
  "text-decoration-color": "currentcolor",
  "text-decoration-line": "none",
  "text-decoration-style": "solid",
  "text-emphasis-color": "currentcolor",
  "text-emphasis-position": "over right",
  "text-emphasis-style": "none",
  "text-indent": "0",
  "text-justify": "auto",
  "text-orientation": "mixed",
  "text-overflow": "clip",
  "text-rendering": "auto",
  "text-shadow": "none",
  "text-transform": "none",
  "text-underline-position": "auto",
  "top": "auto",
  "touch-action": "auto",
  "transform": "none",
  "transform-box": "border-box ",
  "transform-origin": "50% 50% 0",
  "transform-style": "flat",
  "transition-delay": "0s",
  "transition-duration": "0s",
  "transition-property": "all",
  "transition-timing-function": "ease",
  "vertical-align": "baseline",
  "visibility": "visible",
  "white-space": "normal",
  "widows": "2",
  "width": "auto",
  "will-change": "auto",
  "word-break": "normal",
  "word-spacing": "normal",
  "word-wrap": "normal",
  "writing-mode": "horizontal-tb",
  "z-index": "auto",
  "-webkit-appearance": "none",
  "-moz-appearance": "none",
  "-ms-appearance": "none",
  "appearance": "none"
};

/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var uppercasePattern = /[A-Z]/g;
var msPattern = /^ms-/;
var cache = {};

function hyphenateStyleName(string) {
    return string in cache
    ? cache[string]
    : cache[string] = string
      .replace(uppercasePattern, '-$&')
      .toLowerCase()
      .replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;


/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * Generated jss-default-unit CSS property units
 *
 * @type object
 */
exports['default'] = {
  'animation-delay': 'ms',
  'animation-duration': 'ms',
  'background-position': 'px',
  'background-position-x': 'px',
  'background-position-y': 'px',
  'background-size': 'px',
  border: 'px',
  'border-bottom': 'px',
  'border-bottom-left-radius': 'px',
  'border-bottom-right-radius': 'px',
  'border-bottom-width': 'px',
  'border-left': 'px',
  'border-left-width': 'px',
  'border-radius': 'px',
  'border-right': 'px',
  'border-right-width': 'px',
  'border-spacing': 'px',
  'border-top': 'px',
  'border-top-left-radius': 'px',
  'border-top-right-radius': 'px',
  'border-top-width': 'px',
  'border-width': 'px',
  'border-after-width': 'px',
  'border-before-width': 'px',
  'border-end-width': 'px',
  'border-horizontal-spacing': 'px',
  'border-start-width': 'px',
  'border-vertical-spacing': 'px',
  bottom: 'px',
  'box-shadow': 'px',
  'column-gap': 'px',
  'column-rule': 'px',
  'column-rule-width': 'px',
  'column-width': 'px',
  'flex-basis': 'px',
  'font-size': 'px',
  'font-size-delta': 'px',
  height: 'px',
  left: 'px',
  'letter-spacing': 'px',
  'logical-height': 'px',
  'logical-width': 'px',
  margin: 'px',
  'margin-after': 'px',
  'margin-before': 'px',
  'margin-bottom': 'px',
  'margin-left': 'px',
  'margin-right': 'px',
  'margin-top': 'px',
  'max-height': 'px',
  'max-width': 'px',
  'margin-end': 'px',
  'margin-start': 'px',
  'mask-position-x': 'px',
  'mask-position-y': 'px',
  'mask-size': 'px',
  'max-logical-height': 'px',
  'max-logical-width': 'px',
  'min-height': 'px',
  'min-width': 'px',
  'min-logical-height': 'px',
  'min-logical-width': 'px',
  motion: 'px',
  'motion-offset': 'px',
  outline: 'px',
  'outline-offset': 'px',
  'outline-width': 'px',
  padding: 'px',
  'padding-bottom': 'px',
  'padding-left': 'px',
  'padding-right': 'px',
  'padding-top': 'px',
  'padding-after': 'px',
  'padding-before': 'px',
  'padding-end': 'px',
  'padding-start': 'px',
  'perspective-origin-x': '%',
  'perspective-origin-y': '%',
  perspective: 'px',
  right: 'px',
  'shape-margin': 'px',
  size: 'px',
  'text-indent': 'px',
  'text-stroke': 'px',
  'text-stroke-width': 'px',
  top: 'px',
  'transform-origin': '%',
  'transform-origin-x': '%',
  'transform-origin-y': '%',
  'transform-origin-z': '%',
  'transition-delay': 'ms',
  'transition-duration': 'ms',
  'vertical-align': 'px',
  width: 'px',
  'word-spacing': 'px',
  // Not existing properties.
  // Used to avoid issues with jss-expand intergration.
  'box-shadow-x': 'px',
  'box-shadow-y': 'px',
  'box-shadow-blur': 'px',
  'box-shadow-spread': 'px',
  'font-line-height': 'px',
  'text-shadow-x': 'px',
  'text-shadow-y': 'px',
  'text-shadow-blur': 'px'
};

/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.8.6
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/
var aa=__webpack_require__(0),n=__webpack_require__(152),r=__webpack_require__(290);function ba(a,b,c,d,e,f,g,h){if(!a){a=void 0;if(void 0===b)a=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[c,d,e,f,g,h],k=0;a=Error(b.replace(/%s/g,function(){return l[k++]}));a.name="Invariant Violation"}a.framesToPop=1;throw a;}}
function x(a){for(var b=arguments.length-1,c="https://reactjs.org/docs/error-decoder.html?invariant="+a,d=0;d<b;d++)c+="&args[]="+encodeURIComponent(arguments[d+1]);ba(!1,"Minified React error #"+a+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",c)}aa?void 0:x("227");function ca(a,b,c,d,e,f,g,h,l){var k=Array.prototype.slice.call(arguments,3);try{b.apply(c,k)}catch(m){this.onError(m)}}
var da=!1,ea=null,fa=!1,ha=null,ia={onError:function(a){da=!0;ea=a}};function ja(a,b,c,d,e,f,g,h,l){da=!1;ea=null;ca.apply(ia,arguments)}function ka(a,b,c,d,e,f,g,h,l){ja.apply(this,arguments);if(da){if(da){var k=ea;da=!1;ea=null}else x("198"),k=void 0;fa||(fa=!0,ha=k)}}var la=null,ma={};
function na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:x("96",a);if(!oa[c]){b.extractEvents?void 0:x("97",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?x("99",h):void 0;pa[h]=f;var l=f.phasedRegistrationNames;if(l){for(e in l)l.hasOwnProperty(e)&&qa(l[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:x("98",d,a)}}}}
function qa(a,b,c){ra[a]?x("100",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={},ta=null,ua=null,va=null;function wa(a,b,c){var d=a.type||"unknown-event";a.currentTarget=va(c);ka(d,b,void 0,a);a.currentTarget=null}function xa(a,b){null==b?x("30"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}
function ya(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var za=null;function Aa(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)wa(a,b[d],c[d]);else b&&wa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}
var Ba={injectEventPluginOrder:function(a){la?x("101"):void 0;la=Array.prototype.slice.call(a);na()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?x("102",c):void 0,ma[c]=d,b=!0)}b&&na()}};
function Ca(a,b){var c=a.stateNode;if(!c)return null;var d=ta(c);if(!d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;c&&"function"!==typeof c?x("231",b,typeof c):void 0;
return c}function Da(a){null!==a&&(za=xa(za,a));a=za;za=null;if(a&&(ya(a,Aa),za?x("95"):void 0,fa))throw a=ha,fa=!1,ha=null,a;}var Ea=Math.random().toString(36).slice(2),Fa="__reactInternalInstance$"+Ea,Ga="__reactEventHandlers$"+Ea;function Ha(a){if(a[Fa])return a[Fa];for(;!a[Fa];)if(a.parentNode)a=a.parentNode;else return null;a=a[Fa];return 5===a.tag||6===a.tag?a:null}function Ia(a){a=a[Fa];return!a||5!==a.tag&&6!==a.tag?null:a}
function Ja(a){if(5===a.tag||6===a.tag)return a.stateNode;x("33")}function Ka(a){return a[Ga]||null}function La(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ma(a,b,c){if(b=Ca(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a)}
function Na(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=La(b);for(b=c.length;0<b--;)Ma(c[b],"captured",a);for(b=0;b<c.length;b++)Ma(c[b],"bubbled",a)}}function Oa(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ca(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a))}function Pa(a){a&&a.dispatchConfig.registrationName&&Oa(a._targetInst,null,a)}
function Qa(a){ya(a,Na)}var Ra=!("undefined"===typeof window||!window.document||!window.document.createElement);function Sa(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;return c}var Ta={animationend:Sa("Animation","AnimationEnd"),animationiteration:Sa("Animation","AnimationIteration"),animationstart:Sa("Animation","AnimationStart"),transitionend:Sa("Transition","TransitionEnd")},Ua={},Va={};
Ra&&(Va=document.createElement("div").style,"AnimationEvent"in window||(delete Ta.animationend.animation,delete Ta.animationiteration.animation,delete Ta.animationstart.animation),"TransitionEvent"in window||delete Ta.transitionend.transition);function Wa(a){if(Ua[a])return Ua[a];if(!Ta[a])return a;var b=Ta[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Va)return Ua[a]=b[c];return a}
var Xa=Wa("animationend"),Ya=Wa("animationiteration"),Za=Wa("animationstart"),$a=Wa("transitionend"),ab="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),bb=null,cb=null,db=null;
function eb(){if(db)return db;var a,b=cb,c=b.length,d,e="value"in bb?bb.value:bb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return db=e.slice(a,1<d?1-d:void 0)}function fb(){return!0}function gb(){return!1}
function y(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):"target"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?fb:gb;this.isPropagationStopped=gb;return this}
n(y.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=fb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=fb)},persist:function(){this.isPersistent=fb},isPersistent:gb,destructor:function(){var a=this.constructor.Interface,
b;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=gb;this._dispatchInstances=this._dispatchListeners=null}});y.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};
y.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;hb(c);return c};hb(y);function ib(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function jb(a){a instanceof this?void 0:x("279");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}
function hb(a){a.eventPool=[];a.getPooled=ib;a.release=jb}var kb=y.extend({data:null}),lb=y.extend({data:null}),mb=[9,13,27,32],nb=Ra&&"CompositionEvent"in window,ob=null;Ra&&"documentMode"in document&&(ob=document.documentMode);
var pb=Ra&&"TextEvent"in window&&!ob,qb=Ra&&(!nb||ob&&8<ob&&11>=ob),rb=String.fromCharCode(32),sb={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",
captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},tb=!1;
function ub(a,b){switch(a){case "keyup":return-1!==mb.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "blur":return!0;default:return!1}}function vb(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var wb=!1;function xb(a,b){switch(a){case "compositionend":return vb(b);case "keypress":if(32!==b.which)return null;tb=!0;return rb;case "textInput":return a=b.data,a===rb&&tb?null:a;default:return null}}
function yb(a,b){if(wb)return"compositionend"===a||!nb&&ub(a,b)?(a=eb(),db=cb=bb=null,wb=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return qb&&"ko"!==b.locale?null:b.data;default:return null}}
var zb={eventTypes:sb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(nb)b:{switch(a){case "compositionstart":e=sb.compositionStart;break b;case "compositionend":e=sb.compositionEnd;break b;case "compositionupdate":e=sb.compositionUpdate;break b}e=void 0}else wb?ub(a,c)&&(e=sb.compositionEnd):"keydown"===a&&229===c.keyCode&&(e=sb.compositionStart);e?(qb&&"ko"!==c.locale&&(wb||e!==sb.compositionStart?e===sb.compositionEnd&&wb&&(f=eb()):(bb=d,cb="value"in bb?bb.value:bb.textContent,wb=
!0)),e=kb.getPooled(e,b,c,d),f?e.data=f:(f=vb(c),null!==f&&(e.data=f)),Qa(e),f=e):f=null;(a=pb?xb(a,c):yb(a,c))?(b=lb.getPooled(sb.beforeInput,b,c,d),b.data=a,Qa(b)):b=null;return null===f?b:null===b?f:[f,b]}},Ab=null,Bb=null,Cb=null;function Db(a){if(a=ua(a)){"function"!==typeof Ab?x("280"):void 0;var b=ta(a.stateNode);Ab(a.stateNode,a.type,b)}}function Eb(a){Bb?Cb?Cb.push(a):Cb=[a]:Bb=a}function Fb(){if(Bb){var a=Bb,b=Cb;Cb=Bb=null;Db(a);if(b)for(a=0;a<b.length;a++)Db(b[a])}}
function Gb(a,b){return a(b)}function Hb(a,b,c){return a(b,c)}function Ib(){}var Jb=!1;function Kb(a,b){if(Jb)return a(b);Jb=!0;try{return Gb(a,b)}finally{if(Jb=!1,null!==Bb||null!==Cb)Ib(),Fb()}}var Lb={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Mb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!Lb[a.type]:"textarea"===b?!0:!1}
function Nb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Ob(a){if(!Ra)return!1;a="on"+a;var b=a in document;b||(b=document.createElement("div"),b.setAttribute(a,"return;"),b="function"===typeof b[a]);return b}function Pb(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
function Qb(a){var b=Pb(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=
null;delete a[b]}}}}function Rb(a){a._valueTracker||(a._valueTracker=Qb(a))}function Sb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=Pb(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}var Tb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Tb.hasOwnProperty("ReactCurrentDispatcher")||(Tb.ReactCurrentDispatcher={current:null});
var Ub=/^(.*)[\\\/]/,z="function"===typeof Symbol&&Symbol.for,Vb=z?Symbol.for("react.element"):60103,Wb=z?Symbol.for("react.portal"):60106,Xb=z?Symbol.for("react.fragment"):60107,Yb=z?Symbol.for("react.strict_mode"):60108,Zb=z?Symbol.for("react.profiler"):60114,$b=z?Symbol.for("react.provider"):60109,ac=z?Symbol.for("react.context"):60110,bc=z?Symbol.for("react.concurrent_mode"):60111,cc=z?Symbol.for("react.forward_ref"):60112,dc=z?Symbol.for("react.suspense"):60113,ec=z?Symbol.for("react.memo"):
60115,fc=z?Symbol.for("react.lazy"):60116,gc="function"===typeof Symbol&&Symbol.iterator;function hc(a){if(null===a||"object"!==typeof a)return null;a=gc&&a[gc]||a["@@iterator"];return"function"===typeof a?a:null}
function ic(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case bc:return"ConcurrentMode";case Xb:return"Fragment";case Wb:return"Portal";case Zb:return"Profiler";case Yb:return"StrictMode";case dc:return"Suspense"}if("object"===typeof a)switch(a.$$typeof){case ac:return"Context.Consumer";case $b:return"Context.Provider";case cc:var b=a.render;b=b.displayName||b.name||"";return a.displayName||(""!==b?"ForwardRef("+b+
")":"ForwardRef");case ec:return ic(a.type);case fc:if(a=1===a._status?a._result:null)return ic(a)}return null}function jc(a){var b="";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c="";break a;default:var d=a._debugOwner,e=a._debugSource,f=ic(a.type);c=null;d&&(c=ic(d.type));d=f;f="";e?f=" (at "+e.fileName.replace(Ub,"")+":"+e.lineNumber+")":c&&(f=" (created by "+c+")");c="\n    in "+(d||"Unknown")+f}b+=c;a=a.return}while(a);return b}
var kc=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,lc=Object.prototype.hasOwnProperty,mc={},nc={};
function oc(a){if(lc.call(nc,a))return!0;if(lc.call(mc,a))return!1;if(kc.test(a))return nc[a]=!0;mc[a]=!0;return!1}function pc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}
function qc(a,b,c,d){if(null===b||"undefined"===typeof b||pc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function C(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var D={};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){D[a]=new C(a,0,!1,a,null)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];D[b]=new C(b,1,!1,a[1],null)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){D[a]=new C(a,2,!1,a.toLowerCase(),null)});
["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){D[a]=new C(a,2,!1,a,null)});"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){D[a]=new C(a,3,!1,a.toLowerCase(),null)});["checked","multiple","muted","selected"].forEach(function(a){D[a]=new C(a,3,!0,a,null)});
["capture","download"].forEach(function(a){D[a]=new C(a,4,!1,a,null)});["cols","rows","size","span"].forEach(function(a){D[a]=new C(a,6,!1,a,null)});["rowSpan","start"].forEach(function(a){D[a]=new C(a,5,!1,a.toLowerCase(),null)});var rc=/[\-:]([a-z])/g;function sc(a){return a[1].toUpperCase()}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(rc,
sc);D[b]=new C(b,1,!1,a,null)});"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,"http://www.w3.org/1999/xlink")});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,"http://www.w3.org/XML/1998/namespace")});["tabIndex","crossOrigin"].forEach(function(a){D[a]=new C(a,1,!1,a.toLowerCase(),null)});
function tc(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1]?!1:!0;f||(qc(b,c,e,d)&&(c=null),d||null===e?oc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}
function uc(a){switch(typeof a){case "boolean":case "number":case "object":case "string":case "undefined":return a;default:return""}}function vc(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}
function wc(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=uc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function xc(a,b){b=b.checked;null!=b&&tc(a,"checked",b,!1)}
function yc(a,b){xc(a,b);var c=uc(b.value),d=b.type;if(null!=c)if("number"===d){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else if("submit"===d||"reset"===d){a.removeAttribute("value");return}b.hasOwnProperty("value")?zc(a,b.type,c):b.hasOwnProperty("defaultValue")&&zc(a,b.type,uc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}
function Ac(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;""!==c&&(a.name=c)}
function zc(a,b,c){if("number"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}var Bc={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Cc(a,b,c){a=y.getPooled(Bc.change,a,b,c);a.type="change";Eb(c);Qa(a);return a}var Dc=null,Ec=null;function Fc(a){Da(a)}
function Gc(a){var b=Ja(a);if(Sb(b))return a}function Hc(a,b){if("change"===a)return b}var Ic=!1;Ra&&(Ic=Ob("input")&&(!document.documentMode||9<document.documentMode));function Jc(){Dc&&(Dc.detachEvent("onpropertychange",Kc),Ec=Dc=null)}function Kc(a){"value"===a.propertyName&&Gc(Ec)&&(a=Cc(Ec,a,Nb(a)),Kb(Fc,a))}function Lc(a,b,c){"focus"===a?(Jc(),Dc=b,Ec=c,Dc.attachEvent("onpropertychange",Kc)):"blur"===a&&Jc()}function Mc(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return Gc(Ec)}
function Nc(a,b){if("click"===a)return Gc(b)}function Oc(a,b){if("input"===a||"change"===a)return Gc(b)}
var Pc={eventTypes:Bc,_isInputEventSupported:Ic,extractEvents:function(a,b,c,d){var e=b?Ja(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();"select"===h||"input"===h&&"file"===e.type?f=Hc:Mb(e)?Ic?f=Oc:(f=Mc,g=Lc):(h=e.nodeName)&&"input"===h.toLowerCase()&&("checkbox"===e.type||"radio"===e.type)&&(f=Nc);if(f&&(f=f(a,b)))return Cc(f,c,d);g&&g(a,e,b);"blur"===a&&(a=e._wrapperState)&&a.controlled&&"number"===e.type&&zc(e,"number",e.value)}},Qc=y.extend({view:null,detail:null}),Rc={Alt:"altKey",
Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Sc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Rc[a])?!!b[a]:!1}function Tc(){return Sc}
var Uc=0,Vc=0,Wc=!1,Xc=!1,Yc=Qc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Tc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if("movementX"in a)return a.movementX;var b=Uc;Uc=a.screenX;return Wc?"mousemove"===a.type?a.screenX-b:0:(Wc=!0,0)},movementY:function(a){if("movementY"in a)return a.movementY;
var b=Vc;Vc=a.screenY;return Xc?"mousemove"===a.type?a.screenY-b:0:(Xc=!0,0)}}),Zc=Yc.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),$c={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",
dependencies:["pointerout","pointerover"]}},ad={eventTypes:$c,extractEvents:function(a,b,c,d){var e="mouseover"===a||"pointerover"===a,f="mouseout"===a||"pointerout"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ha(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,l=void 0,k=void 0;if("mouseout"===a||"mouseover"===a)g=Yc,h=$c.mouseLeave,l=$c.mouseEnter,k="mouse";
else if("pointerout"===a||"pointerover"===a)g=Zc,h=$c.pointerLeave,l=$c.pointerEnter,k="pointer";var m=null==f?e:Ja(f);e=null==b?e:Ja(b);a=g.getPooled(h,f,c,d);a.type=k+"leave";a.target=m;a.relatedTarget=e;c=g.getPooled(l,b,c,d);c.type=k+"enter";c.target=e;c.relatedTarget=m;d=b;if(f&&d)a:{b=f;e=d;k=0;for(g=b;g;g=La(g))k++;g=0;for(l=e;l;l=La(l))g++;for(;0<k-g;)b=La(b),k--;for(;0<g-k;)e=La(e),g--;for(;k--;){if(b===e||b===e.alternate)break a;b=La(b);e=La(e)}b=null}else b=null;e=b;for(b=[];f&&f!==e;){k=
f.alternate;if(null!==k&&k===e)break;b.push(f);f=La(f)}for(f=[];d&&d!==e;){k=d.alternate;if(null!==k&&k===e)break;f.push(d);d=La(d)}for(d=0;d<b.length;d++)Oa(b[d],"bubbled",a);for(d=f.length;0<d--;)Oa(f[d],"captured",c);return[a,c]}};function bd(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var cd=Object.prototype.hasOwnProperty;
function dd(a,b){if(bd(a,b))return!0;if("object"!==typeof a||null===a||"object"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!cd.call(b,c[d])||!bd(a[c[d]],b[c[d]]))return!1;return!0}function ed(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function fd(a){2!==ed(a)?x("188"):void 0}
function gd(a){var b=a.alternate;if(!b)return b=ed(a),3===b?x("188"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return fd(e),a;if(g===d)return fd(e),b;g=g.sibling}x("188")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?
void 0:x("189")}}c.alternate!==d?x("190"):void 0}3!==c.tag?x("188"):void 0;return c.stateNode.current===c?a:b}function hd(a){a=gd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}
var id=y.extend({animationName:null,elapsedTime:null,pseudoElement:null}),jd=y.extend({clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),kd=Qc.extend({relatedTarget:null});function ld(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}
var md={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},nd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",
116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},od=Qc.extend({key:function(a){if(a.key){var b=md[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=ld(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?nd[a.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Tc,charCode:function(a){return"keypress"===
a.type?ld(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===a.type?ld(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),pd=Yc.extend({dataTransfer:null}),qd=Qc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Tc}),rd=y.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),sd=Yc.extend({deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in
a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),td=[["abort","abort"],[Xa,"animationEnd"],[Ya,"animationIteration"],[Za,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],
["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],
["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[$a,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],ud={},vd={};function wd(a,b){var c=a[0];a=a[1];var d="on"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+"Capture"},dependencies:[c],isInteractive:b};ud[a]=b;vd[c]=b}
[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],
["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(a){wd(a,!0)});td.forEach(function(a){wd(a,!1)});
var xd={eventTypes:ud,isInteractiveTopLevelEventType:function(a){a=vd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=vd[a];if(!e)return null;switch(a){case "keypress":if(0===ld(c))return null;case "keydown":case "keyup":a=od;break;case "blur":case "focus":a=kd;break;case "click":if(2===c.button)return null;case "auxclick":case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":a=Yc;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":a=
pd;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":a=qd;break;case Xa:case Ya:case Za:a=id;break;case $a:a=rd;break;case "scroll":a=Qc;break;case "wheel":a=sd;break;case "copy":case "cut":case "paste":a=jd;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":a=Zc;break;default:a=y}b=a.getPooled(e,b,c,d);Qa(b);return b}},yd=xd.isInteractiveTopLevelEventType,
zd=[];function Ad(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo;if(!d)break;a.ancestors.push(c);c=Ha(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Nb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<oa.length;h++){var l=oa[h];l&&(l=l.extractEvents(d,b,f,e))&&(g=xa(g,l))}Da(g)}}var Bd=!0;
function E(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!1)}function Ed(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!0)}function Cd(a,b){Hb(Dd,a,b)}
function Dd(a,b){if(Bd){var c=Nb(b);c=Ha(c);null===c||"number"!==typeof c.tag||2===ed(c)||(c=null);if(zd.length){var d=zd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Kb(Ad,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>zd.length&&zd.push(a)}}}var Fd={},Gd=0,Hd="_reactListenersID"+(""+Math.random()).slice(2);
function Id(a){Object.prototype.hasOwnProperty.call(a,Hd)||(a[Hd]=Gd++,Fd[a[Hd]]={});return Fd[a[Hd]]}function Jd(a){a=a||("undefined"!==typeof document?document:void 0);if("undefined"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Kd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}
function Ld(a,b){var c=Kd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Kd(c)}}function Md(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Md(a,b.parentNode):"contains"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}
function Nd(){for(var a=window,b=Jd();b instanceof a.HTMLIFrameElement;){try{var c="string"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Jd(a.document)}return b}function Od(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}
function Pd(){var a=Nd();if(Od(a)){if("selectionStart"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{b=(b=a.ownerDocument)&&b.defaultView||window;var c=b.getSelection&&b.getSelection();if(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(A){b=null;break a}var f=0,g=-1,h=-1,l=0,k=0,m=a,p=null;b:for(;;){for(var t;;){m!==b||0!==d&&3!==m.nodeType||(g=f+d);m!==e||0!==c&&3!==m.nodeType||(h=f+c);3===m.nodeType&&(f+=m.nodeValue.length);
if(null===(t=m.firstChild))break;p=m;m=t}for(;;){if(m===a)break b;p===b&&++l===d&&(g=f);p===e&&++k===c&&(h=f);if(null!==(t=m.nextSibling))break;m=p;p=m.parentNode}m=t}b=-1===g||-1===h?null:{start:g,end:h}}else b=null}b=b||{start:0,end:0}}else b=null;return{focusedElem:a,selectionRange:b}}
function Qd(a){var b=Nd(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Md(c.ownerDocument.documentElement,c)){if(null!==d&&Od(c))if(b=d.start,a=d.end,void 0===a&&(a=b),"selectionStart"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ld(c,f);var g=Ld(c,
d);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});"function"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}
var Rd=Ra&&"documentMode"in document&&11>=document.documentMode,Sd={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Td=null,Ud=null,Vd=null,Wd=!1;
function Xd(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(Wd||null==Td||Td!==Jd(c))return null;c=Td;"selectionStart"in c&&Od(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return Vd&&dd(Vd,c)?null:(Vd=c,a=y.getPooled(Sd.select,Ud,a,b),a.type="select",a.target=Td,Qa(a),a)}
var Yd={eventTypes:Sd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Id(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Ja(b):window;switch(a){case "focus":if(Mb(e)||"true"===e.contentEditable)Td=e,Ud=b,Vd=null;break;case "blur":Vd=Ud=Td=null;break;case "mousedown":Wd=!0;break;case "contextmenu":case "mouseup":case "dragend":return Wd=!1,Xd(c,d);case "selectionchange":if(Rd)break;
case "keydown":case "keyup":return Xd(c,d)}return null}};Ba.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));ta=Ka;ua=Ia;va=Ja;Ba.injectEventPluginsByName({SimpleEventPlugin:xd,EnterLeaveEventPlugin:ad,ChangeEventPlugin:Pc,SelectEventPlugin:Yd,BeforeInputEventPlugin:zb});function Zd(a){var b="";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}
function $d(a,b){a=n({children:void 0},b);if(b=Zd(b.children))a.children=b;return a}function ae(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+uc(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}
function be(a,b){null!=b.dangerouslySetInnerHTML?x("91"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function ce(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?x("92"):void 0,Array.isArray(b)&&(1>=b.length?void 0:x("93"),b=b[0]),c=b),null==c&&(c=""));a._wrapperState={initialValue:uc(c)}}
function de(a,b){var c=uc(b.value),d=uc(b.defaultValue);null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=""+d)}function ee(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var fe={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
function ge(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function he(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?ge(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
var ie=void 0,je=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==fe.svg||"innerHTML"in a)a.innerHTML=b;else{ie=ie||document.createElement("div");ie.innerHTML="<svg>"+b+"</svg>";for(b=ie.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});
function ke(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}
var le={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,
floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},me=["Webkit","ms","Moz","O"];Object.keys(le).forEach(function(a){me.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);le[b]=le[a]})});function ne(a,b,c){return null==b||"boolean"===typeof b||""===b?"":c||"number"!==typeof b||0===b||le.hasOwnProperty(a)&&le[a]?(""+b).trim():b+"px"}
function oe(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=ne(c,b[c],d);"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var pe=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
function qe(a,b){b&&(pe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?x("137",a,""):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?x("60"):void 0,"object"===typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML?void 0:x("61")),null!=b.style&&"object"!==typeof b.style?x("62",""):void 0)}
function re(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}
function se(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Id(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case "scroll":Ed("scroll",a);break;case "focus":case "blur":Ed("focus",a);Ed("blur",a);c.blur=!0;c.focus=!0;break;case "cancel":case "close":Ob(e)&&Ed(e,a);break;case "invalid":case "submit":case "reset":break;default:-1===ab.indexOf(e)&&E(e,a)}c[e]=!0}}}function te(){}var ue=null,ve=null;
function we(a,b){switch(a){case "button":case "input":case "select":case "textarea":return!!b.autoFocus}return!1}function xe(a,b){return"textarea"===a||"option"===a||"noscript"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}
var ye="function"===typeof setTimeout?setTimeout:void 0,ze="function"===typeof clearTimeout?clearTimeout:void 0,Ae=r.unstable_scheduleCallback,Be=r.unstable_cancelCallback;
function Ce(a,b,c,d,e){a[Ga]=e;"input"===c&&"radio"===e.type&&null!=e.name&&xc(a,e);re(c,d);d=re(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];"style"===g?oe(a,h):"dangerouslySetInnerHTML"===g?je(a,h):"children"===g?ke(a,h):tc(a,g,h,d)}switch(c){case "input":yc(a,e);break;case "textarea":de(a,e);break;case "select":b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ae(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?ae(a,!!e.multiple,e.defaultValue,
!0):ae(a,!!e.multiple,e.multiple?[]:"",!1))}}function De(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function Ee(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var Fe=[],Ge=-1;function F(a){0>Ge||(a.current=Fe[Ge],Fe[Ge]=null,Ge--)}function G(a,b){Ge++;Fe[Ge]=a.current;a.current=b}var He={},H={current:He},I={current:!1},Ie=He;
function Je(a,b){var c=a.type.contextTypes;if(!c)return He;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function J(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Ke(a){F(I,a);F(H,a)}function Le(a){F(I,a);F(H,a)}
function Me(a,b,c){H.current!==He?x("168"):void 0;G(H,b,a);G(I,c,a)}function Ne(a,b,c){var d=a.stateNode;a=b.childContextTypes;if("function"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a?void 0:x("108",ic(b)||"Unknown",e);return n({},c,d)}function Oe(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||He;Ie=H.current;G(H,b,a);G(I,I.current,a);return!0}
function Pe(a,b,c){var d=a.stateNode;d?void 0:x("169");c?(b=Ne(a,b,Ie),d.__reactInternalMemoizedMergedChildContext=b,F(I,a),F(H,a),G(H,b,a)):F(I,a);G(I,c,a)}var Qe=null,Re=null;function Se(a){return function(b){try{return a(b)}catch(c){}}}
function Te(a){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Qe=Se(function(a){return b.onCommitFiberRoot(c,a)});Re=Se(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}
function Ue(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function K(a,b,c,d){return new Ue(a,b,c,d)}
function Ve(a){a=a.prototype;return!(!a||!a.isReactComponent)}function We(a){if("function"===typeof a)return Ve(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===cc)return 11;if(a===ec)return 14}return 2}
function Xe(a,b){var c=a.alternate;null===c?(c=K(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;c.contextDependencies=a.contextDependencies;c.sibling=a.sibling;
c.index=a.index;c.ref=a.ref;return c}
function Ye(a,b,c,d,e,f){var g=2;d=a;if("function"===typeof a)Ve(a)&&(g=1);else if("string"===typeof a)g=5;else a:switch(a){case Xb:return Ze(c.children,e,f,b);case bc:return $e(c,e|3,f,b);case Yb:return $e(c,e|2,f,b);case Zb:return a=K(12,c,b,e|4),a.elementType=Zb,a.type=Zb,a.expirationTime=f,a;case dc:return a=K(13,c,b,e),a.elementType=dc,a.type=dc,a.expirationTime=f,a;default:if("object"===typeof a&&null!==a)switch(a.$$typeof){case $b:g=10;break a;case ac:g=9;break a;case cc:g=11;break a;case ec:g=
14;break a;case fc:g=16;d=null;break a}x("130",null==a?a:typeof a,"")}b=K(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function Ze(a,b,c,d){a=K(7,a,d,b);a.expirationTime=c;return a}function $e(a,b,c,d){a=K(8,a,d,b);b=0===(b&1)?Yb:bc;a.elementType=b;a.type=b;a.expirationTime=c;return a}function af(a,b,c){a=K(6,a,null,b);a.expirationTime=c;return a}
function bf(a,b,c){b=K(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}function cf(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c<b?a.earliestPendingTime=b:a.latestPendingTime>b&&(a.latestPendingTime=b);df(b,a)}
function ef(a,b){a.didError=!1;if(0===b)a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0;else{b<a.latestPingedTime&&(a.latestPingedTime=0);var c=a.latestPendingTime;0!==c&&(c>b?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime>b&&(a.earliestPendingTime=a.latestPendingTime));c=a.earliestSuspendedTime;0===c?cf(a,b):b<a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,cf(a,b)):
b>c&&cf(a,b)}df(0,a)}function ff(a,b){a.didError=!1;a.latestPingedTime>=b&&(a.latestPingedTime=0);var c=a.earliestPendingTime,d=a.latestPendingTime;c===b?a.earliestPendingTime=d===b?a.latestPendingTime=0:d:d===b&&(a.latestPendingTime=c);c=a.earliestSuspendedTime;d=a.latestSuspendedTime;0===c?a.earliestSuspendedTime=a.latestSuspendedTime=b:c<b?a.earliestSuspendedTime=b:d>b&&(a.latestSuspendedTime=b);df(b,a)}
function gf(a,b){var c=a.earliestPendingTime;a=a.earliestSuspendedTime;c>b&&(b=c);a>b&&(b=a);return b}function df(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f;0===e&&(0===a||d<a)&&(e=d);a=e;0!==a&&c>a&&(a=c);b.nextExpirationTimeToWorkOn=e;b.expirationTime=a}function L(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}
function hf(a){var b=a._result;switch(a._status){case 1:return b;case 2:throw b;case 0:throw b;default:a._status=0;b=a._ctor;b=b();b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)});switch(a._status){case 1:return a._result;case 2:throw a._result;}a._result=b;throw b;}}var jf=(new aa.Component).refs;
function kf(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}
var tf={isMounted:function(a){return(a=a._reactInternalFiber)?2===ed(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.tag=rf;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=lf();c=mf(c,a);var d=nf(c);d.tag=
sf;void 0!==b&&null!==b&&(d.callback=b);of();pf(a,d);qf(a,c)}};function uf(a,b,c,d,e,f,g){a=a.stateNode;return"function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!dd(c,d)||!dd(e,f):!0}
function vf(a,b,c){var d=!1,e=He;var f=b.contextType;"object"===typeof f&&null!==f?f=M(f):(e=J(b)?Ie:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Je(a,e):He);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=tf;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}
function wf(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&tf.enqueueReplaceState(b,b.state,null)}
function xf(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jf;var f=b.contextType;"object"===typeof f&&null!==f?e.context=M(f):(f=J(b)?Ie:H.current,e.context=Je(a,f));f=a.updateQueue;null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;"function"===typeof f&&(kf(a,b,f,c),e.state=a.memoizedState);"function"===typeof b.getDerivedStateFromProps||"function"===typeof e.getSnapshotBeforeUpdate||"function"!==typeof e.UNSAFE_componentWillMount&&"function"!==
typeof e.componentWillMount||(b=e.state,"function"===typeof e.componentWillMount&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&tf.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState));"function"===typeof e.componentDidMount&&(a.effectTag|=4)}var zf=Array.isArray;
function Af(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(1!==c.tag?x("309"):void 0,d=c.stateNode);d?void 0:x("147",a);var e=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===jf&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}"string"!==typeof a?x("284"):void 0;c._owner?void 0:x("290",a)}return a}
function Bf(a,b){"textarea"!==a.type&&x("31","[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b,"")}
function Cf(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=Xe(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=
2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=af(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function l(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=Af(a,b,c),d.return=a,d;d=Ye(c.type,c.key,c.props,null,a.mode,d);d.ref=Af(a,b,c);d.return=a;return d}function k(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==
c.implementation)return b=bf(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ze(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function p(a,b,c){if("string"===typeof b||"number"===typeof b)return b=af(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case Vb:return c=Ye(b.type,b.key,b.props,null,a.mode,c),c.ref=Af(a,null,b),c.return=a,c;case Wb:return b=bf(b,a.mode,c),b.return=a,b}if(zf(b)||
hc(b))return b=Ze(b,a.mode,c,null),b.return=a,b;Bf(a,b)}return null}function t(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case Vb:return c.key===e?c.type===Xb?m(a,b,c.props.children,d,e):l(a,b,c,d):null;case Wb:return c.key===e?k(a,b,c,d):null}if(zf(c)||hc(c))return null!==e?null:m(a,b,c,d,null);Bf(a,c)}return null}function A(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=
a.get(c)||null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case Vb:return a=a.get(null===d.key?c:d.key)||null,d.type===Xb?m(b,a,d.props.children,e,d.key):l(b,a,d,e);case Wb:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e)}if(zf(d)||hc(d))return a=a.get(c)||null,m(b,a,d,e,null);Bf(b,d)}return null}function v(e,g,h,k){for(var l=null,m=null,q=g,u=g=0,B=null;null!==q&&u<h.length;u++){q.index>u?(B=q,q=null):B=q.sibling;var w=t(e,q,h[u],k);if(null===w){null===q&&(q=B);break}a&&
q&&null===w.alternate&&b(e,q);g=f(w,g,u);null===m?l=w:m.sibling=w;m=w;q=B}if(u===h.length)return c(e,q),l;if(null===q){for(;u<h.length;u++)if(q=p(e,h[u],k))g=f(q,g,u),null===m?l=q:m.sibling=q,m=q;return l}for(q=d(e,q);u<h.length;u++)if(B=A(q,e,u,h[u],k))a&&null!==B.alternate&&q.delete(null===B.key?u:B.key),g=f(B,g,u),null===m?l=B:m.sibling=B,m=B;a&&q.forEach(function(a){return b(e,a)});return l}function R(e,g,h,k){var l=hc(h);"function"!==typeof l?x("150"):void 0;h=l.call(h);null==h?x("151"):void 0;
for(var m=l=null,q=g,u=g=0,B=null,w=h.next();null!==q&&!w.done;u++,w=h.next()){q.index>u?(B=q,q=null):B=q.sibling;var v=t(e,q,w.value,k);if(null===v){q||(q=B);break}a&&q&&null===v.alternate&&b(e,q);g=f(v,g,u);null===m?l=v:m.sibling=v;m=v;q=B}if(w.done)return c(e,q),l;if(null===q){for(;!w.done;u++,w=h.next())w=p(e,w.value,k),null!==w&&(g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);return l}for(q=d(e,q);!w.done;u++,w=h.next())w=A(q,e,u,w.value,k),null!==w&&(a&&null!==w.alternate&&q.delete(null===w.key?u:
w.key),g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);a&&q.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k="object"===typeof f&&null!==f&&f.type===Xb&&null===f.key;k&&(f=f.props.children);var l="object"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Vb:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===Xb:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===Xb?f.props.children:f.props,h);d.ref=Af(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=
k.sibling}f.type===Xb?(d=Ze(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Ye(f.type,f.key,f.props,null,a.mode,h),h.ref=Af(a,d,f),h.return=a,a=h)}return g(a);case Wb:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=bf(f,a.mode,h);d.return=a;a=d}return g(a)}if("string"===typeof f||"number"===typeof f)return f=
""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=af(f,a.mode,h),d.return=a,a=d),g(a);if(zf(f))return v(a,d,f,h);if(hc(f))return R(a,d,f,h);l&&Bf(a,f);if("undefined"===typeof f&&!k)switch(a.tag){case 1:case 0:h=a.type,x("152",h.displayName||h.name||"Component")}return c(a,d)}}var Df=Cf(!0),Ef=Cf(!1),Ff={},N={current:Ff},Gf={current:Ff},Hf={current:Ff};function If(a){a===Ff?x("174"):void 0;return a}
function Jf(a,b){G(Hf,b,a);G(Gf,a,a);G(N,Ff,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:he(null,"");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=he(b,c)}F(N,a);G(N,b,a)}function Kf(a){F(N,a);F(Gf,a);F(Hf,a)}function Lf(a){If(Hf.current);var b=If(N.current);var c=he(b,a.type);b!==c&&(G(Gf,a,a),G(N,c,a))}function Mf(a){Gf.current===a&&(F(N,a),F(Gf,a))}
var Nf=0,Of=2,Pf=4,Qf=8,Rf=16,Sf=32,Tf=64,Uf=128,Vf=Tb.ReactCurrentDispatcher,Wf=0,Xf=null,O=null,P=null,Yf=null,Q=null,Zf=null,$f=0,ag=null,bg=0,cg=!1,dg=null,eg=0;function fg(){x("321")}function gg(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!bd(a[c],b[c]))return!1;return!0}
function hg(a,b,c,d,e,f){Wf=f;Xf=b;P=null!==a?a.memoizedState:null;Vf.current=null===P?ig:jg;b=c(d,e);if(cg){do cg=!1,eg+=1,P=null!==a?a.memoizedState:null,Zf=Yf,ag=Q=O=null,Vf.current=jg,b=c(d,e);while(cg);dg=null;eg=0}Vf.current=kg;a=Xf;a.memoizedState=Yf;a.expirationTime=$f;a.updateQueue=ag;a.effectTag|=bg;a=null!==O&&null!==O.next;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;a?x("300"):void 0;return b}function lg(){Vf.current=kg;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;cg=!1;dg=null;eg=0}
function mg(){var a={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};null===Q?Yf=Q=a:Q=Q.next=a;return Q}function ng(){if(null!==Zf)Q=Zf,Zf=Q.next,O=P,P=null!==O?O.next:null;else{null===P?x("310"):void 0;O=P;var a={memoizedState:O.memoizedState,baseState:O.baseState,queue:O.queue,baseUpdate:O.baseUpdate,next:null};Q=null===Q?Yf=a:Q.next=a;P=O.next}return Q}function og(a,b){return"function"===typeof b?b(a):b}
function pg(a){var b=ng(),c=b.queue;null===c?x("311"):void 0;c.lastRenderedReducer=a;if(0<eg){var d=c.dispatch;if(null!==dg){var e=dg.get(c);if(void 0!==e){dg.delete(c);var f=b.memoizedState;do f=a(f,e.action),e=e.next;while(null!==e);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate===c.last&&(b.baseState=f);c.lastRenderedState=f;return[f,d]}}return[b.memoizedState,d]}d=c.last;var g=b.baseUpdate;f=b.baseState;null!==g?(null!==d&&(d.next=null),d=g.next):d=null!==d?d.next:null;if(null!==
d){var h=e=null,l=d,k=!1;do{var m=l.expirationTime;m<Wf?(k||(k=!0,h=g,e=f),m>$f&&($f=m)):f=l.eagerReducer===a?l.eagerState:a(f,l.action);g=l;l=l.next}while(null!==l&&l!==d);k||(h=g,e=f);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate=h;b.baseState=e;c.lastRenderedState=f}return[b.memoizedState,c.dispatch]}
function rg(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};null===ag?(ag={lastEffect:null},ag.lastEffect=a.next=a):(b=ag.lastEffect,null===b?ag.lastEffect=a.next=a:(c=b.next,b.next=a,a.next=c,ag.lastEffect=a));return a}function sg(a,b,c,d){var e=mg();bg|=a;e.memoizedState=rg(b,c,void 0,void 0===d?null:d)}
function tg(a,b,c,d){var e=ng();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&gg(d,g.deps)){rg(Nf,c,f,d);return}}bg|=a;e.memoizedState=rg(b,c,f,d)}function ug(a,b){if("function"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function vg(){}
function wg(a,b,c){25>eg?void 0:x("301");var d=a.alternate;if(a===Xf||null!==d&&d===Xf)if(cg=!0,a={expirationTime:Wf,action:c,eagerReducer:null,eagerState:null,next:null},null===dg&&(dg=new Map),c=dg.get(b),void 0===c)dg.set(b,a);else{for(b=c;null!==b.next;)b=b.next;b.next=a}else{of();var e=lf();e=mf(e,a);var f={expirationTime:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.last;if(null===g)f.next=f;else{var h=g.next;null!==h&&(f.next=h);g.next=f}b.last=f;if(0===a.expirationTime&&(null===
d||0===d.expirationTime)&&(d=b.lastRenderedReducer,null!==d))try{var l=b.lastRenderedState,k=d(l,c);f.eagerReducer=d;f.eagerState=k;if(bd(k,l))return}catch(m){}finally{}qf(a,e)}}
var kg={readContext:M,useCallback:fg,useContext:fg,useEffect:fg,useImperativeHandle:fg,useLayoutEffect:fg,useMemo:fg,useReducer:fg,useRef:fg,useState:fg,useDebugValue:fg},ig={readContext:M,useCallback:function(a,b){mg().memoizedState=[a,void 0===b?null:b];return a},useContext:M,useEffect:function(a,b){return sg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return sg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,b){return sg(4,Pf|Sf,a,b)},
useMemo:function(a,b){var c=mg();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=mg();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={last:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=wg.bind(null,Xf,a);return[d.memoizedState,a]},useRef:function(a){var b=mg();a={current:a};return b.memoizedState=a},useState:function(a){var b=mg();"function"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={last:null,dispatch:null,
lastRenderedReducer:og,lastRenderedState:a};a=a.dispatch=wg.bind(null,Xf,a);return[b.memoizedState,a]},useDebugValue:vg},jg={readContext:M,useCallback:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];c.memoizedState=[a,b];return a},useContext:M,useEffect:function(a,b){return tg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return tg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,
b){return tg(4,Pf|Sf,a,b)},useMemo:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a},useReducer:pg,useRef:function(){return ng().memoizedState},useState:function(a){return pg(og,a)},useDebugValue:vg},xg=null,yg=null,zg=!1;
function Ag(a,b){var c=K(5,null,null,0);c.elementType="DELETED";c.type="DELETED";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function Bg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}
function Cg(a){if(zg){var b=yg;if(b){var c=b;if(!Bg(a,b)){b=De(c);if(!b||!Bg(a,b)){a.effectTag|=2;zg=!1;xg=a;return}Ag(xg,c)}xg=a;yg=Ee(b)}else a.effectTag|=2,zg=!1,xg=a}}function Dg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&18!==a.tag;)a=a.return;xg=a}function Eg(a){if(a!==xg)return!1;if(!zg)return Dg(a),zg=!0,!1;var b=a.type;if(5!==a.tag||"head"!==b&&"body"!==b&&!xe(b,a.memoizedProps))for(b=yg;b;)Ag(a,b),b=De(b);Dg(a);yg=xg?De(a.stateNode):null;return!0}function Fg(){yg=xg=null;zg=!1}
var Gg=Tb.ReactCurrentOwner,qg=!1;function S(a,b,c,d){b.child=null===a?Ef(b,null,c,d):Df(b,a.child,c,d)}function Hg(a,b,c,d,e){c=c.render;var f=b.ref;Ig(b,e);d=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,d,e);return b.child}
function Kg(a,b,c,d,e,f){if(null===a){var g=c.type;if("function"===typeof g&&!Ve(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,Lg(a,b,g,d,e,f);a=Ye(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:dd,c(e,d)&&a.ref===b.ref))return Jg(a,b,f);b.effectTag|=1;a=Xe(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}
function Lg(a,b,c,d,e,f){return null!==a&&dd(a.memoizedProps,d)&&a.ref===b.ref&&(qg=!1,e<f)?Jg(a,b,f):Mg(a,b,c,d,f)}function Ng(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Mg(a,b,c,d,e){var f=J(c)?Ie:H.current;f=Je(b,f);Ig(b,e);c=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,c,e);return b.child}
function Og(a,b,c,d,e){if(J(c)){var f=!0;Oe(b)}else f=!1;Ig(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),vf(b,c,d,e),xf(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var l=g.context,k=c.contextType;"object"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k));var m=c.getDerivedStateFromProps,p="function"===typeof m||"function"===typeof g.getSnapshotBeforeUpdate;p||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&
"function"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k);Pg=!1;var t=b.memoizedState;l=g.state=t;var A=b.updateQueue;null!==A&&(yf(b,A,d,g,e),l=b.memoizedState);h!==d||t!==l||I.current||Pg?("function"===typeof m&&(kf(b,c,m,d),l=b.memoizedState),(h=Pg||uf(b,c,h,d,t,l,k))?(p||"function"!==typeof g.UNSAFE_componentWillMount&&"function"!==typeof g.componentWillMount||("function"===typeof g.componentWillMount&&g.componentWillMount(),"function"===typeof g.UNSAFE_componentWillMount&&
g.UNSAFE_componentWillMount()),"function"===typeof g.componentDidMount&&(b.effectTag|=4)):("function"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=l),g.props=d,g.state=l,g.context=k,d=h):("function"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:L(b.type,h),l=g.context,k=c.contextType,"object"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k)),m=c.getDerivedStateFromProps,(p="function"===
typeof m||"function"===typeof g.getSnapshotBeforeUpdate)||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k),Pg=!1,l=b.memoizedState,t=g.state=l,A=b.updateQueue,null!==A&&(yf(b,A,d,g,e),t=b.memoizedState),h!==d||l!==t||I.current||Pg?("function"===typeof m&&(kf(b,c,m,d),t=b.memoizedState),(m=Pg||uf(b,c,h,d,l,t,k))?(p||"function"!==typeof g.UNSAFE_componentWillUpdate&&"function"!==typeof g.componentWillUpdate||("function"===
typeof g.componentWillUpdate&&g.componentWillUpdate(d,t,k),"function"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,t,k)),"function"===typeof g.componentDidUpdate&&(b.effectTag|=4),"function"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=
t),g.props=d,g.state=t,g.context=k,d=m):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),d=!1);return Qg(a,b,c,d,f,e)}
function Qg(a,b,c,d,e,f){Ng(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Pe(b,c,!1),Jg(a,b,f);d=b.stateNode;Gg.current=b;var h=g&&"function"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=Df(b,a.child,null,f),b.child=Df(b,null,h,f)):S(a,b,h,f);b.memoizedState=d.state;e&&Pe(b,c,!0);return b.child}function Rg(a){var b=a.stateNode;b.pendingContext?Me(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Me(a,b.context,!1);Jf(a,b.containerInfo)}
function Sg(a,b,c){var d=b.mode,e=b.pendingProps,f=b.memoizedState;if(0===(b.effectTag&64)){f=null;var g=!1}else f={timedOutAt:null!==f?f.timedOutAt:0},g=!0,b.effectTag&=-65;if(null===a)if(g){var h=e.fallback;a=Ze(null,d,0,null);0===(b.mode&1)&&(a.child=null!==b.memoizedState?b.child.child:b.child);d=Ze(h,d,c,null);a.sibling=d;c=a;c.return=d.return=b}else c=d=Ef(b,null,e.children,c);else null!==a.memoizedState?(d=a.child,h=d.sibling,g?(c=e.fallback,e=Xe(d,d.pendingProps,0),0===(b.mode&1)&&(g=null!==
b.memoizedState?b.child.child:b.child,g!==d.child&&(e.child=g)),d=e.sibling=Xe(h,c,h.expirationTime),c=e,e.childExpirationTime=0,c.return=d.return=b):c=d=Df(b,d.child,e.children,c)):(h=a.child,g?(g=e.fallback,e=Ze(null,d,0,null),e.child=h,0===(b.mode&1)&&(e.child=null!==b.memoizedState?b.child.child:b.child),d=e.sibling=Ze(g,d,c,null),d.effectTag|=2,c=e,e.childExpirationTime=0,c.return=d.return=b):d=c=Df(b,h,e.children,c)),b.stateNode=a.stateNode;b.memoizedState=f;b.child=c;return d}
function Jg(a,b,c){null!==a&&(b.contextDependencies=a.contextDependencies);if(b.childExpirationTime<c)return null;null!==a&&b.child!==a.child?x("153"):void 0;if(null!==b.child){a=b.child;c=Xe(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Xe(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}
function Tg(a,b,c){var d=b.expirationTime;if(null!==a)if(a.memoizedProps!==b.pendingProps||I.current)qg=!0;else{if(d<c){qg=!1;switch(b.tag){case 3:Rg(b);Fg();break;case 5:Lf(b);break;case 1:J(b.type)&&Oe(b);break;case 4:Jf(b,b.stateNode.containerInfo);break;case 10:Ug(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return Sg(a,b,c);b=Jg(a,b,c);return null!==b?b.sibling:null}}return Jg(a,b,c)}}else qg=!1;b.expirationTime=0;switch(b.tag){case 2:d=
b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;var e=Je(b,H.current);Ig(b,c);e=hg(null,b,d,a,e,c);b.effectTag|=1;if("object"===typeof e&&null!==e&&"function"===typeof e.render&&void 0===e.$$typeof){b.tag=1;lg();if(J(d)){var f=!0;Oe(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;"function"===typeof g&&kf(b,d,g,a);e.updater=tf;b.stateNode=e;e._reactInternalFiber=b;xf(b,d,a,c);b=Qg(null,b,d,!0,f,
c)}else b.tag=0,S(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);f=b.pendingProps;a=hf(e);b.type=a;e=b.tag=We(a);f=L(a,f);g=void 0;switch(e){case 0:g=Mg(null,b,a,f,c);break;case 1:g=Og(null,b,a,f,c);break;case 11:g=Hg(null,b,a,f,c);break;case 14:g=Kg(null,b,a,L(a.type,f),d,c);break;default:x("306",a,"")}return g;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Mg(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,
e=b.elementType===d?e:L(d,e),Og(a,b,d,e,c);case 3:Rg(b);d=b.updateQueue;null===d?x("282"):void 0;e=b.memoizedState;e=null!==e?e.element:null;yf(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)Fg(),b=Jg(a,b,c);else{e=b.stateNode;if(e=(null===a||null===a.child)&&e.hydrate)yg=Ee(b.stateNode.containerInfo),xg=b,e=zg=!0;e?(b.effectTag|=2,b.child=Ef(b,null,d,c)):(S(a,b,d,c),Fg());b=b.child}return b;case 5:return Lf(b),null===a&&Cg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,
g=e.children,xe(d,e)?g=null:null!==f&&xe(d,f)&&(b.effectTag|=16),Ng(a,b),1!==c&&b.mode&1&&e.hidden?(b.expirationTime=b.childExpirationTime=1,b=null):(S(a,b,g,c),b=b.child),b;case 6:return null===a&&Cg(b),null;case 13:return Sg(a,b,c);case 4:return Jf(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Df(b,null,d,c):S(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Hg(a,b,d,e,c);case 7:return S(a,b,b.pendingProps,c),b.child;case 8:return S(a,b,b.pendingProps.children,
c),b.child;case 12:return S(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;Ug(b,f);if(null!==g){var h=g.value;f=bd(h,f)?0:("function"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!I.current){b=Jg(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var l=h.contextDependencies;if(null!==l){g=h.child;for(var k=l.first;null!==k;){if(k.context===d&&0!==
(k.observedBits&f)){1===h.tag&&(k=nf(c),k.tag=sf,pf(h,k));h.expirationTime<c&&(h.expirationTime=c);k=h.alternate;null!==k&&k.expirationTime<c&&(k.expirationTime=c);k=c;for(var m=h.return;null!==m;){var p=m.alternate;if(m.childExpirationTime<k)m.childExpirationTime=k,null!==p&&p.childExpirationTime<k&&(p.childExpirationTime=k);else if(null!==p&&p.childExpirationTime<k)p.childExpirationTime=k;else break;m=m.return}l.expirationTime<c&&(l.expirationTime=c);break}k=k.next}}else g=10===h.tag?h.type===b.type?
null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}}S(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,Ig(b,c),e=M(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,S(a,b,d,c),b.child;case 14:return e=b.type,f=L(e,b.pendingProps),f=L(e.type,f),Kg(a,b,e,f,d,c);case 15:return Lg(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===
d?e:L(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,J(d)?(a=!0,Oe(b)):a=!1,Ig(b,c),vf(b,d,e,c),xf(b,d,e,c),Qg(null,b,d,!0,a,c)}x("156")}var Vg={current:null},Wg=null,Xg=null,Yg=null;function Ug(a,b){var c=a.type._context;G(Vg,c._currentValue,a);c._currentValue=b}function Zg(a){var b=Vg.current;F(Vg,a);a.type._context._currentValue=b}function Ig(a,b){Wg=a;Yg=Xg=null;var c=a.contextDependencies;null!==c&&c.expirationTime>=b&&(qg=!0);a.contextDependencies=null}
function M(a,b){if(Yg!==a&&!1!==b&&0!==b){if("number"!==typeof b||1073741823===b)Yg=a,b=1073741823;b={context:a,observedBits:b,next:null};null===Xg?(null===Wg?x("308"):void 0,Xg=b,Wg.contextDependencies={first:b,expirationTime:0}):Xg=Xg.next=b}return a._currentValue}var $g=0,rf=1,sf=2,ah=3,Pg=!1;function bh(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}
function ch(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function nf(a){return{expirationTime:a,tag:$g,payload:null,callback:null,next:null,nextEffect:null}}function dh(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}
function pf(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=bh(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=bh(a.memoizedState),e=c.updateQueue=bh(c.memoizedState)):d=a.updateQueue=ch(e):null===e&&(e=c.updateQueue=ch(d));null===e||d===e?dh(d,b):null===d.lastUpdate||null===e.lastUpdate?(dh(d,b),dh(e,b)):(dh(d,b),e.lastUpdate=b)}
function eh(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=bh(a.memoizedState):fh(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function fh(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=ch(b));return b}
function gh(a,b,c,d,e,f){switch(c.tag){case rf:return a=c.payload,"function"===typeof a?a.call(f,d,e):a;case ah:a.effectTag=a.effectTag&-2049|64;case $g:a=c.payload;e="function"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case sf:Pg=!0}return d}
function yf(a,b,c,d,e){Pg=!1;b=fh(a,b);for(var f=b.baseState,g=null,h=0,l=b.firstUpdate,k=f;null!==l;){var m=l.expirationTime;m<e?(null===g&&(g=l,f=k),h<m&&(h=m)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=32,l.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=l:(b.lastEffect.nextEffect=l,b.lastEffect=l)));l=l.next}m=null;for(l=b.firstCapturedUpdate;null!==l;){var p=l.expirationTime;p<e?(null===m&&(m=l,null===g&&(f=k)),h<p&&(h=p)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=
32,l.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=l:(b.lastCapturedEffect.nextEffect=l,b.lastCapturedEffect=l)));l=l.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=k);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;a.expirationTime=h;a.memoizedState=k}
function hh(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);ih(b.firstEffect,c);b.firstEffect=b.lastEffect=null;ih(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function ih(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;"function"!==typeof c?x("191",c):void 0;c.call(d)}a=a.nextEffect}}
function jh(a,b){return{value:a,source:b,stack:jc(b)}}function kh(a){a.effectTag|=4}var lh=void 0,mh=void 0,nh=void 0,oh=void 0;lh=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};mh=function(){};
nh=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;If(N.current);a=null;switch(c){case "input":f=vc(g,f);d=vc(g,d);a=[];break;case "option":f=$d(g,f);d=$d(g,d);a=[];break;case "select":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case "textarea":f=be(g,f);d=be(g,d);a=[];break;default:"function"!==typeof f.onClick&&"function"===typeof d.onClick&&(g.onclick=te)}qe(c,d);g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if("style"===
c){var l=f[c];for(g in l)l.hasOwnProperty(g)&&(h||(h={}),h[g]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(ra.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var k=d[c];l=null!=f?f[c]:void 0;if(d.hasOwnProperty(c)&&k!==l&&(null!=k||null!=l))if("style"===c)if(l){for(g in l)!l.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(h||(h={}),h[g]="");for(g in k)k.hasOwnProperty(g)&&l[g]!==k[g]&&(h||
(h={}),h[g]=k[g])}else h||(a||(a=[]),a.push(c,h)),h=k;else"dangerouslySetInnerHTML"===c?(k=k?k.__html:void 0,l=l?l.__html:void 0,null!=k&&l!==k&&(a=a||[]).push(c,""+k)):"children"===c?l===k||"string"!==typeof k&&"number"!==typeof k||(a=a||[]).push(c,""+k):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(ra.hasOwnProperty(c)?(null!=k&&se(e,c),a||l===k||(a=[])):(a=a||[]).push(c,k))}h&&(a=a||[]).push("style",h);e=a;(b.updateQueue=e)&&kh(b)}};oh=function(a,b,c,d){c!==d&&kh(b)};
var ph="function"===typeof WeakSet?WeakSet:Set;function qh(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=jc(c));null!==c&&ic(c.type);b=b.value;null!==a&&1===a.tag&&ic(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function rh(a){var b=a.ref;if(null!==b)if("function"===typeof b)try{b(null)}catch(c){sh(a,c)}else b.current=null}
function th(a,b,c){c=c.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do{if((d.tag&a)!==Nf){var e=d.destroy;d.destroy=void 0;void 0!==e&&e()}(d.tag&b)!==Nf&&(e=d.create,d.destroy=e());d=d.next}while(d!==c)}}
function uh(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d.style.display="none";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty("display")?e.display:null;d.style.display=ne("display",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?"":c.memoizedProps;else if(13===c.tag&&null!==c.memoizedState){d=c.child.sibling;d.return=c;c=d;continue}else if(null!==c.child){c.child.return=c;c=c.child;continue}if(c===a)break;for(;null===c.sibling;){if(null===c.return||
c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}
function vh(a){"function"===typeof Re&&Re(a);switch(a.tag){case 0:case 11:case 14:case 15:var b=a.updateQueue;if(null!==b&&(b=b.lastEffect,null!==b)){var c=b=b.next;do{var d=c.destroy;if(void 0!==d){var e=a;try{d()}catch(f){sh(e,f)}}c=c.next}while(c!==b)}break;case 1:rh(a);b=a.stateNode;if("function"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(f){sh(a,f)}break;case 5:rh(a);break;case 4:wh(a)}}
function xh(a){return 5===a.tag||3===a.tag||4===a.tag}
function yh(a){a:{for(var b=a.return;null!==b;){if(xh(b)){var c=b;break a}b=b.return}x("160");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:x("161")}c.effectTag&16&&(ke(b,""),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||xh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&
2)continue b;if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(g=b,h=e.stateNode,8===g.nodeType?(f=g.parentNode,f.insertBefore(h,g)):(f=g,f.appendChild(h)),g=g._reactRootContainer,null!==g&&void 0!==g||null!==f.onclick||(f.onclick=te)):b.appendChild(e.stateNode);
else if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}
function wh(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?x("160"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(vh(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?
(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag){if(null!==b.child){d=b.stateNode.containerInfo;e=!0;b.child.return=b;b=b.child;continue}}else if(vh(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}
function zh(a,b){switch(b.tag){case 0:case 11:case 14:case 15:th(Pf,Qf,b);break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&Ce(c,f,e,a,d,b)}break;case 6:null===b.stateNode?x("162"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 12:break;case 13:c=b.memoizedState;d=void 0;a=b;null===c?d=!1:(d=!0,a=b.child,0===c.timedOutAt&&(c.timedOutAt=lf()));null!==a&&uh(a,d);c=
b.updateQueue;if(null!==c){b.updateQueue=null;var g=b.stateNode;null===g&&(g=b.stateNode=new ph);c.forEach(function(a){var c=Ah.bind(null,b,a);g.has(a)||(g.add(a),a.then(c,c))})}break;case 17:break;default:x("163")}}var Bh="function"===typeof WeakMap?WeakMap:Map;function Ch(a,b,c){c=nf(c);c.tag=ah;c.payload={element:null};var d=b.value;c.callback=function(){Dh(d);qh(a,b)};return c}
function Eh(a,b,c){c=nf(c);c.tag=ah;var d=a.type.getDerivedStateFromError;if("function"===typeof d){var e=b.value;c.payload=function(){return d(e)}}var f=a.stateNode;null!==f&&"function"===typeof f.componentDidCatch&&(c.callback=function(){"function"!==typeof d&&(null===Fh?Fh=new Set([this]):Fh.add(this));var c=b.value,e=b.stack;qh(a,b);this.componentDidCatch(c,{componentStack:null!==e?e:""})});return c}
function Gh(a){switch(a.tag){case 1:J(a.type)&&Ke(a);var b=a.effectTag;return b&2048?(a.effectTag=b&-2049|64,a):null;case 3:return Kf(a),Le(a),b=a.effectTag,0!==(b&64)?x("285"):void 0,a.effectTag=b&-2049|64,a;case 5:return Mf(a),null;case 13:return b=a.effectTag,b&2048?(a.effectTag=b&-2049|64,a):null;case 18:return null;case 4:return Kf(a),null;case 10:return Zg(a),null;default:return null}}
var Hh=Tb.ReactCurrentDispatcher,Ih=Tb.ReactCurrentOwner,Jh=1073741822,Kh=!1,T=null,Lh=null,U=0,Mh=-1,Nh=!1,V=null,Oh=!1,Ph=null,Qh=null,Rh=null,Fh=null;function Sh(){if(null!==T)for(var a=T.return;null!==a;){var b=a;switch(b.tag){case 1:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Ke(b);break;case 3:Kf(b);Le(b);break;case 5:Mf(b);break;case 4:Kf(b);break;case 10:Zg(b)}a=a.return}Lh=null;U=0;Mh=-1;Nh=!1;T=null}
function Th(){for(;null!==V;){var a=V.effectTag;a&16&&ke(V.stateNode,"");if(a&128){var b=V.alternate;null!==b&&(b=b.ref,null!==b&&("function"===typeof b?b(null):b.current=null))}switch(a&14){case 2:yh(V);V.effectTag&=-3;break;case 6:yh(V);V.effectTag&=-3;zh(V.alternate,V);break;case 4:zh(V.alternate,V);break;case 8:a=V,wh(a),a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null,a=a.alternate,null!==a&&(a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null)}V=V.nextEffect}}
function Uh(){for(;null!==V;){if(V.effectTag&256)a:{var a=V.alternate,b=V;switch(b.tag){case 0:case 11:case 15:th(Of,Nf,b);break a;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:L(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}break a;case 3:case 5:case 6:case 4:case 17:break a;default:x("163")}}V=V.nextEffect}}
function Vh(a,b){for(;null!==V;){var c=V.effectTag;if(c&36){var d=V.alternate,e=V,f=b;switch(e.tag){case 0:case 11:case 15:th(Rf,Sf,e);break;case 1:var g=e.stateNode;if(e.effectTag&4)if(null===d)g.componentDidMount();else{var h=e.elementType===e.type?d.memoizedProps:L(e.type,d.memoizedProps);g.componentDidUpdate(h,d.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}d=e.updateQueue;null!==d&&hh(e,d,g,f);break;case 3:d=e.updateQueue;if(null!==d){g=null;if(null!==e.child)switch(e.child.tag){case 5:g=
e.child.stateNode;break;case 1:g=e.child.stateNode}hh(e,d,g,f)}break;case 5:f=e.stateNode;null===d&&e.effectTag&4&&we(e.type,e.memoizedProps)&&f.focus();break;case 6:break;case 4:break;case 12:break;case 13:break;case 17:break;default:x("163")}}c&128&&(e=V.ref,null!==e&&(f=V.stateNode,"function"===typeof e?e(f):e.current=f));c&512&&(Ph=a);V=V.nextEffect}}
function Wh(a,b){Rh=Qh=Ph=null;var c=W;W=!0;do{if(b.effectTag&512){var d=!1,e=void 0;try{var f=b;th(Uf,Nf,f);th(Nf,Tf,f)}catch(g){d=!0,e=g}d&&sh(b,e)}b=b.nextEffect}while(null!==b);W=c;c=a.expirationTime;0!==c&&Xh(a,c);X||W||Yh(1073741823,!1)}function of(){null!==Qh&&Be(Qh);null!==Rh&&Rh()}
function Zh(a,b){Oh=Kh=!0;a.current===b?x("177"):void 0;var c=a.pendingCommitExpirationTime;0===c?x("261"):void 0;a.pendingCommitExpirationTime=0;var d=b.expirationTime,e=b.childExpirationTime;ef(a,e>d?e:d);Ih.current=null;d=void 0;1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect;ue=Bd;ve=Pd();Bd=!1;for(V=d;null!==V;){e=!1;var f=void 0;try{Uh()}catch(h){e=!0,f=h}e&&(null===V?x("178"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}for(V=d;null!==V;){e=!1;
f=void 0;try{Th()}catch(h){e=!0,f=h}e&&(null===V?x("178"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}Qd(ve);ve=null;Bd=!!ue;ue=null;a.current=b;for(V=d;null!==V;){e=!1;f=void 0;try{Vh(a,c)}catch(h){e=!0,f=h}e&&(null===V?x("178"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}if(null!==d&&null!==Ph){var g=Wh.bind(null,a,d);Qh=r.unstable_runWithPriority(r.unstable_NormalPriority,function(){return Ae(g)});Rh=g}Kh=Oh=!1;"function"===typeof Qe&&Qe(b.stateNode);c=b.expirationTime;b=b.childExpirationTime;b=
b>c?b:c;0===b&&(Fh=null);$h(a,b)}
function ai(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&1024)){T=a;a:{var e=b;b=a;var f=U;var g=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:J(b.type)&&Ke(b);break;case 3:Kf(b);Le(b);g=b.stateNode;g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null);if(null===e||null===e.child)Eg(b),b.effectTag&=-3;mh(b);break;case 5:Mf(b);var h=If(Hf.current);f=b.type;if(null!==e&&null!=b.stateNode)nh(e,b,f,g,h),e.ref!==b.ref&&(b.effectTag|=
128);else if(g){var l=If(N.current);if(Eg(b)){g=b;e=g.stateNode;var k=g.type,m=g.memoizedProps,p=h;e[Fa]=g;e[Ga]=m;f=void 0;h=k;switch(h){case "iframe":case "object":E("load",e);break;case "video":case "audio":for(k=0;k<ab.length;k++)E(ab[k],e);break;case "source":E("error",e);break;case "img":case "image":case "link":E("error",e);E("load",e);break;case "form":E("reset",e);E("submit",e);break;case "details":E("toggle",e);break;case "input":wc(e,m);E("invalid",e);se(p,"onChange");break;case "select":e._wrapperState=
{wasMultiple:!!m.multiple};E("invalid",e);se(p,"onChange");break;case "textarea":ce(e,m),E("invalid",e),se(p,"onChange")}qe(h,m);k=null;for(f in m)m.hasOwnProperty(f)&&(l=m[f],"children"===f?"string"===typeof l?e.textContent!==l&&(k=["children",l]):"number"===typeof l&&e.textContent!==""+l&&(k=["children",""+l]):ra.hasOwnProperty(f)&&null!=l&&se(p,f));switch(h){case "input":Rb(e);Ac(e,m,!0);break;case "textarea":Rb(e);ee(e,m);break;case "select":case "option":break;default:"function"===typeof m.onClick&&
(e.onclick=te)}f=k;g.updateQueue=f;g=null!==f?!0:!1;g&&kh(b)}else{m=b;p=f;e=g;k=9===h.nodeType?h:h.ownerDocument;l===fe.html&&(l=ge(p));l===fe.html?"script"===p?(e=k.createElement("div"),e.innerHTML="<script>\x3c/script>",k=e.removeChild(e.firstChild)):"string"===typeof e.is?k=k.createElement(p,{is:e.is}):(k=k.createElement(p),"select"===p&&(p=k,e.multiple?p.multiple=!0:e.size&&(p.size=e.size))):k=k.createElementNS(l,p);e=k;e[Fa]=m;e[Ga]=g;lh(e,b,!1,!1);p=e;k=f;m=g;var t=h,A=re(k,m);switch(k){case "iframe":case "object":E("load",
p);h=m;break;case "video":case "audio":for(h=0;h<ab.length;h++)E(ab[h],p);h=m;break;case "source":E("error",p);h=m;break;case "img":case "image":case "link":E("error",p);E("load",p);h=m;break;case "form":E("reset",p);E("submit",p);h=m;break;case "details":E("toggle",p);h=m;break;case "input":wc(p,m);h=vc(p,m);E("invalid",p);se(t,"onChange");break;case "option":h=$d(p,m);break;case "select":p._wrapperState={wasMultiple:!!m.multiple};h=n({},m,{value:void 0});E("invalid",p);se(t,"onChange");break;case "textarea":ce(p,
m);h=be(p,m);E("invalid",p);se(t,"onChange");break;default:h=m}qe(k,h);l=void 0;var v=k,R=p,u=h;for(l in u)if(u.hasOwnProperty(l)){var q=u[l];"style"===l?oe(R,q):"dangerouslySetInnerHTML"===l?(q=q?q.__html:void 0,null!=q&&je(R,q)):"children"===l?"string"===typeof q?("textarea"!==v||""!==q)&&ke(R,q):"number"===typeof q&&ke(R,""+q):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(ra.hasOwnProperty(l)?null!=q&&se(t,l):null!=q&&tc(R,l,q,A))}switch(k){case "input":Rb(p);
Ac(p,m,!1);break;case "textarea":Rb(p);ee(p,m);break;case "option":null!=m.value&&p.setAttribute("value",""+uc(m.value));break;case "select":h=p;h.multiple=!!m.multiple;p=m.value;null!=p?ae(h,!!m.multiple,p,!1):null!=m.defaultValue&&ae(h,!!m.multiple,m.defaultValue,!0);break;default:"function"===typeof h.onClick&&(p.onclick=te)}(g=we(f,g))&&kh(b);b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode?x("166"):void 0;break;case 6:e&&null!=b.stateNode?oh(e,b,e.memoizedProps,g):("string"!==
typeof g&&(null===b.stateNode?x("166"):void 0),e=If(Hf.current),If(N.current),Eg(b)?(g=b,f=g.stateNode,e=g.memoizedProps,f[Fa]=g,(g=f.nodeValue!==e)&&kh(b)):(f=b,g=(9===e.nodeType?e:e.ownerDocument).createTextNode(g),g[Fa]=b,f.stateNode=g));break;case 11:break;case 13:g=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=f;T=b;break a}g=null!==g;f=null!==e&&null!==e.memoizedState;null!==e&&!g&&f&&(e=e.child.sibling,null!==e&&(h=b.firstEffect,null!==h?(b.firstEffect=e,e.nextEffect=h):(b.firstEffect=
b.lastEffect=e,e.nextEffect=null),e.effectTag=8));if(g||f)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:Kf(b);mh(b);break;case 10:Zg(b);break;case 9:break;case 14:break;case 17:J(b.type)&&Ke(b);break;case 18:break;default:x("156")}T=null}b=a;if(1===U||1!==b.childExpirationTime){g=0;for(f=b.child;null!==f;)e=f.expirationTime,h=f.childExpirationTime,e>g&&(g=e),h>g&&(g=h),f=f.sibling;b.childExpirationTime=g}if(null!==T)return T;null!==c&&0===(c.effectTag&1024)&&(null===c.firstEffect&&
(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{a=Gh(a,U);if(null!==a)return a.effectTag&=1023,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=1024)}if(null!==d)return d;if(null!==c)a=c;else break}return null}
function bi(a){var b=Tg(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=ai(a));Ih.current=null;return b}
function ci(a,b){Kh?x("243"):void 0;of();Kh=!0;var c=Hh.current;Hh.current=kg;var d=a.nextExpirationTimeToWorkOn;if(d!==U||a!==Lh||null===T)Sh(),Lh=a,U=d,T=Xe(Lh.current,null,U),a.pendingCommitExpirationTime=0;var e=!1;do{try{if(b)for(;null!==T&&!di();)T=bi(T);else for(;null!==T;)T=bi(T)}catch(u){if(Yg=Xg=Wg=null,lg(),null===T)e=!0,Dh(u);else{null===T?x("271"):void 0;var f=T,g=f.return;if(null===g)e=!0,Dh(u);else{a:{var h=a,l=g,k=f,m=u;g=U;k.effectTag|=1024;k.firstEffect=k.lastEffect=null;if(null!==
m&&"object"===typeof m&&"function"===typeof m.then){var p=m;m=l;var t=-1,A=-1;do{if(13===m.tag){var v=m.alternate;if(null!==v&&(v=v.memoizedState,null!==v)){A=10*(1073741822-v.timedOutAt);break}v=m.pendingProps.maxDuration;if("number"===typeof v)if(0>=v)t=0;else if(-1===t||v<t)t=v}m=m.return}while(null!==m);m=l;do{if(v=13===m.tag)v=void 0===m.memoizedProps.fallback?!1:null===m.memoizedState;if(v){l=m.updateQueue;null===l?(l=new Set,l.add(p),m.updateQueue=l):l.add(p);if(0===(m.mode&1)){m.effectTag|=
64;k.effectTag&=-1957;1===k.tag&&(null===k.alternate?k.tag=17:(g=nf(1073741823),g.tag=sf,pf(k,g)));k.expirationTime=1073741823;break a}k=h;l=g;var R=k.pingCache;null===R?(R=k.pingCache=new Bh,v=new Set,R.set(p,v)):(v=R.get(p),void 0===v&&(v=new Set,R.set(p,v)));v.has(l)||(v.add(l),k=ei.bind(null,k,p,l),p.then(k,k));-1===t?h=1073741823:(-1===A&&(A=10*(1073741822-gf(h,g))-5E3),h=A+t);0<=h&&Mh<h&&(Mh=h);m.effectTag|=2048;m.expirationTime=g;break a}m=m.return}while(null!==m);m=Error((ic(k.type)||"A React component")+
" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+jc(k))}Nh=!0;m=jh(m,k);h=l;do{switch(h.tag){case 3:h.effectTag|=2048;h.expirationTime=g;g=Ch(h,m,g);eh(h,g);break a;case 1:if(t=m,A=h.type,k=h.stateNode,0===(h.effectTag&64)&&("function"===typeof A.getDerivedStateFromError||null!==k&&"function"===typeof k.componentDidCatch&&(null===Fh||!Fh.has(k)))){h.effectTag|=2048;
h.expirationTime=g;g=Eh(h,t,g);eh(h,g);break a}}h=h.return}while(null!==h)}T=ai(f);continue}}}break}while(1);Kh=!1;Hh.current=c;Yg=Xg=Wg=null;lg();if(e)Lh=null,a.finishedWork=null;else if(null!==T)a.finishedWork=null;else{c=a.current.alternate;null===c?x("281"):void 0;Lh=null;if(Nh){e=a.latestPendingTime;f=a.latestSuspendedTime;g=a.latestPingedTime;if(0!==e&&e<d||0!==f&&f<d||0!==g&&g<d){ff(a,d);fi(a,c,d,a.expirationTime,-1);return}if(!a.didError&&b){a.didError=!0;d=a.nextExpirationTimeToWorkOn=d;
b=a.expirationTime=1073741823;fi(a,c,d,b,-1);return}}b&&-1!==Mh?(ff(a,d),b=10*(1073741822-gf(a,d)),b<Mh&&(Mh=b),b=10*(1073741822-lf()),b=Mh-b,fi(a,c,d,a.expirationTime,0>b?0:b)):(a.pendingCommitExpirationTime=d,a.finishedWork=c)}}
function sh(a,b){for(var c=a.return;null!==c;){switch(c.tag){case 1:var d=c.stateNode;if("function"===typeof c.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===Fh||!Fh.has(d))){a=jh(b,a);a=Eh(c,a,1073741823);pf(c,a);qf(c,1073741823);return}break;case 3:a=jh(b,a);a=Ch(c,a,1073741823);pf(c,a);qf(c,1073741823);return}c=c.return}3===a.tag&&(c=jh(b,a),c=Ch(a,c,1073741823),pf(a,c),qf(a,1073741823))}
function mf(a,b){var c=r.unstable_getCurrentPriorityLevel(),d=void 0;if(0===(b.mode&1))d=1073741823;else if(Kh&&!Oh)d=U;else{switch(c){case r.unstable_ImmediatePriority:d=1073741823;break;case r.unstable_UserBlockingPriority:d=1073741822-10*(((1073741822-a+15)/10|0)+1);break;case r.unstable_NormalPriority:d=1073741822-25*(((1073741822-a+500)/25|0)+1);break;case r.unstable_LowPriority:case r.unstable_IdlePriority:d=1;break;default:x("313")}null!==Lh&&d===U&&--d}c===r.unstable_UserBlockingPriority&&
(0===gi||d<gi)&&(gi=d);return d}function ei(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);if(null!==Lh&&U===c)Lh=null;else if(b=a.earliestSuspendedTime,d=a.latestSuspendedTime,0!==b&&c<=b&&c>=d){a.didError=!1;b=a.latestPingedTime;if(0===b||b>c)a.latestPingedTime=c;df(c,a);c=a.expirationTime;0!==c&&Xh(a,c)}}function Ah(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=lf();b=mf(b,a);a=hi(a,b);null!==a&&(cf(a,b),b=a.expirationTime,0!==b&&Xh(a,b))}
function hi(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}return e}
function qf(a,b){a=hi(a,b);null!==a&&(!Kh&&0!==U&&b>U&&Sh(),cf(a,b),Kh&&!Oh&&Lh===a||Xh(a,a.expirationTime),ii>ji&&(ii=0,x("185")))}function ki(a,b,c,d,e){return r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){return a(b,c,d,e)})}var li=null,Y=null,mi=0,ni=void 0,W=!1,oi=null,Z=0,gi=0,pi=!1,qi=null,X=!1,ri=!1,si=null,ti=r.unstable_now(),ui=1073741822-(ti/10|0),vi=ui,ji=50,ii=0,wi=null;function xi(){ui=1073741822-((r.unstable_now()-ti)/10|0)}
function yi(a,b){if(0!==mi){if(b<mi)return;null!==ni&&r.unstable_cancelCallback(ni)}mi=b;a=r.unstable_now()-ti;ni=r.unstable_scheduleCallback(zi,{timeout:10*(1073741822-b)-a})}function fi(a,b,c,d,e){a.expirationTime=d;0!==e||di()?0<e&&(a.timeoutHandle=ye(Ai.bind(null,a,b,c),e)):(a.pendingCommitExpirationTime=c,a.finishedWork=b)}function Ai(a,b,c){a.pendingCommitExpirationTime=c;a.finishedWork=b;xi();vi=ui;Bi(a,c)}function $h(a,b){a.expirationTime=b;a.finishedWork=null}
function lf(){if(W)return vi;Ci();if(0===Z||1===Z)xi(),vi=ui;return vi}function Xh(a,b){null===a.nextScheduledRoot?(a.expirationTime=b,null===Y?(li=Y=a,a.nextScheduledRoot=a):(Y=Y.nextScheduledRoot=a,Y.nextScheduledRoot=li)):b>a.expirationTime&&(a.expirationTime=b);W||(X?ri&&(oi=a,Z=1073741823,Di(a,1073741823,!1)):1073741823===b?Yh(1073741823,!1):yi(a,b))}
function Ci(){var a=0,b=null;if(null!==Y)for(var c=Y,d=li;null!==d;){var e=d.expirationTime;if(0===e){null===c||null===Y?x("244"):void 0;if(d===d.nextScheduledRoot){li=Y=d.nextScheduledRoot=null;break}else if(d===li)li=e=d.nextScheduledRoot,Y.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===Y){Y=c;Y.nextScheduledRoot=li;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{e>a&&(a=e,b=d);if(d===Y)break;if(1073741823===
a)break;c=d;d=d.nextScheduledRoot}}oi=b;Z=a}var Ei=!1;function di(){return Ei?!0:r.unstable_shouldYield()?Ei=!0:!1}function zi(){try{if(!di()&&null!==li){xi();var a=li;do{var b=a.expirationTime;0!==b&&ui<=b&&(a.nextExpirationTimeToWorkOn=ui);a=a.nextScheduledRoot}while(a!==li)}Yh(0,!0)}finally{Ei=!1}}
function Yh(a,b){Ci();if(b)for(xi(),vi=ui;null!==oi&&0!==Z&&a<=Z&&!(Ei&&ui>Z);)Di(oi,Z,ui>Z),Ci(),xi(),vi=ui;else for(;null!==oi&&0!==Z&&a<=Z;)Di(oi,Z,!1),Ci();b&&(mi=0,ni=null);0!==Z&&yi(oi,Z);ii=0;wi=null;if(null!==si)for(a=si,si=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){pi||(pi=!0,qi=d)}}if(pi)throw a=qi,qi=null,pi=!1,a;}function Bi(a,b){W?x("253"):void 0;oi=a;Z=b;Di(a,b,!1);Yh(1073741823,!1)}
function Di(a,b,c){W?x("245"):void 0;W=!0;if(c){var d=a.finishedWork;null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&(di()?a.finishedWork=d:Fi(a,d,b)))}else d=a.finishedWork,null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&Fi(a,d,b));W=!1}
function Fi(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime>=c&&(null===si?si=[d]:si.push(d),d._defer)){a.finishedWork=b;a.expirationTime=0;return}a.finishedWork=null;a===wi?ii++:(wi=a,ii=0);r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){Zh(a,b)})}function Dh(a){null===oi?x("246"):void 0;oi.expirationTime=0;pi||(pi=!0,qi=a)}function Gi(a,b){var c=X;X=!0;try{return a(b)}finally{(X=c)||W||Yh(1073741823,!1)}}
function Hi(a,b){if(X&&!ri){ri=!0;try{return a(b)}finally{ri=!1}}return a(b)}function Ii(a,b,c){X||W||0===gi||(Yh(gi,!1),gi=0);var d=X;X=!0;try{return r.unstable_runWithPriority(r.unstable_UserBlockingPriority,function(){return a(b,c)})}finally{(X=d)||W||Yh(1073741823,!1)}}
function Ji(a,b,c,d,e){var f=b.current;a:if(c){c=c._reactInternalFiber;b:{2===ed(c)&&1===c.tag?void 0:x("170");var g=c;do{switch(g.tag){case 3:g=g.stateNode.context;break b;case 1:if(J(g.type)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}}g=g.return}while(null!==g);x("171");g=void 0}if(1===c.tag){var h=c.type;if(J(h)){c=Ne(c,h,g);break a}}c=g}else c=He;null===b.context?b.context=c:b.pendingContext=c;b=e;e=nf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);
of();pf(f,e);qf(f,d);return d}function Ki(a,b,c,d){var e=b.current,f=lf();e=mf(f,e);return Ji(a,b,c,e,d)}function Li(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function Mi(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Wb,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}
Ab=function(a,b,c){switch(b){case "input":yc(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+'][type="radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Ka(d);e?void 0:x("90");Sb(d);yc(d,e)}}}break;case "textarea":de(a,c);break;case "select":b=c.value,null!=b&&ae(a,!!c.multiple,b,!1)}};
function Ni(a){var b=1073741822-25*(((1073741822-lf()+500)/25|0)+1);b>=Jh&&(b=Jh-1);this._expirationTime=Jh=b;this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}Ni.prototype.render=function(a){this._defer?void 0:x("250");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new Oi;Ji(a,b,null,c,d._onCommit);return d};
Ni.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};
Ni.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:x("251");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?x("251"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;Bi(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=
null,this._defer=!1};Ni.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function Oi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}Oi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};
Oi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];"function"!==typeof c?x("191",c):void 0;c()}}};
function Pi(a,b,c){b=K(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null};this._internalRoot=b.stateNode=a}
Pi.prototype.render=function(a,b){var c=this._internalRoot,d=new Oi;b=void 0===b?null:b;null!==b&&d.then(b);Ki(a,c,null,d._onCommit);return d};Pi.prototype.unmount=function(a){var b=this._internalRoot,c=new Oi;a=void 0===a?null:a;null!==a&&c.then(a);Ki(null,b,null,c._onCommit);return c};Pi.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new Oi;c=void 0===c?null:c;null!==c&&e.then(c);Ki(b,d,a,e._onCommit);return e};
Pi.prototype.createBatch=function(){var a=new Ni(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime>=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function Qi(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}Gb=Gi;Hb=Ii;Ib=function(){W||0===gi||(Yh(gi,!1),gi=0)};
function Ri(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute("data-reactroot")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new Pi(a,!1,b)}
function Si(a,b,c,d,e){var f=c._reactRootContainer;if(f){if("function"===typeof e){var g=e;e=function(){var a=Li(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=Ri(c,d);if("function"===typeof e){var h=e;e=function(){var a=Li(f._internalRoot);h.call(a)}}Hi(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return Li(f._internalRoot)}
function Ti(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Qi(b)?void 0:x("200");return Mi(a,b,null,c)}
var Vi={createPortal:Ti,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;void 0===b&&("function"===typeof a.render?x("188"):x("268",Object.keys(a)));a=hd(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){Qi(b)?void 0:x("200");return Si(null,a,b,!0,c)},render:function(a,b,c){Qi(b)?void 0:x("200");return Si(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){Qi(c)?void 0:x("200");null==a||void 0===a._reactInternalFiber?
x("38"):void 0;return Si(a,b,c,!1,d)},unmountComponentAtNode:function(a){Qi(a)?void 0:x("40");return a._reactRootContainer?(Hi(function(){Si(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return Ti.apply(void 0,arguments)},unstable_batchedUpdates:Gi,unstable_interactiveUpdates:Ii,flushSync:function(a,b){W?x("187"):void 0;var c=X;X=!0;try{return ki(a,b)}finally{X=c,Yh(1073741823,!1)}},unstable_createRoot:Ui,unstable_flushControlled:function(a){var b=
X;X=!0;try{ki(a)}finally{(X=b)||W||Yh(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Ia,Ja,Ka,Ba.injectEventPluginsByName,pa,Qa,function(a){ya(a,Pa)},Eb,Fb,Dd,Da]}};function Ui(a,b){Qi(a)?void 0:x("299","unstable_createRoot");return new Pi(a,!0,null!=b&&!0===b.hydrate)}
(function(a){var b=a.findFiberByHostInstance;return Te(n({},a,{overrideProps:null,currentDispatcherRef:Tb.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=hd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))})({findFiberByHostInstance:Ha,bundleType:0,version:"16.8.6",rendererPackageName:"react-dom"});var Wi={default:Vi},Xi=Wi&&Vi||Wi;module.exports=Xi.default||Xi;


/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.8.6
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var k=__webpack_require__(152),n="function"===typeof Symbol&&Symbol.for,p=n?Symbol.for("react.element"):60103,q=n?Symbol.for("react.portal"):60106,r=n?Symbol.for("react.fragment"):60107,t=n?Symbol.for("react.strict_mode"):60108,u=n?Symbol.for("react.profiler"):60114,v=n?Symbol.for("react.provider"):60109,w=n?Symbol.for("react.context"):60110,x=n?Symbol.for("react.concurrent_mode"):60111,y=n?Symbol.for("react.forward_ref"):60112,z=n?Symbol.for("react.suspense"):60113,aa=n?Symbol.for("react.memo"):
60115,ba=n?Symbol.for("react.lazy"):60116,A="function"===typeof Symbol&&Symbol.iterator;function ca(a,b,d,c,e,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[d,c,e,g,h,f],m=0;a=Error(b.replace(/%s/g,function(){return l[m++]}));a.name="Invariant Violation"}a.framesToPop=1;throw a;}}
function B(a){for(var b=arguments.length-1,d="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=0;c<b;c++)d+="&args[]="+encodeURIComponent(arguments[c+1]);ca(!1,"Minified React error #"+a+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",d)}var C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},D={};
function E(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){"object"!==typeof a&&"function"!==typeof a&&null!=a?B("85"):void 0;this.updater.enqueueSetState(this,a,b,"setState")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};function F(){}F.prototype=E.prototype;function G(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}var H=G.prototype=new F;
H.constructor=G;k(H,E.prototype);H.isPureReactComponent=!0;var I={current:null},J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};
function M(a,b,d){var c=void 0,e={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=""+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=b[c]);var f=arguments.length-2;if(1===f)e.children=d;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];e.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===e[c]&&(e[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:e,_owner:J.current}}
function da(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function N(a){return"object"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={"=":"=0",":":"=2"};return"$"+(""+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\/+/g,P=[];function Q(a,b,d,c){if(P.length){var e=P.pop();e.result=a;e.keyPrefix=b;e.func=d;e.context=c;e.count=0;return e}return{result:a,keyPrefix:b,func:d,context:c,count:0}}
function R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}
function S(a,b,d,c){var e=typeof a;if("undefined"===e||"boolean"===e)a=null;var g=!1;if(null===a)g=!0;else switch(e){case "string":case "number":g=!0;break;case "object":switch(a.$$typeof){case p:case q:g=!0}}if(g)return d(c,a,""===b?"."+T(a,0):b),1;g=0;b=""===b?".":b+":";if(Array.isArray(a))for(var h=0;h<a.length;h++){e=a[h];var f=b+T(e,h);g+=S(e,f,d,c)}else if(null===a||"object"!==typeof a?f=null:(f=A&&a[A]||a["@@iterator"],f="function"===typeof f?f:null),"function"===typeof f)for(a=f.call(a),h=
0;!(e=a.next()).done;)e=e.value,f=b+T(e,h++),g+=S(e,f,d,c);else"object"===e&&(d=""+a,B("31","[object Object]"===d?"object with keys {"+Object.keys(a).join(", ")+"}":d,""));return g}function U(a,b,d){return null==a?0:S(a,"",b,d)}function T(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ea(a,b){a.func.call(a.context,b,a.count++)}
function fa(a,b,d){var c=a.result,e=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?V(a,c,d,function(a){return a}):null!=a&&(N(a)&&(a=da(a,e+(!a.key||b&&b.key===a.key?"":(""+a.key).replace(O,"$&/")+"/")+d)),c.push(a))}function V(a,b,d,c,e){var g="";null!=d&&(g=(""+d).replace(O,"$&/")+"/");b=Q(b,g,c,e);U(a,fa,b);R(b)}function W(){var a=I.current;null===a?B("321"):void 0;return a}
var X={Children:{map:function(a,b,d){if(null==a)return a;var c=[];V(a,c,null,b,d);return c},forEach:function(a,b,d){if(null==a)return a;b=Q(null,null,b,d);U(a,ea,b);R(b)},count:function(a){return U(a,function(){return null},null)},toArray:function(a){var b=[];V(a,b,null,function(a){return a});return b},only:function(a){N(a)?void 0:B("143");return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,
_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:y,render:a}},lazy:function(a){return{$$typeof:ba,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:aa,type:a,compare:void 0===b?null:b}},useCallback:function(a,b){return W().useCallback(a,b)},useContext:function(a,b){return W().useContext(a,b)},useEffect:function(a,b){return W().useEffect(a,b)},useImperativeHandle:function(a,
b,d){return W().useImperativeHandle(a,b,d)},useDebugValue:function(){},useLayoutEffect:function(a,b){return W().useLayoutEffect(a,b)},useMemo:function(a,b){return W().useMemo(a,b)},useReducer:function(a,b,d){return W().useReducer(a,b,d)},useRef:function(a){return W().useRef(a)},useState:function(a){return W().useState(a)},Fragment:r,StrictMode:t,Suspense:z,createElement:M,cloneElement:function(a,b,d){null===a||void 0===a?B("267",a):void 0;var c=void 0,e=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=
b){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==b.key&&(g=""+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)e.children=d;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];e.children=l}return{$$typeof:p,type:a.type,key:g,ref:h,props:e,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:"16.8.6",
unstable_ConcurrentMode:x,unstable_Profiler:u,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:I,ReactCurrentOwner:J,assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;


/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(291);
} else {}


/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/** @license React v0.13.6
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

Object.defineProperty(exports,"__esModule",{value:!0});var d=null,e=!1,g=3,k=-1,l=-1,m=!1,n=!1;function p(){if(!m){var a=d.expirationTime;n?q():n=!0;r(t,a)}}
function u(){var a=d,b=d.next;if(d===b)d=null;else{var c=d.previous;d=c.next=b;b.previous=c}a.next=a.previous=null;c=a.callback;b=a.expirationTime;a=a.priorityLevel;var f=g,Q=l;g=a;l=b;try{var h=c()}finally{g=f,l=Q}if("function"===typeof h)if(h={callback:h,priorityLevel:a,expirationTime:b,next:null,previous:null},null===d)d=h.next=h.previous=h;else{c=null;a=d;do{if(a.expirationTime>=b){c=a;break}a=a.next}while(a!==d);null===c?c=d:c===d&&(d=h,p());b=c.previous;b.next=c.previous=h;h.next=c;h.previous=
b}}function v(){if(-1===k&&null!==d&&1===d.priorityLevel){m=!0;try{do u();while(null!==d&&1===d.priorityLevel)}finally{m=!1,null!==d?p():n=!1}}}function t(a){m=!0;var b=e;e=a;try{if(a)for(;null!==d;){var c=exports.unstable_now();if(d.expirationTime<=c){do u();while(null!==d&&d.expirationTime<=c)}else break}else if(null!==d){do u();while(null!==d&&!w())}}finally{m=!1,e=b,null!==d?p():n=!1,v()}}
var x=Date,y="function"===typeof setTimeout?setTimeout:void 0,z="function"===typeof clearTimeout?clearTimeout:void 0,A="function"===typeof requestAnimationFrame?requestAnimationFrame:void 0,B="function"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0,C,D;function E(a){C=A(function(b){z(D);a(b)});D=y(function(){B(C);a(exports.unstable_now())},100)}
if("object"===typeof performance&&"function"===typeof performance.now){var F=performance;exports.unstable_now=function(){return F.now()}}else exports.unstable_now=function(){return x.now()};var r,q,w,G=null;"undefined"!==typeof window?G=window:"undefined"!==typeof global&&(G=global);
if(G&&G._schedMock){var H=G._schedMock;r=H[0];q=H[1];w=H[2];exports.unstable_now=H[3]}else if("undefined"===typeof window||"function"!==typeof MessageChannel){var I=null,J=function(a){if(null!==I)try{I(a)}finally{I=null}};r=function(a){null!==I?setTimeout(r,0,a):(I=a,setTimeout(J,0,!1))};q=function(){I=null};w=function(){return!1}}else{"undefined"!==typeof console&&("function"!==typeof A&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),
"function"!==typeof B&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var K=null,L=!1,M=-1,N=!1,O=!1,P=0,R=33,S=33;w=function(){return P<=exports.unstable_now()};var T=new MessageChannel,U=T.port2;T.port1.onmessage=function(){L=!1;var a=K,b=M;K=null;M=-1;var c=exports.unstable_now(),f=!1;if(0>=P-c)if(-1!==b&&b<=c)f=!0;else{N||(N=!0,E(V));K=a;M=b;return}if(null!==a){O=!0;try{a(f)}finally{O=!1}}};
var V=function(a){if(null!==K){E(V);var b=a-P+S;b<S&&R<S?(8>b&&(b=8),S=b<R?R:b):R=b;P=a+S;L||(L=!0,U.postMessage(void 0))}else N=!1};r=function(a,b){K=a;M=b;O||0>b?U.postMessage(void 0):N||(N=!0,E(V))};q=function(){K=null;L=!1;M=-1}}exports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;
exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=g,f=k;g=a;k=exports.unstable_now();try{return b()}finally{g=c,k=f,v()}};exports.unstable_next=function(a){switch(g){case 1:case 2:case 3:var b=3;break;default:b=g}var c=g,f=k;g=b;k=exports.unstable_now();try{return a()}finally{g=c,k=f,v()}};
exports.unstable_scheduleCallback=function(a,b){var c=-1!==k?k:exports.unstable_now();if("object"===typeof b&&null!==b&&"number"===typeof b.timeout)b=c+b.timeout;else switch(g){case 1:b=c+-1;break;case 2:b=c+250;break;case 5:b=c+1073741823;break;case 4:b=c+1E4;break;default:b=c+5E3}a={callback:a,priorityLevel:g,expirationTime:b,next:null,previous:null};if(null===d)d=a.next=a.previous=a,p();else{c=null;var f=d;do{if(f.expirationTime>b){c=f;break}f=f.next}while(f!==d);null===c?c=d:c===d&&(d=a,p());
b=c.previous;b.next=c.previous=a;a.next=c;a.previous=b}return a};exports.unstable_cancelCallback=function(a){var b=a.next;if(null!==b){if(b===a)d=null;else{a===d&&(d=b);var c=a.previous;c.next=b;b.previous=c}a.next=a.previous=null}};exports.unstable_wrapCallback=function(a){var b=g;return function(){var c=g,f=k;g=b;k=exports.unstable_now();try{return a.apply(this,arguments)}finally{g=c,k=f,v()}}};exports.unstable_getCurrentPriorityLevel=function(){return g};
exports.unstable_shouldYield=function(){return!e&&(null!==d&&d.expirationTime<l||w())};exports.unstable_continueExecution=function(){null!==d&&p()};exports.unstable_pauseExecution=function(){};exports.unstable_getFirstCallbackNode=function(){return d};

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(11)))

/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = __webpack_require__(293);

function emptyFunction() {}

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(102),
    assignMergeValue = __webpack_require__(155),
    baseFor = __webpack_require__(157),
    baseMergeDeep = __webpack_require__(324),
    isObject = __webpack_require__(14),
    keysIn = __webpack_require__(162),
    safeGet = __webpack_require__(161);

/**
 * The base implementation of `_.merge` without support for multiple sources.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} [customizer] The function to customize merged values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }
  baseFor(source, function(srcValue, key) {
    if (isObject(srcValue)) {
      stack || (stack = new Stack);
      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
    }
    else {
      var newValue = customizer
        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
        : undefined;

      if (newValue === undefined) {
        newValue = srcValue;
      }
      assignMergeValue(object, key, newValue);
    }
  }, keysIn);
}

module.exports = baseMerge;


/***/ }),
/* 295 */
/***/ (function(module, exports) {

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;


/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(64);

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;


/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(64);

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;


/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(64);

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;


/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(64);

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;


/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(63);

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
  this.size = 0;
}

module.exports = stackClear;


/***/ }),
/* 301 */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

module.exports = stackDelete;


/***/ }),
/* 302 */
/***/ (function(module, exports) {

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;


/***/ }),
/* 303 */
/***/ (function(module, exports) {

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;


/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(63),
    Map = __webpack_require__(103),
    MapCache = __webpack_require__(105);

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;


/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(104),
    isMasked = __webpack_require__(308),
    isObject = __webpack_require__(14),
    toSource = __webpack_require__(154);

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;


/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(65);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;


/***/ }),
/* 307 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;


/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

var coreJsData = __webpack_require__(309);

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

module.exports = isMasked;


/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(9);

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;


/***/ }),
/* 310 */
/***/ (function(module, exports) {

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;


/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

var Hash = __webpack_require__(312),
    ListCache = __webpack_require__(63),
    Map = __webpack_require__(103);

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

module.exports = mapCacheClear;


/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

var hashClear = __webpack_require__(313),
    hashDelete = __webpack_require__(314),
    hashGet = __webpack_require__(315),
    hashHas = __webpack_require__(316),
    hashSet = __webpack_require__(317);

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;


/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(66);

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;


/***/ }),
/* 314 */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;


/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(66);

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;


/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(66);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

module.exports = hashHas;


/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(66);

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;


/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(67);

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;


/***/ }),
/* 319 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

module.exports = isKeyable;


/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(67);

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;


/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(67);

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;


/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(67);

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;


/***/ }),
/* 323 */
/***/ (function(module, exports) {

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

module.exports = createBaseFor;


/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

var assignMergeValue = __webpack_require__(155),
    cloneBuffer = __webpack_require__(325),
    cloneTypedArray = __webpack_require__(326),
    copyArray = __webpack_require__(328),
    initCloneObject = __webpack_require__(329),
    isArguments = __webpack_require__(69),
    isArray = __webpack_require__(12),
    isArrayLikeObject = __webpack_require__(332),
    isBuffer = __webpack_require__(70),
    isFunction = __webpack_require__(104),
    isObject = __webpack_require__(14),
    isPlainObject = __webpack_require__(334),
    isTypedArray = __webpack_require__(71),
    safeGet = __webpack_require__(161),
    toPlainObject = __webpack_require__(338);

/**
 * A specialized version of `baseMerge` for arrays and objects which performs
 * deep merges and tracks traversed objects enabling objects with circular
 * references to be merged.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {string} key The key of the value to merge.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} mergeFunc The function to merge values.
 * @param {Function} [customizer] The function to customize assigned values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
  var objValue = safeGet(object, key),
      srcValue = safeGet(source, key),
      stacked = stack.get(srcValue);

  if (stacked) {
    assignMergeValue(object, key, stacked);
    return;
  }
  var newValue = customizer
    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
    : undefined;

  var isCommon = newValue === undefined;

  if (isCommon) {
    var isArr = isArray(srcValue),
        isBuff = !isArr && isBuffer(srcValue),
        isTyped = !isArr && !isBuff && isTypedArray(srcValue);

    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (isArray(objValue)) {
        newValue = objValue;
      }
      else if (isArrayLikeObject(objValue)) {
        newValue = copyArray(objValue);
      }
      else if (isBuff) {
        isCommon = false;
        newValue = cloneBuffer(srcValue, true);
      }
      else if (isTyped) {
        isCommon = false;
        newValue = cloneTypedArray(srcValue, true);
      }
      else {
        newValue = [];
      }
    }
    else if (isPlainObject(srcValue) || isArguments(srcValue)) {
      newValue = objValue;
      if (isArguments(objValue)) {
        newValue = toPlainObject(objValue);
      }
      else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
        newValue = initCloneObject(srcValue);
      }
    }
    else {
      isCommon = false;
    }
  }
  if (isCommon) {
    // Recursively merge objects and arrays (susceptible to call stack limits).
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack['delete'](srcValue);
  }
  assignMergeValue(object, key, newValue);
}

module.exports = baseMergeDeep;


/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(9);

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

module.exports = cloneBuffer;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(38)(module)))

/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(327);

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

module.exports = cloneTypedArray;


/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

var Uint8Array = __webpack_require__(158);

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

module.exports = cloneArrayBuffer;


/***/ }),
/* 328 */
/***/ (function(module, exports) {

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

module.exports = copyArray;


/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

var baseCreate = __webpack_require__(330),
    getPrototype = __webpack_require__(159),
    isPrototype = __webpack_require__(68);

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype(object))
    : {};
}

module.exports = initCloneObject;


/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(14);

/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

module.exports = baseCreate;


/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(29),
    isObjectLike = __webpack_require__(22);

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;


/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

var isArrayLike = __webpack_require__(23),
    isObjectLike = __webpack_require__(22);

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

module.exports = isArrayLikeObject;


/***/ }),
/* 333 */
/***/ (function(module, exports) {

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;


/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(29),
    getPrototype = __webpack_require__(159),
    isObjectLike = __webpack_require__(22);

/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

module.exports = isPlainObject;


/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(29),
    isLength = __webpack_require__(107),
    isObjectLike = __webpack_require__(22);

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;


/***/ }),
/* 336 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

module.exports = baseUnary;


/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(153);

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

module.exports = nodeUtil;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(38)(module)))

/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(339),
    keysIn = __webpack_require__(162);

/**
 * Converts `value` to a plain object flattening inherited enumerable string
 * keyed properties of `value` to own properties of the plain object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Object} Returns the converted plain object.
 * @example
 *
 * function Foo() {
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.assign({ 'a': 1 }, new Foo);
 * // => { 'a': 1, 'b': 2 }
 *
 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
 * // => { 'a': 1, 'b': 2, 'c': 3 }
 */
function toPlainObject(value) {
  return copyObject(value, keysIn(value));
}

module.exports = toPlainObject;


/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__(340),
    baseAssignValue = __webpack_require__(106);

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

module.exports = copyObject;


/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(106),
    eq = __webpack_require__(50);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignValue;


/***/ }),
/* 341 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

module.exports = baseTimes;


/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(14),
    isPrototype = __webpack_require__(68),
    nativeKeysIn = __webpack_require__(343);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeysIn;


/***/ }),
/* 343 */
/***/ (function(module, exports) {

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

module.exports = nativeKeysIn;


/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

var baseRest = __webpack_require__(345),
    isIterateeCall = __webpack_require__(352);

/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return baseRest(function(object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = (assigner.length > 3 && typeof customizer == 'function')
      ? (length--, customizer)
      : undefined;

    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

module.exports = createAssigner;


/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

var identity = __webpack_require__(109),
    overRest = __webpack_require__(346),
    setToString = __webpack_require__(348);

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return setToString(overRest(func, start, identity), func + '');
}

module.exports = baseRest;


/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

var apply = __webpack_require__(347);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

module.exports = overRest;


/***/ }),
/* 347 */
/***/ (function(module, exports) {

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

module.exports = apply;


/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

var baseSetToString = __webpack_require__(349),
    shortOut = __webpack_require__(351);

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = shortOut(baseSetToString);

module.exports = setToString;


/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

var constant = __webpack_require__(350),
    defineProperty = __webpack_require__(156),
    identity = __webpack_require__(109);

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !defineProperty ? identity : function(func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

module.exports = baseSetToString;


/***/ }),
/* 350 */
/***/ (function(module, exports) {

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

module.exports = constant;


/***/ }),
/* 351 */
/***/ (function(module, exports) {

/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

module.exports = shortOut;


/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(50),
    isArrayLike = __webpack_require__(23),
    isIndex = __webpack_require__(108),
    isObject = __webpack_require__(14);

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (isArrayLike(object) && isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return eq(object[index], value);
  }
  return false;
}

module.exports = isIterateeCall;


/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (false) { var throwOnDirectAccess, isValidElement, REACT_ELEMENT_TYPE; } else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(354)();
}


/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var emptyFunction = __webpack_require__(165);
var invariant = __webpack_require__(166);
var ReactPropTypesSecret = __webpack_require__(355);

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    invariant(
      false,
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  for (var i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),
/* 357 */
/***/ (function(module, exports) {

exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),
/* 358 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(360);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(254)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(253)(false);
// imports


// module
exports.push([module.i, "/* http://jmblog.github.com/color-themes-for-google-code-highlightjs */\n\n/* Tomorrow Comment */\n.hljs-comment,\n.hljs-quote {\n  color: #8e908c;\n}\n\n/* Tomorrow Red */\n.hljs-variable,\n.hljs-template-variable,\n.hljs-tag,\n.hljs-name,\n.hljs-selector-id,\n.hljs-selector-class,\n.hljs-regexp,\n.hljs-deletion {\n  color: #c82829;\n}\n\n/* Tomorrow Orange */\n.hljs-number,\n.hljs-built_in,\n.hljs-builtin-name,\n.hljs-literal,\n.hljs-type,\n.hljs-params,\n.hljs-meta,\n.hljs-link {\n  color: #f5871f;\n}\n\n/* Tomorrow Yellow */\n.hljs-attribute {\n  color: #eab700;\n}\n\n/* Tomorrow Green */\n.hljs-string,\n.hljs-symbol,\n.hljs-bullet,\n.hljs-addition {\n  color: #718c00;\n}\n\n/* Tomorrow Blue */\n.hljs-title,\n.hljs-section {\n  color: #4271ae;\n}\n\n/* Tomorrow Purple */\n.hljs-keyword,\n.hljs-selector-tag {\n  color: #8959a8;\n}\n\n.hljs {\n  display: block;\n  overflow-x: auto;\n  background: white;\n  color: #4d4d4c;\n  padding: 0.5em;\n}\n\n.hljs-emphasis {\n  font-style: italic;\n}\n\n.hljs-strong {\n  font-weight: bold;\n}\n", ""]);

// exports


/***/ }),
/* 361 */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsMatch = __webpack_require__(363),
    getMatchData = __webpack_require__(385),
    matchesStrictComparable = __webpack_require__(174);

/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatches(source) {
  var matchData = getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || baseIsMatch(object, source, matchData);
  };
}

module.exports = baseMatches;


/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(102),
    baseIsEqual = __webpack_require__(169);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if ((noCustomizer && data[2])
          ? data[1] !== object[data[0]]
          : !(data[0] in object)
        ) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack;
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined
            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
            : result
          )) {
        return false;
      }
    }
  }
  return true;
}

module.exports = baseIsMatch;


/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(102),
    equalArrays = __webpack_require__(170),
    equalByTag = __webpack_require__(370),
    equalObjects = __webpack_require__(373),
    getTag = __webpack_require__(172),
    isArray = __webpack_require__(12),
    isBuffer = __webpack_require__(70),
    isTypedArray = __webpack_require__(71);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack);
    return (objIsArr || isTypedArray(object))
      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new Stack);
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack);
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

module.exports = baseIsEqualDeep;


/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(105),
    setCacheAdd = __webpack_require__(366),
    setCacheHas = __webpack_require__(367);

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

module.exports = SetCache;


/***/ }),
/* 366 */
/***/ (function(module, exports) {

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

module.exports = setCacheAdd;


/***/ }),
/* 367 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

module.exports = setCacheHas;


/***/ }),
/* 368 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

module.exports = arraySome;


/***/ }),
/* 369 */
/***/ (function(module, exports) {

/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

module.exports = cacheHas;


/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(65),
    Uint8Array = __webpack_require__(158),
    eq = __webpack_require__(50),
    equalArrays = __webpack_require__(170),
    mapToArray = __webpack_require__(371),
    setToArray = __webpack_require__(372);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

module.exports = equalByTag;


/***/ }),
/* 371 */
/***/ (function(module, exports) {

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

module.exports = mapToArray;


/***/ }),
/* 372 */
/***/ (function(module, exports) {

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

module.exports = setToArray;


/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

var getAllKeys = __webpack_require__(374);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(object);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

module.exports = equalObjects;


/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(375),
    getSymbols = __webpack_require__(377),
    keys = __webpack_require__(72);

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;


/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(376),
    isArray = __webpack_require__(12);

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;


/***/ }),
/* 376 */
/***/ (function(module, exports) {

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

module.exports = arrayPush;


/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

var arrayFilter = __webpack_require__(378),
    stubArray = __webpack_require__(379);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

module.exports = getSymbols;


/***/ }),
/* 378 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = arrayFilter;


/***/ }),
/* 379 */
/***/ (function(module, exports) {

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = stubArray;


/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(160);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;


/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(28),
    root = __webpack_require__(9);

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView');

module.exports = DataView;


/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(28),
    root = __webpack_require__(9);

/* Built-in method references that are verified to be native. */
var Promise = getNative(root, 'Promise');

module.exports = Promise;


/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(28),
    root = __webpack_require__(9);

/* Built-in method references that are verified to be native. */
var Set = getNative(root, 'Set');

module.exports = Set;


/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(28),
    root = __webpack_require__(9);

/* Built-in method references that are verified to be native. */
var WeakMap = getNative(root, 'WeakMap');

module.exports = WeakMap;


/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

var isStrictComparable = __webpack_require__(173),
    keys = __webpack_require__(72);

/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
function getMatchData(object) {
  var result = keys(object),
      length = result.length;

  while (length--) {
    var key = result[length],
        value = object[key];

    result[length] = [key, value, isStrictComparable(value)];
  }
  return result;
}

module.exports = getMatchData;


/***/ }),
/* 386 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqual = __webpack_require__(169),
    get = __webpack_require__(143),
    hasIn = __webpack_require__(390),
    isKey = __webpack_require__(111),
    isStrictComparable = __webpack_require__(173),
    matchesStrictComparable = __webpack_require__(174),
    toKey = __webpack_require__(74);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatchesProperty(path, srcValue) {
  if (isKey(path) && isStrictComparable(srcValue)) {
    return matchesStrictComparable(toKey(path), srcValue);
  }
  return function(object) {
    var objValue = get(object, path);
    return (objValue === undefined && objValue === srcValue)
      ? hasIn(object, path)
      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}

module.exports = baseMatchesProperty;


/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

var memoizeCapped = __webpack_require__(388);

/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoizeCapped(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46 /* . */) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

module.exports = stringToPath;


/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

var memoize = __webpack_require__(142);

/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
  var result = memoize(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

module.exports = memoizeCapped;


/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(65),
    arrayMap = __webpack_require__(168),
    isArray = __webpack_require__(12),
    isSymbol = __webpack_require__(73);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = baseToString;


/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

var baseHasIn = __webpack_require__(391),
    hasPath = __webpack_require__(392);

/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
  return object != null && hasPath(object, path, baseHasIn);
}

module.exports = hasIn;


/***/ }),
/* 391 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

module.exports = baseHasIn;


/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(176),
    isArguments = __webpack_require__(69),
    isArray = __webpack_require__(12),
    isIndex = __webpack_require__(108),
    isLength = __webpack_require__(107),
    toKey = __webpack_require__(74);

/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength(length) && isIndex(key, length) &&
    (isArray(object) || isArguments(object));
}

module.exports = hasPath;


/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

var baseProperty = __webpack_require__(394),
    basePropertyDeep = __webpack_require__(395),
    isKey = __webpack_require__(111),
    toKey = __webpack_require__(74);

/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
function property(path) {
  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
}

module.exports = property;


/***/ }),
/* 394 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

module.exports = baseProperty;


/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(175);

/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyDeep(path) {
  return function(object) {
    return baseGet(object, path);
  };
}

module.exports = basePropertyDeep;


/***/ }),
/* 396 */
/***/ (function(module, exports, __webpack_require__) {

var baseEach = __webpack_require__(397),
    isArrayLike = __webpack_require__(23);

/**
 * The base implementation of `_.map` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function baseMap(collection, iteratee) {
  var index = -1,
      result = isArrayLike(collection) ? Array(collection.length) : [];

  baseEach(collection, function(value, key, collection) {
    result[++index] = iteratee(value, key, collection);
  });
  return result;
}

module.exports = baseMap;


/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

var baseForOwn = __webpack_require__(398),
    createBaseEach = __webpack_require__(399);

/**
 * The base implementation of `_.forEach` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */
var baseEach = createBaseEach(baseForOwn);

module.exports = baseEach;


/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

var baseFor = __webpack_require__(157),
    keys = __webpack_require__(72);

/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwn(object, iteratee) {
  return object && baseFor(object, iteratee, keys);
}

module.exports = baseForOwn;


/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

var isArrayLike = __webpack_require__(23);

/**
 * Creates a `baseEach` or `baseEachRight` function.
 *
 * @private
 * @param {Function} eachFunc The function to iterate over a collection.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike(collection)) {
      return eachFunc(collection, iteratee);
    }
    var length = collection.length,
        index = fromRight ? length : -1,
        iterable = Object(collection);

    while ((fromRight ? index-- : ++index < length)) {
      if (iteratee(iterable[index], index, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}

module.exports = createBaseEach;


/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(9);

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

module.exports = now;


/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

var baseIteratee = __webpack_require__(110),
    isArrayLike = __webpack_require__(23),
    keys = __webpack_require__(72);

/**
 * Creates a `_.find` or `_.findLast` function.
 *
 * @private
 * @param {Function} findIndexFunc The function to find the collection index.
 * @returns {Function} Returns the new find function.
 */
function createFind(findIndexFunc) {
  return function(collection, predicate, fromIndex) {
    var iterable = Object(collection);
    if (!isArrayLike(collection)) {
      var iteratee = baseIteratee(predicate, 3);
      collection = keys(collection);
      predicate = function(key) { return iteratee(iterable[key], key, iterable); };
    }
    var index = findIndexFunc(collection, predicate, fromIndex);
    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
  };
}

module.exports = createFind;


/***/ }),
/* 402 */
/***/ (function(module, exports, __webpack_require__) {

var baseFindIndex = __webpack_require__(403),
    baseIteratee = __webpack_require__(110),
    toInteger = __webpack_require__(404);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * This method is like `_.find` except that it returns the index of the first
 * element `predicate` returns truthy for instead of the element itself.
 *
 * @static
 * @memberOf _
 * @since 1.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {number} Returns the index of the found element, else `-1`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': false },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': true }
 * ];
 *
 * _.findIndex(users, function(o) { return o.user == 'barney'; });
 * // => 0
 *
 * // The `_.matches` iteratee shorthand.
 * _.findIndex(users, { 'user': 'fred', 'active': false });
 * // => 1
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findIndex(users, ['active', false]);
 * // => 0
 *
 * // The `_.property` iteratee shorthand.
 * _.findIndex(users, 'active');
 * // => 2
 */
function findIndex(array, predicate, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = fromIndex == null ? 0 : toInteger(fromIndex);
  if (index < 0) {
    index = nativeMax(length + index, 0);
  }
  return baseFindIndex(array, baseIteratee(predicate, 3), index);
}

module.exports = findIndex;


/***/ }),
/* 403 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

module.exports = baseFindIndex;


/***/ }),
/* 404 */
/***/ (function(module, exports, __webpack_require__) {

var toFinite = __webpack_require__(405);

/**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */
function toInteger(value) {
  var result = toFinite(value),
      remainder = result % 1;

  return result === result ? (remainder ? result - remainder : result) : 0;
}

module.exports = toInteger;


/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

var toNumber = __webpack_require__(179);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0,
    MAX_INTEGER = 1.7976931348623157e+308;

/**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */
function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = toNumber(value);
  if (value === INFINITY || value === -INFINITY) {
    var sign = (value < 0 ? -1 : 1);
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}

module.exports = toFinite;


/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(29),
    isObjectLike = __webpack_require__(22);

/** `Object#toString` result references. */
var numberTag = '[object Number]';

/**
 * Checks if `value` is classified as a `Number` primitive or object.
 *
 * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
 * classified as numbers, use the `_.isFinite` method.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a number, else `false`.
 * @example
 *
 * _.isNumber(3);
 * // => true
 *
 * _.isNumber(Number.MIN_VALUE);
 * // => true
 *
 * _.isNumber(Infinity);
 * // => true
 *
 * _.isNumber('3');
 * // => false
 */
function isNumber(value) {
  return typeof value == 'number' ||
    (isObjectLike(value) && baseGetTag(value) == numberTag);
}

module.exports = isNumber;


/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {


if (false) {}

module.exports = {
    'config': {
        'title': 'Accurat React Components',
        'version': void 0,
        'showCode': false,
        'showUsage': false,
        'showSidebar': true,
        'previewDelay': 500,
        'theme': {
            'color': {},
            'fontFamily': {
                'base': '"Roboto"',
                'monospace': '"Roboto Mono", monospace'
            }
        },
        'styles': {},
        'compilerConfig': { 'objectAssign': 'Object.assign' },
        'editorConfig': {
            'theme': 'dracula',
            'mode': 'jsx',
            'lineWrapping': true,
            'smartIndent': false,
            'matchBrackets': true,
            'viewportMargin': Infinity,
            'lineNumbers': false
        },
        'ribbon': void 0,
        'pagePerSection': false,
        'mountPointId': 'root'
    },
    'welcomeScreen': false,
    'patterns': void 0,
    'sections': [{
            'name': void 0,
            'exampleMode': 'expand',
            'usageMode': 'collapse',
            'sectionDepth': 0,
            'description': void 0,
            'slug': '',
            'sections': [],
            'filepath': void 0,
            'href': void 0,
            'components': [
                {
                    'filepath': 'src/components/Button/index.tsx',
                    'slug': 'button',
                    'pathLine': 'src/components/Button/index.tsx',
                    'module': __webpack_require__(408),
                    'props': __webpack_require__(419),
                    'hasExamples': true,
                    'metadata': {}
                },
                {
                    'filepath': 'src/components/Checkbox/index.tsx',
                    'slug': 'checkbox',
                    'pathLine': 'src/components/Checkbox/index.tsx',
                    'module': __webpack_require__(421),
                    'props': __webpack_require__(422),
                    'hasExamples': true,
                    'metadata': {}
                },
                {
                    'filepath': 'src/components/Draggable/index.tsx',
                    'slug': 'draggable',
                    'pathLine': 'src/components/Draggable/index.tsx',
                    'module': __webpack_require__(424),
                    'props': __webpack_require__(437),
                    'hasExamples': true,
                    'metadata': {}
                },
                {
                    'filepath': 'src/components/FlexView/index.tsx',
                    'slug': 'flexview',
                    'pathLine': 'src/components/FlexView/index.tsx',
                    'module': __webpack_require__(439),
                    'props': __webpack_require__(443),
                    'hasExamples': true,
                    'metadata': {}
                },
                {
                    'filepath': 'src/components/Radio/index.tsx',
                    'slug': 'radio',
                    'pathLine': 'src/components/Radio/index.tsx',
                    'module': __webpack_require__(445),
                    'props': __webpack_require__(446),
                    'hasExamples': true,
                    'metadata': {}
                },
                {
                    'filepath': 'src/components/Select/index.tsx',
                    'slug': 'select',
                    'pathLine': 'src/components/Select/index.tsx',
                    'module': __webpack_require__(562),
                    'props': __webpack_require__(553),
                    'hasExamples': true,
                    'metadata': {}
                },
                {
                    'filepath': 'src/components/TextInput/index.tsx',
                    'slug': 'textinput',
                    'pathLine': 'src/components/TextInput/index.tsx',
                    'module': __webpack_require__(555),
                    'props': __webpack_require__(556),
                    'hasExamples': true,
                    'metadata': {}
                },
                {
                    'filepath': 'src/components/Toggle/index.tsx',
                    'slug': 'toggle',
                    'pathLine': 'src/components/Toggle/index.tsx',
                    'module': __webpack_require__(558),
                    'props': __webpack_require__(559),
                    'hasExamples': true,
                    'metadata': {}
                }
            ],
            'content': void 0,
            'external': void 0
        }]
}
	

/***/ }),
/* 408 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Button", function() { return Button; });
/* harmony import */ var core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(30);
/* harmony import */ var core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(54);
/* harmony import */ var core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_object_assign__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(40);
/* harmony import */ var core_js_modules_es_object_assign__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_assign__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_object_define_property__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(24);
/* harmony import */ var core_js_modules_es_object_define_property__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_define_property__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(32);
/* harmony import */ var core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(0);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(3);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_6__);
function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}var disabledStyle='o-50 pointer-events-none';var defaultStyle='ph3 pv1 br1 bg-black white b--none';var transparentStyle='ph3 pv1 br1 bg-transparent black ba bw1 b--black';function Button(_ref){var _classNames;var children=_ref.children,_ref$disabled=_ref.disabled,disabled=_ref$disabled===void 0?false:_ref$disabled,_ref$transparent=_ref.transparent,transparent=_ref$transparent===void 0?false:_ref$transparent,_ref$reset=_ref.reset,reset=_ref$reset===void 0?false:_ref$reset,_ref$className=_ref.className,className=_ref$className===void 0?'':_ref$className,_ref$style=_ref.style,style=_ref$style===void 0?{}:_ref$style,_ref$onClick=_ref.onClick,onClick=_ref$onClick===void 0?function(){}:_ref$onClick,_ref$type=_ref.type,type=_ref$type===void 0?'button':_ref$type,props=_objectWithoutProperties(_ref,["children","disabled","transparent","reset","className","style","onClick","type"]);var classes=classnames__WEBPACK_IMPORTED_MODULE_6___default()(className,'flex justify-center items-center pointer outline-transparent',(_classNames={},_defineProperty(_classNames,disabledStyle,disabled),_defineProperty(_classNames,transparentStyle,transparent&&!reset),_defineProperty(_classNames,defaultStyle,!transparent&&!reset),_classNames));return react__WEBPACK_IMPORTED_MODULE_5__["createElement"]("button",Object.assign({},props,{disabled:disabled,className:classes,style:style,onClick:onClick,type:type}),children);}

/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {

var nativeFunctionToString = __webpack_require__(182);
var WeakMap = __webpack_require__(5).WeakMap;

module.exports = typeof WeakMap === 'function' && /native code/.test(nativeFunctionToString.call(WeakMap));


/***/ }),
/* 410 */
/***/ (function(module, exports, __webpack_require__) {

var getOwnPropertyNamesModule = __webpack_require__(117);
var getOwnPropertySymbolsModule = __webpack_require__(84);
var anObject = __webpack_require__(39);
var Reflect = __webpack_require__(5).Reflect;

// all object keys, includes non-enumerable and symbols
module.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;
};


/***/ }),
/* 411 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(119);
var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(length, length).
module.exports = function (index, length) {
  var integer = toInteger(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),
/* 412 */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(8);
var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : typeof detection == 'function' ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;


/***/ }),
/* 413 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(5);


/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

var objectKeys = __webpack_require__(53);
var getOwnPropertySymbolsModule = __webpack_require__(84);
var propertyIsEnumerableModule = __webpack_require__(77);

// all enumerable object keys, includes symbols
module.exports = function (it) {
  var result = objectKeys(it);
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  if (getOwnPropertySymbols) {
    var symbols = getOwnPropertySymbols(it);
    var propertyIsEnumerable = propertyIsEnumerableModule.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (propertyIsEnumerable.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),
/* 415 */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(18);
var definePropertyModule = __webpack_require__(20);
var anObject = __webpack_require__(39);
var objectKeys = __webpack_require__(53);

module.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var i = 0;
  var key;
  while (length > i) definePropertyModule.f(O, key = keys[i++], Properties[key]);
  return O;
};


/***/ }),
/* 416 */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(5).document;

module.exports = document && document.documentElement;


/***/ }),
/* 417 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIndexedObject = __webpack_require__(31);
var nativeGetOwnPropertyNames = __webpack_require__(117).f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return nativeGetOwnPropertyNames(it);
  } catch (error) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]'
    ? getWindowNames(it)
    : nativeGetOwnPropertyNames(toIndexedObject(it));
};


/***/ }),
/* 418 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var objectKeys = __webpack_require__(53);
var getOwnPropertySymbolsModule = __webpack_require__(84);
var propertyIsEnumerableModule = __webpack_require__(77);
var toObject = __webpack_require__(41);
var IndexedObject = __webpack_require__(113);
var nativeAssign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !nativeAssign || __webpack_require__(8)(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var symbol = Symbol();
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
  return nativeAssign({}, A)[symbol] != 7 || objectKeys(nativeAssign({}, B)).join('') != alphabet;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;
  while (argumentsLength > index) {
    var S = IndexedObject(arguments[index++]);
    var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) if (propertyIsEnumerable.call(S, key = keys[j++])) T[key] = S[key];
  } return T;
} : nativeAssign;


/***/ }),
/* 419 */
/***/ (function(module, exports, __webpack_require__) {


if (false) {}

module.exports = {
    'description': '',
    'displayName': 'Button',
    'methods': [],
    'props': [
        {
            'defaultValue': null,
            'description': '',
            'name': 'about',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'accessKey',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
            'name': 'aria-activedescendant',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
            'name': 'aria-atomic',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether inputting text could trigger display of one or more predictions of the user\'s intended value for an input and specifies how predictions would be\npresented if they are made.',
            'name': 'aria-autocomplete',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"none" | "inline" | "list" | "both"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
            'name': 'aria-busy',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
            'name': 'aria-checked',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true" | "mixed"' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-pressed'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-selected.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the total number of columns in a table, grid, or treegrid.',
            'name': 'aria-colcount',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-colindex.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines an element\'s column index or position with respect to the total number of columns within a table, grid, or treegrid.',
            'name': 'aria-colindex',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-colcount'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-colspan.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.',
            'name': 'aria-colspan',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-colindex'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-rowspan.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element (or elements) whose contents or presence are controlled by the current element.',
            'name': 'aria-controls',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-owns.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the element that represents the current item within a container or set of related elements.',
            'name': 'aria-current',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true" | "page" | "step" | "location" | "date" | "time"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element (or elements) that describes the object.',
            'name': 'aria-describedby',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-labelledby'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element that provides a detailed, extended description for the object.',
            'name': 'aria-details',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-describedby.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.',
            'name': 'aria-disabled',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-hidden'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-readonly.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates what functions can be performed when a dragged object is released on the drop target.',
            'name': 'aria-dropeffect',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"none" | "copy" | "execute" | "link" | "move" | "popup"' },
            'tags': {
                'deprecated': [{
                        'title': 'deprecated',
                        'description': 'in ARIA 1.1'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element that provides an error message for the object.',
            'name': 'aria-errormessage',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-invalid'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-describedby.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
            'name': 'aria-expanded',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Identifies the next element (or elements) in an alternate reading order of content which, at the user\'s discretion,\nallows assistive technology to override the general default of reading in document source order.',
            'name': 'aria-flowto',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',
            'name': 'aria-grabbed',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'deprecated': [{
                        'title': 'deprecated',
                        'description': 'in ARIA 1.1'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
            'name': 'aria-haspopup',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true" | "menu" | "listbox" | "tree" | "grid" | "dialog"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether the element is exposed to an accessibility API.',
            'name': 'aria-hidden',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-disabled.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the entered value does not conform to the format expected by the application.',
            'name': 'aria-invalid',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true" | "grammar" | "spelling"' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-errormessage.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
            'name': 'aria-keyshortcuts',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines a string value that labels the current element.',
            'name': 'aria-label',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-labelledby.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element (or elements) that labels the current element.',
            'name': 'aria-labelledby',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-describedby.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the hierarchical level of an element within a structure.',
            'name': 'aria-level',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
            'name': 'aria-live',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"off" | "assertive" | "polite"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether an element is modal when displayed.',
            'name': 'aria-modal',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether a text box accepts multiple lines of input or only a single line.',
            'name': 'aria-multiline',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates that the user may select more than one item from the current selectable descendants.',
            'name': 'aria-multiselectable',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether the element\'s orientation is horizontal, vertical, or unknown/ambiguous.',
            'name': 'aria-orientation',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"horizontal" | "vertical"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.',
            'name': 'aria-owns',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-controls.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
            'name': 'aria-placeholder',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines an element\'s number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.',
            'name': 'aria-posinset',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-setsize.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the current "pressed" state of toggle buttons.',
            'name': 'aria-pressed',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true" | "mixed"' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-checked'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-selected.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates that the element is not editable, but is otherwise operable.',
            'name': 'aria-readonly',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-disabled.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.',
            'name': 'aria-relevant',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"additions" | "additions text" | "all" | "removals" | "text"' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-atomic.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates that user input is required on the element before a form may be submitted.',
            'name': 'aria-required',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines a human-readable, author-localized description for the role of an element.',
            'name': 'aria-roledescription',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines the total number of rows in a table, grid, or treegrid.',
            'name': 'aria-rowcount',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-rowindex.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines an element\'s row index or position with respect to the total number of rows within a table, grid, or treegrid.',
            'name': 'aria-rowindex',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-rowcount'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-rowspan.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.',
            'name': 'aria-rowspan',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-rowindex'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-colspan.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the current "selected" state of various widgets.',
            'name': 'aria-selected',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-checked'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-pressed.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.',
            'name': 'aria-setsize',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-posinset.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates if items in a table or grid are sorted in ascending or descending order.',
            'name': 'aria-sort',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"none" | "ascending" | "descending" | "other"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines the maximum allowed value for a range widget.',
            'name': 'aria-valuemax',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines the minimum allowed value for a range widget.',
            'name': 'aria-valuemin',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines the current value for a range widget.',
            'name': 'aria-valuenow',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-valuetext.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the human readable text alternative of aria-valuenow for a range widget.',
            'name': 'aria-valuetext',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'autoCapitalize',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'autoCorrect',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'autoFocus',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'ButtonHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'autoSave',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'className',
            'parent': {
                'fileName': 'react-components/src/components/Button/index.tsx',
                'name': 'ButtonProps'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'color',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'contentEditable',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'contextMenu',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'dangerouslySetInnerHTML',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '{ __html: string; }' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'datatype',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'defaultChecked',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'defaultValue',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | string[]' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'dir',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'disabled',
            'parent': {
                'fileName': 'react-components/src/components/Button/index.tsx',
                'name': 'ButtonProps'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'draggable',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'form',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'ButtonHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formAction',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'ButtonHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formEncType',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'ButtonHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formMethod',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'ButtonHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formNoValidate',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'ButtonHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formTarget',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'ButtonHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'hidden',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'id',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'inlist',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'any' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'inputMode',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'is',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemID',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemProp',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemRef',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemScope',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemType',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'lang',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'name',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'ButtonHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAbort',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAbortCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationIteration',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationIterationCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAuxClick',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAuxClickCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onBeforeInput',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onBeforeInputCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onBlur',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FocusEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onBlurCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FocusEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCanPlay',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCanPlayCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCanPlayThrough',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCanPlayThroughCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onChange',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onChangeCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onClick',
            'parent': {
                'fileName': 'react-components/src/components/Button/index.tsx',
                'name': 'ButtonProps'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onClickCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionUpdate',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionUpdateCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onContextMenu',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onContextMenuCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCopy',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCopyCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCut',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCutCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDoubleClick',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDoubleClickCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDrag',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragEnter',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragEnterCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragExit',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragExitCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragLeave',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragLeaveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragOver',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragOverCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDrop',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDropCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDurationChange',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDurationChangeCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEmptied',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEmptiedCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEncrypted',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEncryptedCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEnded',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEndedCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onError',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onErrorCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onFocus',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FocusEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onFocusCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FocusEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onGotPointerCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onGotPointerCaptureCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onInput',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onInputCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onInvalid',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onInvalidCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyDown',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyDownCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyPress',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyPressCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyUp',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyUpCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoad',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadedData',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadedDataCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadedMetadata',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadedMetadataCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLostPointerCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLostPointerCaptureCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseDown',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseDownCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseEnter',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseLeave',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseMove',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseMoveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseOut',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseOutCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseOver',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseOverCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseUp',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseUpCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPaste',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPasteCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPause',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPauseCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPlay',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPlayCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPlaying',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPlayingCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerCancel',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerCancelCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerDown',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerDownCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerEnter',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerEnterCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerLeave',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerLeaveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerMove',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerMoveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerOut',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerOutCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerOver',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerOverCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerUp',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerUpCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onProgress',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onProgressCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onRateChange',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onRateChangeCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onReset',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onResetCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onScroll',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: UIEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onScrollCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: UIEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSeeked',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSeekedCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSeeking',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSeekingCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSelect',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSelectCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onStalled',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onStalledCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSubmit',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSubmitCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSuspend',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSuspendCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTimeUpdate',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTimeUpdateCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchCancel',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchCancelCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchMove',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchMoveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTransitionEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TransitionEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTransitionEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TransitionEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onVolumeChange',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onVolumeChangeCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onWaiting',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onWaitingCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLButtonElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onWheel',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: WheelEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onWheelCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: WheelEvent<HTMLButtonElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'placeholder',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'prefix',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'property',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'radioGroup',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'reset',
            'parent': {
                'fileName': 'react-components/src/components/Button/index.tsx',
                'name': 'ButtonProps'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'resource',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'results',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'role',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'security',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'slot',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'spellCheck',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'style',
            'parent': {
                'fileName': 'react-components/src/components/Button/index.tsx',
                'name': 'ButtonProps'
            },
            'required': false,
            'type': { 'name': 'object' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'suppressContentEditableWarning',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'suppressHydrationWarning',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'tabIndex',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'title',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'transparent',
            'parent': {
                'fileName': 'react-components/src/components/Button/index.tsx',
                'name': 'ButtonProps'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'type',
            'parent': {
                'fileName': 'react-components/src/components/Button/index.tsx',
                'name': 'ButtonProps'
            },
            'required': false,
            'type': { 'name': '"submit" | "reset" | "button"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'typeof',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'unselectable',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': '"on" | "off"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'value',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'ButtonHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | number | string[]' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'vocab',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        }
    ],
    'doclets': {},
    'examples': __webpack_require__(420)
}
	

/***/ }),
/* 420 */
/***/ (function(module, exports, __webpack_require__) {


if (false) {}

var requireMap = { 'react': __webpack_require__(0) };
var requireInRuntimeBase = __webpack_require__(25);
var requireInRuntime = requireInRuntimeBase.bind(null, requireMap);
var evalInContextBase = __webpack_require__(26);
var evalInContext = evalInContextBase.bind(null, "var React = require('react');", requireInRuntime);

module.exports = [{
        'type': 'code',
        'content': 'const prompt = () => {\n  alert(\'Clicked!\')\n}\n\n<FlexView hAlign="around">\n  <Button>Button</Button>\n\n  <Button className="br-pill">Pill</Button>\n\n  <Button transparent className="br-pill">\n    Transparent\n  </Button>\n\n  <Button className="bg-red">Colorful</Button>\n\n  <Button className="br-pill bg-blue hover-bg-dark-blue" onClick={prompt}>\n    Click me\n  </Button>\n\n  <Button disabled className="bg-blue hover-bg-dark-blue">\n    Disabled\n  </Button>\n</FlexView>',
        'settings': {},
        'evalInContext': evalInContext
    }]
	

/***/ }),
/* 421 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Checkbox", function() { return Checkbox; });
/* harmony import */ var core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(30);
/* harmony import */ var core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(54);
/* harmony import */ var core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_object_assign__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(40);
/* harmony import */ var core_js_modules_es_object_assign__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_assign__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_object_define_property__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(24);
/* harmony import */ var core_js_modules_es_object_define_property__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_define_property__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(32);
/* harmony import */ var core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(0);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(3);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_6__);
function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}var disabledStyle='o-30 pointer-events-none';var inactiveStyle='o-50';var defaultInputStyle='bw1 b--black';var CheckSvg=function CheckSvg(_ref){var className=_ref.className,style=_ref.style;return react__WEBPACK_IMPORTED_MODULE_5__["createElement"]("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 21.25 18.58",className:className,style:style},react__WEBPACK_IMPORTED_MODULE_5__["createElement"]("polygon",{points:"7.35 18.58 0 11.23 2.83 8.4 7.15 12.72 18.24 0 21.25 2.63 7.35 18.58",fill:"inherit"}));};function Checkbox(_ref2){var _classNames;var children=_ref2.children,_ref2$propSvg=_ref2.propSvg,propSvg=_ref2$propSvg===void 0?null:_ref2$propSvg,_ref2$className=_ref2.className,className=_ref2$className===void 0?'':_ref2$className,_ref2$inputClassName=_ref2.inputClassName,inputClassName=_ref2$inputClassName===void 0?'':_ref2$inputClassName,_ref2$style=_ref2.style,style=_ref2$style===void 0?{}:_ref2$style,_ref2$disabled=_ref2.disabled,disabled=_ref2$disabled===void 0?false:_ref2$disabled,_ref2$checked=_ref2.checked,checked=_ref2$checked===void 0?false:_ref2$checked,_ref2$onChange=_ref2.onChange,onChange=_ref2$onChange===void 0?function(){}:_ref2$onChange,_ref2$reset=_ref2.reset,reset=_ref2$reset===void 0?false:_ref2$reset,props=_objectWithoutProperties(_ref2,["children","propSvg","className","inputClassName","style","disabled","checked","onChange","reset"]);function handleChange(event){onChange(event.currentTarget.checked);}var classes=classnames__WEBPACK_IMPORTED_MODULE_6___default()(className,'flex items-center w-fit pointer',(_classNames={},_defineProperty(_classNames,disabledStyle,disabled),_defineProperty(_classNames,inactiveStyle,!checked&&!reset),_classNames));var inputClasses=classnames__WEBPACK_IMPORTED_MODULE_6___default()(inputClassName,'absolute absolute--fill center input-reset outline-0 pointer',_defineProperty({},defaultInputStyle,!reset));var SvgComponent=propSvg||CheckSvg;return react__WEBPACK_IMPORTED_MODULE_5__["createElement"]("label",{style:style,className:classes},react__WEBPACK_IMPORTED_MODULE_5__["createElement"]("div",{className:"relative",style:{width:18,minWidth:18,height:18,minHeight:18}},react__WEBPACK_IMPORTED_MODULE_5__["createElement"]("input",Object.assign({},props,{className:"ba ".concat(inputClasses),type:"checkbox",checked:checked,onChange:handleChange,style:{width:18,height:18}})),checked&&react__WEBPACK_IMPORTED_MODULE_5__["createElement"](SvgComponent,{className:"absolute absolute--fill center m-auto pointer-events-none ".concat(inputClasses),style:{width:10,height:10,fill:'currentColor'}})),children&&react__WEBPACK_IMPORTED_MODULE_5__["createElement"]("div",{className:"ml2"},children));}

/***/ }),
/* 422 */
/***/ (function(module, exports, __webpack_require__) {


if (false) {}

module.exports = {
    'description': '',
    'displayName': 'Checkbox',
    'methods': [],
    'props': [
        {
            'defaultValue': null,
            'description': '',
            'name': 'about',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'accept',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'accessKey',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'alt',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
            'name': 'aria-activedescendant',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
            'name': 'aria-atomic',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether inputting text could trigger display of one or more predictions of the user\'s intended value for an input and specifies how predictions would be\npresented if they are made.',
            'name': 'aria-autocomplete',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"list" | "none" | "inline" | "both"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
            'name': 'aria-busy',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
            'name': 'aria-checked',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true" | "mixed"' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-pressed'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-selected.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the total number of columns in a table, grid, or treegrid.',
            'name': 'aria-colcount',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-colindex.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines an element\'s column index or position with respect to the total number of columns within a table, grid, or treegrid.',
            'name': 'aria-colindex',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-colcount'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-colspan.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.',
            'name': 'aria-colspan',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-colindex'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-rowspan.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element (or elements) whose contents or presence are controlled by the current element.',
            'name': 'aria-controls',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-owns.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the element that represents the current item within a container or set of related elements.',
            'name': 'aria-current',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "step" | "false" | "true" | "page" | "location" | "date" | "time"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element (or elements) that describes the object.',
            'name': 'aria-describedby',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-labelledby'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element that provides a detailed, extended description for the object.',
            'name': 'aria-details',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-describedby.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.',
            'name': 'aria-disabled',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-hidden'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-readonly.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates what functions can be performed when a dragged object is released on the drop target.',
            'name': 'aria-dropeffect',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"none" | "copy" | "execute" | "link" | "move" | "popup"' },
            'tags': {
                'deprecated': [{
                        'title': 'deprecated',
                        'description': 'in ARIA 1.1'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element that provides an error message for the object.',
            'name': 'aria-errormessage',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-invalid'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-describedby.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
            'name': 'aria-expanded',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Identifies the next element (or elements) in an alternate reading order of content which, at the user\'s discretion,\nallows assistive technology to override the general default of reading in document source order.',
            'name': 'aria-flowto',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',
            'name': 'aria-grabbed',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'deprecated': [{
                        'title': 'deprecated',
                        'description': 'in ARIA 1.1'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
            'name': 'aria-haspopup',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true" | "menu" | "listbox" | "tree" | "grid" | "dialog"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether the element is exposed to an accessibility API.',
            'name': 'aria-hidden',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-disabled.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the entered value does not conform to the format expected by the application.',
            'name': 'aria-invalid',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true" | "grammar" | "spelling"' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-errormessage.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
            'name': 'aria-keyshortcuts',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines a string value that labels the current element.',
            'name': 'aria-label',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-labelledby.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element (or elements) that labels the current element.',
            'name': 'aria-labelledby',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-describedby.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the hierarchical level of an element within a structure.',
            'name': 'aria-level',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
            'name': 'aria-live',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"off" | "assertive" | "polite"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether an element is modal when displayed.',
            'name': 'aria-modal',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether a text box accepts multiple lines of input or only a single line.',
            'name': 'aria-multiline',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates that the user may select more than one item from the current selectable descendants.',
            'name': 'aria-multiselectable',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether the element\'s orientation is horizontal, vertical, or unknown/ambiguous.',
            'name': 'aria-orientation',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"horizontal" | "vertical"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.',
            'name': 'aria-owns',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-controls.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
            'name': 'aria-placeholder',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines an element\'s number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.',
            'name': 'aria-posinset',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-setsize.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the current "pressed" state of toggle buttons.',
            'name': 'aria-pressed',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true" | "mixed"' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-checked'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-selected.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates that the element is not editable, but is otherwise operable.',
            'name': 'aria-readonly',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-disabled.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.',
            'name': 'aria-relevant',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"additions" | "additions text" | "all" | "removals" | "text"' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-atomic.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates that user input is required on the element before a form may be submitted.',
            'name': 'aria-required',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines a human-readable, author-localized description for the role of an element.',
            'name': 'aria-roledescription',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines the total number of rows in a table, grid, or treegrid.',
            'name': 'aria-rowcount',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-rowindex.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines an element\'s row index or position with respect to the total number of rows within a table, grid, or treegrid.',
            'name': 'aria-rowindex',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-rowcount'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-rowspan.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.',
            'name': 'aria-rowspan',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-rowindex'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-colspan.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the current "selected" state of various widgets.',
            'name': 'aria-selected',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-checked'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-pressed.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.',
            'name': 'aria-setsize',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-posinset.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates if items in a table or grid are sorted in ascending or descending order.',
            'name': 'aria-sort',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"none" | "ascending" | "descending" | "other"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines the maximum allowed value for a range widget.',
            'name': 'aria-valuemax',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines the minimum allowed value for a range widget.',
            'name': 'aria-valuemin',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines the current value for a range widget.',
            'name': 'aria-valuenow',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-valuetext.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the human readable text alternative of aria-valuenow for a range widget.',
            'name': 'aria-valuetext',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'autoCapitalize',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'autoComplete',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'autoCorrect',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'autoFocus',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'autoSave',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'capture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'checked',
            'parent': {
                'fileName': 'react-components/src/commons/interfaces.ts',
                'name': 'InputPropsTypes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'className',
            'parent': {
                'fileName': 'react-components/src/commons/interfaces.ts',
                'name': 'InputPropsTypes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'color',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'contentEditable',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'contextMenu',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'crossOrigin',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'dangerouslySetInnerHTML',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '{ __html: string; }' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'datatype',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'defaultChecked',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'defaultValue',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | string[]' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'dir',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'disabled',
            'parent': {
                'fileName': 'react-components/src/commons/interfaces.ts',
                'name': 'InputPropsTypes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'draggable',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'form',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formAction',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formEncType',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formMethod',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formNoValidate',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formTarget',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'height',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'hidden',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'id',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'inlist',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'any' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'inputClassName',
            'parent': {
                'fileName': 'react-components/src/commons/interfaces.ts',
                'name': 'InputPropsTypes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'inputMode',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'is',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemID',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemProp',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemRef',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemScope',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemType',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'lang',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'list',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'max',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'maxLength',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'min',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'minLength',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'multiple',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'name',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAbort',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAbortCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationIteration',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationIterationCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAuxClick',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAuxClickCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onBeforeInput',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onBeforeInputCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onBlur',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FocusEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onBlurCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FocusEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCanPlay',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCanPlayCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCanPlayThrough',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCanPlayThroughCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onChange',
            'parent': {
                'fileName': 'react-components/src/components/Checkbox/index.tsx',
                'name': 'CheckBoxArguments'
            },
            'required': false,
            'type': { 'name': 'BooleanChangeFnType' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onChangeCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onClick',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onClickCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionUpdate',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionUpdateCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onContextMenu',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onContextMenuCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCopy',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCopyCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCut',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCutCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDoubleClick',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDoubleClickCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDrag',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragEnter',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragEnterCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragExit',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragExitCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragLeave',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragLeaveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragOver',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragOverCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDrop',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDropCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDurationChange',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDurationChangeCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEmptied',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEmptiedCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEncrypted',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEncryptedCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEnded',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEndedCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onError',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onErrorCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onFocus',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FocusEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onFocusCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FocusEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onGotPointerCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onGotPointerCaptureCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onInput',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onInputCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onInvalid',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onInvalidCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyDown',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyDownCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyPress',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyPressCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyUp',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyUpCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoad',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadedData',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadedDataCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadedMetadata',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadedMetadataCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLostPointerCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLostPointerCaptureCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseDown',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseDownCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseEnter',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseLeave',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseMove',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseMoveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseOut',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseOutCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseOver',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseOverCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseUp',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseUpCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPaste',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPasteCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPause',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPauseCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPlay',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPlayCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPlaying',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPlayingCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerCancel',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerCancelCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerDown',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerDownCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerEnter',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerEnterCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerLeave',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerLeaveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerMove',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerMoveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerOut',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerOutCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerOver',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerOverCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerUp',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerUpCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onProgress',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onProgressCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onRateChange',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onRateChangeCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onReset',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onResetCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onScroll',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: UIEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onScrollCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: UIEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSeeked',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSeekedCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSeeking',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSeekingCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSelect',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSelectCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onStalled',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onStalledCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSubmit',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSubmitCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSuspend',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSuspendCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTimeUpdate',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTimeUpdateCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchCancel',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchCancelCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchMove',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchMoveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTransitionEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TransitionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTransitionEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TransitionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onVolumeChange',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onVolumeChangeCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onWaiting',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onWaitingCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onWheel',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: WheelEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onWheelCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: WheelEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'pattern',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'placeholder',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'prefix',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'propSvg',
            'parent': {
                'fileName': 'react-components/src/components/Checkbox/index.tsx',
                'name': 'CheckBoxArguments'
            },
            'required': false,
            'type': { 'name': 'FunctionComponent<SVGProps>' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'property',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'radioGroup',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'readOnly',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'required',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'reset',
            'parent': {
                'fileName': 'react-components/src/commons/interfaces.ts',
                'name': 'InputPropsTypes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'resource',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'results',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'role',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'security',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'size',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'slot',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'spellCheck',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'src',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'step',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'style',
            'parent': {
                'fileName': 'react-components/src/commons/interfaces.ts',
                'name': 'InputPropsTypes'
            },
            'required': false,
            'type': { 'name': 'CSSProperties' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'suppressContentEditableWarning',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'suppressHydrationWarning',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'tabIndex',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'title',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'type',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'typeof',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'unselectable',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': '"on" | "off"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'value',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | number | string[]' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'vocab',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'width',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | number' },
            'tags': {}
        }
    ],
    'doclets': {},
    'examples': __webpack_require__(423)
}
	

/***/ }),
/* 423 */
/***/ (function(module, exports, __webpack_require__) {


if (false) {}

var requireMap = { 'react': __webpack_require__(0) };
var requireInRuntimeBase = __webpack_require__(25);
var requireInRuntime = requireInRuntimeBase.bind(null, requireMap);
var evalInContextBase = __webpack_require__(26);
var evalInContext = evalInContextBase.bind(null, "var React = require('react');", requireInRuntime);

module.exports = [{
        'type': 'code',
        'content': 'initialState = {\n  first: false,\n  second: true,\n  third: true\n}\n\nconst changeSelected = (item) => (value) => {\n  setState({ [item]: value })\n}\n\n<FlexView column vAlign="around" className="h5">\n  <p>Selected: {JSON.stringify(state)}</p>\n\n  <Checkbox onChange={changeSelected(\'first\')} checked={state.first}>\n    Click me\n  </Checkbox>\n\n  <Checkbox\n    onChange={changeSelected(\'second\')}\n    checked={state.second}\n    className="green"\n    inputClassName={`${\n      state.second ? \'bg-green\' : \'\'\n    } white b--green`}\n  >\n    Colorful Checkbox\n  </Checkbox>\n\n  <Checkbox disabled>Disabled Checkbox</Checkbox>\n</FlexView>',
        'settings': {},
        'evalInContext': evalInContext
    }]
	

/***/ }),
/* 424 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Draggable; });
/* harmony import */ var core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(30);
/* harmony import */ var core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_symbol_description__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(190);
/* harmony import */ var core_js_modules_es_symbol_description__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(191);
/* harmony import */ var core_js_modules_es_symbol_iterator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_iterator__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_array_concat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(85);
/* harmony import */ var core_js_modules_es_array_concat__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_array_filter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(86);
/* harmony import */ var core_js_modules_es_array_filter__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_filter__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(87);
/* harmony import */ var core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_array_iterator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(126);
/* harmony import */ var core_js_modules_es_array_iterator__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_object_define_property__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(24);
/* harmony import */ var core_js_modules_es_object_define_property__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_define_property__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(88);
/* harmony import */ var core_js_modules_es_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_object_get_prototype_of__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(198);
/* harmony import */ var core_js_modules_es_object_get_prototype_of__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_get_prototype_of__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(32);
/* harmony import */ var core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_es_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(199);
/* harmony import */ var core_js_modules_es_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var core_js_modules_es_object_to_string__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(200);
/* harmony import */ var core_js_modules_es_object_to_string__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var core_js_modules_es_string_iterator__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(201);
/* harmony import */ var core_js_modules_es_string_iterator__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(89);
/* harmony import */ var core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(203);
/* harmony import */ var core_js_modules_web_dom_collections_iterator__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var lodash_uniqueId__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(250);
/* harmony import */ var lodash_uniqueId__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(lodash_uniqueId__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(0);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(3);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_18__);
function _typeof(obj){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==='function'){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable;}));}ownKeys.forEach(function(key){_defineProperty(target,key,source[key]);});}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)==="object"||typeof call==="function")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}var Draggable=/*#__PURE__*/function(_React$Component){_inherits(Draggable,_React$Component);function Draggable(){var _getPrototypeOf2;var _this;_classCallCheck(this,Draggable);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Draggable)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={dragging:false,hovered:false,variable:_this.props.children||'',id:lodash_uniqueId__WEBPACK_IMPORTED_MODULE_16___default()("component-")};_this.node=null;_this.dragComponentId=JSON.stringify({variable:_this.state.variable,id:_this.state.id});_this.onDragStart=function(event){var onDragStart=_this.props.onDragStart;event.dataTransfer.setData('id',_this.dragComponentId);if(onDragStart)onDragStart(event);_this.setState({dragging:true});};_this.onDragEnd=function(event){var onDragEnd=_this.props.onDragEnd;if(onDragEnd)onDragEnd(event);_this.setState({dragging:false});};_this.onDragOver=function(event){var onDragOver=_this.props.onDragOver;event.preventDefault();if(onDragOver)onDragOver(event);};_this.onDragEnter=function(event){var onDragEnter=_this.props.onDragEnter;event.preventDefault();if(onDragEnter)onDragEnter(event);_this.setState({hovered:true});};_this.onDragExit=function(event){var onDragExit=_this.props.onDragExit;event.preventDefault();if(onDragExit)onDragExit(event);_this.setState({hovered:false});};_this.onDrop=function(event){if(!_this.props.target)return;var data=event.dataTransfer.getData('id');if(!data||data==='undefined')return;var _JSON$parse=JSON.parse(data),variable=_JSON$parse.variable;var onDrop=_this.props.onDrop;onDrop(event);_this.setState({hovered:false,variable:variable});};return _this;}_createClass(Draggable,[{key:"render",value:function render(){var _classNames,_this2=this;var _this$state=this.state,dragging=_this$state.dragging,hovered=_this$state.hovered,variable=_this$state.variable;var _this$props=this.props,className=_this$props.className,target=_this$props.target,_this$props$style=_this$props.style,style=_this$props$style===void 0?{}:_this$props$style,draggingClasses=_this$props.draggingClasses,hoveredClasses=_this$props.hoveredClasses;var hoveredHoverable=hovered&&target;var draggingStyle=draggingClasses||'o-40 bg-white';var hoverStyle=hoveredClasses||'bg-silver';var classes=classnames__WEBPACK_IMPORTED_MODULE_18___default()(className,'ba pt2 pb2 pl3 pr3 truncate br4',(_classNames={},_defineProperty(_classNames,draggingStyle,dragging),_defineProperty(_classNames,hoverStyle,hoveredHoverable),_classNames));return react__WEBPACK_IMPORTED_MODULE_17__["createElement"]("div",{draggable:true,onDragLeave:this.onDragExit,onDragOver:this.onDragOver,onDragStart:this.onDragStart,onDragEnd:this.onDragEnd,onDragEnter:this.onDragEnter,onDrop:target?this.onDrop:function(){return _this2.setState({hovered:false});},style:_objectSpread({cursor:dragging?'grabbing':'grab'},style),ref:function ref(el){_this2.node=el;},className:classes},variable);}}]);return Draggable;}(react__WEBPACK_IMPORTED_MODULE_17__["Component"]);

/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toPrimitive = __webpack_require__(79);
var definePropertyModule = __webpack_require__(20);
var createPropertyDescriptor = __webpack_require__(51);

module.exports = function (object, key, value) {
  var propertyKey = toPrimitive(key);
  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};


/***/ }),
/* 426 */
/***/ (function(module, exports, __webpack_require__) {

var aFunction = __webpack_require__(427);

// optional / simple context binding
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 0: return function () {
      return fn.call(that);
    };
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),
/* 427 */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') {
    throw TypeError(String(it) + ' is not a function');
  } return it;
};


/***/ }),
/* 428 */
/***/ (function(module, exports, __webpack_require__) {

var UNSCOPABLES = __webpack_require__(10)('unscopables');
var create = __webpack_require__(123);
var hide = __webpack_require__(15);
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] == undefined) {
  hide(ArrayPrototype, UNSCOPABLES, create(null));
}

// add a key to Array.prototype[@@unscopables]
module.exports = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};


/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var IteratorPrototype = __webpack_require__(195).IteratorPrototype;
var create = __webpack_require__(123);
var createPropertyDescriptor = __webpack_require__(51);
var setToStringTag = __webpack_require__(121);
var Iterators = __webpack_require__(127);

var returnThis = function () { return this; };

module.exports = function (IteratorConstructor, NAME, next) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });
  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
  Iterators[TO_STRING_TAG] = returnThis;
  return IteratorConstructor;
};


/***/ }),
/* 430 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(19);
var anObject = __webpack_require__(39);

module.exports = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) {
    throw TypeError("Can't set " + String(proto) + ' as a prototype');
  }
};


/***/ }),
/* 431 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var classof = __webpack_require__(432);
var TO_STRING_TAG = __webpack_require__(10)('toStringTag');
var test = {};

test[TO_STRING_TAG] = 'z';

// `Object.prototype.toString` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
module.exports = String(test) !== '[object z]' ? function toString() {
  return '[object ' + classof(this) + ']';
} : test.toString;


/***/ }),
/* 432 */
/***/ (function(module, exports, __webpack_require__) {

var classofRaw = __webpack_require__(114);
var TO_STRING_TAG = __webpack_require__(10)('toStringTag');
// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports = function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;
};


/***/ }),
/* 433 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(119);
var requireObjectCoercible = __webpack_require__(78);
// CONVERT_TO_STRING: true  -> String#at
// CONVERT_TO_STRING: false -> String#codePointAt
module.exports = function (that, pos, CONVERT_TO_STRING) {
  var S = String(requireObjectCoercible(that));
  var position = toInteger(pos);
  var size = S.length;
  var first, second;
  if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
  first = S.charCodeAt(position);
  return first < 0xD800 || first > 0xDBFF || position + 1 === size
    || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF
      ? CONVERT_TO_STRING ? S.charAt(position) : first
      : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
};


/***/ }),
/* 434 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(55),
    arrayMap = __webpack_require__(206),
    isArray = __webpack_require__(33),
    isSymbol = __webpack_require__(129);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = baseToString;


/***/ }),
/* 435 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(55);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;


/***/ }),
/* 436 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;


/***/ }),
/* 437 */
/***/ (function(module, exports, __webpack_require__) {


if (false) {}

module.exports = {
    'description': '',
    'displayName': 'Draggable',
    'methods': [],
    'props': [
        {
            'defaultValue': null,
            'description': '',
            'name': 'className',
            'parent': {
                'fileName': 'react-components/src/components/Draggable/index.tsx',
                'name': 'DefaultProps'
            },
            'required': true,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'draggingClasses',
            'parent': {
                'fileName': 'react-components/src/components/Draggable/index.tsx',
                'name': 'DefaultProps'
            },
            'required': true,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'hoveredClasses',
            'parent': {
                'fileName': 'react-components/src/components/Draggable/index.tsx',
                'name': 'DefaultProps'
            },
            'required': true,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragEnd',
            'parent': {
                'fileName': 'react-components/src/components/Draggable/index.tsx',
                'name': 'DefaultProps'
            },
            'required': true,
            'type': { 'name': 'OnDrag' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragEnter',
            'parent': {
                'fileName': 'react-components/src/components/Draggable/index.tsx',
                'name': 'DefaultProps'
            },
            'required': true,
            'type': { 'name': 'OnDrag' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragExit',
            'parent': {
                'fileName': 'react-components/src/components/Draggable/index.tsx',
                'name': 'DefaultProps'
            },
            'required': true,
            'type': { 'name': 'OnDrag' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragOver',
            'parent': {
                'fileName': 'react-components/src/components/Draggable/index.tsx',
                'name': 'DefaultProps'
            },
            'required': true,
            'type': { 'name': 'OnDrag' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragStart',
            'parent': {
                'fileName': 'react-components/src/components/Draggable/index.tsx',
                'name': 'DefaultProps'
            },
            'required': true,
            'type': { 'name': 'OnDrag' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'style',
            'parent': {
                'fileName': 'react-components/src/components/Draggable/index.tsx',
                'name': 'DefaultProps'
            },
            'required': true,
            'type': { 'name': 'CSSProperties' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'target',
            'parent': void 0,
            'required': true,
            'type': { 'name': 'boolean' },
            'tags': {}
        }
    ],
    'doclets': {},
    'examples': __webpack_require__(438)
}
	

/***/ }),
/* 438 */
/***/ (function(module, exports, __webpack_require__) {


if (false) {}

var requireMap = { 'react': __webpack_require__(0) };
var requireInRuntimeBase = __webpack_require__(25);
var requireInRuntime = requireInRuntimeBase.bind(null, requireMap);
var evalInContextBase = __webpack_require__(26);
var evalInContext = evalInContextBase.bind(null, "var React = require('react');", requireInRuntime);

module.exports = [{
        'type': 'code',
        'content': '<FlexView hAlign="around">\n  <Draggable className="bg-red white">{\'Second source\'}</Draggable>\n  <Draggable>{\'First source\'}</Draggable>\n  <Draggable\n    hoveredClasses="bg-blue white"\n    target\n    onDrop={e => console.log(JSON.parse(e.dataTransfer.getData(\'id\')))}\n  >\n    {\'Target\'}\n  </Draggable>\n</FlexView>',
        'settings': {},
        'evalInContext': evalInContext
    }]
	

/***/ }),
/* 439 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlexView", function() { return FlexView; });
/* harmony import */ var core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(30);
/* harmony import */ var core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_array_concat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85);
/* harmony import */ var core_js_modules_es_array_concat__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_array_filter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(86);
/* harmony import */ var core_js_modules_es_array_filter__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_filter__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(87);
/* harmony import */ var core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(54);
/* harmony import */ var core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_object_assign__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(40);
/* harmony import */ var core_js_modules_es_object_assign__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_assign__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_object_define_property__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(24);
/* harmony import */ var core_js_modules_es_object_define_property__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_define_property__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(88);
/* harmony import */ var core_js_modules_es_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(32);
/* harmony import */ var core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_parse_int__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(440);
/* harmony import */ var core_js_modules_es_parse_int__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_parse_int__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(89);
/* harmony import */ var core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(0);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(3);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_12__);
function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==='function'){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable;}));}ownKeys.forEach(function(key){_defineProperty(target,key,source[key]);});}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function FlexView(_ref){var children=_ref.children,column=_ref.column,vAlign=_ref.vAlign,hAlign=_ref.hAlign,grow=_ref.grow,shrink=_ref.shrink,basis=_ref.basis,wrap=_ref.wrap,_ref$className=_ref.className,className=_ref$className===void 0?'':_ref$className,_ref$style=_ref.style,style=_ref$style===void 0?{}:_ref$style,props=_objectWithoutProperties(_ref,["children","column","vAlign","hAlign","grow","shrink","basis","wrap","className","style"]);function getGrow(){if(grow===undefined){return 0;}return typeof grow==='number'?grow:1;// default is 0
}function getShrink(){if(shrink!==undefined){// shrink is passed
if(typeof shrink==='number'){return shrink;}else{return shrink?1:0;// casts boolean -> number
}}else{// no shrink is passed
return basis&&basis!=='auto'?0:1;}// default is 1
}function getBasis(){if(basis){var suffix=typeof basis==='number'||String(parseInt(basis,10))?'px':'';return basis+suffix;}else{return'auto';// default is auto
}}function getFlexStyle(){var grow=getGrow();var shrink=getShrink();var basis=getBasis();var values="".concat(grow," ").concat(shrink," ").concat(basis);return{WebkitBoxFlex:values,MozBoxFlex:values,msFlex:values,WebkitFlex:values,flex:values};}function getStyle(){return _objectSpread({},getFlexStyle(),style);}function getContentAlignmentClasses(){var vAlignClasses=column?{top:'justify-start',center:'justify-center',bottom:'justify-end',between:'justify-between',around:'justify-around'}:{top:'items-start',center:'items-center',bottom:'items-end',baseline:'items-baseline',stretch:'items-stretch'};var hAlignClasses=column?{left:'items-start',center:'items-center',right:'items-end',baseline:'items-baseline',stretch:'items-stretch'}:{left:'justify-start',center:'justify-center',right:'justify-end',between:'justify-between',around:'justify-around'};var vAlignClassObject=vAlign&&vAlignClasses[vAlign];var hAlignClassObject=hAlign&&hAlignClasses[hAlign];return classnames__WEBPACK_IMPORTED_MODULE_12___default()(vAlignClassObject,hAlignClassObject);}function getClasses(){var direction=column&&'flex-column';var wrapClassName=wrap&&'flex-wrap';var contentAlignment=getContentAlignmentClasses();return classnames__WEBPACK_IMPORTED_MODULE_12___default()('flex',direction,contentAlignment,wrapClassName,className);}return react__WEBPACK_IMPORTED_MODULE_11__["createElement"]("div",Object.assign({className:getClasses(),style:getStyle()},props),children);}

/***/ }),
/* 440 */
/***/ (function(module, exports, __webpack_require__) {

var parseIntImplementation = __webpack_require__(441);

// `parseInt` method
// https://tc39.github.io/ecma262/#sec-parseint-string-radix
__webpack_require__(7)({ global: true, forced: parseInt != parseIntImplementation }, {
  parseInt: parseIntImplementation
});


/***/ }),
/* 441 */
/***/ (function(module, exports, __webpack_require__) {

var nativeParseInt = __webpack_require__(5).parseInt;
var internalStringTrim = __webpack_require__(442);
var whitespaces = __webpack_require__(207);
var hex = /^[-+]?0[xX]/;
var FORCED = nativeParseInt(whitespaces + '08') !== 8 || nativeParseInt(whitespaces + '0x16') !== 22;

module.exports = FORCED ? function parseInt(str, radix) {
  var string = internalStringTrim(String(str), 3);
  return nativeParseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
} : nativeParseInt;


/***/ }),
/* 442 */
/***/ (function(module, exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__(78);
var whitespace = '[' + __webpack_require__(207) + ']';
var ltrim = RegExp('^' + whitespace + whitespace + '*');
var rtrim = RegExp(whitespace + whitespace + '*$');

// 1 -> String#trimStart
// 2 -> String#trimEnd
// 3 -> String#trim
module.exports = function (string, TYPE) {
  string = String(requireObjectCoercible(string));
  if (TYPE & 1) string = string.replace(ltrim, '');
  if (TYPE & 2) string = string.replace(rtrim, '');
  return string;
};


/***/ }),
/* 443 */
/***/ (function(module, exports, __webpack_require__) {


if (false) {}

module.exports = {
    'description': '',
    'displayName': 'FlexView',
    'methods': [],
    'props': [
        {
            'defaultValue': null,
            'description': '',
            'name': 'basis',
            'parent': {
                'fileName': 'react-components/src/components/FlexView/index.tsx',
                'name': 'FlexViewProps'
            },
            'required': false,
            'type': { 'name': 'ReactText' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'className',
            'parent': {
                'fileName': 'react-components/src/components/FlexView/index.tsx',
                'name': 'FlexViewProps'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'column',
            'parent': {
                'fileName': 'react-components/src/components/FlexView/index.tsx',
                'name': 'FlexViewProps'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'grow',
            'parent': {
                'fileName': 'react-components/src/components/FlexView/index.tsx',
                'name': 'FlexViewProps'
            },
            'required': false,
            'type': { 'name': 'number | boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'hAlign',
            'parent': {
                'fileName': 'react-components/src/components/FlexView/index.tsx',
                'name': 'FlexViewProps'
            },
            'required': false,
            'type': { 'name': '"center" | "between" | "around" | "baseline" | "stretch" | "left" | "right"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'shrink',
            'parent': {
                'fileName': 'react-components/src/components/FlexView/index.tsx',
                'name': 'FlexViewProps'
            },
            'required': false,
            'type': { 'name': 'number | boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'style',
            'parent': {
                'fileName': 'react-components/src/components/FlexView/index.tsx',
                'name': 'FlexViewProps'
            },
            'required': false,
            'type': { 'name': 'object' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'vAlign',
            'parent': {
                'fileName': 'react-components/src/components/FlexView/index.tsx',
                'name': 'FlexViewProps'
            },
            'required': false,
            'type': { 'name': '"top" | "center" | "bottom" | "between" | "around" | "baseline" | "stretch"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'wrap',
            'parent': {
                'fileName': 'react-components/src/components/FlexView/index.tsx',
                'name': 'FlexViewProps'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        }
    ],
    'doclets': {},
    'examples': __webpack_require__(444)
}
	

/***/ }),
/* 444 */
/***/ (function(module, exports, __webpack_require__) {


if (false) {}

var requireMap = { 'react': __webpack_require__(0) };
var requireInRuntimeBase = __webpack_require__(25);
var requireInRuntime = requireInRuntimeBase.bind(null, requireMap);
var evalInContextBase = __webpack_require__(26);
var evalInContext = evalInContextBase.bind(null, "var React = require('react');", requireInRuntime);

module.exports = [{
        'type': 'code',
        'content': '<FlexView column vAlign="top" hAlign="center" className="w-100 h5">\n  <FlexView className="w-100 h-20 mv4">\n    <div className="w-50 bg-red" />\n    <div className="w-50 bg-blue" />\n  </FlexView>\n\n  <FlexView hAlign="between" className="w-100 h-20 mv4">\n    <FlexView className="w-30 bg-red" />\n    <FlexView className="w-30 bg-yellow" />\n    <FlexView className="w-30 bg-blue" />\n  </FlexView>\n\n  <FlexView className="w-80 h-20 mv4">\n    <FlexView className="w-20 bg-red" />\n    <FlexView grow className="bg-yellow" />\n    <FlexView className="w-20 bg-blue" />\n  </FlexView>\n</FlexView>',
        'settings': {},
        'evalInContext': evalInContext
    }]
	

/***/ }),
/* 445 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Radio", function() { return Radio; });
/* harmony import */ var core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(30);
/* harmony import */ var core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(54);
/* harmony import */ var core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_object_assign__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(40);
/* harmony import */ var core_js_modules_es_object_assign__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_assign__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_object_define_property__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(24);
/* harmony import */ var core_js_modules_es_object_define_property__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_define_property__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(32);
/* harmony import */ var core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(0);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(3);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_6__);
function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}var disabledStyle='o-30 pointer-events-none';var inactiveStyle='o-50';var defaultInputStyle='bw1 b--black bg-black outline-transparent';function Radio(_ref){var _classNames;var children=_ref.children,_ref$className=_ref.className,className=_ref$className===void 0?'':_ref$className,_ref$inputClassName=_ref.inputClassName,inputClassName=_ref$inputClassName===void 0?'':_ref$inputClassName,_ref$style=_ref.style,style=_ref$style===void 0?{}:_ref$style,_ref$disabled=_ref.disabled,disabled=_ref$disabled===void 0?false:_ref$disabled,_ref$checked=_ref.checked,checked=_ref$checked===void 0?false:_ref$checked,_ref$onChange=_ref.onChange,onChange=_ref$onChange===void 0?function(){}:_ref$onChange,_ref$reset=_ref.reset,reset=_ref$reset===void 0?false:_ref$reset,props=_objectWithoutProperties(_ref,["children","className","inputClassName","style","disabled","checked","onChange","reset"]);function handleChange(event){onChange(event.currentTarget.checked);}var classes=classnames__WEBPACK_IMPORTED_MODULE_6___default()(className,'flex items-center w-fit pointer',(_classNames={},_defineProperty(_classNames,disabledStyle,disabled),_defineProperty(_classNames,inactiveStyle,!checked&&!reset),_classNames));var inputClasses=classnames__WEBPACK_IMPORTED_MODULE_6___default()(inputClassName,'absolute absolute--fill center ba',_defineProperty({},defaultInputStyle,!reset));return react__WEBPACK_IMPORTED_MODULE_5__["createElement"]("label",{className:classes,style:style},react__WEBPACK_IMPORTED_MODULE_5__["createElement"]("div",{className:"relative",style:{width:18,minWidth:18,height:18,minHeight:18}},react__WEBPACK_IMPORTED_MODULE_5__["createElement"]("input",Object.assign({},props,{className:"".concat(inputClasses," input-reset br-100 pointer"),type:"radio",checked:checked,onChange:handleChange,style:{width:18,height:18,// This is here to override the custom `bg-something` you can pass to the input,
// since it will affect also the circle on the inside
backgroundColor:'white'}})),checked&&react__WEBPACK_IMPORTED_MODULE_5__["createElement"]("div",{className:"".concat(inputClasses," z-5 m-auto br-100"),style:{width:10,height:10}})),children&&react__WEBPACK_IMPORTED_MODULE_5__["createElement"]("div",{className:"ml2 pointer"},children));}

/***/ }),
/* 446 */
/***/ (function(module, exports, __webpack_require__) {


if (false) {}

module.exports = {
    'description': '',
    'displayName': 'Radio',
    'methods': [],
    'props': [
        {
            'defaultValue': null,
            'description': '',
            'name': 'about',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'accept',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'accessKey',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'alt',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
            'name': 'aria-activedescendant',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
            'name': 'aria-atomic',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether inputting text could trigger display of one or more predictions of the user\'s intended value for an input and specifies how predictions would be\npresented if they are made.',
            'name': 'aria-autocomplete',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"list" | "none" | "inline" | "both"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
            'name': 'aria-busy',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
            'name': 'aria-checked',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true" | "mixed"' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-pressed'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-selected.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the total number of columns in a table, grid, or treegrid.',
            'name': 'aria-colcount',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-colindex.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines an element\'s column index or position with respect to the total number of columns within a table, grid, or treegrid.',
            'name': 'aria-colindex',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-colcount'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-colspan.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.',
            'name': 'aria-colspan',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-colindex'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-rowspan.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element (or elements) whose contents or presence are controlled by the current element.',
            'name': 'aria-controls',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-owns.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the element that represents the current item within a container or set of related elements.',
            'name': 'aria-current',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "step" | "false" | "true" | "page" | "location" | "date" | "time"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element (or elements) that describes the object.',
            'name': 'aria-describedby',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-labelledby'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element that provides a detailed, extended description for the object.',
            'name': 'aria-details',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-describedby.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.',
            'name': 'aria-disabled',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-hidden'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-readonly.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates what functions can be performed when a dragged object is released on the drop target.',
            'name': 'aria-dropeffect',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"none" | "copy" | "execute" | "link" | "move" | "popup"' },
            'tags': {
                'deprecated': [{
                        'title': 'deprecated',
                        'description': 'in ARIA 1.1'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element that provides an error message for the object.',
            'name': 'aria-errormessage',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-invalid'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-describedby.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
            'name': 'aria-expanded',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Identifies the next element (or elements) in an alternate reading order of content which, at the user\'s discretion,\nallows assistive technology to override the general default of reading in document source order.',
            'name': 'aria-flowto',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',
            'name': 'aria-grabbed',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'deprecated': [{
                        'title': 'deprecated',
                        'description': 'in ARIA 1.1'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
            'name': 'aria-haspopup',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true" | "menu" | "listbox" | "tree" | "grid" | "dialog"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether the element is exposed to an accessibility API.',
            'name': 'aria-hidden',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-disabled.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the entered value does not conform to the format expected by the application.',
            'name': 'aria-invalid',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true" | "grammar" | "spelling"' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-errormessage.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
            'name': 'aria-keyshortcuts',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines a string value that labels the current element.',
            'name': 'aria-label',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-labelledby.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element (or elements) that labels the current element.',
            'name': 'aria-labelledby',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-describedby.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the hierarchical level of an element within a structure.',
            'name': 'aria-level',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
            'name': 'aria-live',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"off" | "assertive" | "polite"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether an element is modal when displayed.',
            'name': 'aria-modal',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether a text box accepts multiple lines of input or only a single line.',
            'name': 'aria-multiline',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates that the user may select more than one item from the current selectable descendants.',
            'name': 'aria-multiselectable',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether the element\'s orientation is horizontal, vertical, or unknown/ambiguous.',
            'name': 'aria-orientation',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"horizontal" | "vertical"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.',
            'name': 'aria-owns',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-controls.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
            'name': 'aria-placeholder',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines an element\'s number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.',
            'name': 'aria-posinset',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-setsize.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the current "pressed" state of toggle buttons.',
            'name': 'aria-pressed',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true" | "mixed"' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-checked'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-selected.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates that the element is not editable, but is otherwise operable.',
            'name': 'aria-readonly',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-disabled.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.',
            'name': 'aria-relevant',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"additions" | "additions text" | "all" | "removals" | "text"' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-atomic.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates that user input is required on the element before a form may be submitted.',
            'name': 'aria-required',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines a human-readable, author-localized description for the role of an element.',
            'name': 'aria-roledescription',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines the total number of rows in a table, grid, or treegrid.',
            'name': 'aria-rowcount',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-rowindex.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines an element\'s row index or position with respect to the total number of rows within a table, grid, or treegrid.',
            'name': 'aria-rowindex',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-rowcount'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-rowspan.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.',
            'name': 'aria-rowspan',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-rowindex'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-colspan.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the current "selected" state of various widgets.',
            'name': 'aria-selected',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-checked'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-pressed.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.',
            'name': 'aria-setsize',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-posinset.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates if items in a table or grid are sorted in ascending or descending order.',
            'name': 'aria-sort',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"none" | "ascending" | "descending" | "other"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines the maximum allowed value for a range widget.',
            'name': 'aria-valuemax',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines the minimum allowed value for a range widget.',
            'name': 'aria-valuemin',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines the current value for a range widget.',
            'name': 'aria-valuenow',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-valuetext.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the human readable text alternative of aria-valuenow for a range widget.',
            'name': 'aria-valuetext',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'autoCapitalize',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'autoComplete',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'autoCorrect',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'autoFocus',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'autoSave',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'capture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'checked',
            'parent': {
                'fileName': 'react-components/src/commons/interfaces.ts',
                'name': 'InputPropsTypes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'className',
            'parent': {
                'fileName': 'react-components/src/commons/interfaces.ts',
                'name': 'InputPropsTypes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'color',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'contentEditable',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'contextMenu',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'crossOrigin',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'dangerouslySetInnerHTML',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '{ __html: string; }' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'datatype',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'defaultChecked',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'defaultValue',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | string[]' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'dir',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'disabled',
            'parent': {
                'fileName': 'react-components/src/commons/interfaces.ts',
                'name': 'InputPropsTypes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'draggable',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'form',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formAction',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formEncType',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formMethod',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formNoValidate',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formTarget',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'height',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'hidden',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'id',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'inlist',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'any' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'inputClassName',
            'parent': {
                'fileName': 'react-components/src/commons/interfaces.ts',
                'name': 'InputPropsTypes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'inputMode',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'is',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemID',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemProp',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemRef',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemScope',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemType',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'lang',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'list',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'max',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'maxLength',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'min',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'minLength',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'multiple',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'name',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAbort',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAbortCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationIteration',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationIterationCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAuxClick',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAuxClickCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onBeforeInput',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onBeforeInputCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onBlur',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FocusEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onBlurCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FocusEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCanPlay',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCanPlayCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCanPlayThrough',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCanPlayThroughCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onChange',
            'parent': {
                'fileName': 'react-components/src/components/Radio/index.tsx',
                'name': 'RadioProps'
            },
            'required': false,
            'type': { 'name': 'BooleanChangeFnType' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onChangeCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onClick',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onClickCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionUpdate',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionUpdateCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onContextMenu',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onContextMenuCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCopy',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCopyCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCut',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCutCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDoubleClick',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDoubleClickCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDrag',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragEnter',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragEnterCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragExit',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragExitCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragLeave',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragLeaveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragOver',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragOverCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDrop',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDropCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDurationChange',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDurationChangeCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEmptied',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEmptiedCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEncrypted',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEncryptedCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEnded',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEndedCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onError',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onErrorCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onFocus',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FocusEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onFocusCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FocusEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onGotPointerCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onGotPointerCaptureCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onInput',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onInputCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onInvalid',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onInvalidCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyDown',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyDownCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyPress',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyPressCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyUp',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyUpCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoad',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadedData',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadedDataCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadedMetadata',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadedMetadataCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLostPointerCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLostPointerCaptureCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseDown',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseDownCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseEnter',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseLeave',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseMove',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseMoveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseOut',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseOutCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseOver',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseOverCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseUp',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseUpCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPaste',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPasteCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPause',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPauseCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPlay',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPlayCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPlaying',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPlayingCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerCancel',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerCancelCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerDown',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerDownCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerEnter',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerEnterCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerLeave',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerLeaveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerMove',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerMoveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerOut',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerOutCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerOver',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerOverCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerUp',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerUpCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onProgress',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onProgressCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onRateChange',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onRateChangeCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onReset',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onResetCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onScroll',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: UIEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onScrollCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: UIEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSeeked',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSeekedCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSeeking',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSeekingCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSelect',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSelectCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onStalled',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onStalledCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSubmit',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSubmitCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSuspend',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSuspendCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTimeUpdate',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTimeUpdateCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchCancel',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchCancelCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchMove',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchMoveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTransitionEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TransitionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTransitionEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TransitionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onVolumeChange',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onVolumeChangeCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onWaiting',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onWaitingCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onWheel',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: WheelEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onWheelCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: WheelEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'pattern',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'placeholder',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'prefix',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'property',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'radioGroup',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'readOnly',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'required',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'reset',
            'parent': {
                'fileName': 'react-components/src/commons/interfaces.ts',
                'name': 'InputPropsTypes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'resource',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'results',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'role',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'security',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'size',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'slot',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'spellCheck',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'src',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'step',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'style',
            'parent': {
                'fileName': 'react-components/src/commons/interfaces.ts',
                'name': 'InputPropsTypes'
            },
            'required': false,
            'type': { 'name': 'CSSProperties' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'suppressContentEditableWarning',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'suppressHydrationWarning',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'tabIndex',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'title',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'type',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'typeof',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'unselectable',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': '"on" | "off"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'value',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | number | string[]' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'vocab',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'width',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | number' },
            'tags': {}
        }
    ],
    'doclets': {},
    'examples': __webpack_require__(447)
}
	

/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {


if (false) {}

var requireMap = { 'react': __webpack_require__(0) };
var requireInRuntimeBase = __webpack_require__(25);
var requireInRuntime = requireInRuntimeBase.bind(null, requireMap);
var evalInContextBase = __webpack_require__(26);
var evalInContext = evalInContextBase.bind(null, "var React = require('react');", requireInRuntime);

module.exports = [{
        'type': 'code',
        'content': 'initialState = { selected: 2 }\n\nconst changeSelected = (item) => (value) => {\n  setState({ selected: item })\n}\n\n<FlexView column vAlign="around" className="h5">\n    <p>Selected: {state.selected}</p>\n\n    <Radio onChange={changeSelected(1)} checked={state.selected === 1}>\n      Click me\n    </Radio>\n\n    <Radio onChange={changeSelected(2)} checked={state.selected === 2} className="blue" inputClassName="bg-blue b--blue">\n      Colorful Radio\n    </Radio>\n\n    <Radio disabled>\n      Disabled Radio\n    </Radio>\n</FlexView>',
        'settings': {},
        'evalInContext': evalInContext
    }]
	

/***/ }),
/* 448 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var internalMap = __webpack_require__(125)(1);

var SPECIES_SUPPORT = __webpack_require__(124)('map');

// `Array.prototype.map` method
// https://tc39.github.io/ecma262/#sec-array.prototype.map
// with adding support of @@species
__webpack_require__(7)({ target: 'Array', proto: true, forced: !SPECIES_SUPPORT }, {
  map: function map(callbackfn /* , thisArg */) {
    return internalMap(this, callbackfn, arguments[1]);
  }
});


/***/ }),
/* 449 */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(450),
    arrayEach = __webpack_require__(477),
    assignValue = __webpack_require__(212),
    baseAssign = __webpack_require__(478),
    baseAssignIn = __webpack_require__(487),
    cloneBuffer = __webpack_require__(490),
    copyArray = __webpack_require__(491),
    copySymbols = __webpack_require__(492),
    copySymbolsIn = __webpack_require__(494),
    getAllKeys = __webpack_require__(495),
    getAllKeysIn = __webpack_require__(225),
    getTag = __webpack_require__(138),
    initCloneArray = __webpack_require__(500),
    initCloneByTag = __webpack_require__(501),
    initCloneObject = __webpack_require__(507),
    isArray = __webpack_require__(33),
    isBuffer = __webpack_require__(217),
    isMap = __webpack_require__(509),
    isObject = __webpack_require__(56),
    isSet = __webpack_require__(511),
    keys = __webpack_require__(131);

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {};
cloneableTags[argsTag] = cloneableTags[arrayTag] =
cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
cloneableTags[boolTag] = cloneableTags[dateTag] =
cloneableTags[float32Tag] = cloneableTags[float64Tag] =
cloneableTags[int8Tag] = cloneableTags[int16Tag] =
cloneableTags[int32Tag] = cloneableTags[mapTag] =
cloneableTags[numberTag] = cloneableTags[objectTag] =
cloneableTags[regexpTag] = cloneableTags[setTag] =
cloneableTags[stringTag] = cloneableTags[symbolTag] =
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] =
cloneableTags[weakMapTag] = false;

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Deep clone
 *  2 - Flatten inherited properties
 *  4 - Clone symbols
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone(value, bitmask, customizer, key, object, stack) {
  var result,
      isDeep = bitmask & CLONE_DEEP_FLAG,
      isFlat = bitmask & CLONE_FLAT_FLAG,
      isFull = bitmask & CLONE_SYMBOLS_FLAG;

  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!isObject(value)) {
    return value;
  }
  var isArr = isArray(value);
  if (isArr) {
    result = initCloneArray(value);
    if (!isDeep) {
      return copyArray(value, result);
    }
  } else {
    var tag = getTag(value),
        isFunc = tag == funcTag || tag == genTag;

    if (isBuffer(value)) {
      return cloneBuffer(value, isDeep);
    }
    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
      result = (isFlat || isFunc) ? {} : initCloneObject(value);
      if (!isDeep) {
        return isFlat
          ? copySymbolsIn(value, baseAssignIn(result, value))
          : copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = initCloneByTag(value, tag, isDeep);
    }
  }
  // Check for circular references and return its corresponding clone.
  stack || (stack = new Stack);
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  if (isSet(value)) {
    value.forEach(function(subValue) {
      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });

    return result;
  }

  if (isMap(value)) {
    value.forEach(function(subValue, key) {
      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
    });

    return result;
  }

  var keysFunc = isFull
    ? (isFlat ? getAllKeysIn : getAllKeys)
    : (isFlat ? keysIn : keys);

  var props = isArr ? undefined : keysFunc(value);
  arrayEach(props || value, function(subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    // Recursively populate clone (susceptible to call stack limits).
    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}

module.exports = baseClone;


/***/ }),
/* 450 */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(90),
    stackClear = __webpack_require__(456),
    stackDelete = __webpack_require__(457),
    stackGet = __webpack_require__(458),
    stackHas = __webpack_require__(459),
    stackSet = __webpack_require__(460);

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

module.exports = Stack;


/***/ }),
/* 451 */
/***/ (function(module, exports) {

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;


/***/ }),
/* 452 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(91);

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;


/***/ }),
/* 453 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(91);

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;


/***/ }),
/* 454 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(91);

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;


/***/ }),
/* 455 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(91);

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;


/***/ }),
/* 456 */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(90);

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
  this.size = 0;
}

module.exports = stackClear;


/***/ }),
/* 457 */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

module.exports = stackDelete;


/***/ }),
/* 458 */
/***/ (function(module, exports) {

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;


/***/ }),
/* 459 */
/***/ (function(module, exports) {

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;


/***/ }),
/* 460 */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(90),
    Map = __webpack_require__(130),
    MapCache = __webpack_require__(211);

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;


/***/ }),
/* 461 */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(209),
    isMasked = __webpack_require__(462),
    isObject = __webpack_require__(56),
    toSource = __webpack_require__(210);

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;


/***/ }),
/* 462 */
/***/ (function(module, exports, __webpack_require__) {

var coreJsData = __webpack_require__(463);

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

module.exports = isMasked;


/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(16);

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;


/***/ }),
/* 464 */
/***/ (function(module, exports) {

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;


/***/ }),
/* 465 */
/***/ (function(module, exports, __webpack_require__) {

var Hash = __webpack_require__(466),
    ListCache = __webpack_require__(90),
    Map = __webpack_require__(130);

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

module.exports = mapCacheClear;


/***/ }),
/* 466 */
/***/ (function(module, exports, __webpack_require__) {

var hashClear = __webpack_require__(467),
    hashDelete = __webpack_require__(468),
    hashGet = __webpack_require__(469),
    hashHas = __webpack_require__(470),
    hashSet = __webpack_require__(471);

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;


/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(92);

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;


/***/ }),
/* 468 */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;


/***/ }),
/* 469 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(92);

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;


/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(92);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

module.exports = hashHas;


/***/ }),
/* 471 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(92);

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;


/***/ }),
/* 472 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(93);

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;


/***/ }),
/* 473 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

module.exports = isKeyable;


/***/ }),
/* 474 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(93);

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;


/***/ }),
/* 475 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(93);

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;


/***/ }),
/* 476 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(93);

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;


/***/ }),
/* 477 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

module.exports = arrayEach;


/***/ }),
/* 478 */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(57),
    keys = __webpack_require__(131);

/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return object && copyObject(source, keys(source), object);
}

module.exports = baseAssign;


/***/ }),
/* 479 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

module.exports = baseTimes;


/***/ }),
/* 480 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(42),
    isObjectLike = __webpack_require__(34);

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;


/***/ }),
/* 481 */
/***/ (function(module, exports) {

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;


/***/ }),
/* 482 */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

module.exports = isIndex;


/***/ }),
/* 483 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsTypedArray = __webpack_require__(484),
    baseUnary = __webpack_require__(132),
    nodeUtil = __webpack_require__(133);

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;


/***/ }),
/* 484 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(42),
    isLength = __webpack_require__(218),
    isObjectLike = __webpack_require__(34);

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;


/***/ }),
/* 485 */
/***/ (function(module, exports, __webpack_require__) {

var isPrototype = __webpack_require__(134),
    nativeKeys = __webpack_require__(486);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeys;


/***/ }),
/* 486 */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(219);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;


/***/ }),
/* 487 */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(57),
    keysIn = __webpack_require__(221);

/**
 * The base implementation of `_.assignIn` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssignIn(object, source) {
  return object && copyObject(source, keysIn(source), object);
}

module.exports = baseAssignIn;


/***/ }),
/* 488 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(56),
    isPrototype = __webpack_require__(134),
    nativeKeysIn = __webpack_require__(489);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeysIn;


/***/ }),
/* 489 */
/***/ (function(module, exports) {

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

module.exports = nativeKeysIn;


/***/ }),
/* 490 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(16);

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

module.exports = cloneBuffer;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(38)(module)))

/***/ }),
/* 491 */
/***/ (function(module, exports) {

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

module.exports = copyArray;


/***/ }),
/* 492 */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(57),
    getSymbols = __webpack_require__(135);

/**
 * Copies own symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
  return copyObject(source, getSymbols(source), object);
}

module.exports = copySymbols;


/***/ }),
/* 493 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = arrayFilter;


/***/ }),
/* 494 */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(57),
    getSymbolsIn = __webpack_require__(223);

/**
 * Copies own and inherited symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbolsIn(source, object) {
  return copyObject(source, getSymbolsIn(source), object);
}

module.exports = copySymbolsIn;


/***/ }),
/* 495 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(224),
    getSymbols = __webpack_require__(135),
    keys = __webpack_require__(131);

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;


/***/ }),
/* 496 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(35),
    root = __webpack_require__(16);

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView');

module.exports = DataView;


/***/ }),
/* 497 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(35),
    root = __webpack_require__(16);

/* Built-in method references that are verified to be native. */
var Promise = getNative(root, 'Promise');

module.exports = Promise;


/***/ }),
/* 498 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(35),
    root = __webpack_require__(16);

/* Built-in method references that are verified to be native. */
var Set = getNative(root, 'Set');

module.exports = Set;


/***/ }),
/* 499 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(35),
    root = __webpack_require__(16);

/* Built-in method references that are verified to be native. */
var WeakMap = getNative(root, 'WeakMap');

module.exports = WeakMap;


/***/ }),
/* 500 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray(array) {
  var length = array.length,
      result = new array.constructor(length);

  // Add properties assigned by `RegExp#exec`.
  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

module.exports = initCloneArray;


/***/ }),
/* 501 */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(139),
    cloneDataView = __webpack_require__(503),
    cloneRegExp = __webpack_require__(504),
    cloneSymbol = __webpack_require__(505),
    cloneTypedArray = __webpack_require__(506);

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag:
      return cloneArrayBuffer(object);

    case boolTag:
    case dateTag:
      return new Ctor(+object);

    case dataViewTag:
      return cloneDataView(object, isDeep);

    case float32Tag: case float64Tag:
    case int8Tag: case int16Tag: case int32Tag:
    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
      return cloneTypedArray(object, isDeep);

    case mapTag:
      return new Ctor;

    case numberTag:
    case stringTag:
      return new Ctor(object);

    case regexpTag:
      return cloneRegExp(object);

    case setTag:
      return new Ctor;

    case symbolTag:
      return cloneSymbol(object);
  }
}

module.exports = initCloneByTag;


/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(16);

/** Built-in value references. */
var Uint8Array = root.Uint8Array;

module.exports = Uint8Array;


/***/ }),
/* 503 */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(139);

/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

module.exports = cloneDataView;


/***/ }),
/* 504 */
/***/ (function(module, exports) {

/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

module.exports = cloneRegExp;


/***/ }),
/* 505 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(55);

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

module.exports = cloneSymbol;


/***/ }),
/* 506 */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(139);

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

module.exports = cloneTypedArray;


/***/ }),
/* 507 */
/***/ (function(module, exports, __webpack_require__) {

var baseCreate = __webpack_require__(508),
    getPrototype = __webpack_require__(137),
    isPrototype = __webpack_require__(134);

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype(object))
    : {};
}

module.exports = initCloneObject;


/***/ }),
/* 508 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(56);

/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

module.exports = baseCreate;


/***/ }),
/* 509 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsMap = __webpack_require__(510),
    baseUnary = __webpack_require__(132),
    nodeUtil = __webpack_require__(133);

/* Node.js helper references. */
var nodeIsMap = nodeUtil && nodeUtil.isMap;

/**
 * Checks if `value` is classified as a `Map` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 * @example
 *
 * _.isMap(new Map);
 * // => true
 *
 * _.isMap(new WeakMap);
 * // => false
 */
var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

module.exports = isMap;


/***/ }),
/* 510 */
/***/ (function(module, exports, __webpack_require__) {

var getTag = __webpack_require__(138),
    isObjectLike = __webpack_require__(34);

/** `Object#toString` result references. */
var mapTag = '[object Map]';

/**
 * The base implementation of `_.isMap` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 */
function baseIsMap(value) {
  return isObjectLike(value) && getTag(value) == mapTag;
}

module.exports = baseIsMap;


/***/ }),
/* 511 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsSet = __webpack_require__(512),
    baseUnary = __webpack_require__(132),
    nodeUtil = __webpack_require__(133);

/* Node.js helper references. */
var nodeIsSet = nodeUtil && nodeUtil.isSet;

/**
 * Checks if `value` is classified as a `Set` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 * @example
 *
 * _.isSet(new Set);
 * // => true
 *
 * _.isSet(new WeakSet);
 * // => false
 */
var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

module.exports = isSet;


/***/ }),
/* 512 */
/***/ (function(module, exports, __webpack_require__) {

var getTag = __webpack_require__(138),
    isObjectLike = __webpack_require__(34);

/** `Object#toString` result references. */
var setTag = '[object Set]';

/**
 * The base implementation of `_.isSet` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 */
function baseIsSet(value) {
  return isObjectLike(value) && getTag(value) == setTag;
}

module.exports = baseIsSet;


/***/ }),
/* 513 */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(140),
    last = __webpack_require__(518),
    parent = __webpack_require__(519),
    toKey = __webpack_require__(226);

/**
 * The base implementation of `_.unset`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The property path to unset.
 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
 */
function baseUnset(object, path) {
  path = castPath(path, object);
  object = parent(object, path);
  return object == null || delete object[toKey(last(path))];
}

module.exports = baseUnset;


/***/ }),
/* 514 */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(33),
    isSymbol = __webpack_require__(129);

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

module.exports = isKey;


/***/ }),
/* 515 */
/***/ (function(module, exports, __webpack_require__) {

var memoizeCapped = __webpack_require__(516);

/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoizeCapped(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46 /* . */) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

module.exports = stringToPath;


/***/ }),
/* 516 */
/***/ (function(module, exports, __webpack_require__) {

var memoize = __webpack_require__(517);

/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
  var result = memoize(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

module.exports = memoizeCapped;


/***/ }),
/* 517 */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(211);

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = MapCache;

module.exports = memoize;


/***/ }),
/* 518 */
/***/ (function(module, exports) {

/**
 * Gets the last element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the last element of `array`.
 * @example
 *
 * _.last([1, 2, 3]);
 * // => 3
 */
function last(array) {
  var length = array == null ? 0 : array.length;
  return length ? array[length - 1] : undefined;
}

module.exports = last;


/***/ }),
/* 519 */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(520),
    baseSlice = __webpack_require__(521);

/**
 * Gets the parent value at `path` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array} path The path to get the parent value of.
 * @returns {*} Returns the parent value.
 */
function parent(object, path) {
  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
}

module.exports = parent;


/***/ }),
/* 520 */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(140),
    toKey = __webpack_require__(226);

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = castPath(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

module.exports = baseGet;


/***/ }),
/* 521 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.slice` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function baseSlice(array, start, end) {
  var index = -1,
      length = array.length;

  if (start < 0) {
    start = -start > length ? 0 : (length + start);
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : ((end - start) >>> 0);
  start >>>= 0;

  var result = Array(length);
  while (++index < length) {
    result[index] = array[index + start];
  }
  return result;
}

module.exports = baseSlice;


/***/ }),
/* 522 */
/***/ (function(module, exports, __webpack_require__) {

var isPlainObject = __webpack_require__(523);

/**
 * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
 * objects.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {string} key The key of the property to inspect.
 * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
 */
function customOmitClone(value) {
  return isPlainObject(value) ? undefined : value;
}

module.exports = customOmitClone;


/***/ }),
/* 523 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(42),
    getPrototype = __webpack_require__(137),
    isObjectLike = __webpack_require__(34);

/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

module.exports = isPlainObject;


/***/ }),
/* 524 */
/***/ (function(module, exports, __webpack_require__) {

var flatten = __webpack_require__(525),
    overRest = __webpack_require__(528),
    setToString = __webpack_require__(530);

/**
 * A specialized version of `baseRest` which flattens the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @returns {Function} Returns the new function.
 */
function flatRest(func) {
  return setToString(overRest(func, undefined, flatten), func + '');
}

module.exports = flatRest;


/***/ }),
/* 525 */
/***/ (function(module, exports, __webpack_require__) {

var baseFlatten = __webpack_require__(526);

/**
 * Flattens `array` a single level deep.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * _.flatten([1, [2, [3, [4]], 5]]);
 * // => [1, 2, [3, [4]], 5]
 */
function flatten(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseFlatten(array, 1) : [];
}

module.exports = flatten;


/***/ }),
/* 526 */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(136),
    isFlattenable = __webpack_require__(527);

/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */
function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        // Recursively flatten arrays (susceptible to call stack limits).
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

module.exports = baseFlatten;


/***/ }),
/* 527 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(55),
    isArguments = __webpack_require__(216),
    isArray = __webpack_require__(33);

/** Built-in value references. */
var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;

/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */
function isFlattenable(value) {
  return isArray(value) || isArguments(value) ||
    !!(spreadableSymbol && value && value[spreadableSymbol]);
}

module.exports = isFlattenable;


/***/ }),
/* 528 */
/***/ (function(module, exports, __webpack_require__) {

var apply = __webpack_require__(529);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

module.exports = overRest;


/***/ }),
/* 529 */
/***/ (function(module, exports) {

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

module.exports = apply;


/***/ }),
/* 530 */
/***/ (function(module, exports, __webpack_require__) {

var baseSetToString = __webpack_require__(531),
    shortOut = __webpack_require__(534);

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = shortOut(baseSetToString);

module.exports = setToString;


/***/ }),
/* 531 */
/***/ (function(module, exports, __webpack_require__) {

var constant = __webpack_require__(532),
    defineProperty = __webpack_require__(214),
    identity = __webpack_require__(533);

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !defineProperty ? identity : function(func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

module.exports = baseSetToString;


/***/ }),
/* 532 */
/***/ (function(module, exports) {

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

module.exports = constant;


/***/ }),
/* 533 */
/***/ (function(module, exports) {

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;


/***/ }),
/* 534 */
/***/ (function(module, exports) {

/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

module.exports = shortOut;


/***/ }),
/* 535 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _raf2 = __webpack_require__(536);

var _raf3 = _interopRequireDefault(_raf2);

var _domCss = __webpack_require__(227);

var _domCss2 = _interopRequireDefault(_domCss);

var _react = __webpack_require__(0);

var _propTypes = __webpack_require__(543);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _isString = __webpack_require__(546);

var _isString2 = _interopRequireDefault(_isString);

var _getScrollbarWidth = __webpack_require__(547);

var _getScrollbarWidth2 = _interopRequireDefault(_getScrollbarWidth);

var _returnFalse = __webpack_require__(548);

var _returnFalse2 = _interopRequireDefault(_returnFalse);

var _getInnerWidth = __webpack_require__(549);

var _getInnerWidth2 = _interopRequireDefault(_getInnerWidth);

var _getInnerHeight = __webpack_require__(550);

var _getInnerHeight2 = _interopRequireDefault(_getInnerHeight);

var _styles = __webpack_require__(551);

var _defaultRenderElements = __webpack_require__(552);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Scrollbars = function (_Component) {
    _inherits(Scrollbars, _Component);

    function Scrollbars(props) {
        var _ref;

        _classCallCheck(this, Scrollbars);

        for (var _len = arguments.length, rest = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            rest[_key - 1] = arguments[_key];
        }

        var _this = _possibleConstructorReturn(this, (_ref = Scrollbars.__proto__ || Object.getPrototypeOf(Scrollbars)).call.apply(_ref, [this, props].concat(rest)));

        _this.getScrollLeft = _this.getScrollLeft.bind(_this);
        _this.getScrollTop = _this.getScrollTop.bind(_this);
        _this.getScrollWidth = _this.getScrollWidth.bind(_this);
        _this.getScrollHeight = _this.getScrollHeight.bind(_this);
        _this.getClientWidth = _this.getClientWidth.bind(_this);
        _this.getClientHeight = _this.getClientHeight.bind(_this);
        _this.getValues = _this.getValues.bind(_this);
        _this.getThumbHorizontalWidth = _this.getThumbHorizontalWidth.bind(_this);
        _this.getThumbVerticalHeight = _this.getThumbVerticalHeight.bind(_this);
        _this.getScrollLeftForOffset = _this.getScrollLeftForOffset.bind(_this);
        _this.getScrollTopForOffset = _this.getScrollTopForOffset.bind(_this);

        _this.scrollLeft = _this.scrollLeft.bind(_this);
        _this.scrollTop = _this.scrollTop.bind(_this);
        _this.scrollToLeft = _this.scrollToLeft.bind(_this);
        _this.scrollToTop = _this.scrollToTop.bind(_this);
        _this.scrollToRight = _this.scrollToRight.bind(_this);
        _this.scrollToBottom = _this.scrollToBottom.bind(_this);

        _this.handleTrackMouseEnter = _this.handleTrackMouseEnter.bind(_this);
        _this.handleTrackMouseLeave = _this.handleTrackMouseLeave.bind(_this);
        _this.handleHorizontalTrackMouseDown = _this.handleHorizontalTrackMouseDown.bind(_this);
        _this.handleVerticalTrackMouseDown = _this.handleVerticalTrackMouseDown.bind(_this);
        _this.handleHorizontalThumbMouseDown = _this.handleHorizontalThumbMouseDown.bind(_this);
        _this.handleVerticalThumbMouseDown = _this.handleVerticalThumbMouseDown.bind(_this);
        _this.handleWindowResize = _this.handleWindowResize.bind(_this);
        _this.handleScroll = _this.handleScroll.bind(_this);
        _this.handleDrag = _this.handleDrag.bind(_this);
        _this.handleDragEnd = _this.handleDragEnd.bind(_this);

        _this.state = {
            didMountUniversal: false
        };
        return _this;
    }

    _createClass(Scrollbars, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.addListeners();
            this.update();
            this.componentDidMountUniversal();
        }
    }, {
        key: 'componentDidMountUniversal',
        value: function componentDidMountUniversal() {
            // eslint-disable-line react/sort-comp
            var universal = this.props.universal;

            if (!universal) return;
            this.setState({ didMountUniversal: true });
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            this.update();
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            this.removeListeners();
            (0, _raf2.cancel)(this.requestFrame);
            clearTimeout(this.hideTracksTimeout);
            clearInterval(this.detectScrollingInterval);
        }
    }, {
        key: 'getScrollLeft',
        value: function getScrollLeft() {
            if (!this.view) return 0;
            return this.view.scrollLeft;
        }
    }, {
        key: 'getScrollTop',
        value: function getScrollTop() {
            if (!this.view) return 0;
            return this.view.scrollTop;
        }
    }, {
        key: 'getScrollWidth',
        value: function getScrollWidth() {
            if (!this.view) return 0;
            return this.view.scrollWidth;
        }
    }, {
        key: 'getScrollHeight',
        value: function getScrollHeight() {
            if (!this.view) return 0;
            return this.view.scrollHeight;
        }
    }, {
        key: 'getClientWidth',
        value: function getClientWidth() {
            if (!this.view) return 0;
            return this.view.clientWidth;
        }
    }, {
        key: 'getClientHeight',
        value: function getClientHeight() {
            if (!this.view) return 0;
            return this.view.clientHeight;
        }
    }, {
        key: 'getValues',
        value: function getValues() {
            var _ref2 = this.view || {},
                _ref2$scrollLeft = _ref2.scrollLeft,
                scrollLeft = _ref2$scrollLeft === undefined ? 0 : _ref2$scrollLeft,
                _ref2$scrollTop = _ref2.scrollTop,
                scrollTop = _ref2$scrollTop === undefined ? 0 : _ref2$scrollTop,
                _ref2$scrollWidth = _ref2.scrollWidth,
                scrollWidth = _ref2$scrollWidth === undefined ? 0 : _ref2$scrollWidth,
                _ref2$scrollHeight = _ref2.scrollHeight,
                scrollHeight = _ref2$scrollHeight === undefined ? 0 : _ref2$scrollHeight,
                _ref2$clientWidth = _ref2.clientWidth,
                clientWidth = _ref2$clientWidth === undefined ? 0 : _ref2$clientWidth,
                _ref2$clientHeight = _ref2.clientHeight,
                clientHeight = _ref2$clientHeight === undefined ? 0 : _ref2$clientHeight;

            return {
                left: scrollLeft / (scrollWidth - clientWidth) || 0,
                top: scrollTop / (scrollHeight - clientHeight) || 0,
                scrollLeft: scrollLeft,
                scrollTop: scrollTop,
                scrollWidth: scrollWidth,
                scrollHeight: scrollHeight,
                clientWidth: clientWidth,
                clientHeight: clientHeight
            };
        }
    }, {
        key: 'getThumbHorizontalWidth',
        value: function getThumbHorizontalWidth() {
            var _props = this.props,
                thumbSize = _props.thumbSize,
                thumbMinSize = _props.thumbMinSize;
            var _view = this.view,
                scrollWidth = _view.scrollWidth,
                clientWidth = _view.clientWidth;

            var trackWidth = (0, _getInnerWidth2["default"])(this.trackHorizontal);
            var width = Math.ceil(clientWidth / scrollWidth * trackWidth);
            if (trackWidth === width) return 0;
            if (thumbSize) return thumbSize;
            return Math.max(width, thumbMinSize);
        }
    }, {
        key: 'getThumbVerticalHeight',
        value: function getThumbVerticalHeight() {
            var _props2 = this.props,
                thumbSize = _props2.thumbSize,
                thumbMinSize = _props2.thumbMinSize;
            var _view2 = this.view,
                scrollHeight = _view2.scrollHeight,
                clientHeight = _view2.clientHeight;

            var trackHeight = (0, _getInnerHeight2["default"])(this.trackVertical);
            var height = Math.ceil(clientHeight / scrollHeight * trackHeight);
            if (trackHeight === height) return 0;
            if (thumbSize) return thumbSize;
            return Math.max(height, thumbMinSize);
        }
    }, {
        key: 'getScrollLeftForOffset',
        value: function getScrollLeftForOffset(offset) {
            var _view3 = this.view,
                scrollWidth = _view3.scrollWidth,
                clientWidth = _view3.clientWidth;

            var trackWidth = (0, _getInnerWidth2["default"])(this.trackHorizontal);
            var thumbWidth = this.getThumbHorizontalWidth();
            return offset / (trackWidth - thumbWidth) * (scrollWidth - clientWidth);
        }
    }, {
        key: 'getScrollTopForOffset',
        value: function getScrollTopForOffset(offset) {
            var _view4 = this.view,
                scrollHeight = _view4.scrollHeight,
                clientHeight = _view4.clientHeight;

            var trackHeight = (0, _getInnerHeight2["default"])(this.trackVertical);
            var thumbHeight = this.getThumbVerticalHeight();
            return offset / (trackHeight - thumbHeight) * (scrollHeight - clientHeight);
        }
    }, {
        key: 'scrollLeft',
        value: function scrollLeft() {
            var left = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

            if (!this.view) return;
            this.view.scrollLeft = left;
        }
    }, {
        key: 'scrollTop',
        value: function scrollTop() {
            var top = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

            if (!this.view) return;
            this.view.scrollTop = top;
        }
    }, {
        key: 'scrollToLeft',
        value: function scrollToLeft() {
            if (!this.view) return;
            this.view.scrollLeft = 0;
        }
    }, {
        key: 'scrollToTop',
        value: function scrollToTop() {
            if (!this.view) return;
            this.view.scrollTop = 0;
        }
    }, {
        key: 'scrollToRight',
        value: function scrollToRight() {
            if (!this.view) return;
            this.view.scrollLeft = this.view.scrollWidth;
        }
    }, {
        key: 'scrollToBottom',
        value: function scrollToBottom() {
            if (!this.view) return;
            this.view.scrollTop = this.view.scrollHeight;
        }
    }, {
        key: 'addListeners',
        value: function addListeners() {
            /* istanbul ignore if */
            if (typeof document === 'undefined' || !this.view) return;
            var view = this.view,
                trackHorizontal = this.trackHorizontal,
                trackVertical = this.trackVertical,
                thumbHorizontal = this.thumbHorizontal,
                thumbVertical = this.thumbVertical;

            view.addEventListener('scroll', this.handleScroll);
            if (!(0, _getScrollbarWidth2["default"])()) return;
            trackHorizontal.addEventListener('mouseenter', this.handleTrackMouseEnter);
            trackHorizontal.addEventListener('mouseleave', this.handleTrackMouseLeave);
            trackHorizontal.addEventListener('mousedown', this.handleHorizontalTrackMouseDown);
            trackVertical.addEventListener('mouseenter', this.handleTrackMouseEnter);
            trackVertical.addEventListener('mouseleave', this.handleTrackMouseLeave);
            trackVertical.addEventListener('mousedown', this.handleVerticalTrackMouseDown);
            thumbHorizontal.addEventListener('mousedown', this.handleHorizontalThumbMouseDown);
            thumbVertical.addEventListener('mousedown', this.handleVerticalThumbMouseDown);
            window.addEventListener('resize', this.handleWindowResize);
        }
    }, {
        key: 'removeListeners',
        value: function removeListeners() {
            /* istanbul ignore if */
            if (typeof document === 'undefined' || !this.view) return;
            var view = this.view,
                trackHorizontal = this.trackHorizontal,
                trackVertical = this.trackVertical,
                thumbHorizontal = this.thumbHorizontal,
                thumbVertical = this.thumbVertical;

            view.removeEventListener('scroll', this.handleScroll);
            if (!(0, _getScrollbarWidth2["default"])()) return;
            trackHorizontal.removeEventListener('mouseenter', this.handleTrackMouseEnter);
            trackHorizontal.removeEventListener('mouseleave', this.handleTrackMouseLeave);
            trackHorizontal.removeEventListener('mousedown', this.handleHorizontalTrackMouseDown);
            trackVertical.removeEventListener('mouseenter', this.handleTrackMouseEnter);
            trackVertical.removeEventListener('mouseleave', this.handleTrackMouseLeave);
            trackVertical.removeEventListener('mousedown', this.handleVerticalTrackMouseDown);
            thumbHorizontal.removeEventListener('mousedown', this.handleHorizontalThumbMouseDown);
            thumbVertical.removeEventListener('mousedown', this.handleVerticalThumbMouseDown);
            window.removeEventListener('resize', this.handleWindowResize);
            // Possibly setup by `handleDragStart`
            this.teardownDragging();
        }
    }, {
        key: 'handleScroll',
        value: function handleScroll(event) {
            var _this2 = this;

            var _props3 = this.props,
                onScroll = _props3.onScroll,
                onScrollFrame = _props3.onScrollFrame;

            if (onScroll) onScroll(event);
            this.update(function (values) {
                var scrollLeft = values.scrollLeft,
                    scrollTop = values.scrollTop;

                _this2.viewScrollLeft = scrollLeft;
                _this2.viewScrollTop = scrollTop;
                if (onScrollFrame) onScrollFrame(values);
            });
            this.detectScrolling();
        }
    }, {
        key: 'handleScrollStart',
        value: function handleScrollStart() {
            var onScrollStart = this.props.onScrollStart;

            if (onScrollStart) onScrollStart();
            this.handleScrollStartAutoHide();
        }
    }, {
        key: 'handleScrollStartAutoHide',
        value: function handleScrollStartAutoHide() {
            var autoHide = this.props.autoHide;

            if (!autoHide) return;
            this.showTracks();
        }
    }, {
        key: 'handleScrollStop',
        value: function handleScrollStop() {
            var onScrollStop = this.props.onScrollStop;

            if (onScrollStop) onScrollStop();
            this.handleScrollStopAutoHide();
        }
    }, {
        key: 'handleScrollStopAutoHide',
        value: function handleScrollStopAutoHide() {
            var autoHide = this.props.autoHide;

            if (!autoHide) return;
            this.hideTracks();
        }
    }, {
        key: 'handleWindowResize',
        value: function handleWindowResize() {
            this.update();
        }
    }, {
        key: 'handleHorizontalTrackMouseDown',
        value: function handleHorizontalTrackMouseDown(event) {
            event.preventDefault();
            var target = event.target,
                clientX = event.clientX;

            var _target$getBoundingCl = target.getBoundingClientRect(),
                targetLeft = _target$getBoundingCl.left;

            var thumbWidth = this.getThumbHorizontalWidth();
            var offset = Math.abs(targetLeft - clientX) - thumbWidth / 2;
            this.view.scrollLeft = this.getScrollLeftForOffset(offset);
        }
    }, {
        key: 'handleVerticalTrackMouseDown',
        value: function handleVerticalTrackMouseDown(event) {
            event.preventDefault();
            var target = event.target,
                clientY = event.clientY;

            var _target$getBoundingCl2 = target.getBoundingClientRect(),
                targetTop = _target$getBoundingCl2.top;

            var thumbHeight = this.getThumbVerticalHeight();
            var offset = Math.abs(targetTop - clientY) - thumbHeight / 2;
            this.view.scrollTop = this.getScrollTopForOffset(offset);
        }
    }, {
        key: 'handleHorizontalThumbMouseDown',
        value: function handleHorizontalThumbMouseDown(event) {
            event.preventDefault();
            this.handleDragStart(event);
            var target = event.target,
                clientX = event.clientX;
            var offsetWidth = target.offsetWidth;

            var _target$getBoundingCl3 = target.getBoundingClientRect(),
                left = _target$getBoundingCl3.left;

            this.prevPageX = offsetWidth - (clientX - left);
        }
    }, {
        key: 'handleVerticalThumbMouseDown',
        value: function handleVerticalThumbMouseDown(event) {
            event.preventDefault();
            this.handleDragStart(event);
            var target = event.target,
                clientY = event.clientY;
            var offsetHeight = target.offsetHeight;

            var _target$getBoundingCl4 = target.getBoundingClientRect(),
                top = _target$getBoundingCl4.top;

            this.prevPageY = offsetHeight - (clientY - top);
        }
    }, {
        key: 'setupDragging',
        value: function setupDragging() {
            (0, _domCss2["default"])(document.body, _styles.disableSelectStyle);
            document.addEventListener('mousemove', this.handleDrag);
            document.addEventListener('mouseup', this.handleDragEnd);
            document.onselectstart = _returnFalse2["default"];
        }
    }, {
        key: 'teardownDragging',
        value: function teardownDragging() {
            (0, _domCss2["default"])(document.body, _styles.disableSelectStyleReset);
            document.removeEventListener('mousemove', this.handleDrag);
            document.removeEventListener('mouseup', this.handleDragEnd);
            document.onselectstart = undefined;
        }
    }, {
        key: 'handleDragStart',
        value: function handleDragStart(event) {
            this.dragging = true;
            event.stopImmediatePropagation();
            this.setupDragging();
        }
    }, {
        key: 'handleDrag',
        value: function handleDrag(event) {
            if (this.prevPageX) {
                var clientX = event.clientX;

                var _trackHorizontal$getB = this.trackHorizontal.getBoundingClientRect(),
                    trackLeft = _trackHorizontal$getB.left;

                var thumbWidth = this.getThumbHorizontalWidth();
                var clickPosition = thumbWidth - this.prevPageX;
                var offset = -trackLeft + clientX - clickPosition;
                this.view.scrollLeft = this.getScrollLeftForOffset(offset);
            }
            if (this.prevPageY) {
                var clientY = event.clientY;

                var _trackVertical$getBou = this.trackVertical.getBoundingClientRect(),
                    trackTop = _trackVertical$getBou.top;

                var thumbHeight = this.getThumbVerticalHeight();
                var _clickPosition = thumbHeight - this.prevPageY;
                var _offset = -trackTop + clientY - _clickPosition;
                this.view.scrollTop = this.getScrollTopForOffset(_offset);
            }
            return false;
        }
    }, {
        key: 'handleDragEnd',
        value: function handleDragEnd() {
            this.dragging = false;
            this.prevPageX = this.prevPageY = 0;
            this.teardownDragging();
            this.handleDragEndAutoHide();
        }
    }, {
        key: 'handleDragEndAutoHide',
        value: function handleDragEndAutoHide() {
            var autoHide = this.props.autoHide;

            if (!autoHide) return;
            this.hideTracks();
        }
    }, {
        key: 'handleTrackMouseEnter',
        value: function handleTrackMouseEnter() {
            this.trackMouseOver = true;
            this.handleTrackMouseEnterAutoHide();
        }
    }, {
        key: 'handleTrackMouseEnterAutoHide',
        value: function handleTrackMouseEnterAutoHide() {
            var autoHide = this.props.autoHide;

            if (!autoHide) return;
            this.showTracks();
        }
    }, {
        key: 'handleTrackMouseLeave',
        value: function handleTrackMouseLeave() {
            this.trackMouseOver = false;
            this.handleTrackMouseLeaveAutoHide();
        }
    }, {
        key: 'handleTrackMouseLeaveAutoHide',
        value: function handleTrackMouseLeaveAutoHide() {
            var autoHide = this.props.autoHide;

            if (!autoHide) return;
            this.hideTracks();
        }
    }, {
        key: 'showTracks',
        value: function showTracks() {
            clearTimeout(this.hideTracksTimeout);
            (0, _domCss2["default"])(this.trackHorizontal, { opacity: 1 });
            (0, _domCss2["default"])(this.trackVertical, { opacity: 1 });
        }
    }, {
        key: 'hideTracks',
        value: function hideTracks() {
            var _this3 = this;

            if (this.dragging) return;
            if (this.scrolling) return;
            if (this.trackMouseOver) return;
            var autoHideTimeout = this.props.autoHideTimeout;

            clearTimeout(this.hideTracksTimeout);
            this.hideTracksTimeout = setTimeout(function () {
                (0, _domCss2["default"])(_this3.trackHorizontal, { opacity: 0 });
                (0, _domCss2["default"])(_this3.trackVertical, { opacity: 0 });
            }, autoHideTimeout);
        }
    }, {
        key: 'detectScrolling',
        value: function detectScrolling() {
            var _this4 = this;

            if (this.scrolling) return;
            this.scrolling = true;
            this.handleScrollStart();
            this.detectScrollingInterval = setInterval(function () {
                if (_this4.lastViewScrollLeft === _this4.viewScrollLeft && _this4.lastViewScrollTop === _this4.viewScrollTop) {
                    clearInterval(_this4.detectScrollingInterval);
                    _this4.scrolling = false;
                    _this4.handleScrollStop();
                }
                _this4.lastViewScrollLeft = _this4.viewScrollLeft;
                _this4.lastViewScrollTop = _this4.viewScrollTop;
            }, 100);
        }
    }, {
        key: 'raf',
        value: function raf(callback) {
            var _this5 = this;

            if (this.requestFrame) _raf3["default"].cancel(this.requestFrame);
            this.requestFrame = (0, _raf3["default"])(function () {
                _this5.requestFrame = undefined;
                callback();
            });
        }
    }, {
        key: 'update',
        value: function update(callback) {
            var _this6 = this;

            this.raf(function () {
                return _this6._update(callback);
            });
        }
    }, {
        key: '_update',
        value: function _update(callback) {
            var _props4 = this.props,
                onUpdate = _props4.onUpdate,
                hideTracksWhenNotNeeded = _props4.hideTracksWhenNotNeeded;

            var values = this.getValues();
            if ((0, _getScrollbarWidth2["default"])()) {
                var scrollLeft = values.scrollLeft,
                    clientWidth = values.clientWidth,
                    scrollWidth = values.scrollWidth;

                var trackHorizontalWidth = (0, _getInnerWidth2["default"])(this.trackHorizontal);
                var thumbHorizontalWidth = this.getThumbHorizontalWidth();
                var thumbHorizontalX = scrollLeft / (scrollWidth - clientWidth) * (trackHorizontalWidth - thumbHorizontalWidth);
                var thumbHorizontalStyle = {
                    width: thumbHorizontalWidth,
                    transform: 'translateX(' + thumbHorizontalX + 'px)'
                };
                var scrollTop = values.scrollTop,
                    clientHeight = values.clientHeight,
                    scrollHeight = values.scrollHeight;

                var trackVerticalHeight = (0, _getInnerHeight2["default"])(this.trackVertical);
                var thumbVerticalHeight = this.getThumbVerticalHeight();
                var thumbVerticalY = scrollTop / (scrollHeight - clientHeight) * (trackVerticalHeight - thumbVerticalHeight);
                var thumbVerticalStyle = {
                    height: thumbVerticalHeight,
                    transform: 'translateY(' + thumbVerticalY + 'px)'
                };
                if (hideTracksWhenNotNeeded) {
                    var trackHorizontalStyle = {
                        visibility: scrollWidth > clientWidth ? 'visible' : 'hidden'
                    };
                    var trackVerticalStyle = {
                        visibility: scrollHeight > clientHeight ? 'visible' : 'hidden'
                    };
                    (0, _domCss2["default"])(this.trackHorizontal, trackHorizontalStyle);
                    (0, _domCss2["default"])(this.trackVertical, trackVerticalStyle);
                }
                (0, _domCss2["default"])(this.thumbHorizontal, thumbHorizontalStyle);
                (0, _domCss2["default"])(this.thumbVertical, thumbVerticalStyle);
            }
            if (onUpdate) onUpdate(values);
            if (typeof callback !== 'function') return;
            callback(values);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this7 = this;

            var scrollbarWidth = (0, _getScrollbarWidth2["default"])();
            /* eslint-disable no-unused-vars */

            var _props5 = this.props,
                onScroll = _props5.onScroll,
                onScrollFrame = _props5.onScrollFrame,
                onScrollStart = _props5.onScrollStart,
                onScrollStop = _props5.onScrollStop,
                onUpdate = _props5.onUpdate,
                renderView = _props5.renderView,
                renderTrackHorizontal = _props5.renderTrackHorizontal,
                renderTrackVertical = _props5.renderTrackVertical,
                renderThumbHorizontal = _props5.renderThumbHorizontal,
                renderThumbVertical = _props5.renderThumbVertical,
                tagName = _props5.tagName,
                hideTracksWhenNotNeeded = _props5.hideTracksWhenNotNeeded,
                autoHide = _props5.autoHide,
                autoHideTimeout = _props5.autoHideTimeout,
                autoHideDuration = _props5.autoHideDuration,
                thumbSize = _props5.thumbSize,
                thumbMinSize = _props5.thumbMinSize,
                universal = _props5.universal,
                autoHeight = _props5.autoHeight,
                autoHeightMin = _props5.autoHeightMin,
                autoHeightMax = _props5.autoHeightMax,
                style = _props5.style,
                children = _props5.children,
                props = _objectWithoutProperties(_props5, ['onScroll', 'onScrollFrame', 'onScrollStart', 'onScrollStop', 'onUpdate', 'renderView', 'renderTrackHorizontal', 'renderTrackVertical', 'renderThumbHorizontal', 'renderThumbVertical', 'tagName', 'hideTracksWhenNotNeeded', 'autoHide', 'autoHideTimeout', 'autoHideDuration', 'thumbSize', 'thumbMinSize', 'universal', 'autoHeight', 'autoHeightMin', 'autoHeightMax', 'style', 'children']);
            /* eslint-enable no-unused-vars */

            var didMountUniversal = this.state.didMountUniversal;


            var containerStyle = _extends({}, _styles.containerStyleDefault, autoHeight && _extends({}, _styles.containerStyleAutoHeight, {
                minHeight: autoHeightMin,
                maxHeight: autoHeightMax
            }), style);

            var viewStyle = _extends({}, _styles.viewStyleDefault, {
                // Hide scrollbars by setting a negative margin
                marginRight: scrollbarWidth ? -scrollbarWidth : 0,
                marginBottom: scrollbarWidth ? -scrollbarWidth : 0
            }, autoHeight && _extends({}, _styles.viewStyleAutoHeight, {
                // Add scrollbarWidth to autoHeight in order to compensate negative margins
                minHeight: (0, _isString2["default"])(autoHeightMin) ? 'calc(' + autoHeightMin + ' + ' + scrollbarWidth + 'px)' : autoHeightMin + scrollbarWidth,
                maxHeight: (0, _isString2["default"])(autoHeightMax) ? 'calc(' + autoHeightMax + ' + ' + scrollbarWidth + 'px)' : autoHeightMax + scrollbarWidth
            }), autoHeight && universal && !didMountUniversal && {
                minHeight: autoHeightMin,
                maxHeight: autoHeightMax
            }, universal && !didMountUniversal && _styles.viewStyleUniversalInitial);

            var trackAutoHeightStyle = {
                transition: 'opacity ' + autoHideDuration + 'ms',
                opacity: 0
            };

            var trackHorizontalStyle = _extends({}, _styles.trackHorizontalStyleDefault, autoHide && trackAutoHeightStyle, (!scrollbarWidth || universal && !didMountUniversal) && {
                display: 'none'
            });

            var trackVerticalStyle = _extends({}, _styles.trackVerticalStyleDefault, autoHide && trackAutoHeightStyle, (!scrollbarWidth || universal && !didMountUniversal) && {
                display: 'none'
            });

            return (0, _react.createElement)(tagName, _extends({}, props, { style: containerStyle, ref: function ref(_ref3) {
                    _this7.container = _ref3;
                } }), [(0, _react.cloneElement)(renderView({ style: viewStyle }), { key: 'view', ref: function ref(_ref4) {
                    _this7.view = _ref4;
                } }, children), (0, _react.cloneElement)(renderTrackHorizontal({ style: trackHorizontalStyle }), { key: 'trackHorizontal', ref: function ref(_ref5) {
                    _this7.trackHorizontal = _ref5;
                } }, (0, _react.cloneElement)(renderThumbHorizontal({ style: _styles.thumbHorizontalStyleDefault }), { ref: function ref(_ref6) {
                    _this7.thumbHorizontal = _ref6;
                } })), (0, _react.cloneElement)(renderTrackVertical({ style: trackVerticalStyle }), { key: 'trackVertical', ref: function ref(_ref7) {
                    _this7.trackVertical = _ref7;
                } }, (0, _react.cloneElement)(renderThumbVertical({ style: _styles.thumbVerticalStyleDefault }), { ref: function ref(_ref8) {
                    _this7.thumbVertical = _ref8;
                } }))]);
        }
    }]);

    return Scrollbars;
}(_react.Component);

exports["default"] = Scrollbars;


Scrollbars.propTypes = {
    onScroll: _propTypes2["default"].func,
    onScrollFrame: _propTypes2["default"].func,
    onScrollStart: _propTypes2["default"].func,
    onScrollStop: _propTypes2["default"].func,
    onUpdate: _propTypes2["default"].func,
    renderView: _propTypes2["default"].func,
    renderTrackHorizontal: _propTypes2["default"].func,
    renderTrackVertical: _propTypes2["default"].func,
    renderThumbHorizontal: _propTypes2["default"].func,
    renderThumbVertical: _propTypes2["default"].func,
    tagName: _propTypes2["default"].string,
    thumbSize: _propTypes2["default"].number,
    thumbMinSize: _propTypes2["default"].number,
    hideTracksWhenNotNeeded: _propTypes2["default"].bool,
    autoHide: _propTypes2["default"].bool,
    autoHideTimeout: _propTypes2["default"].number,
    autoHideDuration: _propTypes2["default"].number,
    autoHeight: _propTypes2["default"].bool,
    autoHeightMin: _propTypes2["default"].oneOfType([_propTypes2["default"].number, _propTypes2["default"].string]),
    autoHeightMax: _propTypes2["default"].oneOfType([_propTypes2["default"].number, _propTypes2["default"].string]),
    universal: _propTypes2["default"].bool,
    style: _propTypes2["default"].object,
    children: _propTypes2["default"].node
};

Scrollbars.defaultProps = {
    renderView: _defaultRenderElements.renderViewDefault,
    renderTrackHorizontal: _defaultRenderElements.renderTrackHorizontalDefault,
    renderTrackVertical: _defaultRenderElements.renderTrackVerticalDefault,
    renderThumbHorizontal: _defaultRenderElements.renderThumbHorizontalDefault,
    renderThumbVertical: _defaultRenderElements.renderThumbVerticalDefault,
    tagName: 'div',
    thumbMinSize: 30,
    hideTracksWhenNotNeeded: false,
    autoHide: false,
    autoHideTimeout: 1000,
    autoHideDuration: 200,
    autoHeight: false,
    autoHeightMin: 0,
    autoHeightMax: 200,
    universal: false
};

/***/ }),
/* 536 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var now = __webpack_require__(537)
  , root = typeof window === 'undefined' ? global : window
  , vendors = ['moz', 'webkit']
  , suffix = 'AnimationFrame'
  , raf = root['request' + suffix]
  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]

for(var i = 0; !raf && i < vendors.length; i++) {
  raf = root[vendors[i] + 'Request' + suffix]
  caf = root[vendors[i] + 'Cancel' + suffix]
      || root[vendors[i] + 'CancelRequest' + suffix]
}

// Some versions of FF have rAF but not cAF
if(!raf || !caf) {
  var last = 0
    , id = 0
    , queue = []
    , frameDuration = 1000 / 60

  raf = function(callback) {
    if(queue.length === 0) {
      var _now = now()
        , next = Math.max(0, frameDuration - (_now - last))
      last = next + _now
      setTimeout(function() {
        var cp = queue.slice(0)
        // Clear queue here to prevent
        // callbacks from appending listeners
        // to the current frame's queue
        queue.length = 0
        for(var i = 0; i < cp.length; i++) {
          if(!cp[i].cancelled) {
            try{
              cp[i].callback(last)
            } catch(e) {
              setTimeout(function() { throw e }, 0)
            }
          }
        }
      }, Math.round(next))
    }
    queue.push({
      handle: ++id,
      callback: callback,
      cancelled: false
    })
    return id
  }

  caf = function(handle) {
    for(var i = 0; i < queue.length; i++) {
      if(queue[i].handle === handle) {
        queue[i].cancelled = true
      }
    }
  }
}

module.exports = function(fn) {
  // Wrap in a new function to prevent
  // `cancel` potentially being assigned
  // to the native rAF function
  return raf.call(root, fn)
}
module.exports.cancel = function() {
  caf.apply(root, arguments)
}
module.exports.polyfill = function(object) {
  if (!object) {
    object = root;
  }
  object.requestAnimationFrame = raf
  object.cancelAnimationFrame = caf
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(11)))

/***/ }),
/* 537 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {// Generated by CoffeeScript 1.12.2
(function() {
  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;

  if ((typeof performance !== "undefined" && performance !== null) && performance.now) {
    module.exports = function() {
      return performance.now();
    };
  } else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {
    module.exports = function() {
      return (getNanoSeconds() - nodeLoadTime) / 1e6;
    };
    hrtime = process.hrtime;
    getNanoSeconds = function() {
      var hr;
      hr = hrtime();
      return hr[0] * 1e9 + hr[1];
    };
    moduleLoadTime = getNanoSeconds();
    upTime = process.uptime() * 1e9;
    nodeLoadTime = moduleLoadTime - upTime;
  } else if (Date.now) {
    module.exports = function() {
      return Date.now() - loadTime;
    };
    loadTime = Date.now();
  } else {
    module.exports = function() {
      return new Date().getTime() - loadTime;
    };
    loadTime = new Date().getTime();
  }

}).call(this);

//# sourceMappingURL=performance-now.js.map

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(99)))

/***/ }),
/* 538 */
/***/ (function(module, exports) {

var div = null
var prefixes = [ 'Webkit', 'Moz', 'O', 'ms' ]

module.exports = function prefixStyle (prop) {
  // re-use a dummy div
  if (!div) {
    div = document.createElement('div')
  }

  var style = div.style

  // prop exists without prefix
  if (prop in style) {
    return prop
  }

  // borderRadius -> BorderRadius
  var titleCase = prop.charAt(0).toUpperCase() + prop.slice(1)

  // find the vendor-prefixed prop
  for (var i = prefixes.length; i >= 0; i--) {
    var name = prefixes[i] + titleCase
    // e.g. WebkitBorderRadius or webkitBorderRadius
    if (name in style) {
      return name
    }
  }

  return false
}


/***/ }),
/* 539 */
/***/ (function(module, exports, __webpack_require__) {


var space = __webpack_require__(540)

/**
 * Export.
 */

module.exports = toCamelCase

/**
 * Convert a `string` to camel case.
 *
 * @param {String} string
 * @return {String}
 */

function toCamelCase(string) {
  return space(string).replace(/\s(\w)/g, function (matches, letter) {
    return letter.toUpperCase()
  })
}


/***/ }),
/* 540 */
/***/ (function(module, exports, __webpack_require__) {


var clean = __webpack_require__(541)

/**
 * Export.
 */

module.exports = toSpaceCase

/**
 * Convert a `string` to space case.
 *
 * @param {String} string
 * @return {String}
 */

function toSpaceCase(string) {
  return clean(string).replace(/[\W_]+(.|$)/g, function (matches, match) {
    return match ? ' ' + match : ''
  }).trim()
}


/***/ }),
/* 541 */
/***/ (function(module, exports) {


/**
 * Export.
 */

module.exports = toNoCase

/**
 * Test whether a string is camel-case.
 */

var hasSpace = /\s/
var hasSeparator = /(_|-|\.|:)/
var hasCamel = /([a-z][A-Z]|[A-Z][a-z])/

/**
 * Remove any starting case from a `string`, like camel or snake, but keep
 * spaces and punctuation that may be important otherwise.
 *
 * @param {String} string
 * @return {String}
 */

function toNoCase(string) {
  if (hasSpace.test(string)) return string.toLowerCase()
  if (hasSeparator.test(string)) return (unseparate(string) || string).toLowerCase()
  if (hasCamel.test(string)) return uncamelize(string).toLowerCase()
  return string.toLowerCase()
}

/**
 * Separator splitter.
 */

var separatorSplitter = /[\W_]+(.|$)/g

/**
 * Un-separate a `string`.
 *
 * @param {String} string
 * @return {String}
 */

function unseparate(string) {
  return string.replace(separatorSplitter, function (m, next) {
    return next ? ' ' + next : ''
  })
}

/**
 * Camelcase splitter.
 */

var camelSplitter = /(.)([A-Z]+)/g

/**
 * Un-camelcase a `string`.
 *
 * @param {String} string
 * @return {String}
 */

function uncamelize(string) {
  return string.replace(camelSplitter, function (m, previous, uppers) {
    return previous + ' ' + uppers.toLowerCase().split('').join(' ')
  })
}


/***/ }),
/* 542 */
/***/ (function(module, exports) {

/* The following list is defined in React's core */
var IS_UNITLESS = {
  animationIterationCount: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridColumn: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  stopOpacity: true,
  strokeDashoffset: true,
  strokeOpacity: true,
  strokeWidth: true
};

module.exports = function(name, value) {
  if(typeof value === 'number' && !IS_UNITLESS[ name ]) {
    return value + 'px';
  } else {
    return value;
  }
};

/***/ }),
/* 543 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (false) { var throwOnDirectAccess, isValidElement, REACT_ELEMENT_TYPE; } else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(544)();
}


/***/ }),
/* 544 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var emptyFunction = __webpack_require__(165);
var invariant = __webpack_require__(166);
var ReactPropTypesSecret = __webpack_require__(545);

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    invariant(
      false,
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),
/* 545 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 546 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports["default"] = isString;
function isString(maybe) {
    return typeof maybe === 'string';
}

/***/ }),
/* 547 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports["default"] = getScrollbarWidth;

var _domCss = __webpack_require__(227);

var _domCss2 = _interopRequireDefault(_domCss);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var scrollbarWidth = false;

function getScrollbarWidth() {
    if (scrollbarWidth !== false) return scrollbarWidth;
    /* istanbul ignore else */
    if (typeof document !== 'undefined') {
        var div = document.createElement('div');
        (0, _domCss2["default"])(div, {
            width: 100,
            height: 100,
            position: 'absolute',
            top: -9999,
            overflow: 'scroll',
            MsOverflowStyle: 'scrollbar'
        });
        document.body.appendChild(div);
        scrollbarWidth = div.offsetWidth - div.clientWidth;
        document.body.removeChild(div);
    } else {
        scrollbarWidth = 0;
    }
    return scrollbarWidth || 0;
}

/***/ }),
/* 548 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports["default"] = returnFalse;
function returnFalse() {
    return false;
}

/***/ }),
/* 549 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports["default"] = getInnerWidth;
function getInnerWidth(el) {
    var clientWidth = el.clientWidth;

    var _getComputedStyle = getComputedStyle(el),
        paddingLeft = _getComputedStyle.paddingLeft,
        paddingRight = _getComputedStyle.paddingRight;

    return clientWidth - parseFloat(paddingLeft) - parseFloat(paddingRight);
}

/***/ }),
/* 550 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports["default"] = getInnerHeight;
function getInnerHeight(el) {
    var clientHeight = el.clientHeight;

    var _getComputedStyle = getComputedStyle(el),
        paddingTop = _getComputedStyle.paddingTop,
        paddingBottom = _getComputedStyle.paddingBottom;

    return clientHeight - parseFloat(paddingTop) - parseFloat(paddingBottom);
}

/***/ }),
/* 551 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var containerStyleDefault = exports.containerStyleDefault = {
    position: 'relative',
    overflow: 'hidden',
    width: '100%',
    height: '100%'
};

// Overrides containerStyleDefault properties
var containerStyleAutoHeight = exports.containerStyleAutoHeight = {
    height: 'auto'
};

var viewStyleDefault = exports.viewStyleDefault = {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    overflow: 'scroll',
    WebkitOverflowScrolling: 'touch'
};

// Overrides viewStyleDefault properties
var viewStyleAutoHeight = exports.viewStyleAutoHeight = {
    position: 'relative',
    top: undefined,
    left: undefined,
    right: undefined,
    bottom: undefined
};

var viewStyleUniversalInitial = exports.viewStyleUniversalInitial = {
    overflow: 'hidden',
    marginRight: 0,
    marginBottom: 0
};

var trackHorizontalStyleDefault = exports.trackHorizontalStyleDefault = {
    position: 'absolute',
    height: 6
};

var trackVerticalStyleDefault = exports.trackVerticalStyleDefault = {
    position: 'absolute',
    width: 6
};

var thumbHorizontalStyleDefault = exports.thumbHorizontalStyleDefault = {
    position: 'relative',
    display: 'block',
    height: '100%'
};

var thumbVerticalStyleDefault = exports.thumbVerticalStyleDefault = {
    position: 'relative',
    display: 'block',
    width: '100%'
};

var disableSelectStyle = exports.disableSelectStyle = {
    userSelect: 'none'
};

var disableSelectStyleReset = exports.disableSelectStyleReset = {
    userSelect: ''
};

/***/ }),
/* 552 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.renderViewDefault = renderViewDefault;
exports.renderTrackHorizontalDefault = renderTrackHorizontalDefault;
exports.renderTrackVerticalDefault = renderTrackVerticalDefault;
exports.renderThumbHorizontalDefault = renderThumbHorizontalDefault;
exports.renderThumbVerticalDefault = renderThumbVerticalDefault;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/* eslint-disable react/prop-types */

function renderViewDefault(props) {
    return _react2["default"].createElement('div', props);
}

function renderTrackHorizontalDefault(_ref) {
    var style = _ref.style,
        props = _objectWithoutProperties(_ref, ['style']);

    var finalStyle = _extends({}, style, {
        right: 2,
        bottom: 2,
        left: 2,
        borderRadius: 3
    });
    return _react2["default"].createElement('div', _extends({ style: finalStyle }, props));
}

function renderTrackVerticalDefault(_ref2) {
    var style = _ref2.style,
        props = _objectWithoutProperties(_ref2, ['style']);

    var finalStyle = _extends({}, style, {
        right: 2,
        bottom: 2,
        top: 2,
        borderRadius: 3
    });
    return _react2["default"].createElement('div', _extends({ style: finalStyle }, props));
}

function renderThumbHorizontalDefault(_ref3) {
    var style = _ref3.style,
        props = _objectWithoutProperties(_ref3, ['style']);

    var finalStyle = _extends({}, style, {
        cursor: 'pointer',
        borderRadius: 'inherit',
        backgroundColor: 'rgba(0,0,0,.2)'
    });
    return _react2["default"].createElement('div', _extends({ style: finalStyle }, props));
}

function renderThumbVerticalDefault(_ref4) {
    var style = _ref4.style,
        props = _objectWithoutProperties(_ref4, ['style']);

    var finalStyle = _extends({}, style, {
        cursor: 'pointer',
        borderRadius: 'inherit',
        backgroundColor: 'rgba(0,0,0,.2)'
    });
    return _react2["default"].createElement('div', _extends({ style: finalStyle }, props));
}

/***/ }),
/* 553 */
/***/ (function(module, exports, __webpack_require__) {


if (false) {}

module.exports = {
    'description': '',
    'displayName': 'Select',
    'methods': [],
    'props': [
        {
            'defaultValue': { 'value': 'true' },
            'description': '',
            'name': 'autoclose',
            'parent': {
                'fileName': 'react-components/src/components/Select/index.tsx',
                'name': 'SelectProps'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'childrenClassName',
            'parent': {
                'fileName': 'react-components/src/components/Select/index.tsx',
                'name': 'SelectProps'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'className',
            'parent': {
                'fileName': 'react-components/src/components/Select/index.tsx',
                'name': 'SelectProps'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'dark',
            'parent': {
                'fileName': 'react-components/src/components/Select/index.tsx',
                'name': 'SelectProps'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'disabled',
            'parent': {
                'fileName': 'react-components/src/components/Select/index.tsx',
                'name': 'SelectProps'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'label',
            'parent': {
                'fileName': 'react-components/src/components/Select/index.tsx',
                'name': 'SelectProps'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onClick',
            'parent': {
                'fileName': 'react-components/src/components/Select/index.tsx',
                'name': 'SelectProps'
            },
            'required': false,
            'type': { 'name': '(e: MouseEvent<HTMLDivElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'open',
            'parent': {
                'fileName': 'react-components/src/components/Select/index.tsx',
                'name': 'SelectProps'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'reset',
            'parent': {
                'fileName': 'react-components/src/components/Select/index.tsx',
                'name': 'SelectProps'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'scrollable',
            'parent': {
                'fileName': 'react-components/src/components/Select/index.tsx',
                'name': 'SelectProps'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'style',
            'parent': {
                'fileName': 'react-components/src/components/Select/index.tsx',
                'name': 'SelectProps'
            },
            'required': false,
            'type': { 'name': 'object' },
            'tags': {}
        }
    ],
    'doclets': {},
    'examples': __webpack_require__(554)
}
	

/***/ }),
/* 554 */
/***/ (function(module, exports, __webpack_require__) {


if (false) {}

var requireMap = { 'react': __webpack_require__(0) };
var requireInRuntimeBase = __webpack_require__(25);
var requireInRuntime = requireInRuntimeBase.bind(null, requireMap);
var evalInContextBase = __webpack_require__(26);
var evalInContext = evalInContextBase.bind(null, "var React = require('react');", requireInRuntime);

module.exports = [{
        'type': 'code',
        'content': 'initialState = { selected: \'Select..\' }\n\nconst setSelected = (selected) => () => {\n  setState({ selected })\n}\n\n<FlexView hAlign="around">\n  <Select className="w4" label="Go to..">\n    <a className="pa2 link db" target="_blank" href="https://www.accurat.it/">\n      Accurat Homepage\n    </a>\n    <a className="pa2 link db" target="_blank" href="https://www.accurat.it/works">\n      Works\n    </a>\n    <a className="pa2 link db" target="_blank" href="https://www.accurat.it/solutions/">\n      Solutions\n    </a>\n    <a className="pa2 link db" target="_blank" href="https://www.accurat.it/contact">\n      Contact\n    </a>\n  </Select>\n\n  <Select className="w4 bg-black white" childrenClassName="bg-black" label={state.selected}>\n    <div className="white bg-blue pa3 pointer" onClick={setSelected(\'(\u0387_\u0387)\')}>(\u0387_\u0387)</div>\n    <div className="white bg-purple pa3 pointer" onClick={setSelected(\'(^Д^)\')}>(^Д^)</div>\n    <div className="white bg-orange pa3 pointer" onClick={setSelected(\'(\u2265o\u2264)\')}>(\u2265o\u2264)</div>\n    <div className="white bg-green pa3 pointer" onClick={setSelected(\'(o_o)\')}>(o_o)</div>\n  </Select>\n\n  <Select className="w5" scrollable autoclose={false} label="Multiple selection">\n    <Checkbox className="pa2 pointer">Item 1</Checkbox>\n    <Checkbox checked className="pa2 pointer">Item 2</Checkbox>\n    <Checkbox className="pa2 pointer">Item 3</Checkbox>\n    <Checkbox checked className="pa2 pointer">Item 4</Checkbox>\n    <Checkbox checked className="pa2 pointer">Item 5</Checkbox>\n    <Checkbox className="pa2 pointer">Item 6</Checkbox>\n    <Checkbox className="pa2 pointer">Item 7</Checkbox>\n    <Checkbox className="pa2 pointer">Item 8</Checkbox>\n    <Checkbox className="pa2 pointer">Item 9</Checkbox>\n    <Checkbox className="pa2 pointer">Item 10</Checkbox>\n    <Checkbox className="pa2 pointer">Item 11</Checkbox>\n  </Select>\n\n  <Select className="w4" disabled label=\'Disabled\'>\n    <div className="pa2">1</div>\n    <div className="pa2">2</div>\n    <div className="pa2">3</div>\n    <div className="pa2">4</div>\n  </Select>\n\n</FlexView>',
        'settings': {},
        'evalInContext': evalInContext
    }]
	

/***/ }),
/* 555 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TextInput", function() { return TextInput; });
/* harmony import */ var core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(30);
/* harmony import */ var core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_array_concat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85);
/* harmony import */ var core_js_modules_es_array_concat__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_array_filter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(86);
/* harmony import */ var core_js_modules_es_array_filter__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_filter__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(87);
/* harmony import */ var core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(54);
/* harmony import */ var core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_object_assign__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(40);
/* harmony import */ var core_js_modules_es_object_assign__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_assign__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_object_define_property__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(24);
/* harmony import */ var core_js_modules_es_object_define_property__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_define_property__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(88);
/* harmony import */ var core_js_modules_es_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(32);
/* harmony import */ var core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(89);
/* harmony import */ var core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(0);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(3);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_11__);
function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==='function'){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable;}));}ownKeys.forEach(function(key){_defineProperty(target,key,source[key]);});}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}var disabledStyle='o-50 pointer-events-none';var defaultStyle='b--black black bg-white';var handleChange=function handleChange(onChange,checkValidity){return function(event){onChange(event);checkValidity(event.target.checkValidity());};};function TextInput(_ref){var _classNames;var value=_ref.value,defaultValue=_ref.defaultValue,_ref$className=_ref.className,className=_ref$className===void 0?'':_ref$className,_ref$style=_ref.style,style=_ref$style===void 0?{}:_ref$style,_ref$type=_ref.type,type=_ref$type===void 0?'text':_ref$type,_ref$onChange=_ref.onChange,onChange=_ref$onChange===void 0?function(){}:_ref$onChange,_ref$checkValidity=_ref.checkValidity,checkValidity=_ref$checkValidity===void 0?function(){}:_ref$checkValidity,_ref$reset=_ref.reset,reset=_ref$reset===void 0?false:_ref$reset,_ref$disabled=_ref.disabled,disabled=_ref$disabled===void 0?false:_ref$disabled,props=_objectWithoutProperties(_ref,["value","defaultValue","className","style","type","onChange","checkValidity","reset","disabled"]);var classes=classnames__WEBPACK_IMPORTED_MODULE_11___default()(className,'pa2 ba input-reset outline-transparent',(_classNames={},_defineProperty(_classNames,disabledStyle,disabled),_defineProperty(_classNames,defaultStyle,!reset),_classNames));return react__WEBPACK_IMPORTED_MODULE_10__["createElement"]("input",Object.assign({},props,{className:classes// fontFamily: inherit is an issue with normalize.css,
// it sets `font-family: sans-serif;` to every input/button
,style:_objectSpread({},style,{font:'inherit'}),type:type,value:value,defaultValue:defaultValue,disabled:disabled,onChange:handleChange(onChange,checkValidity)}));}

/***/ }),
/* 556 */
/***/ (function(module, exports, __webpack_require__) {


if (false) {}

module.exports = {
    'description': '',
    'displayName': 'TextInput',
    'methods': [],
    'props': [
        {
            'defaultValue': null,
            'description': '',
            'name': 'about',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'accept',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'accessKey',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'alt',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
            'name': 'aria-activedescendant',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
            'name': 'aria-atomic',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether inputting text could trigger display of one or more predictions of the user\'s intended value for an input and specifies how predictions would be\npresented if they are made.',
            'name': 'aria-autocomplete',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"none" | "inline" | "list" | "both"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
            'name': 'aria-busy',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
            'name': 'aria-checked',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true" | "mixed"' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-pressed'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-selected.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the total number of columns in a table, grid, or treegrid.',
            'name': 'aria-colcount',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-colindex.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines an element\'s column index or position with respect to the total number of columns within a table, grid, or treegrid.',
            'name': 'aria-colindex',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-colcount'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-colspan.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.',
            'name': 'aria-colspan',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-colindex'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-rowspan.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element (or elements) whose contents or presence are controlled by the current element.',
            'name': 'aria-controls',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-owns.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the element that represents the current item within a container or set of related elements.',
            'name': 'aria-current',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "time" | "date" | "false" | "true" | "page" | "step" | "location"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element (or elements) that describes the object.',
            'name': 'aria-describedby',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-labelledby'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element that provides a detailed, extended description for the object.',
            'name': 'aria-details',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-describedby.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.',
            'name': 'aria-disabled',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-hidden'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-readonly.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates what functions can be performed when a dragged object is released on the drop target.',
            'name': 'aria-dropeffect',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"none" | "copy" | "execute" | "link" | "move" | "popup"' },
            'tags': {
                'deprecated': [{
                        'title': 'deprecated',
                        'description': 'in ARIA 1.1'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element that provides an error message for the object.',
            'name': 'aria-errormessage',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-invalid'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-describedby.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
            'name': 'aria-expanded',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Identifies the next element (or elements) in an alternate reading order of content which, at the user\'s discretion,\nallows assistive technology to override the general default of reading in document source order.',
            'name': 'aria-flowto',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',
            'name': 'aria-grabbed',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'deprecated': [{
                        'title': 'deprecated',
                        'description': 'in ARIA 1.1'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
            'name': 'aria-haspopup',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true" | "menu" | "listbox" | "tree" | "grid" | "dialog"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether the element is exposed to an accessibility API.',
            'name': 'aria-hidden',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-disabled.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the entered value does not conform to the format expected by the application.',
            'name': 'aria-invalid',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true" | "grammar" | "spelling"' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-errormessage.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
            'name': 'aria-keyshortcuts',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines a string value that labels the current element.',
            'name': 'aria-label',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-labelledby.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element (or elements) that labels the current element.',
            'name': 'aria-labelledby',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-describedby.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the hierarchical level of an element within a structure.',
            'name': 'aria-level',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
            'name': 'aria-live',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"off" | "assertive" | "polite"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether an element is modal when displayed.',
            'name': 'aria-modal',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether a text box accepts multiple lines of input or only a single line.',
            'name': 'aria-multiline',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates that the user may select more than one item from the current selectable descendants.',
            'name': 'aria-multiselectable',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether the element\'s orientation is horizontal, vertical, or unknown/ambiguous.',
            'name': 'aria-orientation',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"horizontal" | "vertical"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.',
            'name': 'aria-owns',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-controls.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
            'name': 'aria-placeholder',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines an element\'s number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.',
            'name': 'aria-posinset',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-setsize.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the current "pressed" state of toggle buttons.',
            'name': 'aria-pressed',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true" | "mixed"' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-checked'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-selected.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates that the element is not editable, but is otherwise operable.',
            'name': 'aria-readonly',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-disabled.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.',
            'name': 'aria-relevant',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"text" | "additions" | "additions text" | "all" | "removals"' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-atomic.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates that user input is required on the element before a form may be submitted.',
            'name': 'aria-required',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines a human-readable, author-localized description for the role of an element.',
            'name': 'aria-roledescription',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines the total number of rows in a table, grid, or treegrid.',
            'name': 'aria-rowcount',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-rowindex.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines an element\'s row index or position with respect to the total number of rows within a table, grid, or treegrid.',
            'name': 'aria-rowindex',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-rowcount'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-rowspan.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.',
            'name': 'aria-rowspan',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-rowindex'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-colspan.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the current "selected" state of various widgets.',
            'name': 'aria-selected',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-checked'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-pressed.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.',
            'name': 'aria-setsize',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-posinset.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates if items in a table or grid are sorted in ascending or descending order.',
            'name': 'aria-sort',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"none" | "ascending" | "descending" | "other"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines the maximum allowed value for a range widget.',
            'name': 'aria-valuemax',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines the minimum allowed value for a range widget.',
            'name': 'aria-valuemin',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines the current value for a range widget.',
            'name': 'aria-valuenow',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-valuetext.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the human readable text alternative of aria-valuenow for a range widget.',
            'name': 'aria-valuetext',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'autoCapitalize',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'autoComplete',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'autoCorrect',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'autoFocus',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'autoSave',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'capture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'checkValidity',
            'parent': {
                'fileName': 'react-components/src/components/TextInput/index.tsx',
                'name': 'TextInputpropsType'
            },
            'required': false,
            'type': { 'name': '(cond: boolean) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'checked',
            'parent': {
                'fileName': 'react-components/src/commons/interfaces.ts',
                'name': 'InputPropsTypes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'className',
            'parent': {
                'fileName': 'react-components/src/commons/interfaces.ts',
                'name': 'InputPropsTypes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'color',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'contentEditable',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'contextMenu',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'crossOrigin',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'dangerouslySetInnerHTML',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '{ __html: string; }' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'datatype',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'defaultChecked',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'defaultValue',
            'parent': {
                'fileName': 'react-components/src/components/TextInput/index.tsx',
                'name': 'TextInputpropsType'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'dir',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'disabled',
            'parent': {
                'fileName': 'react-components/src/commons/interfaces.ts',
                'name': 'InputPropsTypes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'draggable',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'form',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formAction',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formEncType',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formMethod',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formNoValidate',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formTarget',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'height',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'hidden',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'id',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'inlist',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'any' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'inputClassName',
            'parent': {
                'fileName': 'react-components/src/commons/interfaces.ts',
                'name': 'InputPropsTypes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'inputMode',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'is',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemID',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemProp',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemRef',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemScope',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemType',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'lang',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'list',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'max',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'maxLength',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'min',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'minLength',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'multiple',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'name',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAbort',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAbortCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationIteration',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationIterationCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAuxClick',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAuxClickCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onBeforeInput',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onBeforeInputCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onBlur',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FocusEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onBlurCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FocusEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCanPlay',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCanPlayCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCanPlayThrough',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCanPlayThroughCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onChange',
            'parent': {
                'fileName': 'react-components/src/components/TextInput/index.tsx',
                'name': 'TextInputpropsType'
            },
            'required': false,
            'type': { 'name': 'InputChangeFnType' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onChangeCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onClick',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onClickCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionUpdate',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionUpdateCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onContextMenu',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onContextMenuCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCopy',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCopyCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCut',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCutCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDoubleClick',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDoubleClickCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDrag',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragEnter',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragEnterCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragExit',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragExitCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragLeave',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragLeaveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragOver',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragOverCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDrop',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDropCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDurationChange',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDurationChangeCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEmptied',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEmptiedCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEncrypted',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEncryptedCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEnded',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEndedCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onError',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onErrorCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onFocus',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FocusEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onFocusCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FocusEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onGotPointerCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onGotPointerCaptureCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onInput',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onInputCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onInvalid',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onInvalidCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyDown',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyDownCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyPress',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyPressCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyUp',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyUpCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoad',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadedData',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadedDataCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadedMetadata',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadedMetadataCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLostPointerCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLostPointerCaptureCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseDown',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseDownCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseEnter',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseLeave',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseMove',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseMoveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseOut',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseOutCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseOver',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseOverCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseUp',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseUpCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPaste',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPasteCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPause',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPauseCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPlay',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPlayCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPlaying',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPlayingCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerCancel',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerCancelCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerDown',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerDownCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerEnter',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerEnterCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerLeave',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerLeaveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerMove',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerMoveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerOut',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerOutCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerOver',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerOverCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerUp',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerUpCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onProgress',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onProgressCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onRateChange',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onRateChangeCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onReset',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onResetCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onScroll',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: UIEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onScrollCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: UIEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSeeked',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSeekedCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSeeking',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSeekingCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSelect',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSelectCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onStalled',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onStalledCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSubmit',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSubmitCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSuspend',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSuspendCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTimeUpdate',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTimeUpdateCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchCancel',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchCancelCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchMove',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchMoveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTransitionEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TransitionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTransitionEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TransitionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onVolumeChange',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onVolumeChangeCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onWaiting',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onWaitingCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onWheel',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: WheelEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onWheelCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: WheelEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'pattern',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'placeholder',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'prefix',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'property',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'radioGroup',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'readOnly',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'required',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'reset',
            'parent': {
                'fileName': 'react-components/src/commons/interfaces.ts',
                'name': 'InputPropsTypes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'resource',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'results',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'role',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'security',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'size',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'slot',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'spellCheck',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'src',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'step',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'style',
            'parent': {
                'fileName': 'react-components/src/commons/interfaces.ts',
                'name': 'InputPropsTypes'
            },
            'required': false,
            'type': { 'name': 'CSSProperties' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'suppressContentEditableWarning',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'suppressHydrationWarning',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'tabIndex',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'title',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'type',
            'parent': {
                'fileName': 'react-components/src/components/TextInput/index.tsx',
                'name': 'TextInputpropsType'
            },
            'required': false,
            'type': { 'name': '"number" | "text" | "email" | "password" | "tel" | "time" | "date" | "datetime-local"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'typeof',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'unselectable',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': '"on" | "off"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'value',
            'parent': {
                'fileName': 'react-components/src/components/TextInput/index.tsx',
                'name': 'TextInputpropsType'
            },
            'required': false,
            'type': { 'name': 'string | number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'vocab',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'width',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | number' },
            'tags': {}
        }
    ],
    'doclets': {},
    'examples': __webpack_require__(557)
}
	

/***/ }),
/* 557 */
/***/ (function(module, exports, __webpack_require__) {


if (false) {}

var requireMap = { 'react': __webpack_require__(0) };
var requireInRuntimeBase = __webpack_require__(25);
var requireInRuntime = requireInRuntimeBase.bind(null, requireMap);
var evalInContextBase = __webpack_require__(26);
var evalInContext = evalInContextBase.bind(null, "var React = require('react');", requireInRuntime);

module.exports = [{
        'type': 'code',
        'content': 'initialState = { emailValid: false }\n\nconst checkEmailValidity = validity => {\n  setState({ emailValid: validity })\n}\n\n<FlexView hAlign="start" vAlign="around" wrap>\n  <TextInput className="bw1 ma2" defaultValue="Dummy Text" />\n\n  <TextInput\n    type="password"\n    className="br-pill b--blue blue bw1 ma2"\n    value="reallycomplexpassword"\n  />\n\n  <FlexView vAlign="center" className="ma2">\n    <TextInput\n      type="email"\n      defaultValue="Type email"\n      checkValidity={checkEmailValidity}\n      className="mr2 tc bt-0 br-0 bl-0"\n    />\n    {state.emailValid && \'\u2713\'}\n  </FlexView>\n\n  <TextInput type="date" className="ma2 bw1" defaultValue={4815162342} />\n\n  <TextInput type="time" className="ma2 bw1" defaultValue={4815162342} />\n\n  <TextInput disabled className="ma2" defaultValue="Disabled" />\n</FlexView>',
        'settings': {},
        'evalInContext': evalInContext
    }]
	

/***/ }),
/* 558 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Toggle", function() { return Toggle; });
/* harmony import */ var core_js_modules_es_object_define_property__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(24);
/* harmony import */ var core_js_modules_es_object_define_property__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_define_property__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__);
function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var disabledStyle='o-30 pointer-events-none';var inactiveStyle='o-50';var defaultInputStyle='br4 bg-black';function Toggle(_ref){var _classNames;var children=_ref.children,_ref$className=_ref.className,className=_ref$className===void 0?'':_ref$className,_ref$inputClassName=_ref.inputClassName,inputClassName=_ref$inputClassName===void 0?'':_ref$inputClassName,_ref$style=_ref.style,style=_ref$style===void 0?{}:_ref$style,_ref$disabled=_ref.disabled,disabled=_ref$disabled===void 0?false:_ref$disabled,_ref$checked=_ref.checked,checked=_ref$checked===void 0?false:_ref$checked,_ref$onChange=_ref.onChange,onChange=_ref$onChange===void 0?function(){}:_ref$onChange,_ref$reset=_ref.reset,reset=_ref$reset===void 0?false:_ref$reset;function handleChange(event){onChange(event.currentTarget.checked);}var classes=classnames__WEBPACK_IMPORTED_MODULE_2___default()(className,'flex flex-row justify-start items-center w-fit pointer',(_classNames={},_defineProperty(_classNames,disabledStyle,disabled),_defineProperty(_classNames,inactiveStyle,!checked&&!reset),_classNames));var inputClasses=classnames__WEBPACK_IMPORTED_MODULE_2___default()(inputClassName,'relative',_defineProperty({},defaultInputStyle,!reset));return react__WEBPACK_IMPORTED_MODULE_1__["createElement"]("label",{style:style,className:classes},react__WEBPACK_IMPORTED_MODULE_1__["createElement"]("div",{className:inputClasses,style:{height:20,width:38}},react__WEBPACK_IMPORTED_MODULE_1__["createElement"]("input",{className:"absolute top-0 left-0 o-0 pointer",type:"checkbox",checked:checked,onChange:handleChange,style:{width:38,height:20}}),react__WEBPACK_IMPORTED_MODULE_1__["createElement"]("div",{className:"absolute center-vertical bg-white br-100 top-0 bottom-0 pointer-events-none",style:{width:16,height:16,transition:'left 0.2s',left:checked?20:2}})),children&&react__WEBPACK_IMPORTED_MODULE_1__["createElement"]("div",{className:"ml2 pointer"},children));}

/***/ }),
/* 559 */
/***/ (function(module, exports, __webpack_require__) {


if (false) {}

module.exports = {
    'description': '',
    'displayName': 'Toggle',
    'methods': [],
    'props': [
        {
            'defaultValue': null,
            'description': '',
            'name': 'about',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'accept',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'accessKey',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'alt',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
            'name': 'aria-activedescendant',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
            'name': 'aria-atomic',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether inputting text could trigger display of one or more predictions of the user\'s intended value for an input and specifies how predictions would be\npresented if they are made.',
            'name': 'aria-autocomplete',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"list" | "none" | "inline" | "both"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
            'name': 'aria-busy',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
            'name': 'aria-checked',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true" | "mixed"' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-pressed'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-selected.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the total number of columns in a table, grid, or treegrid.',
            'name': 'aria-colcount',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-colindex.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines an element\'s column index or position with respect to the total number of columns within a table, grid, or treegrid.',
            'name': 'aria-colindex',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-colcount'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-colspan.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.',
            'name': 'aria-colspan',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-colindex'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-rowspan.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element (or elements) whose contents or presence are controlled by the current element.',
            'name': 'aria-controls',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-owns.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the element that represents the current item within a container or set of related elements.',
            'name': 'aria-current',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "step" | "false" | "true" | "page" | "location" | "date" | "time"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element (or elements) that describes the object.',
            'name': 'aria-describedby',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-labelledby'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element that provides a detailed, extended description for the object.',
            'name': 'aria-details',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-describedby.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.',
            'name': 'aria-disabled',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-hidden'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-readonly.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates what functions can be performed when a dragged object is released on the drop target.',
            'name': 'aria-dropeffect',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"none" | "copy" | "execute" | "link" | "move" | "popup"' },
            'tags': {
                'deprecated': [{
                        'title': 'deprecated',
                        'description': 'in ARIA 1.1'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element that provides an error message for the object.',
            'name': 'aria-errormessage',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-invalid'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-describedby.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
            'name': 'aria-expanded',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Identifies the next element (or elements) in an alternate reading order of content which, at the user\'s discretion,\nallows assistive technology to override the general default of reading in document source order.',
            'name': 'aria-flowto',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',
            'name': 'aria-grabbed',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'deprecated': [{
                        'title': 'deprecated',
                        'description': 'in ARIA 1.1'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
            'name': 'aria-haspopup',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true" | "menu" | "listbox" | "tree" | "grid" | "dialog"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether the element is exposed to an accessibility API.',
            'name': 'aria-hidden',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-disabled.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the entered value does not conform to the format expected by the application.',
            'name': 'aria-invalid',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true" | "grammar" | "spelling"' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-errormessage.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
            'name': 'aria-keyshortcuts',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines a string value that labels the current element.',
            'name': 'aria-label',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-labelledby.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Identifies the element (or elements) that labels the current element.',
            'name': 'aria-labelledby',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-describedby.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the hierarchical level of an element within a structure.',
            'name': 'aria-level',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
            'name': 'aria-live',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"off" | "assertive" | "polite"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether an element is modal when displayed.',
            'name': 'aria-modal',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether a text box accepts multiple lines of input or only a single line.',
            'name': 'aria-multiline',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates that the user may select more than one item from the current selectable descendants.',
            'name': 'aria-multiselectable',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Indicates whether the element\'s orientation is horizontal, vertical, or unknown/ambiguous.',
            'name': 'aria-orientation',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"horizontal" | "vertical"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.',
            'name': 'aria-owns',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-controls.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
            'name': 'aria-placeholder',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines an element\'s number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.',
            'name': 'aria-posinset',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-setsize.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the current "pressed" state of toggle buttons.',
            'name': 'aria-pressed',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true" | "mixed"' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-checked'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-selected.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates that the element is not editable, but is otherwise operable.',
            'name': 'aria-readonly',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-disabled.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.',
            'name': 'aria-relevant',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"additions" | "additions text" | "all" | "removals" | "text"' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-atomic.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates that user input is required on the element before a form may be submitted.',
            'name': 'aria-required',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines a human-readable, author-localized description for the role of an element.',
            'name': 'aria-roledescription',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines the total number of rows in a table, grid, or treegrid.',
            'name': 'aria-rowcount',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-rowindex.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines an element\'s row index or position with respect to the total number of rows within a table, grid, or treegrid.',
            'name': 'aria-rowindex',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-rowcount'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-rowspan.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.',
            'name': 'aria-rowspan',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-rowindex'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-colspan.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates the current "selected" state of various widgets.',
            'name': 'aria-selected',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean | "false" | "true"' },
            'tags': {
                'see': [
                    {
                        'title': 'see',
                        'description': 'aria-checked'
                    },
                    {
                        'title': 'see',
                        'description': 'aria-pressed.'
                    }
                ]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.',
            'name': 'aria-setsize',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-posinset.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Indicates if items in a table or grid are sorted in ascending or descending order.',
            'name': 'aria-sort',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': '"none" | "ascending" | "descending" | "other"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines the maximum allowed value for a range widget.',
            'name': 'aria-valuemax',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines the minimum allowed value for a range widget.',
            'name': 'aria-valuemin',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': 'Defines the current value for a range widget.',
            'name': 'aria-valuenow',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {
                'see': [{
                        'title': 'see',
                        'description': 'aria-valuetext.'
                    }]
            }
        },
        {
            'defaultValue': null,
            'description': 'Defines the human readable text alternative of aria-valuenow for a range widget.',
            'name': 'aria-valuetext',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'AriaAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'autoCapitalize',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'autoComplete',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'autoCorrect',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'autoFocus',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'autoSave',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'capture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'checked',
            'parent': {
                'fileName': 'react-components/src/commons/interfaces.ts',
                'name': 'InputPropsTypes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'className',
            'parent': {
                'fileName': 'react-components/src/commons/interfaces.ts',
                'name': 'InputPropsTypes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'color',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'contentEditable',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'contextMenu',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'crossOrigin',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'dangerouslySetInnerHTML',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '{ __html: string; }' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'datatype',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'defaultChecked',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'defaultValue',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | string[]' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'dir',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'disabled',
            'parent': {
                'fileName': 'react-components/src/commons/interfaces.ts',
                'name': 'InputPropsTypes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'draggable',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'form',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formAction',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formEncType',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formMethod',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formNoValidate',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'formTarget',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'height',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'hidden',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'id',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'inlist',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'any' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'inputClassName',
            'parent': {
                'fileName': 'react-components/src/commons/interfaces.ts',
                'name': 'InputPropsTypes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'inputMode',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'is',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemID',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemProp',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemRef',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemScope',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'itemType',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'lang',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'list',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'max',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'maxLength',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'min',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'minLength',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'multiple',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'name',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAbort',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAbortCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationIteration',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationIterationCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAnimationStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: AnimationEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAuxClick',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onAuxClickCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onBeforeInput',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onBeforeInputCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onBlur',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FocusEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onBlurCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FocusEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCanPlay',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCanPlayCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCanPlayThrough',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCanPlayThroughCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onChange',
            'parent': {
                'fileName': 'react-components/src/components/Toggle/index.tsx',
                'name': 'ToggleProps'
            },
            'required': false,
            'type': { 'name': 'BooleanChangeFnType' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onChangeCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onClick',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onClickCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionUpdate',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCompositionUpdateCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: CompositionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onContextMenu',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onContextMenuCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCopy',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCopyCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCut',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onCutCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDoubleClick',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDoubleClickCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDrag',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragEnter',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragEnterCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragExit',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragExitCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragLeave',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragLeaveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragOver',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragOverCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDragStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDrop',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDropCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: DragEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDurationChange',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onDurationChangeCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEmptied',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEmptiedCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEncrypted',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEncryptedCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEnded',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onEndedCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onError',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onErrorCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onFocus',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FocusEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onFocusCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FocusEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onGotPointerCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onGotPointerCaptureCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onInput',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onInputCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onInvalid',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onInvalidCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyDown',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyDownCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyPress',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyPressCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyUp',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onKeyUpCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: KeyboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoad',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadedData',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadedDataCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadedMetadata',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLoadedMetadataCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLostPointerCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onLostPointerCaptureCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseDown',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseDownCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseEnter',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseLeave',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseMove',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseMoveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseOut',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseOutCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseOver',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseOverCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseUp',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onMouseUpCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: MouseEvent<HTMLInputElement, MouseEvent>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPaste',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPasteCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: ClipboardEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPause',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPauseCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPlay',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPlayCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPlaying',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPlayingCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerCancel',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerCancelCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerDown',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerDownCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerEnter',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerEnterCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerLeave',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerLeaveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerMove',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerMoveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerOut',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerOutCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerOver',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerOverCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerUp',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onPointerUpCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: PointerEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onProgress',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onProgressCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onRateChange',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onRateChangeCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onReset',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onResetCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onScroll',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: UIEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onScrollCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: UIEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSeeked',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSeekedCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSeeking',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSeekingCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSelect',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSelectCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onStalled',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onStalledCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSubmit',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSubmitCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: FormEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSuspend',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onSuspendCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTimeUpdate',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTimeUpdateCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchCancel',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchCancelCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchMove',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchMoveCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchStart',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTouchStartCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TouchEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTransitionEnd',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TransitionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onTransitionEndCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: TransitionEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onVolumeChange',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onVolumeChangeCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onWaiting',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onWaitingCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: SyntheticEvent<HTMLInputElement, Event>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onWheel',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: WheelEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'onWheelCapture',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'DOMAttributes'
            },
            'required': false,
            'type': { 'name': '(event: WheelEvent<HTMLInputElement>) => void' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'pattern',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'placeholder',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'prefix',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'property',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'radioGroup',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'readOnly',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'required',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'reset',
            'parent': {
                'fileName': 'react-components/src/commons/interfaces.ts',
                'name': 'InputPropsTypes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'resource',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'results',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'role',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'security',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'size',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'slot',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'spellCheck',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'src',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'step',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'style',
            'parent': {
                'fileName': 'react-components/src/commons/interfaces.ts',
                'name': 'InputPropsTypes'
            },
            'required': false,
            'type': { 'name': 'CSSProperties' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'suppressContentEditableWarning',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'suppressHydrationWarning',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'boolean' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'tabIndex',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'number' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'title',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'type',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'typeof',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'unselectable',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': '"on" | "off"' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'value',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | number | string[]' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'vocab',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'HTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string' },
            'tags': {}
        },
        {
            'defaultValue': null,
            'description': '',
            'name': 'width',
            'parent': {
                'fileName': 'react-components/node_modules/@types/react/index.d.ts',
                'name': 'InputHTMLAttributes'
            },
            'required': false,
            'type': { 'name': 'string | number' },
            'tags': {}
        }
    ],
    'doclets': {},
    'examples': __webpack_require__(560)
}
	

/***/ }),
/* 560 */
/***/ (function(module, exports, __webpack_require__) {


if (false) {}

var requireMap = { 'react': __webpack_require__(0) };
var requireInRuntimeBase = __webpack_require__(25);
var requireInRuntime = requireInRuntimeBase.bind(null, requireMap);
var evalInContextBase = __webpack_require__(26);
var evalInContext = evalInContextBase.bind(null, "var React = require('react');", requireInRuntime);

module.exports = [{
        'type': 'code',
        'content': 'initialState = {\n  first: false,\n  second: true\n}\n\nconst changeSelected = (item) => (value) => {\n  setState({ [item]: value })\n}\n\n<FlexView column vAlign="around" className="h5">\n  <p>Selected: {JSON.stringify(state)}</p>\n\n  <Toggle onChange={changeSelected(\'first\')} checked={state.first}>Toggle me</Toggle>\n\n  <Toggle onChange={changeSelected(\'second\')} checked={state.second} className="red" inputClassName="bg-red">\n    Colorful Toggle\n  </Toggle>\n\n  <Toggle disabled>\n    Disabled Toggle\n  </Toggle>\n</FlexView>',
        'settings': {},
        'evalInContext': evalInContext
    }]
	

/***/ }),
/* 561 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/function.name-polyfill/Function.name.js
var Function_name = __webpack_require__(259);

// EXTERNAL MODULE: ./node_modules/es6-object-assign/auto.js
var auto = __webpack_require__(260);

// EXTERNAL MODULE: ./node_modules/es6-promise/auto.js
var es6_promise_auto = __webpack_require__(262);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/polyfills.js
// Function.name for IE11


// Object.assign() for IE11


// Promise to support webpack 2 require.ensure() in IE11

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/styles/setupjss.js + 1 modules
var setupjss = __webpack_require__(58);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/styles/styles.js


var styles = {
	// Global styles
	body: {
		isolate: false,
		margin: 0,
		padding: 0,
		minWidth: 0,
		maxWidth: '100%',
		border: 0
	}
};

// Attach styles to body
var body = setupjss["a" /* default */].createStyleSheet(styles).attach().classes.body;

document.body.classList.add(body);
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/styles/index.js


// EXTERNAL MODULE: ./node_modules/react-dom/index.js
var react_dom = __webpack_require__(59);
var react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(0);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(1);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Styled/index.js + 3 modules
var Styled = __webpack_require__(2);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Editor/EditorLoaderRenderer.js




var EditorLoaderRenderer_styles = function styles(_ref) {
	var fontFamily = _ref.fontFamily,
	    color = _ref.color,
	    space = _ref.space,
	    fontSize = _ref.fontSize;
	return {
		root: {
			padding: [[space[1], space[2], space[1], space[1]]],
			fontFamily: fontFamily.base,
			fontSize: fontSize.small,
			color: color.light,
			backgroundColor: color.codeBackground
		}
	};
};

function EditorLoaderRenderer(_ref2) {
	var classes = _ref2.classes;

	return react_default.a.createElement(
		'div',
		{ className: classes.root },
		'Loading\u2026'
	);
}

EditorLoaderRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired
};

/* harmony default export */ var Editor_EditorLoaderRenderer = (Object(Styled["a" /* default */])(EditorLoaderRenderer_styles)(EditorLoaderRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Editor/EditorLoader.js
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }




var EditorLoader_EditorLoader = function (_Component) {
	_inherits(EditorLoader, _Component);

	function EditorLoader() {
		var _ref;

		var _temp, _this, _ret;

		_classCallCheck(this, EditorLoader);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = EditorLoader.__proto__ || Object.getPrototypeOf(EditorLoader)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
			editor: null
		}, _temp), _possibleConstructorReturn(_this, _ret);
	}

	_createClass(EditorLoader, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			var _this2 = this;

			__webpack_require__.e(/* import() */ 1).then(__webpack_require__.bind(null, 572)).then(function (module) {
				_this2.setState({ editor: module.default });
			});
		}
	}, {
		key: 'render',
		value: function render() {
			var Editor = this.state.editor;
			if (Editor) {
				return react_default.a.createElement(Editor, this.props);
			}

			return react_default.a.createElement(Editor_EditorLoaderRenderer, null);
		}
	}]);

	return EditorLoader;
}(react["Component"]);

/* harmony default export */ var Editor_EditorLoader = (EditorLoader_EditorLoader);
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Editor/index.js

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Props/PropsRenderer.js
var PropsRenderer = __webpack_require__(164);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Props/index.js

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Markdown/index.js + 23 modules
var Markdown = __webpack_require__(4);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Argument/index.js + 1 modules
var Argument = __webpack_require__(45);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Arguments/index.js + 1 modules
var Arguments = __webpack_require__(97);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Name/index.js + 1 modules
var Name = __webpack_require__(36);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/JsDoc/index.js + 1 modules
var JsDoc = __webpack_require__(46);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Table/index.js + 1 modules
var Table = __webpack_require__(98);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Methods/MethodsRenderer.js
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };










var getRowKey = function getRowKey(row) {
	return row.name;
};

var columns = [{
	caption: 'Method name',
	// eslint-disable-next-line react/prop-types
	render: function render(_ref) {
		var name = _ref.name,
		    _ref$tags = _ref.tags,
		    tags = _ref$tags === undefined ? {} : _ref$tags;
		return react_default.a.createElement(
			Name["a" /* default */],
			{ deprecated: !!tags.deprecated },
			name + '()'
		);
	}
}, {
	caption: 'Parameters',
	// eslint-disable-next-line react/prop-types
	render: function render(_ref2) {
		var _ref2$params = _ref2.params,
		    params = _ref2$params === undefined ? [] : _ref2$params;
		return react_default.a.createElement(Arguments["a" /* default */], { args: params });
	}
}, {
	caption: 'Description',
	// eslint-disable-next-line react/prop-types
	render: function render(_ref3) {
		var description = _ref3.description,
		    returns = _ref3.returns,
		    _ref3$tags = _ref3.tags,
		    tags = _ref3$tags === undefined ? {} : _ref3$tags;
		return react_default.a.createElement(
			'div',
			null,
			description && react_default.a.createElement(Markdown["a" /* default */], { text: description }),
			returns && react_default.a.createElement(Argument["a" /* default */], _extends({ block: true, returns: true }, returns)),
			react_default.a.createElement(JsDoc["a" /* default */], tags)
		);
	}
}];

function MethodsRenderer(_ref4) {
	var methods = _ref4.methods;

	return react_default.a.createElement(Table["a" /* default */], { columns: columns, rows: methods, getRowKey: getRowKey });
}

MethodsRenderer.propTypes = {
	methods: prop_types_default.a.arrayOf(prop_types_default.a.shape({
		name: prop_types_default.a.string.isRequired,
		description: prop_types_default.a.string,
		returns: prop_types_default.a.object,
		params: prop_types_default.a.array,
		tags: prop_types_default.a.object
	})).isRequired
};
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Methods/index.js

// EXTERNAL MODULE: ./node_modules/react-styleguidist/node_modules/lodash/isEmpty.js
var isEmpty = __webpack_require__(47);
var isEmpty_default = /*#__PURE__*/__webpack_require__.n(isEmpty);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Usage/Usage.js






function Usage(_ref) {
	var _ref$props = _ref.props,
	    props = _ref$props.props,
	    methods = _ref$props.methods;

	var propsNode = !isEmpty_default()(props) && react_default.a.createElement(PropsRenderer["a" /* default */], { props: props });
	var methodsNode = !isEmpty_default()(methods) && react_default.a.createElement(MethodsRenderer, { methods: methods });

	if (!propsNode && !methodsNode) {
		return null;
	}

	return react_default.a.createElement(
		'div',
		null,
		propsNode,
		methodsNode
	);
}

Usage.propTypes = {
	props: prop_types_default.a.shape({
		props: prop_types_default.a.array,
		methods: prop_types_default.a.array
	}).isRequired
};
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Usage/index.js

// EXTERNAL MODULE: ./node_modules/react-icons/lib/md/fullscreen.js
var fullscreen = __webpack_require__(238);
var fullscreen_default = /*#__PURE__*/__webpack_require__.n(fullscreen);

// EXTERNAL MODULE: ./node_modules/react-icons/lib/md/fullscreen-exit.js
var fullscreen_exit = __webpack_require__(239);
var fullscreen_exit_default = /*#__PURE__*/__webpack_require__.n(fullscreen_exit);

// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(3);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/ToolbarButton/ToolbarButtonRenderer.js
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






var ToolbarButtonRenderer_styles = function styles(_ref) {
	var space = _ref.space,
	    color = _ref.color;
	return {
		button: {
			padding: 2, // Increase clickable area a bit
			color: color.light,
			background: 'transparent',
			transition: 'color 750ms ease-out',
			cursor: 'pointer',
			'&:hover, &:focus': {
				isolate: false,
				color: color.linkHover,
				transition: 'color 150ms ease-in'
			},
			'&:focus': {
				isolate: false,
				outline: [[1, 'dotted', color.linkHover]]
			},
			'& + &': {
				isolate: false,
				marginLeft: space[1]
			},
			// Style react-icons icon passed as children
			'& svg': {
				width: space[3],
				height: space[3],
				color: 'currentColor',
				cursor: 'inherit'
			}
		},
		isSmall: {
			'& svg': {
				width: 14,
				height: 14
			}
		}
	};
};

function ToolbarButtonRenderer(_ref2) {
	var classes = _ref2.classes,
	    className = _ref2.className,
	    onClick = _ref2.onClick,
	    href = _ref2.href,
	    title = _ref2.title,
	    small = _ref2.small,
	    children = _ref2.children;

	var classNames = classnames_default()(classes.button, className, _defineProperty({}, classes.isSmall, small));

	if (href !== undefined) {
		return react_default.a.createElement(
			'a',
			{ href: href, title: title, className: classNames, 'aria-label': title },
			children
		);
	}

	return react_default.a.createElement(
		'button',
		{ type: 'button', onClick: onClick, title: title, className: classNames, 'aria-label': title },
		children
	);
}

ToolbarButtonRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	className: prop_types_default.a.string,
	href: prop_types_default.a.string,
	onClick: prop_types_default.a.func,
	title: prop_types_default.a.string,
	small: prop_types_default.a.bool,
	children: prop_types_default.a.node
};

/* harmony default export */ var ToolbarButton_ToolbarButtonRenderer = (Object(Styled["a" /* default */])(ToolbarButtonRenderer_styles)(ToolbarButtonRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/ToolbarButton/index.js

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/utils/getUrl.js
function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/**
 * Get component / section URL.
 *
 * @param {string} $.name Name
 * @param {string} $.slug Slug
 * @param {number} $.example Example index
 * @param {boolean} $.anchor Anchor?
 * @param {boolean} $.isolated Isolated mode?
 * @param {boolean} $.nochrome No chrome? (Can be combined with anchor or isolated)
 * @param {boolean} $.absolute Absolute URL? (Can be combined with other flags)
 * @param {object} [location] Location object (will use current page location by default)
 * @return {string}
 */
function getUrl() {
	var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	    name = _ref.name,
	    slug = _ref.slug,
	    example = _ref.example,
	    anchor = _ref.anchor,
	    isolated = _ref.isolated,
	    nochrome = _ref.nochrome,
	    absolute = _ref.absolute,
	    hashPath = _ref.hashPath,
	    id = _ref.id,
	    takeHash = _ref.takeHash;

	var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location,
	    origin = _ref2.origin,
	    pathname = _ref2.pathname,
	    hash = _ref2.hash;

	var url = pathname;

	if (takeHash) {
		if (hash.indexOf('?') > -1) {
			url += hash.substring(0, hash.indexOf('?'));
		} else {
			url += hash;
		}
	}

	if (nochrome) {
		url += '?nochrome';
	}

	if (anchor) {
		url += '#' + slug;
	} else if (isolated || nochrome) {
		url += '#!/' + name;
	}

	if (hashPath) {
		if (!id) {
			hashPath = [].concat(_toConsumableArray(hashPath), [name]);
		}
		url += '#/' + hashPath.join('/');
	}

	if (id) {
		url += '?id=' + slug;
	}

	if (example !== undefined) {
		url += '/' + example;
	}

	if (absolute) {
		return origin + url;
	}

	return url;
}
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/slots/IsolateButton.js







var IsolateButton_IsolateButton = function IsolateButton(_ref) {
	var name = _ref.name,
	    example = _ref.example,
	    isolated = _ref.isolated;
	return isolated ? react_default.a.createElement(
		ToolbarButton_ToolbarButtonRenderer,
		{ href: getUrl({ anchor: true, slug: '/' }), title: 'Show all components' },
		react_default.a.createElement(fullscreen_exit_default.a, null)
	) : react_default.a.createElement(
		ToolbarButton_ToolbarButtonRenderer,
		{ href: getUrl({ name: name, example: example, isolated: true }), title: 'Open isolated' },
		react_default.a.createElement(fullscreen_default.a, null)
	);
};

IsolateButton_IsolateButton.propTypes = {
	name: prop_types_default.a.string.isRequired,
	example: prop_types_default.a.number,
	isolated: prop_types_default.a.bool
};

/* harmony default export */ var slots_IsolateButton = (IsolateButton_IsolateButton);
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/TabButton/TabButtonRenderer.js
function TabButtonRenderer_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






var TabButtonRenderer_styles = function styles(_ref) {
	var space = _ref.space,
	    color = _ref.color,
	    fontFamily = _ref.fontFamily,
	    fontSize = _ref.fontSize,
	    buttonTextTransform = _ref.buttonTextTransform;
	return {
		button: {
			padding: [[space[1], 0]],
			fontFamily: fontFamily.base,
			fontSize: fontSize.base,
			color: color.light,
			background: 'transparent',
			textTransform: buttonTextTransform,
			transition: 'color 750ms ease-out',
			border: 'none',
			cursor: 'pointer',
			'&:hover, &:focus': {
				isolate: false,
				outline: 0,
				color: color.linkHover,
				transition: 'color 150ms ease-in'
			},
			'&:focus:not($isActive)': {
				isolate: false,
				outline: [[1, 'dotted', color.linkHover]]
			},
			'& + &': {
				isolate: false,
				marginLeft: space[1]
			}
		},
		isActive: {
			borderBottom: [[2, color.linkHover, 'solid']]
		}
	};
};

function TabButtonRenderer(_ref2) {
	var classes = _ref2.classes,
	    name = _ref2.name,
	    className = _ref2.className,
	    onClick = _ref2.onClick,
	    active = _ref2.active,
	    children = _ref2.children;

	var classNames = classnames_default()(classes.button, className, TabButtonRenderer_defineProperty({}, classes.isActive, active));

	return react_default.a.createElement(
		'button',
		{ type: 'button', name: name, className: classNames, onClick: onClick },
		children
	);
}

TabButtonRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	name: prop_types_default.a.string,
	className: prop_types_default.a.string,
	onClick: prop_types_default.a.func,
	active: prop_types_default.a.bool,
	children: prop_types_default.a.node
};

/* harmony default export */ var TabButton_TabButtonRenderer = (Object(Styled["a" /* default */])(TabButtonRenderer_styles)(TabButtonRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/TabButton/index.js

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/slots/CodeTabButton.js




var CodeTabButton_CodeTabButton = function CodeTabButton(props) {
	return react_default.a.createElement(
		TabButton_TabButtonRenderer,
		props,
		'View Code'
	);
};

CodeTabButton_CodeTabButton.propTypes = {
	onClick: prop_types_default.a.func.isRequired,
	name: prop_types_default.a.string.isRequired,
	active: prop_types_default.a.bool
};

/* harmony default export */ var slots_CodeTabButton = (CodeTabButton_CodeTabButton);
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/slots/UsageTabButton.js





var UsageTabButton_UsageTabButton = function UsageTabButton(props) {
	var component = props.props;
	var showButton = !isEmpty_default()(component.props) || !isEmpty_default()(component.methods);
	return showButton ? react_default.a.createElement(
		TabButton_TabButtonRenderer,
		props,
		'Props & methods'
	) : null;
};

UsageTabButton_UsageTabButton.propTypes = {
	onClick: prop_types_default.a.func.isRequired,
	name: prop_types_default.a.string.isRequired,
	props: prop_types_default.a.shape({
		props: prop_types_default.a.array,
		methods: prop_types_default.a.array
	}).isRequired,
	active: prop_types_default.a.bool
};

/* harmony default export */ var slots_UsageTabButton = (UsageTabButton_UsageTabButton);
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/slots/index.js






var EXAMPLE_TAB_CODE_EDITOR = 'rsg-code-editor';
var DOCS_TAB_USAGE = 'rsg-usage';

/* harmony default export */ var rsg_components_slots = (function () {
	var toolbar = [slots_IsolateButton];

	return {
		sectionToolbar: toolbar,
		componentToolbar: toolbar,
		exampleToolbar: toolbar,
		exampleTabButtons: [{
			id: EXAMPLE_TAB_CODE_EDITOR,
			render: slots_CodeTabButton
		}],
		exampleTabs: [{
			id: EXAMPLE_TAB_CODE_EDITOR,
			render: Editor_EditorLoader
		}],
		docsTabButtons: [{
			id: DOCS_TAB_USAGE,
			render: slots_UsageTabButton
		}],
		docsTabs: [{
			id: DOCS_TAB_USAGE,
			render: Usage
		}]
	};
});
// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Link/index.js + 1 modules
var Link = __webpack_require__(96);

// EXTERNAL MODULE: ./node_modules/react-styleguidist/node_modules/lodash/escapeRegExp.js
var escapeRegExp = __webpack_require__(240);
var escapeRegExp_default = /*#__PURE__*/__webpack_require__.n(escapeRegExp);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/utils/handleHash.js


// We’re using this file to handle the hash to develop the routes, there are two types of hash '#/' and '#!/'
// However, it is a temporal solution because is necessary using a library third-party that it is his focus
// You can find more information here:
// https://github.com/styleguidist/react-styleguidist/pull/993
var defaultPrependHash = '#/';
var separator = '/';
var hashValRegexp = /(.*)\?/;

function trimHash(hash, prependHash) {
  if (!hash) {
    return '';
  }
  var regexp = new RegExp('^' + escapeRegExp_default()(prependHash || defaultPrependHash), 'g');
  return hash.replace(regexp, '');
}

var trimParams = function trimParams(hash) {
  var result = hashValRegexp.exec(hash);
  return result && result[1] || hash;
};

/**
 * If hash has a certain element
 *
 * @param {string} hash
 * @param {string} search
 * @return {boolean}
 */
var hasInHash = function hasInHash(hash, search) {
  return hash !== '' && hash.indexOf(search) > -1;
};

/**
 * Get hash value without '#', prependHash and parameters
 *
 * @param {string} hash
 * @param {string} prependHash
 * @return {string}
 */
var getHash = function getHash(hash, prependHash) {
  return decodeURIComponent(trimParams(trimHash(hash, prependHash)));
};

/**
 * Get hash value split into an Array.
 *
 * @param {string} hash
 * @param {string} prependHash
 * @return {Array.<string>}
 */
var getHashAsArray = function getHashAsArray(hash, prependHash) {
  return getHash(hash, prependHash).split(separator);
};

/**
 * Get a parameter by name in hash
 *
 * @param {string} hash
 * @param {string} name
 * @return {string}
 */
var getParameterByName = function getParameterByName(hash, name) {
  name = name.replace(/[[\]]/g, '\\$&');
  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');
  var results = regex.exec(hash);
  if (!results) {
    return null;
  }
  if (!results[2]) {
    return '';
  }
  return decodeURIComponent(results[2].replace(/\+/g, ' '));
};
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/ComponentsList/ComponentsListRenderer.js
function ComponentsListRenderer_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }








var ComponentsListRenderer_styles = function styles(_ref) {
	var color = _ref.color,
	    fontFamily = _ref.fontFamily,
	    fontSize = _ref.fontSize,
	    space = _ref.space,
	    mq = _ref.mq;
	return {
		list: {
			margin: 0,
			paddingLeft: space[2]
		},
		item: {
			color: color.base,
			display: 'block',
			margin: [[space[1], 0, space[1], 0]],
			fontFamily: fontFamily.base,
			fontSize: fontSize.base,
			listStyle: 'none',
			overflow: 'hidden',
			textOverflow: 'ellipsis'
		},
		isChild: ComponentsListRenderer_defineProperty({}, mq.small, {
			display: 'inline-block',
			margin: [[0, space[1], 0, 0]]
		}),
		heading: {
			color: color.base,
			marginTop: space[1],
			fontFamily: fontFamily.base,
			fontWeight: 'bold'
		},
		isSelected: {
			fontWeight: 'bold'
		}
	};
};

function ComponentsListRenderer(_ref2) {
	var classes = _ref2.classes,
	    items = _ref2.items;

	items = items.filter(function (item) {
		return item.visibleName;
	});

	if (!items.length) {
		return null;
	}

	var windowHash = window.location.pathname + getHash(window.location.hash);
	return react_default.a.createElement(
		'ul',
		{ className: classes.list },
		items.map(function (_ref3) {
			var heading = _ref3.heading,
			    visibleName = _ref3.visibleName,
			    href = _ref3.href,
			    content = _ref3.content,
			    external = _ref3.external;

			var isItemSelected = hasInHash(windowHash, href);
			return react_default.a.createElement(
				'li',
				{
					className: classnames_default()(classes.item, (!content || !content.props.items.length) && classes.isChild, isItemSelected && classes.isSelected),
					key: href
				},
				react_default.a.createElement(
					Link["a" /* default */],
					{
						className: classnames_default()(heading && classes.heading),
						href: href,
						target: external ? '_blank' : undefined
					},
					visibleName
				),
				content
			);
		})
	);
}

ComponentsListRenderer.propTypes = {
	items: prop_types_default.a.array.isRequired,
	classes: prop_types_default.a.object.isRequired
};

/* harmony default export */ var ComponentsList_ComponentsListRenderer = (Object(Styled["a" /* default */])(ComponentsListRenderer_styles)(ComponentsListRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/ComponentsList/ComponentsList.js
var ComponentsList_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };






function ComponentsList(_ref) {
	var classes = _ref.classes,
	    items = _ref.items,
	    _ref$useRouterLinks = _ref.useRouterLinks,
	    useRouterLinks = _ref$useRouterLinks === undefined ? false : _ref$useRouterLinks,
	    useHashId = _ref.useHashId,
	    hashPath = _ref.hashPath;

	var mappedItems = items.map(function (item) {
		return ComponentsList_extends({}, item, {
			href: item.href ? item.href : getUrl({
				name: item.name,
				slug: item.slug,
				anchor: !useRouterLinks,
				hashPath: useRouterLinks ? hashPath : false,
				id: useRouterLinks ? useHashId : false
			})
		});
	});
	return react_default.a.createElement(ComponentsList_ComponentsListRenderer, { classes: classes, items: mappedItems });
}

ComponentsList.propTypes = {
	items: prop_types_default.a.array.isRequired,
	classes: prop_types_default.a.object,
	hashPath: prop_types_default.a.array,
	useRouterLinks: prop_types_default.a.bool,
	useHashId: prop_types_default.a.bool
};

/* harmony default export */ var ComponentsList_ComponentsList = (ComponentsList);
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/ComponentsList/index.js

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/TableOfContents/TableOfContentsRenderer.js




var TableOfContentsRenderer_styles = function styles(_ref) {
	var space = _ref.space,
	    color = _ref.color,
	    fontFamily = _ref.fontFamily,
	    fontSize = _ref.fontSize,
	    borderRadius = _ref.borderRadius;
	return {
		root: {
			fontFamily: fontFamily.base
		},
		search: {
			padding: space[2]
		},
		input: {
			display: 'block',
			width: '100%',
			padding: space[1],
			color: color.base,
			backgroundColor: color.baseBackground,
			fontFamily: fontFamily.base,
			fontSize: fontSize.base,
			border: [[1, color.border, 'solid']],
			borderRadius: borderRadius,
			transition: 'border-color ease-in-out .15s',
			'&:focus': {
				isolate: false,
				borderColor: color.link,
				outline: 0
			},
			'&::placeholder': {
				isolate: false,
				fontFamily: fontFamily.base,
				fontSize: fontSize.base,
				color: color.light
			}
		}
	};
};

function TableOfContentsRenderer(_ref2) {
	var classes = _ref2.classes,
	    children = _ref2.children,
	    searchTerm = _ref2.searchTerm,
	    onSearchTermChange = _ref2.onSearchTermChange;

	return react_default.a.createElement(
		'div',
		null,
		react_default.a.createElement(
			'div',
			{ className: classes.root },
			react_default.a.createElement(
				'div',
				{ className: classes.search },
				react_default.a.createElement('input', {
					value: searchTerm,
					className: classes.input,
					placeholder: 'Filter by name',
					'aria-label': 'Filter by name',
					onChange: function onChange(event) {
						return onSearchTermChange(event.target.value);
					}
				})
			),
			react_default.a.createElement(
				'nav',
				null,
				children
			)
		)
	);
}

TableOfContentsRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	children: prop_types_default.a.node,
	searchTerm: prop_types_default.a.string.isRequired,
	onSearchTermChange: prop_types_default.a.func.isRequired
};

/* harmony default export */ var TableOfContents_TableOfContentsRenderer = (Object(Styled["a" /* default */])(TableOfContentsRenderer_styles)(TableOfContentsRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/utils/getFilterRegExp.js
/**
 * RegExp to fuzzy filter components list by component name.
 *
 * @param {string} query
 * @return {RegExp}
 */
function getFilterRegExp(query) {
  query = query.replace(/[^a-z0-9]/gi, '').split('').join('.*');
  return new RegExp(query, 'i');
}
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/utils/filterComponentsByName.js


/**
 * Fuzzy filters components list by component name.
 *
 * @param {array} components
 * @param {string} query
 * @return {array}
 */
function filterComponentsByName(components, query) {
  var regExp = getFilterRegExp(query);
  return components.filter(function (_ref) {
    var name = _ref.name;
    return regExp.test(name);
  });
}
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/utils/filterSectionsByName.js
var filterSectionsByName_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };




/**
 * Fuzzy filters sections by section or component name.
 *
 * @param {Array} sections
 * @param {string} query
 * @return {Array}
 */
function filterSectionsByName(sections, query) {
	var regExp = getFilterRegExp(query);

	return sections.map(function (section) {
		return filterSectionsByName_extends({}, section, {
			sections: section.sections ? filterSectionsByName(section.sections, query) : [],
			components: section.components ? filterComponentsByName(section.components, query) : []
		});
	}).filter(function (section) {
		return section.components.length > 0 || section.sections.length > 0 || regExp.test(section.name);
	});
}
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/TableOfContents/TableOfContents.js
var TableOfContents_createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function TableOfContents_toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function TableOfContents_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function TableOfContents_possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function TableOfContents_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var TableOfContents_TableOfContents = function (_Component) {
	TableOfContents_inherits(TableOfContents, _Component);

	function TableOfContents() {
		var _ref;

		var _temp, _this, _ret;

		TableOfContents_classCallCheck(this, TableOfContents);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = TableOfContents_possibleConstructorReturn(this, (_ref = TableOfContents.__proto__ || Object.getPrototypeOf(TableOfContents)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
			searchTerm: ''
		}, _temp), TableOfContents_possibleConstructorReturn(_this, _ret);
	}

	TableOfContents_createClass(TableOfContents, [{
		key: 'renderLevel',
		value: function renderLevel(sections) {
			var useRouterLinks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

			var _this2 = this;

			var hashPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
			var useHashId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

			var items = sections.map(function (section) {
				var children = [].concat(TableOfContents_toConsumableArray(section.sections || []), TableOfContents_toConsumableArray(section.components || []));
				var sectionDepth = section.sectionDepth || 0;
				var childHashPath = sectionDepth === 0 && useHashId ? hashPath : [].concat(TableOfContents_toConsumableArray(hashPath), [section.name]);
				return Object.assign({}, section, {
					heading: !!section.name && children.length > 0,
					content: children.length > 0 && _this2.renderLevel(children, useRouterLinks, childHashPath, sectionDepth === 0)
				});
			});
			return react_default.a.createElement(ComponentsList_ComponentsList, {
				items: items,
				hashPath: hashPath,
				useHashId: useHashId,
				useRouterLinks: useRouterLinks
			});
		}
	}, {
		key: 'renderSections',
		value: function renderSections() {
			var searchTerm = this.state.searchTerm;
			var _props = this.props,
			    sections = _props.sections,
			    useRouterLinks = _props.useRouterLinks;
			// If there is only one section, we treat it as a root section
			// In this case the name of the section won't be rendered and it won't get left padding

			var firstLevel = sections.length === 1 ? sections[0].components : sections;
			var filtered = filterSectionsByName(firstLevel, searchTerm);

			return this.renderLevel(filtered, useRouterLinks);
		}
	}, {
		key: 'render',
		value: function render() {
			var _this3 = this;

			var searchTerm = this.state.searchTerm;

			return react_default.a.createElement(
				TableOfContents_TableOfContentsRenderer,
				{
					searchTerm: searchTerm,
					onSearchTermChange: function onSearchTermChange(searchTerm) {
						return _this3.setState({ searchTerm: searchTerm });
					}
				},
				this.renderSections()
			);
		}
	}]);

	return TableOfContents;
}(react["Component"]);

TableOfContents_TableOfContents.propTypes = {
	sections: prop_types_default.a.array.isRequired,
	useRouterLinks: prop_types_default.a.bool
};
/* harmony default export */ var rsg_components_TableOfContents_TableOfContents = (TableOfContents_TableOfContents);
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/TableOfContents/index.js

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Logo/LogoRenderer.js




var LogoRenderer_styles = function styles(_ref) {
	var color = _ref.color,
	    fontFamily = _ref.fontFamily,
	    fontSize = _ref.fontSize;
	return {
		logo: {
			color: color.base,
			margin: 0,
			fontFamily: fontFamily.base,
			fontSize: fontSize.h4,
			fontWeight: 'normal'
		}
	};
};

function LogoRenderer(_ref2) {
	var classes = _ref2.classes,
	    children = _ref2.children;

	return react_default.a.createElement(
		'h1',
		{ className: classes.logo },
		children
	);
}

LogoRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	children: prop_types_default.a.node
};

/* harmony default export */ var Logo_LogoRenderer = (Object(Styled["a" /* default */])(LogoRenderer_styles)(LogoRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Logo/index.js

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Ribbon/RibbonRenderer.js




var RibbonRenderer_styles = function styles(_ref) {
	var color = _ref.color,
	    space = _ref.space,
	    fontSize = _ref.fontSize,
	    fontFamily = _ref.fontFamily;
	return {
		root: {
			position: 'fixed',
			top: 0,
			right: 0,
			width: 149,
			height: 149,
			zIndex: 999
		},
		link: {
			fontFamily: fontFamily.base,
			position: 'relative',
			right: -37,
			top: -22,
			display: 'block',
			width: 190,
			padding: [[space[0], space[2]]],
			textAlign: 'center',
			color: color.ribbonText,
			fontSize: fontSize.base,
			background: color.ribbonBackground,
			textDecoration: 'none',
			textShadow: [[0, '-1px', 0, 'rgba(0,0,0,.15)']],
			transformOrigin: [[0, 0]],
			transform: 'rotate(45deg)',
			cursor: 'pointer'
		}
	};
};

function RibbonRenderer(_ref2) {
	var classes = _ref2.classes,
	    url = _ref2.url,
	    text = _ref2.text;

	return react_default.a.createElement(
		'div',
		{ className: classes.root },
		react_default.a.createElement(
			'a',
			{ href: url, className: classes.link },
			text
		)
	);
}

RibbonRenderer.defaultProps = {
	text: 'Fork me on GitHub'
};

RibbonRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	url: prop_types_default.a.string.isRequired,
	text: prop_types_default.a.string
};

/* harmony default export */ var Ribbon_RibbonRenderer = (Object(Styled["a" /* default */])(RibbonRenderer_styles)(RibbonRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Ribbon/Ribbon.js




function Ribbon(props, _ref) {
	var config = _ref.config;
	var ribbon = config.ribbon;

	return ribbon ? react_default.a.createElement(Ribbon_RibbonRenderer, ribbon) : null;
}

Ribbon.contextTypes = {
	config: prop_types_default.a.object
};
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Ribbon/index.js

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Version/VersionRenderer.js




var VersionRenderer_styles = function styles(_ref) {
	var color = _ref.color,
	    fontFamily = _ref.fontFamily,
	    fontSize = _ref.fontSize;
	return {
		version: {
			color: color.light,
			margin: [[5, 0, 0, 0]],
			fontFamily: fontFamily.base,
			fontSize: fontSize.base,
			fontWeight: 'normal'
		}
	};
};

function VersionRenderer(_ref2) {
	var classes = _ref2.classes,
	    children = _ref2.children;

	return react_default.a.createElement(
		'p',
		{ 'aria-label': 'version', className: classes.version },
		children
	);
}

VersionRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	children: prop_types_default.a.node
};

/* harmony default export */ var Version_VersionRenderer = (Object(Styled["a" /* default */])(VersionRenderer_styles)(VersionRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Version/index.js

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/StyleGuide/StyleGuideRenderer.js
function StyleGuideRenderer_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }










var StyleGuideRenderer_styles = function styles(_ref) {
	var _content;

	var color = _ref.color,
	    fontFamily = _ref.fontFamily,
	    fontSize = _ref.fontSize,
	    sidebarWidth = _ref.sidebarWidth,
	    mq = _ref.mq,
	    space = _ref.space,
	    maxWidth = _ref.maxWidth;
	return {
		root: {
			minHeight: '100vh',
			backgroundColor: color.baseBackground
		},
		hasSidebar: StyleGuideRenderer_defineProperty({
			paddingLeft: sidebarWidth
		}, mq.small, {
			paddingLeft: 0
		}),
		content: (_content = {
			maxWidth: maxWidth,
			padding: [[space[2], space[4]]],
			margin: [[0, 'auto']]
		}, StyleGuideRenderer_defineProperty(_content, mq.small, {
			padding: space[2]
		}), StyleGuideRenderer_defineProperty(_content, 'display', 'block'), _content),
		sidebar: StyleGuideRenderer_defineProperty({
			backgroundColor: color.sidebarBackground,
			border: [[color.border, 'solid']],
			borderWidth: [[0, 1, 0, 0]],
			position: 'fixed',
			top: 0,
			left: 0,
			bottom: 0,
			width: sidebarWidth,
			overflow: 'auto',
			WebkitOverflowScrolling: 'touch'
		}, mq.small, {
			position: 'static',
			width: 'auto',
			borderWidth: [[1, 0, 0, 0]],
			paddingBottom: space[0]
		}),
		logo: {
			padding: space[2],
			borderBottom: [[1, color.border, 'solid']]
		},
		footer: {
			display: 'block',
			color: color.light,
			fontFamily: fontFamily.base,
			fontSize: fontSize.small
		}
	};
};

function StyleGuideRenderer(_ref2) {
	var classes = _ref2.classes,
	    title = _ref2.title,
	    version = _ref2.version,
	    homepageUrl = _ref2.homepageUrl,
	    children = _ref2.children,
	    toc = _ref2.toc,
	    hasSidebar = _ref2.hasSidebar;

	return react_default.a.createElement(
		'div',
		{ className: classnames_default()(classes.root, hasSidebar && classes.hasSidebar) },
		react_default.a.createElement(
			'main',
			{ className: classes.content },
			children,
			react_default.a.createElement(
				'footer',
				{ className: classes.footer },
				react_default.a.createElement(Markdown["a" /* default */], { text: 'Generated with [React Styleguidist](' + homepageUrl + ')' })
			)
		),
		hasSidebar && react_default.a.createElement(
			'div',
			{ className: classes.sidebar },
			react_default.a.createElement(
				'div',
				{ className: classes.logo },
				react_default.a.createElement(
					Logo_LogoRenderer,
					null,
					title
				),
				version && react_default.a.createElement(
					Version_VersionRenderer,
					null,
					version
				)
			),
			toc
		),
		react_default.a.createElement(Ribbon, null)
	);
}

StyleGuideRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	title: prop_types_default.a.string.isRequired,
	version: prop_types_default.a.string,
	homepageUrl: prop_types_default.a.string.isRequired,
	children: prop_types_default.a.node.isRequired,
	toc: prop_types_default.a.node.isRequired,
	hasSidebar: prop_types_default.a.bool
};

/* harmony default export */ var StyleGuide_StyleGuideRenderer = (Object(Styled["a" /* default */])(StyleGuideRenderer_styles)(StyleGuideRenderer));
// CONCATENATED MODULE: ./node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

function componentWillMount() {
  // Call this.constructor.gDSFP to support sub-classes.
  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
  if (state !== null && state !== undefined) {
    this.setState(state);
  }
}

function componentWillReceiveProps(nextProps) {
  // Call this.constructor.gDSFP to support sub-classes.
  // Use the setState() updater to ensure state isn't stale in certain edge cases.
  function updater(prevState) {
    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
    return state !== null && state !== undefined ? state : null;
  }
  // Binding "this" is important for shallow renderer support.
  this.setState(updater.bind(this));
}

function componentWillUpdate(nextProps, nextState) {
  try {
    var prevProps = this.props;
    var prevState = this.state;
    this.props = nextProps;
    this.state = nextState;
    this.__reactInternalSnapshotFlag = true;
    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(
      prevProps,
      prevState
    );
  } finally {
    this.props = prevProps;
    this.state = prevState;
  }
}

// React may warn about cWM/cWRP/cWU methods being deprecated.
// Add a flag to suppress these warnings for this special case.
componentWillMount.__suppressDeprecationWarning = true;
componentWillReceiveProps.__suppressDeprecationWarning = true;
componentWillUpdate.__suppressDeprecationWarning = true;

function polyfill(Component) {
  var prototype = Component.prototype;

  if (!prototype || !prototype.isReactComponent) {
    throw new Error('Can only polyfill class components');
  }

  if (
    typeof Component.getDerivedStateFromProps !== 'function' &&
    typeof prototype.getSnapshotBeforeUpdate !== 'function'
  ) {
    return Component;
  }

  // If new component APIs are defined, "unsafe" lifecycles won't be called.
  // Error if any of these lifecycles are present,
  // Because they would work differently between older and newer (16.3+) versions of React.
  var foundWillMountName = null;
  var foundWillReceivePropsName = null;
  var foundWillUpdateName = null;
  if (typeof prototype.componentWillMount === 'function') {
    foundWillMountName = 'componentWillMount';
  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {
    foundWillMountName = 'UNSAFE_componentWillMount';
  }
  if (typeof prototype.componentWillReceiveProps === 'function') {
    foundWillReceivePropsName = 'componentWillReceiveProps';
  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {
    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
  }
  if (typeof prototype.componentWillUpdate === 'function') {
    foundWillUpdateName = 'componentWillUpdate';
  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {
    foundWillUpdateName = 'UNSAFE_componentWillUpdate';
  }
  if (
    foundWillMountName !== null ||
    foundWillReceivePropsName !== null ||
    foundWillUpdateName !== null
  ) {
    var componentName = Component.displayName || Component.name;
    var newApiName =
      typeof Component.getDerivedStateFromProps === 'function'
        ? 'getDerivedStateFromProps()'
        : 'getSnapshotBeforeUpdate()';

    throw Error(
      'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' +
        componentName +
        ' uses ' +
        newApiName +
        ' but also contains the following legacy lifecycles:' +
        (foundWillMountName !== null ? '\n  ' + foundWillMountName : '') +
        (foundWillReceivePropsName !== null
          ? '\n  ' + foundWillReceivePropsName
          : '') +
        (foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '') +
        '\n\nThe above lifecycles should be removed. Learn more about this warning here:\n' +
        'https://fb.me/react-async-component-lifecycle-hooks'
    );
  }

  // React <= 16.2 does not support static getDerivedStateFromProps.
  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.
  // Newer versions of React will ignore these lifecycles if gDSFP exists.
  if (typeof Component.getDerivedStateFromProps === 'function') {
    prototype.componentWillMount = componentWillMount;
    prototype.componentWillReceiveProps = componentWillReceiveProps;
  }

  // React <= 16.2 does not support getSnapshotBeforeUpdate.
  // As a workaround, use cWU to invoke the new lifecycle.
  // Newer versions of React will ignore that lifecycle if gSBU exists.
  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {
    if (typeof prototype.componentDidUpdate !== 'function') {
      throw new Error(
        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'
      );
    }

    prototype.componentWillUpdate = componentWillUpdate;

    var componentDidUpdate = prototype.componentDidUpdate;

    prototype.componentDidUpdate = function componentDidUpdatePolyfill(
      prevProps,
      prevState,
      maybeSnapshot
    ) {
      // 16.3+ will not execute our will-update method;
      // It will pass a snapshot value to did-update though.
      // Older versions will require our polyfilled will-update value.
      // We need to handle both cases, but can't just check for the presence of "maybeSnapshot",
      // Because for <= 15.x versions this might be a "prevContext" object.
      // We also can't just check "__reactInternalSnapshot",
      // Because get-snapshot might return a falsy value.
      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.
      var snapshot = this.__reactInternalSnapshotFlag
        ? this.__reactInternalSnapshot
        : maybeSnapshot;

      componentDidUpdate.call(this, prevProps, prevState, snapshot);
    };
  }

  return Component;
}



// EXTERNAL MODULE: ./node_modules/react-styleguidist/node_modules/lodash/debounce.js
var debounce = __webpack_require__(178);
var debounce_default = /*#__PURE__*/__webpack_require__.n(debounce);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/PlaygroundError/PlaygroundErrorRenderer.js




var PlaygroundErrorRenderer_styles = function styles(_ref) {
	var fontFamily = _ref.fontFamily,
	    fontSize = _ref.fontSize,
	    color = _ref.color;
	return {
		root: {
			margin: 0,
			lineHeight: 1.2,
			fontSize: fontSize.small,
			fontFamily: fontFamily.monospace,
			color: color.error,
			whiteSpace: 'pre-wrap'
		}
	};
};

function PlaygroundErrorRenderer(_ref2) {
	var classes = _ref2.classes,
	    message = _ref2.message;

	return react_default.a.createElement(
		'pre',
		{ className: classes.root },
		message
	);
}

PlaygroundErrorRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	message: prop_types_default.a.string.isRequired
};

/* harmony default export */ var PlaygroundError_PlaygroundErrorRenderer = (Object(Styled["a" /* default */])(PlaygroundErrorRenderer_styles)(PlaygroundErrorRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/PlaygroundError/index.js

// EXTERNAL MODULE: ./node_modules/buble/dist/buble-browser.es.js
var buble_browser_es = __webpack_require__(241);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Wrapper/Wrapper.js
var Wrapper_createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function Wrapper_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function Wrapper_possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function Wrapper_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }




var Wrapper = function (_Component) {
	Wrapper_inherits(Wrapper, _Component);

	function Wrapper() {
		Wrapper_classCallCheck(this, Wrapper);

		return Wrapper_possibleConstructorReturn(this, (Wrapper.__proto__ || Object.getPrototypeOf(Wrapper)).apply(this, arguments));
	}

	Wrapper_createClass(Wrapper, [{
		key: 'componentDidCatch',
		value: function componentDidCatch(error) {
			this.props.onError(error);
		}
	}, {
		key: 'render',
		value: function render() {
			return this.props.children;
		}
	}]);

	return Wrapper;
}(react["Component"]);

Wrapper.propTypes = {
	children: prop_types_default.a.node.isRequired,
	onError: prop_types_default.a.func.isRequired
};
/* harmony default export */ var Wrapper_Wrapper = (Wrapper);
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Wrapper/index.js

// CONCATENATED MODULE: ./node_modules/react-styleguidist/node_modules/acorn/dist/acorn.es.js
// Reserved word lists for various dialects of the language

var reservedWords = {
  3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",
  5: "class enum extends super const export import",
  6: "enum",
  strict: "implements interface let package private protected public static yield",
  strictBind: "eval arguments"
};

// And the keywords

var ecma5AndLessKeywords = "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this";

var keywords = {
  5: ecma5AndLessKeywords,
  6: ecma5AndLessKeywords + " const class extends export import super"
};

var keywordRelationalOperator = /^in(stanceof)?$/;

// ## Character categories

// Big ugly regular expressions that match characters in the
// whitespace, identifier, and identifier-start categories. These
// are only applied when a character is found to actually have a
// code point above 128.
// Generated by `bin/generate-identifier-regex.js`.

var nonASCIIidentifierStartChars = "\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u037f\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u052f\u0531-\u0556\u0559\u0560-\u0588\u05d0-\u05ea\u05ef-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u0860-\u086a\u08a0-\u08b4\u08b6-\u08bd\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u09fc\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0af9\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c39\u0c3d\u0c58-\u0c5a\u0c60\u0c61\u0c80\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d54-\u0d56\u0d5f-\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f5\u13f8-\u13fd\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f8\u1700-\u170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1878\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191e\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4b\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1c80-\u1c88\u1c90-\u1cba\u1cbd-\u1cbf\u1ce9-\u1cec\u1cee-\u1cf1\u1cf5\u1cf6\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2118-\u211d\u2124\u2126\u2128\u212a-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309b-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312f\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fef\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua69d\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua7b9\ua7f7-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua8fd\ua8fe\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\ua9e0-\ua9e4\ua9e6-\ua9ef\ua9fa-\ua9fe\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa7e-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uab30-\uab5a\uab5c-\uab65\uab70-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc";
var nonASCIIidentifierChars = "\u200c\u200d\xb7\u0300-\u036f\u0387\u0483-\u0487\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610-\u061a\u064b-\u0669\u0670\u06d6-\u06dc\u06df-\u06e4\u06e7\u06e8\u06ea-\u06ed\u06f0-\u06f9\u0711\u0730-\u074a\u07a6-\u07b0\u07c0-\u07c9\u07eb-\u07f3\u07fd\u0816-\u0819\u081b-\u0823\u0825-\u0827\u0829-\u082d\u0859-\u085b\u08d3-\u08e1\u08e3-\u0903\u093a-\u093c\u093e-\u094f\u0951-\u0957\u0962\u0963\u0966-\u096f\u0981-\u0983\u09bc\u09be-\u09c4\u09c7\u09c8\u09cb-\u09cd\u09d7\u09e2\u09e3\u09e6-\u09ef\u09fe\u0a01-\u0a03\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a66-\u0a71\u0a75\u0a81-\u0a83\u0abc\u0abe-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ae2\u0ae3\u0ae6-\u0aef\u0afa-\u0aff\u0b01-\u0b03\u0b3c\u0b3e-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b56\u0b57\u0b62\u0b63\u0b66-\u0b6f\u0b82\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd7\u0be6-\u0bef\u0c00-\u0c04\u0c3e-\u0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c62\u0c63\u0c66-\u0c6f\u0c81-\u0c83\u0cbc\u0cbe-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0ce2\u0ce3\u0ce6-\u0cef\u0d00-\u0d03\u0d3b\u0d3c\u0d3e-\u0d44\u0d46-\u0d48\u0d4a-\u0d4d\u0d57\u0d62\u0d63\u0d66-\u0d6f\u0d82\u0d83\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0de6-\u0def\u0df2\u0df3\u0e31\u0e34-\u0e3a\u0e47-\u0e4e\u0e50-\u0e59\u0eb1\u0eb4-\u0eb9\u0ebb\u0ebc\u0ec8-\u0ecd\u0ed0-\u0ed9\u0f18\u0f19\u0f20-\u0f29\u0f35\u0f37\u0f39\u0f3e\u0f3f\u0f71-\u0f84\u0f86\u0f87\u0f8d-\u0f97\u0f99-\u0fbc\u0fc6\u102b-\u103e\u1040-\u1049\u1056-\u1059\u105e-\u1060\u1062-\u1064\u1067-\u106d\u1071-\u1074\u1082-\u108d\u108f-\u109d\u135d-\u135f\u1369-\u1371\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17b4-\u17d3\u17dd\u17e0-\u17e9\u180b-\u180d\u1810-\u1819\u18a9\u1920-\u192b\u1930-\u193b\u1946-\u194f\u19d0-\u19da\u1a17-\u1a1b\u1a55-\u1a5e\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1ab0-\u1abd\u1b00-\u1b04\u1b34-\u1b44\u1b50-\u1b59\u1b6b-\u1b73\u1b80-\u1b82\u1ba1-\u1bad\u1bb0-\u1bb9\u1be6-\u1bf3\u1c24-\u1c37\u1c40-\u1c49\u1c50-\u1c59\u1cd0-\u1cd2\u1cd4-\u1ce8\u1ced\u1cf2-\u1cf4\u1cf7-\u1cf9\u1dc0-\u1df9\u1dfb-\u1dff\u203f\u2040\u2054\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2cef-\u2cf1\u2d7f\u2de0-\u2dff\u302a-\u302f\u3099\u309a\ua620-\ua629\ua66f\ua674-\ua67d\ua69e\ua69f\ua6f0\ua6f1\ua802\ua806\ua80b\ua823-\ua827\ua880\ua881\ua8b4-\ua8c5\ua8d0-\ua8d9\ua8e0-\ua8f1\ua8ff-\ua909\ua926-\ua92d\ua947-\ua953\ua980-\ua983\ua9b3-\ua9c0\ua9d0-\ua9d9\ua9e5\ua9f0-\ua9f9\uaa29-\uaa36\uaa43\uaa4c\uaa4d\uaa50-\uaa59\uaa7b-\uaa7d\uaab0\uaab2-\uaab4\uaab7\uaab8\uaabe\uaabf\uaac1\uaaeb-\uaaef\uaaf5\uaaf6\uabe3-\uabea\uabec\uabed\uabf0-\uabf9\ufb1e\ufe00-\ufe0f\ufe20-\ufe2f\ufe33\ufe34\ufe4d-\ufe4f\uff10-\uff19\uff3f";

var nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");
var nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");

nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;

// These are a run-length and offset encoded representation of the
// >0xffff code points that are a valid part of identifiers. The
// offset starts at 0x10000, and each pair of numbers represents an
// offset to the next range, and then a size of the range. They were
// generated by bin/generate-identifier-regex.js

// eslint-disable-next-line comma-spacing
var astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,190,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,54,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,86,26,230,43,117,63,32,0,257,0,11,39,8,0,22,0,12,39,3,3,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,68,12,0,67,12,65,1,31,6129,15,754,9486,286,82,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,60,67,1213,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541];

// eslint-disable-next-line comma-spacing
var astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,280,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1016,45,17,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,2214,6,110,6,6,9,792487,239];

// This has a complexity linear to the value of the code. The
// assumption is that looking up astral identifier characters is
// rare.
function isInAstralSet(code, set) {
  var pos = 0x10000;
  for (var i = 0; i < set.length; i += 2) {
    pos += set[i];
    if (pos > code) { return false }
    pos += set[i + 1];
    if (pos >= code) { return true }
  }
}

// Test whether a given character code starts an identifier.

function isIdentifierStart(code, astral) {
  if (code < 65) { return code === 36 }
  if (code < 91) { return true }
  if (code < 97) { return code === 95 }
  if (code < 123) { return true }
  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }
  if (astral === false) { return false }
  return isInAstralSet(code, astralIdentifierStartCodes)
}

// Test whether a given character is part of an identifier.

function isIdentifierChar(code, astral) {
  if (code < 48) { return code === 36 }
  if (code < 58) { return true }
  if (code < 65) { return false }
  if (code < 91) { return true }
  if (code < 97) { return code === 95 }
  if (code < 123) { return true }
  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }
  if (astral === false) { return false }
  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)
}

// ## Token types

// The assignment of fine-grained, information-carrying type objects
// allows the tokenizer to store the information it has about a
// token in a way that is very cheap for the parser to look up.

// All token type variables start with an underscore, to make them
// easy to recognize.

// The `beforeExpr` property is used to disambiguate between regular
// expressions and divisions. It is set on all token types that can
// be followed by an expression (thus, a slash after them would be a
// regular expression).
//
// The `startsExpr` property is used to check if the token ends a
// `yield` expression. It is set on all token types that either can
// directly start an expression (like a quotation mark) or can
// continue an expression (like the body of a string).
//
// `isLoop` marks a keyword as starting a loop, which is important
// to know when parsing a label, in order to allow or disallow
// continue jumps to that label.

var TokenType = function TokenType(label, conf) {
  if ( conf === void 0 ) conf = {};

  this.label = label;
  this.keyword = conf.keyword;
  this.beforeExpr = !!conf.beforeExpr;
  this.startsExpr = !!conf.startsExpr;
  this.isLoop = !!conf.isLoop;
  this.isAssign = !!conf.isAssign;
  this.prefix = !!conf.prefix;
  this.postfix = !!conf.postfix;
  this.binop = conf.binop || null;
  this.updateContext = null;
};

function binop(name, prec) {
  return new TokenType(name, {beforeExpr: true, binop: prec})
}
var beforeExpr = {beforeExpr: true};
var startsExpr = {startsExpr: true};

// Map keyword names to token types.

var keywords$1 = {};

// Succinct definitions of keyword token types
function kw(name, options) {
  if ( options === void 0 ) options = {};

  options.keyword = name;
  return keywords$1[name] = new TokenType(name, options)
}

var types = {
  num: new TokenType("num", startsExpr),
  regexp: new TokenType("regexp", startsExpr),
  string: new TokenType("string", startsExpr),
  name: new TokenType("name", startsExpr),
  eof: new TokenType("eof"),

  // Punctuation token types.
  bracketL: new TokenType("[", {beforeExpr: true, startsExpr: true}),
  bracketR: new TokenType("]"),
  braceL: new TokenType("{", {beforeExpr: true, startsExpr: true}),
  braceR: new TokenType("}"),
  parenL: new TokenType("(", {beforeExpr: true, startsExpr: true}),
  parenR: new TokenType(")"),
  comma: new TokenType(",", beforeExpr),
  semi: new TokenType(";", beforeExpr),
  colon: new TokenType(":", beforeExpr),
  dot: new TokenType("."),
  question: new TokenType("?", beforeExpr),
  arrow: new TokenType("=>", beforeExpr),
  template: new TokenType("template"),
  invalidTemplate: new TokenType("invalidTemplate"),
  ellipsis: new TokenType("...", beforeExpr),
  backQuote: new TokenType("`", startsExpr),
  dollarBraceL: new TokenType("${", {beforeExpr: true, startsExpr: true}),

  // Operators. These carry several kinds of properties to help the
  // parser use them properly (the presence of these properties is
  // what categorizes them as operators).
  //
  // `binop`, when present, specifies that this operator is a binary
  // operator, and will refer to its precedence.
  //
  // `prefix` and `postfix` mark the operator as a prefix or postfix
  // unary operator.
  //
  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as
  // binary operators with a very low precedence, that should result
  // in AssignmentExpression nodes.

  eq: new TokenType("=", {beforeExpr: true, isAssign: true}),
  assign: new TokenType("_=", {beforeExpr: true, isAssign: true}),
  incDec: new TokenType("++/--", {prefix: true, postfix: true, startsExpr: true}),
  prefix: new TokenType("!/~", {beforeExpr: true, prefix: true, startsExpr: true}),
  logicalOR: binop("||", 1),
  logicalAND: binop("&&", 2),
  bitwiseOR: binop("|", 3),
  bitwiseXOR: binop("^", 4),
  bitwiseAND: binop("&", 5),
  equality: binop("==/!=/===/!==", 6),
  relational: binop("</>/<=/>=", 7),
  bitShift: binop("<</>>/>>>", 8),
  plusMin: new TokenType("+/-", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),
  modulo: binop("%", 10),
  star: binop("*", 10),
  slash: binop("/", 10),
  starstar: new TokenType("**", {beforeExpr: true}),

  // Keyword token types.
  _break: kw("break"),
  _case: kw("case", beforeExpr),
  _catch: kw("catch"),
  _continue: kw("continue"),
  _debugger: kw("debugger"),
  _default: kw("default", beforeExpr),
  _do: kw("do", {isLoop: true, beforeExpr: true}),
  _else: kw("else", beforeExpr),
  _finally: kw("finally"),
  _for: kw("for", {isLoop: true}),
  _function: kw("function", startsExpr),
  _if: kw("if"),
  _return: kw("return", beforeExpr),
  _switch: kw("switch"),
  _throw: kw("throw", beforeExpr),
  _try: kw("try"),
  _var: kw("var"),
  _const: kw("const"),
  _while: kw("while", {isLoop: true}),
  _with: kw("with"),
  _new: kw("new", {beforeExpr: true, startsExpr: true}),
  _this: kw("this", startsExpr),
  _super: kw("super", startsExpr),
  _class: kw("class", startsExpr),
  _extends: kw("extends", beforeExpr),
  _export: kw("export"),
  _import: kw("import"),
  _null: kw("null", startsExpr),
  _true: kw("true", startsExpr),
  _false: kw("false", startsExpr),
  _in: kw("in", {beforeExpr: true, binop: 7}),
  _instanceof: kw("instanceof", {beforeExpr: true, binop: 7}),
  _typeof: kw("typeof", {beforeExpr: true, prefix: true, startsExpr: true}),
  _void: kw("void", {beforeExpr: true, prefix: true, startsExpr: true}),
  _delete: kw("delete", {beforeExpr: true, prefix: true, startsExpr: true})
};

// Matches a whole line break (where CRLF is considered a single
// line break). Used to count lines.

var lineBreak = /\r\n?|\n|\u2028|\u2029/;
var lineBreakG = new RegExp(lineBreak.source, "g");

function isNewLine(code, ecma2019String) {
  return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))
}

var nonASCIIwhitespace = /[\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff]/;

var skipWhiteSpace = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;

var ref = Object.prototype;
var acorn_es_hasOwnProperty = ref.hasOwnProperty;
var acorn_es_toString = ref.toString;

// Checks if an object has a property.

function has(obj, propName) {
  return acorn_es_hasOwnProperty.call(obj, propName)
}

var isArray = Array.isArray || (function (obj) { return (
  acorn_es_toString.call(obj) === "[object Array]"
); });

// These are used when `options.locations` is on, for the
// `startLoc` and `endLoc` properties.

var Position = function Position(line, col) {
  this.line = line;
  this.column = col;
};

Position.prototype.offset = function offset (n) {
  return new Position(this.line, this.column + n)
};

var SourceLocation = function SourceLocation(p, start, end) {
  this.start = start;
  this.end = end;
  if (p.sourceFile !== null) { this.source = p.sourceFile; }
};

// The `getLineInfo` function is mostly useful when the
// `locations` option is off (for performance reasons) and you
// want to find the line/column position for a given character
// offset. `input` should be the code string that the offset refers
// into.

function getLineInfo(input, offset) {
  for (var line = 1, cur = 0;;) {
    lineBreakG.lastIndex = cur;
    var match = lineBreakG.exec(input);
    if (match && match.index < offset) {
      ++line;
      cur = match.index + match[0].length;
    } else {
      return new Position(line, offset - cur)
    }
  }
}

// A second optional argument can be given to further configure
// the parser process. These options are recognized:

var defaultOptions = {
  // `ecmaVersion` indicates the ECMAScript version to parse. Must
  // be either 3, 5, 6 (2015), 7 (2016), or 8 (2017). This influences support
  // for strict mode, the set of reserved words, and support for
  // new syntax features. The default is 7.
  ecmaVersion: 7,
  // `sourceType` indicates the mode the code should be parsed in.
  // Can be either `"script"` or `"module"`. This influences global
  // strict mode and parsing of `import` and `export` declarations.
  sourceType: "script",
  // `onInsertedSemicolon` can be a callback that will be called
  // when a semicolon is automatically inserted. It will be passed
  // th position of the comma as an offset, and if `locations` is
  // enabled, it is given the location as a `{line, column}` object
  // as second argument.
  onInsertedSemicolon: null,
  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for
  // trailing commas.
  onTrailingComma: null,
  // By default, reserved words are only enforced if ecmaVersion >= 5.
  // Set `allowReserved` to a boolean value to explicitly turn this on
  // an off. When this option has the value "never", reserved words
  // and keywords can also not be used as property names.
  allowReserved: null,
  // When enabled, a return at the top level is not considered an
  // error.
  allowReturnOutsideFunction: false,
  // When enabled, import/export statements are not constrained to
  // appearing at the top of the program.
  allowImportExportEverywhere: false,
  // When enabled, await identifiers are allowed to appear at the top-level scope,
  // but they are still not allowed in non-async functions.
  allowAwaitOutsideFunction: false,
  // When enabled, hashbang directive in the beginning of file
  // is allowed and treated as a line comment.
  allowHashBang: false,
  // When `locations` is on, `loc` properties holding objects with
  // `start` and `end` properties in `{line, column}` form (with
  // line being 1-based and column 0-based) will be attached to the
  // nodes.
  locations: false,
  // A function can be passed as `onToken` option, which will
  // cause Acorn to call that function with object in the same
  // format as tokens returned from `tokenizer().getToken()`. Note
  // that you are not allowed to call the parser from the
  // callback—that will corrupt its internal state.
  onToken: null,
  // A function can be passed as `onComment` option, which will
  // cause Acorn to call that function with `(block, text, start,
  // end)` parameters whenever a comment is skipped. `block` is a
  // boolean indicating whether this is a block (`/* */`) comment,
  // `text` is the content of the comment, and `start` and `end` are
  // character offsets that denote the start and end of the comment.
  // When the `locations` option is on, two more parameters are
  // passed, the full `{line, column}` locations of the start and
  // end of the comments. Note that you are not allowed to call the
  // parser from the callback—that will corrupt its internal state.
  onComment: null,
  // Nodes have their start and end characters offsets recorded in
  // `start` and `end` properties (directly on the node, rather than
  // the `loc` object, which holds line/column data. To also add a
  // [semi-standardized][range] `range` property holding a `[start,
  // end]` array with the same numbers, set the `ranges` option to
  // `true`.
  //
  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678
  ranges: false,
  // It is possible to parse multiple files into a single AST by
  // passing the tree produced by parsing the first file as
  // `program` option in subsequent parses. This will add the
  // toplevel forms of the parsed file to the `Program` (top) node
  // of an existing parse tree.
  program: null,
  // When `locations` is on, you can pass this to record the source
  // file in every node's `loc` object.
  sourceFile: null,
  // This value, if given, is stored in every node, whether
  // `locations` is on or off.
  directSourceFile: null,
  // When enabled, parenthesized expressions are represented by
  // (non-standard) ParenthesizedExpression nodes
  preserveParens: false,
  plugins: {}
};

// Interpret and default an options object

function getOptions(opts) {
  var options = {};

  for (var opt in defaultOptions)
    { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }

  if (options.ecmaVersion >= 2015)
    { options.ecmaVersion -= 2009; }

  if (options.allowReserved == null)
    { options.allowReserved = options.ecmaVersion < 5; }

  if (isArray(options.onToken)) {
    var tokens = options.onToken;
    options.onToken = function (token) { return tokens.push(token); };
  }
  if (isArray(options.onComment))
    { options.onComment = pushComment(options, options.onComment); }

  return options
}

function pushComment(options, array) {
  return function(block, text, start, end, startLoc, endLoc) {
    var comment = {
      type: block ? "Block" : "Line",
      value: text,
      start: start,
      end: end
    };
    if (options.locations)
      { comment.loc = new SourceLocation(this, startLoc, endLoc); }
    if (options.ranges)
      { comment.range = [start, end]; }
    array.push(comment);
  }
}

// Registered plugins
var plugins = {};

function keywordRegexp(words) {
  return new RegExp("^(?:" + words.replace(/ /g, "|") + ")$")
}

var Parser = function Parser(options, input, startPos) {
  this.options = options = getOptions(options);
  this.sourceFile = options.sourceFile;
  this.keywords = keywordRegexp(keywords[options.ecmaVersion >= 6 ? 6 : 5]);
  var reserved = "";
  if (!options.allowReserved) {
    for (var v = options.ecmaVersion;; v--)
      { if (reserved = reservedWords[v]) { break } }
    if (options.sourceType === "module") { reserved += " await"; }
  }
  this.reservedWords = keywordRegexp(reserved);
  var reservedStrict = (reserved ? reserved + " " : "") + reservedWords.strict;
  this.reservedWordsStrict = keywordRegexp(reservedStrict);
  this.reservedWordsStrictBind = keywordRegexp(reservedStrict + " " + reservedWords.strictBind);
  this.input = String(input);

  // Used to signal to callers of `readWord1` whether the word
  // contained any escape sequences. This is needed because words with
  // escape sequences must not be interpreted as keywords.
  this.containsEsc = false;

  // Load plugins
  this.loadPlugins(options.plugins);

  // Set up token state

  // The current position of the tokenizer in the input.
  if (startPos) {
    this.pos = startPos;
    this.lineStart = this.input.lastIndexOf("\n", startPos - 1) + 1;
    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;
  } else {
    this.pos = this.lineStart = 0;
    this.curLine = 1;
  }

  // Properties of the current token:
  // Its type
  this.type = types.eof;
  // For tokens that include more information than their type, the value
  this.value = null;
  // Its start and end offset
  this.start = this.end = this.pos;
  // And, if locations are used, the {line, column} object
  // corresponding to those offsets
  this.startLoc = this.endLoc = this.curPosition();

  // Position information for the previous token
  this.lastTokEndLoc = this.lastTokStartLoc = null;
  this.lastTokStart = this.lastTokEnd = this.pos;

  // The context stack is used to superficially track syntactic
  // context to predict whether a regular expression is allowed in a
  // given position.
  this.context = this.initialContext();
  this.exprAllowed = true;

  // Figure out if it's a module code.
  this.inModule = options.sourceType === "module";
  this.strict = this.inModule || this.strictDirective(this.pos);

  // Used to signify the start of a potential arrow function
  this.potentialArrowAt = -1;

  // Flags to track whether we are in a function, a generator, an async function.
  this.inFunction = this.inGenerator = this.inAsync = false;
  // Positions to delayed-check that yield/await does not exist in default parameters.
  this.yieldPos = this.awaitPos = 0;
  // Labels in scope.
  this.labels = [];

  // If enabled, skip leading hashbang line.
  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === "#!")
    { this.skipLineComment(2); }

  // Scope tracking for duplicate variable names (see scope.js)
  this.scopeStack = [];
  this.enterFunctionScope();

  // For RegExp validation
  this.regexpState = null;
};

// DEPRECATED Kept for backwards compatibility until 3.0 in case a plugin uses them
Parser.prototype.isKeyword = function isKeyword (word) { return this.keywords.test(word) };
Parser.prototype.isReservedWord = function isReservedWord (word) { return this.reservedWords.test(word) };

Parser.prototype.extend = function extend (name, f) {
  this[name] = f(this[name]);
};

Parser.prototype.loadPlugins = function loadPlugins (pluginConfigs) {
    var this$1 = this;

  for (var name in pluginConfigs) {
    var plugin = plugins[name];
    if (!plugin) { throw new Error("Plugin '" + name + "' not found") }
    plugin(this$1, pluginConfigs[name]);
  }
};

Parser.prototype.parse = function parse () {
  var node = this.options.program || this.startNode();
  this.nextToken();
  return this.parseTopLevel(node)
};

var pp = Parser.prototype;

// ## Parser utilities

var literal = /^(?:'((?:\\.|[^'])*?)'|"((?:\\.|[^"])*?)"|;)/;
pp.strictDirective = function(start) {
  var this$1 = this;

  for (;;) {
    skipWhiteSpace.lastIndex = start;
    start += skipWhiteSpace.exec(this$1.input)[0].length;
    var match = literal.exec(this$1.input.slice(start));
    if (!match) { return false }
    if ((match[1] || match[2]) === "use strict") { return true }
    start += match[0].length;
  }
};

// Predicate that tests whether the next token is of the given
// type, and if yes, consumes it as a side effect.

pp.eat = function(type) {
  if (this.type === type) {
    this.next();
    return true
  } else {
    return false
  }
};

// Tests whether parsed token is a contextual keyword.

pp.isContextual = function(name) {
  return this.type === types.name && this.value === name && !this.containsEsc
};

// Consumes contextual keyword if possible.

pp.eatContextual = function(name) {
  if (!this.isContextual(name)) { return false }
  this.next();
  return true
};

// Asserts that following token is given contextual keyword.

pp.expectContextual = function(name) {
  if (!this.eatContextual(name)) { this.unexpected(); }
};

// Test whether a semicolon can be inserted at the current position.

pp.canInsertSemicolon = function() {
  return this.type === types.eof ||
    this.type === types.braceR ||
    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))
};

pp.insertSemicolon = function() {
  if (this.canInsertSemicolon()) {
    if (this.options.onInsertedSemicolon)
      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }
    return true
  }
};

// Consume a semicolon, or, failing that, see if we are allowed to
// pretend that there is a semicolon at this position.

pp.semicolon = function() {
  if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }
};

pp.afterTrailingComma = function(tokType, notNext) {
  if (this.type === tokType) {
    if (this.options.onTrailingComma)
      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }
    if (!notNext)
      { this.next(); }
    return true
  }
};

// Expect a token of a given type. If found, consume it, otherwise,
// raise an unexpected token error.

pp.expect = function(type) {
  this.eat(type) || this.unexpected();
};

// Raise an unexpected token error.

pp.unexpected = function(pos) {
  this.raise(pos != null ? pos : this.start, "Unexpected token");
};

function DestructuringErrors() {
  this.shorthandAssign =
  this.trailingComma =
  this.parenthesizedAssign =
  this.parenthesizedBind =
  this.doubleProto =
    -1;
}

pp.checkPatternErrors = function(refDestructuringErrors, isAssign) {
  if (!refDestructuringErrors) { return }
  if (refDestructuringErrors.trailingComma > -1)
    { this.raiseRecoverable(refDestructuringErrors.trailingComma, "Comma is not permitted after the rest element"); }
  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;
  if (parens > -1) { this.raiseRecoverable(parens, "Parenthesized pattern"); }
};

pp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {
  if (!refDestructuringErrors) { return false }
  var shorthandAssign = refDestructuringErrors.shorthandAssign;
  var doubleProto = refDestructuringErrors.doubleProto;
  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }
  if (shorthandAssign >= 0)
    { this.raise(shorthandAssign, "Shorthand property assignments are valid only in destructuring patterns"); }
  if (doubleProto >= 0)
    { this.raiseRecoverable(doubleProto, "Redefinition of __proto__ property"); }
};

pp.checkYieldAwaitInDefaultParams = function() {
  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))
    { this.raise(this.yieldPos, "Yield expression cannot be a default value"); }
  if (this.awaitPos)
    { this.raise(this.awaitPos, "Await expression cannot be a default value"); }
};

pp.isSimpleAssignTarget = function(expr) {
  if (expr.type === "ParenthesizedExpression")
    { return this.isSimpleAssignTarget(expr.expression) }
  return expr.type === "Identifier" || expr.type === "MemberExpression"
};

var pp$1 = Parser.prototype;

// ### Statement parsing

// Parse a program. Initializes the parser, reads any number of
// statements, and wraps them in a Program node.  Optionally takes a
// `program` argument.  If present, the statements will be appended
// to its body instead of creating a new node.

pp$1.parseTopLevel = function(node) {
  var this$1 = this;

  var exports = {};
  if (!node.body) { node.body = []; }
  while (this.type !== types.eof) {
    var stmt = this$1.parseStatement(true, true, exports);
    node.body.push(stmt);
  }
  this.adaptDirectivePrologue(node.body);
  this.next();
  if (this.options.ecmaVersion >= 6) {
    node.sourceType = this.options.sourceType;
  }
  return this.finishNode(node, "Program")
};

var loopLabel = {kind: "loop"};
var switchLabel = {kind: "switch"};

pp$1.isLet = function() {
  if (this.options.ecmaVersion < 6 || !this.isContextual("let")) { return false }
  skipWhiteSpace.lastIndex = this.pos;
  var skip = skipWhiteSpace.exec(this.input);
  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);
  if (nextCh === 91 || nextCh === 123) { return true } // '{' and '['
  if (isIdentifierStart(nextCh, true)) {
    var pos = next + 1;
    while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }
    var ident = this.input.slice(next, pos);
    if (!keywordRelationalOperator.test(ident)) { return true }
  }
  return false
};

// check 'async [no LineTerminator here] function'
// - 'async /*foo*/ function' is OK.
// - 'async /*\n*/ function' is invalid.
pp$1.isAsyncFunction = function() {
  if (this.options.ecmaVersion < 8 || !this.isContextual("async"))
    { return false }

  skipWhiteSpace.lastIndex = this.pos;
  var skip = skipWhiteSpace.exec(this.input);
  var next = this.pos + skip[0].length;
  return !lineBreak.test(this.input.slice(this.pos, next)) &&
    this.input.slice(next, next + 8) === "function" &&
    (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))
};

// Parse a single statement.
//
// If expecting a statement and finding a slash operator, parse a
// regular expression literal. This is to handle cases like
// `if (foo) /blah/.exec(foo)`, where looking at the previous token
// does not help.

pp$1.parseStatement = function(declaration, topLevel, exports) {
  var starttype = this.type, node = this.startNode(), kind;

  if (this.isLet()) {
    starttype = types._var;
    kind = "let";
  }

  // Most types of statements are recognized by the keyword they
  // start with. Many are trivial to parse, some require a bit of
  // complexity.

  switch (starttype) {
  case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)
  case types._debugger: return this.parseDebuggerStatement(node)
  case types._do: return this.parseDoStatement(node)
  case types._for: return this.parseForStatement(node)
  case types._function:
    if (!declaration && this.options.ecmaVersion >= 6) { this.unexpected(); }
    return this.parseFunctionStatement(node, false)
  case types._class:
    if (!declaration) { this.unexpected(); }
    return this.parseClass(node, true)
  case types._if: return this.parseIfStatement(node)
  case types._return: return this.parseReturnStatement(node)
  case types._switch: return this.parseSwitchStatement(node)
  case types._throw: return this.parseThrowStatement(node)
  case types._try: return this.parseTryStatement(node)
  case types._const: case types._var:
    kind = kind || this.value;
    if (!declaration && kind !== "var") { this.unexpected(); }
    return this.parseVarStatement(node, kind)
  case types._while: return this.parseWhileStatement(node)
  case types._with: return this.parseWithStatement(node)
  case types.braceL: return this.parseBlock()
  case types.semi: return this.parseEmptyStatement(node)
  case types._export:
  case types._import:
    if (!this.options.allowImportExportEverywhere) {
      if (!topLevel)
        { this.raise(this.start, "'import' and 'export' may only appear at the top level"); }
      if (!this.inModule)
        { this.raise(this.start, "'import' and 'export' may appear only with 'sourceType: module'"); }
    }
    return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)

    // If the statement does not start with a statement keyword or a
    // brace, it's an ExpressionStatement or LabeledStatement. We
    // simply start parsing an expression, and afterwards, if the
    // next token is a colon and the expression was a simple
    // Identifier node, we switch to interpreting it as a label.
  default:
    if (this.isAsyncFunction()) {
      if (!declaration) { this.unexpected(); }
      this.next();
      return this.parseFunctionStatement(node, true)
    }

    var maybeName = this.value, expr = this.parseExpression();
    if (starttype === types.name && expr.type === "Identifier" && this.eat(types.colon))
      { return this.parseLabeledStatement(node, maybeName, expr) }
    else { return this.parseExpressionStatement(node, expr) }
  }
};

pp$1.parseBreakContinueStatement = function(node, keyword) {
  var this$1 = this;

  var isBreak = keyword === "break";
  this.next();
  if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }
  else if (this.type !== types.name) { this.unexpected(); }
  else {
    node.label = this.parseIdent();
    this.semicolon();
  }

  // Verify that there is an actual destination to break or
  // continue to.
  var i = 0;
  for (; i < this.labels.length; ++i) {
    var lab = this$1.labels[i];
    if (node.label == null || lab.name === node.label.name) {
      if (lab.kind != null && (isBreak || lab.kind === "loop")) { break }
      if (node.label && isBreak) { break }
    }
  }
  if (i === this.labels.length) { this.raise(node.start, "Unsyntactic " + keyword); }
  return this.finishNode(node, isBreak ? "BreakStatement" : "ContinueStatement")
};

pp$1.parseDebuggerStatement = function(node) {
  this.next();
  this.semicolon();
  return this.finishNode(node, "DebuggerStatement")
};

pp$1.parseDoStatement = function(node) {
  this.next();
  this.labels.push(loopLabel);
  node.body = this.parseStatement(false);
  this.labels.pop();
  this.expect(types._while);
  node.test = this.parseParenExpression();
  if (this.options.ecmaVersion >= 6)
    { this.eat(types.semi); }
  else
    { this.semicolon(); }
  return this.finishNode(node, "DoWhileStatement")
};

// Disambiguating between a `for` and a `for`/`in` or `for`/`of`
// loop is non-trivial. Basically, we have to parse the init `var`
// statement or expression, disallowing the `in` operator (see
// the second parameter to `parseExpression`), and then check
// whether the next token is `in` or `of`. When there is no init
// part (semicolon immediately after the opening parenthesis), it
// is a regular `for` loop.

pp$1.parseForStatement = function(node) {
  this.next();
  var awaitAt = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction)) && this.eatContextual("await")) ? this.lastTokStart : -1;
  this.labels.push(loopLabel);
  this.enterLexicalScope();
  this.expect(types.parenL);
  if (this.type === types.semi) {
    if (awaitAt > -1) { this.unexpected(awaitAt); }
    return this.parseFor(node, null)
  }
  var isLet = this.isLet();
  if (this.type === types._var || this.type === types._const || isLet) {
    var init$1 = this.startNode(), kind = isLet ? "let" : this.value;
    this.next();
    this.parseVar(init$1, true, kind);
    this.finishNode(init$1, "VariableDeclaration");
    if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual("of"))) && init$1.declarations.length === 1 &&
        !(kind !== "var" && init$1.declarations[0].init)) {
      if (this.options.ecmaVersion >= 9) {
        if (this.type === types._in) {
          if (awaitAt > -1) { this.unexpected(awaitAt); }
        } else { node.await = awaitAt > -1; }
      }
      return this.parseForIn(node, init$1)
    }
    if (awaitAt > -1) { this.unexpected(awaitAt); }
    return this.parseFor(node, init$1)
  }
  var refDestructuringErrors = new DestructuringErrors;
  var init = this.parseExpression(true, refDestructuringErrors);
  if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual("of"))) {
    if (this.options.ecmaVersion >= 9) {
      if (this.type === types._in) {
        if (awaitAt > -1) { this.unexpected(awaitAt); }
      } else { node.await = awaitAt > -1; }
    }
    this.toAssignable(init, false, refDestructuringErrors);
    this.checkLVal(init);
    return this.parseForIn(node, init)
  } else {
    this.checkExpressionErrors(refDestructuringErrors, true);
  }
  if (awaitAt > -1) { this.unexpected(awaitAt); }
  return this.parseFor(node, init)
};

pp$1.parseFunctionStatement = function(node, isAsync) {
  this.next();
  return this.parseFunction(node, true, false, isAsync)
};

pp$1.parseIfStatement = function(node) {
  this.next();
  node.test = this.parseParenExpression();
  // allow function declarations in branches, but only in non-strict mode
  node.consequent = this.parseStatement(!this.strict && this.type === types._function);
  node.alternate = this.eat(types._else) ? this.parseStatement(!this.strict && this.type === types._function) : null;
  return this.finishNode(node, "IfStatement")
};

pp$1.parseReturnStatement = function(node) {
  if (!this.inFunction && !this.options.allowReturnOutsideFunction)
    { this.raise(this.start, "'return' outside of function"); }
  this.next();

  // In `return` (and `break`/`continue`), the keywords with
  // optional arguments, we eagerly look for a semicolon or the
  // possibility to insert one.

  if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }
  else { node.argument = this.parseExpression(); this.semicolon(); }
  return this.finishNode(node, "ReturnStatement")
};

pp$1.parseSwitchStatement = function(node) {
  var this$1 = this;

  this.next();
  node.discriminant = this.parseParenExpression();
  node.cases = [];
  this.expect(types.braceL);
  this.labels.push(switchLabel);
  this.enterLexicalScope();

  // Statements under must be grouped (by label) in SwitchCase
  // nodes. `cur` is used to keep the node that we are currently
  // adding statements to.

  var cur;
  for (var sawDefault = false; this.type !== types.braceR;) {
    if (this$1.type === types._case || this$1.type === types._default) {
      var isCase = this$1.type === types._case;
      if (cur) { this$1.finishNode(cur, "SwitchCase"); }
      node.cases.push(cur = this$1.startNode());
      cur.consequent = [];
      this$1.next();
      if (isCase) {
        cur.test = this$1.parseExpression();
      } else {
        if (sawDefault) { this$1.raiseRecoverable(this$1.lastTokStart, "Multiple default clauses"); }
        sawDefault = true;
        cur.test = null;
      }
      this$1.expect(types.colon);
    } else {
      if (!cur) { this$1.unexpected(); }
      cur.consequent.push(this$1.parseStatement(true));
    }
  }
  this.exitLexicalScope();
  if (cur) { this.finishNode(cur, "SwitchCase"); }
  this.next(); // Closing brace
  this.labels.pop();
  return this.finishNode(node, "SwitchStatement")
};

pp$1.parseThrowStatement = function(node) {
  this.next();
  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))
    { this.raise(this.lastTokEnd, "Illegal newline after throw"); }
  node.argument = this.parseExpression();
  this.semicolon();
  return this.finishNode(node, "ThrowStatement")
};

// Reused empty array added for node fields that are always empty.

var empty = [];

pp$1.parseTryStatement = function(node) {
  this.next();
  node.block = this.parseBlock();
  node.handler = null;
  if (this.type === types._catch) {
    var clause = this.startNode();
    this.next();
    if (this.eat(types.parenL)) {
      clause.param = this.parseBindingAtom();
      this.enterLexicalScope();
      this.checkLVal(clause.param, "let");
      this.expect(types.parenR);
    } else {
      if (this.options.ecmaVersion < 10) { this.unexpected(); }
      clause.param = null;
      this.enterLexicalScope();
    }
    clause.body = this.parseBlock(false);
    this.exitLexicalScope();
    node.handler = this.finishNode(clause, "CatchClause");
  }
  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;
  if (!node.handler && !node.finalizer)
    { this.raise(node.start, "Missing catch or finally clause"); }
  return this.finishNode(node, "TryStatement")
};

pp$1.parseVarStatement = function(node, kind) {
  this.next();
  this.parseVar(node, false, kind);
  this.semicolon();
  return this.finishNode(node, "VariableDeclaration")
};

pp$1.parseWhileStatement = function(node) {
  this.next();
  node.test = this.parseParenExpression();
  this.labels.push(loopLabel);
  node.body = this.parseStatement(false);
  this.labels.pop();
  return this.finishNode(node, "WhileStatement")
};

pp$1.parseWithStatement = function(node) {
  if (this.strict) { this.raise(this.start, "'with' in strict mode"); }
  this.next();
  node.object = this.parseParenExpression();
  node.body = this.parseStatement(false);
  return this.finishNode(node, "WithStatement")
};

pp$1.parseEmptyStatement = function(node) {
  this.next();
  return this.finishNode(node, "EmptyStatement")
};

pp$1.parseLabeledStatement = function(node, maybeName, expr) {
  var this$1 = this;

  for (var i$1 = 0, list = this$1.labels; i$1 < list.length; i$1 += 1)
    {
    var label = list[i$1];

    if (label.name === maybeName)
      { this$1.raise(expr.start, "Label '" + maybeName + "' is already declared");
  } }
  var kind = this.type.isLoop ? "loop" : this.type === types._switch ? "switch" : null;
  for (var i = this.labels.length - 1; i >= 0; i--) {
    var label$1 = this$1.labels[i];
    if (label$1.statementStart === node.start) {
      // Update information about previous labels on this node
      label$1.statementStart = this$1.start;
      label$1.kind = kind;
    } else { break }
  }
  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});
  node.body = this.parseStatement(true);
  if (node.body.type === "ClassDeclaration" ||
      node.body.type === "VariableDeclaration" && node.body.kind !== "var" ||
      node.body.type === "FunctionDeclaration" && (this.strict || node.body.generator || node.body.async))
    { this.raiseRecoverable(node.body.start, "Invalid labeled declaration"); }
  this.labels.pop();
  node.label = expr;
  return this.finishNode(node, "LabeledStatement")
};

pp$1.parseExpressionStatement = function(node, expr) {
  node.expression = expr;
  this.semicolon();
  return this.finishNode(node, "ExpressionStatement")
};

// Parse a semicolon-enclosed block of statements, handling `"use
// strict"` declarations when `allowStrict` is true (used for
// function bodies).

pp$1.parseBlock = function(createNewLexicalScope) {
  var this$1 = this;
  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;

  var node = this.startNode();
  node.body = [];
  this.expect(types.braceL);
  if (createNewLexicalScope) {
    this.enterLexicalScope();
  }
  while (!this.eat(types.braceR)) {
    var stmt = this$1.parseStatement(true);
    node.body.push(stmt);
  }
  if (createNewLexicalScope) {
    this.exitLexicalScope();
  }
  return this.finishNode(node, "BlockStatement")
};

// Parse a regular `for` loop. The disambiguation code in
// `parseStatement` will already have parsed the init statement or
// expression.

pp$1.parseFor = function(node, init) {
  node.init = init;
  this.expect(types.semi);
  node.test = this.type === types.semi ? null : this.parseExpression();
  this.expect(types.semi);
  node.update = this.type === types.parenR ? null : this.parseExpression();
  this.expect(types.parenR);
  this.exitLexicalScope();
  node.body = this.parseStatement(false);
  this.labels.pop();
  return this.finishNode(node, "ForStatement")
};

// Parse a `for`/`in` and `for`/`of` loop, which are almost
// same from parser's perspective.

pp$1.parseForIn = function(node, init) {
  var type = this.type === types._in ? "ForInStatement" : "ForOfStatement";
  this.next();
  if (type === "ForInStatement") {
    if (init.type === "AssignmentPattern" ||
      (init.type === "VariableDeclaration" && init.declarations[0].init != null &&
       (this.strict || init.declarations[0].id.type !== "Identifier")))
      { this.raise(init.start, "Invalid assignment in for-in loop head"); }
  }
  node.left = init;
  node.right = type === "ForInStatement" ? this.parseExpression() : this.parseMaybeAssign();
  this.expect(types.parenR);
  this.exitLexicalScope();
  node.body = this.parseStatement(false);
  this.labels.pop();
  return this.finishNode(node, type)
};

// Parse a list of variable declarations.

pp$1.parseVar = function(node, isFor, kind) {
  var this$1 = this;

  node.declarations = [];
  node.kind = kind;
  for (;;) {
    var decl = this$1.startNode();
    this$1.parseVarId(decl, kind);
    if (this$1.eat(types.eq)) {
      decl.init = this$1.parseMaybeAssign(isFor);
    } else if (kind === "const" && !(this$1.type === types._in || (this$1.options.ecmaVersion >= 6 && this$1.isContextual("of")))) {
      this$1.unexpected();
    } else if (decl.id.type !== "Identifier" && !(isFor && (this$1.type === types._in || this$1.isContextual("of")))) {
      this$1.raise(this$1.lastTokEnd, "Complex binding patterns require an initialization value");
    } else {
      decl.init = null;
    }
    node.declarations.push(this$1.finishNode(decl, "VariableDeclarator"));
    if (!this$1.eat(types.comma)) { break }
  }
  return node
};

pp$1.parseVarId = function(decl, kind) {
  decl.id = this.parseBindingAtom(kind);
  this.checkLVal(decl.id, kind, false);
};

// Parse a function declaration or literal (depending on the
// `isStatement` parameter).

pp$1.parseFunction = function(node, isStatement, allowExpressionBody, isAsync) {
  this.initFunction(node);
  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync)
    { node.generator = this.eat(types.star); }
  if (this.options.ecmaVersion >= 8)
    { node.async = !!isAsync; }

  if (isStatement) {
    node.id = isStatement === "nullableID" && this.type !== types.name ? null : this.parseIdent();
    if (node.id) {
      this.checkLVal(node.id, this.inModule && !this.inFunction ? "let" : "var");
    }
  }

  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,
      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;
  this.inGenerator = node.generator;
  this.inAsync = node.async;
  this.yieldPos = 0;
  this.awaitPos = 0;
  this.inFunction = true;
  this.enterFunctionScope();

  if (!isStatement)
    { node.id = this.type === types.name ? this.parseIdent() : null; }

  this.parseFunctionParams(node);
  this.parseFunctionBody(node, allowExpressionBody);

  this.inGenerator = oldInGen;
  this.inAsync = oldInAsync;
  this.yieldPos = oldYieldPos;
  this.awaitPos = oldAwaitPos;
  this.inFunction = oldInFunc;
  return this.finishNode(node, isStatement ? "FunctionDeclaration" : "FunctionExpression")
};

pp$1.parseFunctionParams = function(node) {
  this.expect(types.parenL);
  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);
  this.checkYieldAwaitInDefaultParams();
};

// Parse a class declaration or literal (depending on the
// `isStatement` parameter).

pp$1.parseClass = function(node, isStatement) {
  var this$1 = this;

  this.next();

  this.parseClassId(node, isStatement);
  this.parseClassSuper(node);
  var classBody = this.startNode();
  var hadConstructor = false;
  classBody.body = [];
  this.expect(types.braceL);
  while (!this.eat(types.braceR)) {
    var member = this$1.parseClassMember(classBody);
    if (member && member.type === "MethodDefinition" && member.kind === "constructor") {
      if (hadConstructor) { this$1.raise(member.start, "Duplicate constructor in the same class"); }
      hadConstructor = true;
    }
  }
  node.body = this.finishNode(classBody, "ClassBody");
  return this.finishNode(node, isStatement ? "ClassDeclaration" : "ClassExpression")
};

pp$1.parseClassMember = function(classBody) {
  var this$1 = this;

  if (this.eat(types.semi)) { return null }

  var method = this.startNode();
  var tryContextual = function (k, noLineBreak) {
    if ( noLineBreak === void 0 ) noLineBreak = false;

    var start = this$1.start, startLoc = this$1.startLoc;
    if (!this$1.eatContextual(k)) { return false }
    if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }
    if (method.key) { this$1.unexpected(); }
    method.computed = false;
    method.key = this$1.startNodeAt(start, startLoc);
    method.key.name = k;
    this$1.finishNode(method.key, "Identifier");
    return false
  };

  method.kind = "method";
  method.static = tryContextual("static");
  var isGenerator = this.eat(types.star);
  var isAsync = false;
  if (!isGenerator) {
    if (this.options.ecmaVersion >= 8 && tryContextual("async", true)) {
      isAsync = true;
      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);
    } else if (tryContextual("get")) {
      method.kind = "get";
    } else if (tryContextual("set")) {
      method.kind = "set";
    }
  }
  if (!method.key) { this.parsePropertyName(method); }
  var key = method.key;
  if (!method.computed && !method.static && (key.type === "Identifier" && key.name === "constructor" ||
      key.type === "Literal" && key.value === "constructor")) {
    if (method.kind !== "method") { this.raise(key.start, "Constructor can't have get/set modifier"); }
    if (isGenerator) { this.raise(key.start, "Constructor can't be a generator"); }
    if (isAsync) { this.raise(key.start, "Constructor can't be an async method"); }
    method.kind = "constructor";
  } else if (method.static && key.type === "Identifier" && key.name === "prototype") {
    this.raise(key.start, "Classes may not have a static property named prototype");
  }
  this.parseClassMethod(classBody, method, isGenerator, isAsync);
  if (method.kind === "get" && method.value.params.length !== 0)
    { this.raiseRecoverable(method.value.start, "getter should have no params"); }
  if (method.kind === "set" && method.value.params.length !== 1)
    { this.raiseRecoverable(method.value.start, "setter should have exactly one param"); }
  if (method.kind === "set" && method.value.params[0].type === "RestElement")
    { this.raiseRecoverable(method.value.params[0].start, "Setter cannot use rest params"); }
  return method
};

pp$1.parseClassMethod = function(classBody, method, isGenerator, isAsync) {
  method.value = this.parseMethod(isGenerator, isAsync);
  classBody.body.push(this.finishNode(method, "MethodDefinition"));
};

pp$1.parseClassId = function(node, isStatement) {
  node.id = this.type === types.name ? this.parseIdent() : isStatement === true ? this.unexpected() : null;
};

pp$1.parseClassSuper = function(node) {
  node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;
};

// Parses module export declaration.

pp$1.parseExport = function(node, exports) {
  var this$1 = this;

  this.next();
  // export * from '...'
  if (this.eat(types.star)) {
    this.expectContextual("from");
    if (this.type !== types.string) { this.unexpected(); }
    node.source = this.parseExprAtom();
    this.semicolon();
    return this.finishNode(node, "ExportAllDeclaration")
  }
  if (this.eat(types._default)) { // export default ...
    this.checkExport(exports, "default", this.lastTokStart);
    var isAsync;
    if (this.type === types._function || (isAsync = this.isAsyncFunction())) {
      var fNode = this.startNode();
      this.next();
      if (isAsync) { this.next(); }
      node.declaration = this.parseFunction(fNode, "nullableID", false, isAsync);
    } else if (this.type === types._class) {
      var cNode = this.startNode();
      node.declaration = this.parseClass(cNode, "nullableID");
    } else {
      node.declaration = this.parseMaybeAssign();
      this.semicolon();
    }
    return this.finishNode(node, "ExportDefaultDeclaration")
  }
  // export var|const|let|function|class ...
  if (this.shouldParseExportStatement()) {
    node.declaration = this.parseStatement(true);
    if (node.declaration.type === "VariableDeclaration")
      { this.checkVariableExport(exports, node.declaration.declarations); }
    else
      { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }
    node.specifiers = [];
    node.source = null;
  } else { // export { x, y as z } [from '...']
    node.declaration = null;
    node.specifiers = this.parseExportSpecifiers(exports);
    if (this.eatContextual("from")) {
      if (this.type !== types.string) { this.unexpected(); }
      node.source = this.parseExprAtom();
    } else {
      // check for keywords used as local names
      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {
        var spec = list[i];

        this$1.checkUnreserved(spec.local);
      }

      node.source = null;
    }
    this.semicolon();
  }
  return this.finishNode(node, "ExportNamedDeclaration")
};

pp$1.checkExport = function(exports, name, pos) {
  if (!exports) { return }
  if (has(exports, name))
    { this.raiseRecoverable(pos, "Duplicate export '" + name + "'"); }
  exports[name] = true;
};

pp$1.checkPatternExport = function(exports, pat) {
  var this$1 = this;

  var type = pat.type;
  if (type === "Identifier")
    { this.checkExport(exports, pat.name, pat.start); }
  else if (type === "ObjectPattern")
    { for (var i = 0, list = pat.properties; i < list.length; i += 1)
      {
        var prop = list[i];

        this$1.checkPatternExport(exports, prop);
      } }
  else if (type === "ArrayPattern")
    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {
      var elt = list$1[i$1];

        if (elt) { this$1.checkPatternExport(exports, elt); }
    } }
  else if (type === "Property")
    { this.checkPatternExport(exports, pat.value); }
  else if (type === "AssignmentPattern")
    { this.checkPatternExport(exports, pat.left); }
  else if (type === "RestElement")
    { this.checkPatternExport(exports, pat.argument); }
  else if (type === "ParenthesizedExpression")
    { this.checkPatternExport(exports, pat.expression); }
};

pp$1.checkVariableExport = function(exports, decls) {
  var this$1 = this;

  if (!exports) { return }
  for (var i = 0, list = decls; i < list.length; i += 1)
    {
    var decl = list[i];

    this$1.checkPatternExport(exports, decl.id);
  }
};

pp$1.shouldParseExportStatement = function() {
  return this.type.keyword === "var" ||
    this.type.keyword === "const" ||
    this.type.keyword === "class" ||
    this.type.keyword === "function" ||
    this.isLet() ||
    this.isAsyncFunction()
};

// Parses a comma-separated list of module exports.

pp$1.parseExportSpecifiers = function(exports) {
  var this$1 = this;

  var nodes = [], first = true;
  // export { x, y as z } [from '...']
  this.expect(types.braceL);
  while (!this.eat(types.braceR)) {
    if (!first) {
      this$1.expect(types.comma);
      if (this$1.afterTrailingComma(types.braceR)) { break }
    } else { first = false; }

    var node = this$1.startNode();
    node.local = this$1.parseIdent(true);
    node.exported = this$1.eatContextual("as") ? this$1.parseIdent(true) : node.local;
    this$1.checkExport(exports, node.exported.name, node.exported.start);
    nodes.push(this$1.finishNode(node, "ExportSpecifier"));
  }
  return nodes
};

// Parses import declaration.

pp$1.parseImport = function(node) {
  this.next();
  // import '...'
  if (this.type === types.string) {
    node.specifiers = empty;
    node.source = this.parseExprAtom();
  } else {
    node.specifiers = this.parseImportSpecifiers();
    this.expectContextual("from");
    node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();
  }
  this.semicolon();
  return this.finishNode(node, "ImportDeclaration")
};

// Parses a comma-separated list of module imports.

pp$1.parseImportSpecifiers = function() {
  var this$1 = this;

  var nodes = [], first = true;
  if (this.type === types.name) {
    // import defaultObj, { x, y as z } from '...'
    var node = this.startNode();
    node.local = this.parseIdent();
    this.checkLVal(node.local, "let");
    nodes.push(this.finishNode(node, "ImportDefaultSpecifier"));
    if (!this.eat(types.comma)) { return nodes }
  }
  if (this.type === types.star) {
    var node$1 = this.startNode();
    this.next();
    this.expectContextual("as");
    node$1.local = this.parseIdent();
    this.checkLVal(node$1.local, "let");
    nodes.push(this.finishNode(node$1, "ImportNamespaceSpecifier"));
    return nodes
  }
  this.expect(types.braceL);
  while (!this.eat(types.braceR)) {
    if (!first) {
      this$1.expect(types.comma);
      if (this$1.afterTrailingComma(types.braceR)) { break }
    } else { first = false; }

    var node$2 = this$1.startNode();
    node$2.imported = this$1.parseIdent(true);
    if (this$1.eatContextual("as")) {
      node$2.local = this$1.parseIdent();
    } else {
      this$1.checkUnreserved(node$2.imported);
      node$2.local = node$2.imported;
    }
    this$1.checkLVal(node$2.local, "let");
    nodes.push(this$1.finishNode(node$2, "ImportSpecifier"));
  }
  return nodes
};

// Set `ExpressionStatement#directive` property for directive prologues.
pp$1.adaptDirectivePrologue = function(statements) {
  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {
    statements[i].directive = statements[i].expression.raw.slice(1, -1);
  }
};
pp$1.isDirectiveCandidate = function(statement) {
  return (
    statement.type === "ExpressionStatement" &&
    statement.expression.type === "Literal" &&
    typeof statement.expression.value === "string" &&
    // Reject parenthesized strings.
    (this.input[statement.start] === "\"" || this.input[statement.start] === "'")
  )
};

var pp$2 = Parser.prototype;

// Convert existing expression atom to assignable pattern
// if possible.

pp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {
  var this$1 = this;

  if (this.options.ecmaVersion >= 6 && node) {
    switch (node.type) {
    case "Identifier":
      if (this.inAsync && node.name === "await")
        { this.raise(node.start, "Can not use 'await' as identifier inside an async function"); }
      break

    case "ObjectPattern":
    case "ArrayPattern":
    case "RestElement":
      break

    case "ObjectExpression":
      node.type = "ObjectPattern";
      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }
      for (var i = 0, list = node.properties; i < list.length; i += 1) {
        var prop = list[i];

      this$1.toAssignable(prop, isBinding);
        // Early error:
        //   AssignmentRestProperty[Yield, Await] :
        //     `...` DestructuringAssignmentTarget[Yield, Await]
        //
        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.
        if (
          prop.type === "RestElement" &&
          (prop.argument.type === "ArrayPattern" || prop.argument.type === "ObjectPattern")
        ) {
          this$1.raise(prop.argument.start, "Unexpected token");
        }
      }
      break

    case "Property":
      // AssignmentProperty has type === "Property"
      if (node.kind !== "init") { this.raise(node.key.start, "Object pattern can't contain getter or setter"); }
      this.toAssignable(node.value, isBinding);
      break

    case "ArrayExpression":
      node.type = "ArrayPattern";
      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }
      this.toAssignableList(node.elements, isBinding);
      break

    case "SpreadElement":
      node.type = "RestElement";
      this.toAssignable(node.argument, isBinding);
      if (node.argument.type === "AssignmentPattern")
        { this.raise(node.argument.start, "Rest elements cannot have a default value"); }
      break

    case "AssignmentExpression":
      if (node.operator !== "=") { this.raise(node.left.end, "Only '=' operator can be used for specifying default value."); }
      node.type = "AssignmentPattern";
      delete node.operator;
      this.toAssignable(node.left, isBinding);
      // falls through to AssignmentPattern

    case "AssignmentPattern":
      break

    case "ParenthesizedExpression":
      this.toAssignable(node.expression, isBinding);
      break

    case "MemberExpression":
      if (!isBinding) { break }

    default:
      this.raise(node.start, "Assigning to rvalue");
    }
  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }
  return node
};

// Convert list of expression atoms to binding list.

pp$2.toAssignableList = function(exprList, isBinding) {
  var this$1 = this;

  var end = exprList.length;
  for (var i = 0; i < end; i++) {
    var elt = exprList[i];
    if (elt) { this$1.toAssignable(elt, isBinding); }
  }
  if (end) {
    var last = exprList[end - 1];
    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === "RestElement" && last.argument.type !== "Identifier")
      { this.unexpected(last.argument.start); }
  }
  return exprList
};

// Parses spread element.

pp$2.parseSpread = function(refDestructuringErrors) {
  var node = this.startNode();
  this.next();
  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);
  return this.finishNode(node, "SpreadElement")
};

pp$2.parseRestBinding = function() {
  var node = this.startNode();
  this.next();

  // RestElement inside of a function parameter must be an identifier
  if (this.options.ecmaVersion === 6 && this.type !== types.name)
    { this.unexpected(); }

  node.argument = this.parseBindingAtom();

  return this.finishNode(node, "RestElement")
};

// Parses lvalue (assignable) atom.

pp$2.parseBindingAtom = function() {
  if (this.options.ecmaVersion >= 6) {
    switch (this.type) {
    case types.bracketL:
      var node = this.startNode();
      this.next();
      node.elements = this.parseBindingList(types.bracketR, true, true);
      return this.finishNode(node, "ArrayPattern")

    case types.braceL:
      return this.parseObj(true)
    }
  }
  return this.parseIdent()
};

pp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {
  var this$1 = this;

  var elts = [], first = true;
  while (!this.eat(close)) {
    if (first) { first = false; }
    else { this$1.expect(types.comma); }
    if (allowEmpty && this$1.type === types.comma) {
      elts.push(null);
    } else if (allowTrailingComma && this$1.afterTrailingComma(close)) {
      break
    } else if (this$1.type === types.ellipsis) {
      var rest = this$1.parseRestBinding();
      this$1.parseBindingListItem(rest);
      elts.push(rest);
      if (this$1.type === types.comma) { this$1.raise(this$1.start, "Comma is not permitted after the rest element"); }
      this$1.expect(close);
      break
    } else {
      var elem = this$1.parseMaybeDefault(this$1.start, this$1.startLoc);
      this$1.parseBindingListItem(elem);
      elts.push(elem);
    }
  }
  return elts
};

pp$2.parseBindingListItem = function(param) {
  return param
};

// Parses assignment pattern around given atom if possible.

pp$2.parseMaybeDefault = function(startPos, startLoc, left) {
  left = left || this.parseBindingAtom();
  if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }
  var node = this.startNodeAt(startPos, startLoc);
  node.left = left;
  node.right = this.parseMaybeAssign();
  return this.finishNode(node, "AssignmentPattern")
};

// Verify that a node is an lval — something that can be assigned
// to.
// bindingType can be either:
// 'var' indicating that the lval creates a 'var' binding
// 'let' indicating that the lval creates a lexical ('let' or 'const') binding
// 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references

pp$2.checkLVal = function(expr, bindingType, checkClashes) {
  var this$1 = this;

  switch (expr.type) {
  case "Identifier":
    if (this.strict && this.reservedWordsStrictBind.test(expr.name))
      { this.raiseRecoverable(expr.start, (bindingType ? "Binding " : "Assigning to ") + expr.name + " in strict mode"); }
    if (checkClashes) {
      if (has(checkClashes, expr.name))
        { this.raiseRecoverable(expr.start, "Argument name clash"); }
      checkClashes[expr.name] = true;
    }
    if (bindingType && bindingType !== "none") {
      if (
        bindingType === "var" && !this.canDeclareVarName(expr.name) ||
        bindingType !== "var" && !this.canDeclareLexicalName(expr.name)
      ) {
        this.raiseRecoverable(expr.start, ("Identifier '" + (expr.name) + "' has already been declared"));
      }
      if (bindingType === "var") {
        this.declareVarName(expr.name);
      } else {
        this.declareLexicalName(expr.name);
      }
    }
    break

  case "MemberExpression":
    if (bindingType) { this.raiseRecoverable(expr.start, "Binding member expression"); }
    break

  case "ObjectPattern":
    for (var i = 0, list = expr.properties; i < list.length; i += 1)
      {
    var prop = list[i];

    this$1.checkLVal(prop, bindingType, checkClashes);
  }
    break

  case "Property":
    // AssignmentProperty has type === "Property"
    this.checkLVal(expr.value, bindingType, checkClashes);
    break

  case "ArrayPattern":
    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {
      var elem = list$1[i$1];

    if (elem) { this$1.checkLVal(elem, bindingType, checkClashes); }
    }
    break

  case "AssignmentPattern":
    this.checkLVal(expr.left, bindingType, checkClashes);
    break

  case "RestElement":
    this.checkLVal(expr.argument, bindingType, checkClashes);
    break

  case "ParenthesizedExpression":
    this.checkLVal(expr.expression, bindingType, checkClashes);
    break

  default:
    this.raise(expr.start, (bindingType ? "Binding" : "Assigning to") + " rvalue");
  }
};

// A recursive descent parser operates by defining functions for all
// syntactic elements, and recursively calling those, each function
// advancing the input stream and returning an AST node. Precedence
// of constructs (for example, the fact that `!x[1]` means `!(x[1])`
// instead of `(!x)[1]` is handled by the fact that the parser
// function that parses unary prefix operators is called first, and
// in turn calls the function that parses `[]` subscripts — that
// way, it'll receive the node for `x[1]` already parsed, and wraps
// *that* in the unary operator node.
//
// Acorn uses an [operator precedence parser][opp] to handle binary
// operator precedence, because it is much more compact than using
// the technique outlined above, which uses different, nesting
// functions to specify precedence, for all of the ten binary
// precedence levels that JavaScript defines.
//
// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser

var pp$3 = Parser.prototype;

// Check if property name clashes with already added.
// Object/class getters and setters are not allowed to clash —
// either with each other or with an init property — and in
// strict mode, init properties are also not allowed to be repeated.

pp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {
  if (this.options.ecmaVersion >= 9 && prop.type === "SpreadElement")
    { return }
  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))
    { return }
  var key = prop.key;
  var name;
  switch (key.type) {
  case "Identifier": name = key.name; break
  case "Literal": name = String(key.value); break
  default: return
  }
  var kind = prop.kind;
  if (this.options.ecmaVersion >= 6) {
    if (name === "__proto__" && kind === "init") {
      if (propHash.proto) {
        if (refDestructuringErrors && refDestructuringErrors.doubleProto < 0) { refDestructuringErrors.doubleProto = key.start; }
        // Backwards-compat kludge. Can be removed in version 6.0
        else { this.raiseRecoverable(key.start, "Redefinition of __proto__ property"); }
      }
      propHash.proto = true;
    }
    return
  }
  name = "$" + name;
  var other = propHash[name];
  if (other) {
    var redefinition;
    if (kind === "init") {
      redefinition = this.strict && other.init || other.get || other.set;
    } else {
      redefinition = other.init || other[kind];
    }
    if (redefinition)
      { this.raiseRecoverable(key.start, "Redefinition of property"); }
  } else {
    other = propHash[name] = {
      init: false,
      get: false,
      set: false
    };
  }
  other[kind] = true;
};

// ### Expression parsing

// These nest, from the most general expression type at the top to
// 'atomic', nondivisible expression types at the bottom. Most of
// the functions will simply let the function(s) below them parse,
// and, *if* the syntactic construct they handle is present, wrap
// the AST node that the inner parser gave them in another node.

// Parse a full expression. The optional arguments are used to
// forbid the `in` operator (in for loops initalization expressions)
// and provide reference for storing '=' operator inside shorthand
// property assignment in contexts where both object expression
// and object pattern might appear (so it's possible to raise
// delayed syntax error at correct position).

pp$3.parseExpression = function(noIn, refDestructuringErrors) {
  var this$1 = this;

  var startPos = this.start, startLoc = this.startLoc;
  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);
  if (this.type === types.comma) {
    var node = this.startNodeAt(startPos, startLoc);
    node.expressions = [expr];
    while (this.eat(types.comma)) { node.expressions.push(this$1.parseMaybeAssign(noIn, refDestructuringErrors)); }
    return this.finishNode(node, "SequenceExpression")
  }
  return expr
};

// Parse an assignment expression. This includes applications of
// operators like `+=`.

pp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {
  if (this.inGenerator && this.isContextual("yield")) { return this.parseYield() }

  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;
  if (refDestructuringErrors) {
    oldParenAssign = refDestructuringErrors.parenthesizedAssign;
    oldTrailingComma = refDestructuringErrors.trailingComma;
    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;
  } else {
    refDestructuringErrors = new DestructuringErrors;
    ownDestructuringErrors = true;
  }

  var startPos = this.start, startLoc = this.startLoc;
  if (this.type === types.parenL || this.type === types.name)
    { this.potentialArrowAt = this.start; }
  var left = this.parseMaybeConditional(noIn, refDestructuringErrors);
  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }
  if (this.type.isAssign) {
    var node = this.startNodeAt(startPos, startLoc);
    node.operator = this.value;
    node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;
    if (!ownDestructuringErrors) { DestructuringErrors.call(refDestructuringErrors); }
    refDestructuringErrors.shorthandAssign = -1; // reset because shorthand default was used correctly
    this.checkLVal(left);
    this.next();
    node.right = this.parseMaybeAssign(noIn);
    return this.finishNode(node, "AssignmentExpression")
  } else {
    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }
  }
  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }
  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }
  return left
};

// Parse a ternary conditional (`?:`) operator.

pp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {
  var startPos = this.start, startLoc = this.startLoc;
  var expr = this.parseExprOps(noIn, refDestructuringErrors);
  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }
  if (this.eat(types.question)) {
    var node = this.startNodeAt(startPos, startLoc);
    node.test = expr;
    node.consequent = this.parseMaybeAssign();
    this.expect(types.colon);
    node.alternate = this.parseMaybeAssign(noIn);
    return this.finishNode(node, "ConditionalExpression")
  }
  return expr
};

// Start the precedence parser.

pp$3.parseExprOps = function(noIn, refDestructuringErrors) {
  var startPos = this.start, startLoc = this.startLoc;
  var expr = this.parseMaybeUnary(refDestructuringErrors, false);
  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }
  return expr.start === startPos && expr.type === "ArrowFunctionExpression" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)
};

// Parse binary operators with the operator precedence parsing
// algorithm. `left` is the left-hand side of the operator.
// `minPrec` provides context that allows the function to stop and
// defer further parser to one of its callers when it encounters an
// operator that has a lower precedence than the set it is parsing.

pp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {
  var prec = this.type.binop;
  if (prec != null && (!noIn || this.type !== types._in)) {
    if (prec > minPrec) {
      var logical = this.type === types.logicalOR || this.type === types.logicalAND;
      var op = this.value;
      this.next();
      var startPos = this.start, startLoc = this.startLoc;
      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);
      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);
      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)
    }
  }
  return left
};

pp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {
  var node = this.startNodeAt(startPos, startLoc);
  node.left = left;
  node.operator = op;
  node.right = right;
  return this.finishNode(node, logical ? "LogicalExpression" : "BinaryExpression")
};

// Parse unary operators, both prefix and postfix.

pp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {
  var this$1 = this;

  var startPos = this.start, startLoc = this.startLoc, expr;
  if (this.isContextual("await") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {
    expr = this.parseAwait();
    sawUnary = true;
  } else if (this.type.prefix) {
    var node = this.startNode(), update = this.type === types.incDec;
    node.operator = this.value;
    node.prefix = true;
    this.next();
    node.argument = this.parseMaybeUnary(null, true);
    this.checkExpressionErrors(refDestructuringErrors, true);
    if (update) { this.checkLVal(node.argument); }
    else if (this.strict && node.operator === "delete" &&
             node.argument.type === "Identifier")
      { this.raiseRecoverable(node.start, "Deleting local variable in strict mode"); }
    else { sawUnary = true; }
    expr = this.finishNode(node, update ? "UpdateExpression" : "UnaryExpression");
  } else {
    expr = this.parseExprSubscripts(refDestructuringErrors);
    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }
    while (this.type.postfix && !this.canInsertSemicolon()) {
      var node$1 = this$1.startNodeAt(startPos, startLoc);
      node$1.operator = this$1.value;
      node$1.prefix = false;
      node$1.argument = expr;
      this$1.checkLVal(expr);
      this$1.next();
      expr = this$1.finishNode(node$1, "UpdateExpression");
    }
  }

  if (!sawUnary && this.eat(types.starstar))
    { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), "**", false) }
  else
    { return expr }
};

// Parse call, dot, and `[]`-subscript expressions.

pp$3.parseExprSubscripts = function(refDestructuringErrors) {
  var startPos = this.start, startLoc = this.startLoc;
  var expr = this.parseExprAtom(refDestructuringErrors);
  var skipArrowSubscripts = expr.type === "ArrowFunctionExpression" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== ")";
  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) { return expr }
  var result = this.parseSubscripts(expr, startPos, startLoc);
  if (refDestructuringErrors && result.type === "MemberExpression") {
    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }
    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }
  }
  return result
};

pp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {
  var this$1 = this;

  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === "Identifier" && base.name === "async" &&
      this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === "async";
  for (var computed = (void 0);;) {
    if ((computed = this$1.eat(types.bracketL)) || this$1.eat(types.dot)) {
      var node = this$1.startNodeAt(startPos, startLoc);
      node.object = base;
      node.property = computed ? this$1.parseExpression() : this$1.parseIdent(true);
      node.computed = !!computed;
      if (computed) { this$1.expect(types.bracketR); }
      base = this$1.finishNode(node, "MemberExpression");
    } else if (!noCalls && this$1.eat(types.parenL)) {
      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this$1.yieldPos, oldAwaitPos = this$1.awaitPos;
      this$1.yieldPos = 0;
      this$1.awaitPos = 0;
      var exprList = this$1.parseExprList(types.parenR, this$1.options.ecmaVersion >= 8, false, refDestructuringErrors);
      if (maybeAsyncArrow && !this$1.canInsertSemicolon() && this$1.eat(types.arrow)) {
        this$1.checkPatternErrors(refDestructuringErrors, false);
        this$1.checkYieldAwaitInDefaultParams();
        this$1.yieldPos = oldYieldPos;
        this$1.awaitPos = oldAwaitPos;
        return this$1.parseArrowExpression(this$1.startNodeAt(startPos, startLoc), exprList, true)
      }
      this$1.checkExpressionErrors(refDestructuringErrors, true);
      this$1.yieldPos = oldYieldPos || this$1.yieldPos;
      this$1.awaitPos = oldAwaitPos || this$1.awaitPos;
      var node$1 = this$1.startNodeAt(startPos, startLoc);
      node$1.callee = base;
      node$1.arguments = exprList;
      base = this$1.finishNode(node$1, "CallExpression");
    } else if (this$1.type === types.backQuote) {
      var node$2 = this$1.startNodeAt(startPos, startLoc);
      node$2.tag = base;
      node$2.quasi = this$1.parseTemplate({isTagged: true});
      base = this$1.finishNode(node$2, "TaggedTemplateExpression");
    } else {
      return base
    }
  }
};

// Parse an atomic expression — either a single token that is an
// expression, an expression started by a keyword like `function` or
// `new`, or an expression wrapped in punctuation like `()`, `[]`,
// or `{}`.

pp$3.parseExprAtom = function(refDestructuringErrors) {
  var node, canBeArrow = this.potentialArrowAt === this.start;
  switch (this.type) {
  case types._super:
    if (!this.inFunction)
      { this.raise(this.start, "'super' outside of function or class"); }
    node = this.startNode();
    this.next();
    // The `super` keyword can appear at below:
    // SuperProperty:
    //     super [ Expression ]
    //     super . IdentifierName
    // SuperCall:
    //     super Arguments
    if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)
      { this.unexpected(); }
    return this.finishNode(node, "Super")

  case types._this:
    node = this.startNode();
    this.next();
    return this.finishNode(node, "ThisExpression")

  case types.name:
    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;
    var id = this.parseIdent(this.type !== types.name);
    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === "async" && !this.canInsertSemicolon() && this.eat(types._function))
      { return this.parseFunction(this.startNodeAt(startPos, startLoc), false, false, true) }
    if (canBeArrow && !this.canInsertSemicolon()) {
      if (this.eat(types.arrow))
        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }
      if (this.options.ecmaVersion >= 8 && id.name === "async" && this.type === types.name && !containsEsc) {
        id = this.parseIdent();
        if (this.canInsertSemicolon() || !this.eat(types.arrow))
          { this.unexpected(); }
        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)
      }
    }
    return id

  case types.regexp:
    var value = this.value;
    node = this.parseLiteral(value.value);
    node.regex = {pattern: value.pattern, flags: value.flags};
    return node

  case types.num: case types.string:
    return this.parseLiteral(this.value)

  case types._null: case types._true: case types._false:
    node = this.startNode();
    node.value = this.type === types._null ? null : this.type === types._true;
    node.raw = this.type.keyword;
    this.next();
    return this.finishNode(node, "Literal")

  case types.parenL:
    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);
    if (refDestructuringErrors) {
      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))
        { refDestructuringErrors.parenthesizedAssign = start; }
      if (refDestructuringErrors.parenthesizedBind < 0)
        { refDestructuringErrors.parenthesizedBind = start; }
    }
    return expr

  case types.bracketL:
    node = this.startNode();
    this.next();
    node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);
    return this.finishNode(node, "ArrayExpression")

  case types.braceL:
    return this.parseObj(false, refDestructuringErrors)

  case types._function:
    node = this.startNode();
    this.next();
    return this.parseFunction(node, false)

  case types._class:
    return this.parseClass(this.startNode(), false)

  case types._new:
    return this.parseNew()

  case types.backQuote:
    return this.parseTemplate()

  default:
    this.unexpected();
  }
};

pp$3.parseLiteral = function(value) {
  var node = this.startNode();
  node.value = value;
  node.raw = this.input.slice(this.start, this.end);
  this.next();
  return this.finishNode(node, "Literal")
};

pp$3.parseParenExpression = function() {
  this.expect(types.parenL);
  var val = this.parseExpression();
  this.expect(types.parenR);
  return val
};

pp$3.parseParenAndDistinguishExpression = function(canBeArrow) {
  var this$1 = this;

  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;
  if (this.options.ecmaVersion >= 6) {
    this.next();

    var innerStartPos = this.start, innerStartLoc = this.startLoc;
    var exprList = [], first = true, lastIsComma = false;
    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;
    this.yieldPos = 0;
    this.awaitPos = 0;
    while (this.type !== types.parenR) {
      first ? first = false : this$1.expect(types.comma);
      if (allowTrailingComma && this$1.afterTrailingComma(types.parenR, true)) {
        lastIsComma = true;
        break
      } else if (this$1.type === types.ellipsis) {
        spreadStart = this$1.start;
        exprList.push(this$1.parseParenItem(this$1.parseRestBinding()));
        if (this$1.type === types.comma) { this$1.raise(this$1.start, "Comma is not permitted after the rest element"); }
        break
      } else {
        exprList.push(this$1.parseMaybeAssign(false, refDestructuringErrors, this$1.parseParenItem));
      }
    }
    var innerEndPos = this.start, innerEndLoc = this.startLoc;
    this.expect(types.parenR);

    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {
      this.checkPatternErrors(refDestructuringErrors, false);
      this.checkYieldAwaitInDefaultParams();
      this.yieldPos = oldYieldPos;
      this.awaitPos = oldAwaitPos;
      return this.parseParenArrowList(startPos, startLoc, exprList)
    }

    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }
    if (spreadStart) { this.unexpected(spreadStart); }
    this.checkExpressionErrors(refDestructuringErrors, true);
    this.yieldPos = oldYieldPos || this.yieldPos;
    this.awaitPos = oldAwaitPos || this.awaitPos;

    if (exprList.length > 1) {
      val = this.startNodeAt(innerStartPos, innerStartLoc);
      val.expressions = exprList;
      this.finishNodeAt(val, "SequenceExpression", innerEndPos, innerEndLoc);
    } else {
      val = exprList[0];
    }
  } else {
    val = this.parseParenExpression();
  }

  if (this.options.preserveParens) {
    var par = this.startNodeAt(startPos, startLoc);
    par.expression = val;
    return this.finishNode(par, "ParenthesizedExpression")
  } else {
    return val
  }
};

pp$3.parseParenItem = function(item) {
  return item
};

pp$3.parseParenArrowList = function(startPos, startLoc, exprList) {
  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)
};

// New's precedence is slightly tricky. It must allow its argument to
// be a `[]` or dot subscript expression, but not a call — at least,
// not without wrapping it in parentheses. Thus, it uses the noCalls
// argument to parseSubscripts to prevent it from consuming the
// argument list.

var empty$1 = [];

pp$3.parseNew = function() {
  var node = this.startNode();
  var meta = this.parseIdent(true);
  if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {
    node.meta = meta;
    var containsEsc = this.containsEsc;
    node.property = this.parseIdent(true);
    if (node.property.name !== "target" || containsEsc)
      { this.raiseRecoverable(node.property.start, "The only valid meta property for new is new.target"); }
    if (!this.inFunction)
      { this.raiseRecoverable(node.start, "new.target can only be used in functions"); }
    return this.finishNode(node, "MetaProperty")
  }
  var startPos = this.start, startLoc = this.startLoc;
  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);
  if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }
  else { node.arguments = empty$1; }
  return this.finishNode(node, "NewExpression")
};

// Parse template expression.

pp$3.parseTemplateElement = function(ref) {
  var isTagged = ref.isTagged;

  var elem = this.startNode();
  if (this.type === types.invalidTemplate) {
    if (!isTagged) {
      this.raiseRecoverable(this.start, "Bad escape sequence in untagged template literal");
    }
    elem.value = {
      raw: this.value,
      cooked: null
    };
  } else {
    elem.value = {
      raw: this.input.slice(this.start, this.end).replace(/\r\n?/g, "\n"),
      cooked: this.value
    };
  }
  this.next();
  elem.tail = this.type === types.backQuote;
  return this.finishNode(elem, "TemplateElement")
};

pp$3.parseTemplate = function(ref) {
  var this$1 = this;
  if ( ref === void 0 ) ref = {};
  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;

  var node = this.startNode();
  this.next();
  node.expressions = [];
  var curElt = this.parseTemplateElement({isTagged: isTagged});
  node.quasis = [curElt];
  while (!curElt.tail) {
    if (this$1.type === types.eof) { this$1.raise(this$1.pos, "Unterminated template literal"); }
    this$1.expect(types.dollarBraceL);
    node.expressions.push(this$1.parseExpression());
    this$1.expect(types.braceR);
    node.quasis.push(curElt = this$1.parseTemplateElement({isTagged: isTagged}));
  }
  this.next();
  return this.finishNode(node, "TemplateLiteral")
};

pp$3.isAsyncProp = function(prop) {
  return !prop.computed && prop.key.type === "Identifier" && prop.key.name === "async" &&
    (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&
    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))
};

// Parse an object literal or binding pattern.

pp$3.parseObj = function(isPattern, refDestructuringErrors) {
  var this$1 = this;

  var node = this.startNode(), first = true, propHash = {};
  node.properties = [];
  this.next();
  while (!this.eat(types.braceR)) {
    if (!first) {
      this$1.expect(types.comma);
      if (this$1.afterTrailingComma(types.braceR)) { break }
    } else { first = false; }

    var prop = this$1.parseProperty(isPattern, refDestructuringErrors);
    if (!isPattern) { this$1.checkPropClash(prop, propHash, refDestructuringErrors); }
    node.properties.push(prop);
  }
  return this.finishNode(node, isPattern ? "ObjectPattern" : "ObjectExpression")
};

pp$3.parseProperty = function(isPattern, refDestructuringErrors) {
  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;
  if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {
    if (isPattern) {
      prop.argument = this.parseIdent(false);
      if (this.type === types.comma) {
        this.raise(this.start, "Comma is not permitted after the rest element");
      }
      return this.finishNode(prop, "RestElement")
    }
    // To disallow parenthesized identifier via `this.toAssignable()`.
    if (this.type === types.parenL && refDestructuringErrors) {
      if (refDestructuringErrors.parenthesizedAssign < 0) {
        refDestructuringErrors.parenthesizedAssign = this.start;
      }
      if (refDestructuringErrors.parenthesizedBind < 0) {
        refDestructuringErrors.parenthesizedBind = this.start;
      }
    }
    // Parse argument.
    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);
    // To disallow trailing comma via `this.toAssignable()`.
    if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {
      refDestructuringErrors.trailingComma = this.start;
    }
    // Finish
    return this.finishNode(prop, "SpreadElement")
  }
  if (this.options.ecmaVersion >= 6) {
    prop.method = false;
    prop.shorthand = false;
    if (isPattern || refDestructuringErrors) {
      startPos = this.start;
      startLoc = this.startLoc;
    }
    if (!isPattern)
      { isGenerator = this.eat(types.star); }
  }
  var containsEsc = this.containsEsc;
  this.parsePropertyName(prop);
  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {
    isAsync = true;
    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);
    this.parsePropertyName(prop, refDestructuringErrors);
  } else {
    isAsync = false;
  }
  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);
  return this.finishNode(prop, "Property")
};

pp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {
  if ((isGenerator || isAsync) && this.type === types.colon)
    { this.unexpected(); }

  if (this.eat(types.colon)) {
    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);
    prop.kind = "init";
  } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {
    if (isPattern) { this.unexpected(); }
    prop.kind = "init";
    prop.method = true;
    prop.value = this.parseMethod(isGenerator, isAsync);
  } else if (!isPattern && !containsEsc &&
             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === "Identifier" &&
             (prop.key.name === "get" || prop.key.name === "set") &&
             (this.type !== types.comma && this.type !== types.braceR)) {
    if (isGenerator || isAsync) { this.unexpected(); }
    prop.kind = prop.key.name;
    this.parsePropertyName(prop);
    prop.value = this.parseMethod(false);
    var paramCount = prop.kind === "get" ? 0 : 1;
    if (prop.value.params.length !== paramCount) {
      var start = prop.value.start;
      if (prop.kind === "get")
        { this.raiseRecoverable(start, "getter should have no params"); }
      else
        { this.raiseRecoverable(start, "setter should have exactly one param"); }
    } else {
      if (prop.kind === "set" && prop.value.params[0].type === "RestElement")
        { this.raiseRecoverable(prop.value.params[0].start, "Setter cannot use rest params"); }
    }
  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === "Identifier") {
    this.checkUnreserved(prop.key);
    prop.kind = "init";
    if (isPattern) {
      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);
    } else if (this.type === types.eq && refDestructuringErrors) {
      if (refDestructuringErrors.shorthandAssign < 0)
        { refDestructuringErrors.shorthandAssign = this.start; }
      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);
    } else {
      prop.value = prop.key;
    }
    prop.shorthand = true;
  } else { this.unexpected(); }
};

pp$3.parsePropertyName = function(prop) {
  if (this.options.ecmaVersion >= 6) {
    if (this.eat(types.bracketL)) {
      prop.computed = true;
      prop.key = this.parseMaybeAssign();
      this.expect(types.bracketR);
      return prop.key
    } else {
      prop.computed = false;
    }
  }
  return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(true)
};

// Initialize empty function node.

pp$3.initFunction = function(node) {
  node.id = null;
  if (this.options.ecmaVersion >= 6) {
    node.generator = false;
    node.expression = false;
  }
  if (this.options.ecmaVersion >= 8)
    { node.async = false; }
};

// Parse object or class method.

pp$3.parseMethod = function(isGenerator, isAsync) {
  var node = this.startNode(), oldInGen = this.inGenerator, oldInAsync = this.inAsync,
      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;

  this.initFunction(node);
  if (this.options.ecmaVersion >= 6)
    { node.generator = isGenerator; }
  if (this.options.ecmaVersion >= 8)
    { node.async = !!isAsync; }

  this.inGenerator = node.generator;
  this.inAsync = node.async;
  this.yieldPos = 0;
  this.awaitPos = 0;
  this.inFunction = true;
  this.enterFunctionScope();

  this.expect(types.parenL);
  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);
  this.checkYieldAwaitInDefaultParams();
  this.parseFunctionBody(node, false);

  this.inGenerator = oldInGen;
  this.inAsync = oldInAsync;
  this.yieldPos = oldYieldPos;
  this.awaitPos = oldAwaitPos;
  this.inFunction = oldInFunc;
  return this.finishNode(node, "FunctionExpression")
};

// Parse arrow function expression with given parameters.

pp$3.parseArrowExpression = function(node, params, isAsync) {
  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,
      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;

  this.enterFunctionScope();
  this.initFunction(node);
  if (this.options.ecmaVersion >= 8)
    { node.async = !!isAsync; }

  this.inGenerator = false;
  this.inAsync = node.async;
  this.yieldPos = 0;
  this.awaitPos = 0;
  this.inFunction = true;

  node.params = this.toAssignableList(params, true);
  this.parseFunctionBody(node, true);

  this.inGenerator = oldInGen;
  this.inAsync = oldInAsync;
  this.yieldPos = oldYieldPos;
  this.awaitPos = oldAwaitPos;
  this.inFunction = oldInFunc;
  return this.finishNode(node, "ArrowFunctionExpression")
};

// Parse function body and check parameters.

pp$3.parseFunctionBody = function(node, isArrowFunction) {
  var isExpression = isArrowFunction && this.type !== types.braceL;
  var oldStrict = this.strict, useStrict = false;

  if (isExpression) {
    node.body = this.parseMaybeAssign();
    node.expression = true;
    this.checkParams(node, false);
  } else {
    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);
    if (!oldStrict || nonSimple) {
      useStrict = this.strictDirective(this.end);
      // If this is a strict mode function, verify that argument names
      // are not repeated, and it does not try to bind the words `eval`
      // or `arguments`.
      if (useStrict && nonSimple)
        { this.raiseRecoverable(node.start, "Illegal 'use strict' directive in function with non-simple parameter list"); }
    }
    // Start a new scope with regard to labels and the `inFunction`
    // flag (restore them to their old value afterwards).
    var oldLabels = this.labels;
    this.labels = [];
    if (useStrict) { this.strict = true; }

    // Add the params to varDeclaredNames to ensure that an error is thrown
    // if a let/const declaration in the function clashes with one of the params.
    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && this.isSimpleParamList(node.params));
    node.body = this.parseBlock(false);
    node.expression = false;
    this.adaptDirectivePrologue(node.body.body);
    this.labels = oldLabels;
  }
  this.exitFunctionScope();

  if (this.strict && node.id) {
    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'
    this.checkLVal(node.id, "none");
  }
  this.strict = oldStrict;
};

pp$3.isSimpleParamList = function(params) {
  for (var i = 0, list = params; i < list.length; i += 1)
    {
    var param = list[i];

    if (param.type !== "Identifier") { return false
  } }
  return true
};

// Checks function params for various disallowed patterns such as using "eval"
// or "arguments" and duplicate parameters.

pp$3.checkParams = function(node, allowDuplicates) {
  var this$1 = this;

  var nameHash = {};
  for (var i = 0, list = node.params; i < list.length; i += 1)
    {
    var param = list[i];

    this$1.checkLVal(param, "var", allowDuplicates ? null : nameHash);
  }
};

// Parses a comma-separated list of expressions, and returns them as
// an array. `close` is the token type that ends the list, and
// `allowEmpty` can be turned on to allow subsequent commas with
// nothing in between them to be parsed as `null` (which is needed
// for array literals).

pp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {
  var this$1 = this;

  var elts = [], first = true;
  while (!this.eat(close)) {
    if (!first) {
      this$1.expect(types.comma);
      if (allowTrailingComma && this$1.afterTrailingComma(close)) { break }
    } else { first = false; }

    var elt = (void 0);
    if (allowEmpty && this$1.type === types.comma)
      { elt = null; }
    else if (this$1.type === types.ellipsis) {
      elt = this$1.parseSpread(refDestructuringErrors);
      if (refDestructuringErrors && this$1.type === types.comma && refDestructuringErrors.trailingComma < 0)
        { refDestructuringErrors.trailingComma = this$1.start; }
    } else {
      elt = this$1.parseMaybeAssign(false, refDestructuringErrors);
    }
    elts.push(elt);
  }
  return elts
};

pp$3.checkUnreserved = function(ref) {
  var start = ref.start;
  var end = ref.end;
  var name = ref.name;

  if (this.inGenerator && name === "yield")
    { this.raiseRecoverable(start, "Can not use 'yield' as identifier inside a generator"); }
  if (this.inAsync && name === "await")
    { this.raiseRecoverable(start, "Can not use 'await' as identifier inside an async function"); }
  if (this.isKeyword(name))
    { this.raise(start, ("Unexpected keyword '" + name + "'")); }
  if (this.options.ecmaVersion < 6 &&
    this.input.slice(start, end).indexOf("\\") !== -1) { return }
  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;
  if (re.test(name)) {
    if (!this.inAsync && name === "await")
      { this.raiseRecoverable(start, "Can not use keyword 'await' outside an async function"); }
    this.raiseRecoverable(start, ("The keyword '" + name + "' is reserved"));
  }
};

// Parse the next token as an identifier. If `liberal` is true (used
// when parsing properties), it will also convert keywords into
// identifiers.

pp$3.parseIdent = function(liberal, isBinding) {
  var node = this.startNode();
  if (liberal && this.options.allowReserved === "never") { liberal = false; }
  if (this.type === types.name) {
    node.name = this.value;
  } else if (this.type.keyword) {
    node.name = this.type.keyword;

    // To fix https://github.com/acornjs/acorn/issues/575
    // `class` and `function` keywords push new context into this.context.
    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.
    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword
    if ((node.name === "class" || node.name === "function") &&
        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {
      this.context.pop();
    }
  } else {
    this.unexpected();
  }
  this.next();
  this.finishNode(node, "Identifier");
  if (!liberal) { this.checkUnreserved(node); }
  return node
};

// Parses yield expression inside generator.

pp$3.parseYield = function() {
  if (!this.yieldPos) { this.yieldPos = this.start; }

  var node = this.startNode();
  this.next();
  if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {
    node.delegate = false;
    node.argument = null;
  } else {
    node.delegate = this.eat(types.star);
    node.argument = this.parseMaybeAssign();
  }
  return this.finishNode(node, "YieldExpression")
};

pp$3.parseAwait = function() {
  if (!this.awaitPos) { this.awaitPos = this.start; }

  var node = this.startNode();
  this.next();
  node.argument = this.parseMaybeUnary(null, true);
  return this.finishNode(node, "AwaitExpression")
};

var pp$4 = Parser.prototype;

// This function is used to raise exceptions on parse errors. It
// takes an offset integer (into the current `input`) to indicate
// the location of the error, attaches the position to the end
// of the error message, and then raises a `SyntaxError` with that
// message.

pp$4.raise = function(pos, message) {
  var loc = getLineInfo(this.input, pos);
  message += " (" + loc.line + ":" + loc.column + ")";
  var err = new SyntaxError(message);
  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;
  throw err
};

pp$4.raiseRecoverable = pp$4.raise;

pp$4.curPosition = function() {
  if (this.options.locations) {
    return new Position(this.curLine, this.pos - this.lineStart)
  }
};

var pp$5 = Parser.prototype;

// Object.assign polyfill
var acorn_es_assign = Object.assign || function(target) {
  var sources = [], len = arguments.length - 1;
  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];

  for (var i = 0, list = sources; i < list.length; i += 1) {
    var source = list[i];

    for (var key in source) {
      if (has(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target
};

// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.

pp$5.enterFunctionScope = function() {
  // var: a hash of var-declared names in the current lexical scope
  // lexical: a hash of lexically-declared names in the current lexical scope
  // childVar: a hash of var-declared names in all child lexical scopes of the current lexical scope (within the current function scope)
  // parentLexical: a hash of lexically-declared names in all parent lexical scopes of the current lexical scope (within the current function scope)
  this.scopeStack.push({var: {}, lexical: {}, childVar: {}, parentLexical: {}});
};

pp$5.exitFunctionScope = function() {
  this.scopeStack.pop();
};

pp$5.enterLexicalScope = function() {
  var parentScope = this.scopeStack[this.scopeStack.length - 1];
  var childScope = {var: {}, lexical: {}, childVar: {}, parentLexical: {}};

  this.scopeStack.push(childScope);
  acorn_es_assign(childScope.parentLexical, parentScope.lexical, parentScope.parentLexical);
};

pp$5.exitLexicalScope = function() {
  var childScope = this.scopeStack.pop();
  var parentScope = this.scopeStack[this.scopeStack.length - 1];

  acorn_es_assign(parentScope.childVar, childScope.var, childScope.childVar);
};

/**
 * A name can be declared with `var` if there are no variables with the same name declared with `let`/`const`
 * in the current lexical scope or any of the parent lexical scopes in this function.
 */
pp$5.canDeclareVarName = function(name) {
  var currentScope = this.scopeStack[this.scopeStack.length - 1];

  return !has(currentScope.lexical, name) && !has(currentScope.parentLexical, name)
};

/**
 * A name can be declared with `let`/`const` if there are no variables with the same name declared with `let`/`const`
 * in the current scope, and there are no variables with the same name declared with `var` in the current scope or in
 * any child lexical scopes in this function.
 */
pp$5.canDeclareLexicalName = function(name) {
  var currentScope = this.scopeStack[this.scopeStack.length - 1];

  return !has(currentScope.lexical, name) && !has(currentScope.var, name) && !has(currentScope.childVar, name)
};

pp$5.declareVarName = function(name) {
  this.scopeStack[this.scopeStack.length - 1].var[name] = true;
};

pp$5.declareLexicalName = function(name) {
  this.scopeStack[this.scopeStack.length - 1].lexical[name] = true;
};

var Node = function Node(parser, pos, loc) {
  this.type = "";
  this.start = pos;
  this.end = 0;
  if (parser.options.locations)
    { this.loc = new SourceLocation(parser, loc); }
  if (parser.options.directSourceFile)
    { this.sourceFile = parser.options.directSourceFile; }
  if (parser.options.ranges)
    { this.range = [pos, 0]; }
};

// Start an AST node, attaching a start offset.

var pp$6 = Parser.prototype;

pp$6.startNode = function() {
  return new Node(this, this.start, this.startLoc)
};

pp$6.startNodeAt = function(pos, loc) {
  return new Node(this, pos, loc)
};

// Finish an AST node, adding `type` and `end` properties.

function finishNodeAt(node, type, pos, loc) {
  node.type = type;
  node.end = pos;
  if (this.options.locations)
    { node.loc.end = loc; }
  if (this.options.ranges)
    { node.range[1] = pos; }
  return node
}

pp$6.finishNode = function(node, type) {
  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)
};

// Finish node at given position

pp$6.finishNodeAt = function(node, type, pos, loc) {
  return finishNodeAt.call(this, node, type, pos, loc)
};

// The algorithm used to determine whether a regexp can appear at a
// given point in the program is loosely based on sweet.js' approach.
// See https://github.com/mozilla/sweet.js/wiki/design

var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {
  this.token = token;
  this.isExpr = !!isExpr;
  this.preserveSpace = !!preserveSpace;
  this.override = override;
  this.generator = !!generator;
};

var types$1 = {
  b_stat: new TokContext("{", false),
  b_expr: new TokContext("{", true),
  b_tmpl: new TokContext("${", false),
  p_stat: new TokContext("(", false),
  p_expr: new TokContext("(", true),
  q_tmpl: new TokContext("`", true, true, function (p) { return p.tryReadTemplateToken(); }),
  f_stat: new TokContext("function", false),
  f_expr: new TokContext("function", true),
  f_expr_gen: new TokContext("function", true, false, null, true),
  f_gen: new TokContext("function", false, false, null, true)
};

var pp$7 = Parser.prototype;

pp$7.initialContext = function() {
  return [types$1.b_stat]
};

pp$7.braceIsBlock = function(prevType) {
  var parent = this.curContext();
  if (parent === types$1.f_expr || parent === types$1.f_stat)
    { return true }
  if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))
    { return !parent.isExpr }

  // The check for `tt.name && exprAllowed` detects whether we are
  // after a `yield` or `of` construct. See the `updateContext` for
  // `tt.name`.
  if (prevType === types._return || prevType === types.name && this.exprAllowed)
    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }
  if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)
    { return true }
  if (prevType === types.braceL)
    { return parent === types$1.b_stat }
  if (prevType === types._var || prevType === types.name)
    { return false }
  return !this.exprAllowed
};

pp$7.inGeneratorContext = function() {
  var this$1 = this;

  for (var i = this.context.length - 1; i >= 1; i--) {
    var context = this$1.context[i];
    if (context.token === "function")
      { return context.generator }
  }
  return false
};

pp$7.updateContext = function(prevType) {
  var update, type = this.type;
  if (type.keyword && prevType === types.dot)
    { this.exprAllowed = false; }
  else if (update = type.updateContext)
    { update.call(this, prevType); }
  else
    { this.exprAllowed = type.beforeExpr; }
};

// Token-specific context update code

types.parenR.updateContext = types.braceR.updateContext = function() {
  if (this.context.length === 1) {
    this.exprAllowed = true;
    return
  }
  var out = this.context.pop();
  if (out === types$1.b_stat && this.curContext().token === "function") {
    out = this.context.pop();
  }
  this.exprAllowed = !out.isExpr;
};

types.braceL.updateContext = function(prevType) {
  this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);
  this.exprAllowed = true;
};

types.dollarBraceL.updateContext = function() {
  this.context.push(types$1.b_tmpl);
  this.exprAllowed = true;
};

types.parenL.updateContext = function(prevType) {
  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;
  this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);
  this.exprAllowed = true;
};

types.incDec.updateContext = function() {
  // tokExprAllowed stays unchanged
};

types._function.updateContext = types._class.updateContext = function(prevType) {
  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&
      !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))
    { this.context.push(types$1.f_expr); }
  else
    { this.context.push(types$1.f_stat); }
  this.exprAllowed = false;
};

types.backQuote.updateContext = function() {
  if (this.curContext() === types$1.q_tmpl)
    { this.context.pop(); }
  else
    { this.context.push(types$1.q_tmpl); }
  this.exprAllowed = false;
};

types.star.updateContext = function(prevType) {
  if (prevType === types._function) {
    var index = this.context.length - 1;
    if (this.context[index] === types$1.f_expr)
      { this.context[index] = types$1.f_expr_gen; }
    else
      { this.context[index] = types$1.f_gen; }
  }
  this.exprAllowed = true;
};

types.name.updateContext = function(prevType) {
  var allowed = false;
  if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {
    if (this.value === "of" && !this.exprAllowed ||
        this.value === "yield" && this.inGeneratorContext())
      { allowed = true; }
  }
  this.exprAllowed = allowed;
};

var data = {
  "$LONE": [
    "ASCII",
    "ASCII_Hex_Digit",
    "AHex",
    "Alphabetic",
    "Alpha",
    "Any",
    "Assigned",
    "Bidi_Control",
    "Bidi_C",
    "Bidi_Mirrored",
    "Bidi_M",
    "Case_Ignorable",
    "CI",
    "Cased",
    "Changes_When_Casefolded",
    "CWCF",
    "Changes_When_Casemapped",
    "CWCM",
    "Changes_When_Lowercased",
    "CWL",
    "Changes_When_NFKC_Casefolded",
    "CWKCF",
    "Changes_When_Titlecased",
    "CWT",
    "Changes_When_Uppercased",
    "CWU",
    "Dash",
    "Default_Ignorable_Code_Point",
    "DI",
    "Deprecated",
    "Dep",
    "Diacritic",
    "Dia",
    "Emoji",
    "Emoji_Component",
    "Emoji_Modifier",
    "Emoji_Modifier_Base",
    "Emoji_Presentation",
    "Extender",
    "Ext",
    "Grapheme_Base",
    "Gr_Base",
    "Grapheme_Extend",
    "Gr_Ext",
    "Hex_Digit",
    "Hex",
    "IDS_Binary_Operator",
    "IDSB",
    "IDS_Trinary_Operator",
    "IDST",
    "ID_Continue",
    "IDC",
    "ID_Start",
    "IDS",
    "Ideographic",
    "Ideo",
    "Join_Control",
    "Join_C",
    "Logical_Order_Exception",
    "LOE",
    "Lowercase",
    "Lower",
    "Math",
    "Noncharacter_Code_Point",
    "NChar",
    "Pattern_Syntax",
    "Pat_Syn",
    "Pattern_White_Space",
    "Pat_WS",
    "Quotation_Mark",
    "QMark",
    "Radical",
    "Regional_Indicator",
    "RI",
    "Sentence_Terminal",
    "STerm",
    "Soft_Dotted",
    "SD",
    "Terminal_Punctuation",
    "Term",
    "Unified_Ideograph",
    "UIdeo",
    "Uppercase",
    "Upper",
    "Variation_Selector",
    "VS",
    "White_Space",
    "space",
    "XID_Continue",
    "XIDC",
    "XID_Start",
    "XIDS"
  ],
  "General_Category": [
    "Cased_Letter",
    "LC",
    "Close_Punctuation",
    "Pe",
    "Connector_Punctuation",
    "Pc",
    "Control",
    "Cc",
    "cntrl",
    "Currency_Symbol",
    "Sc",
    "Dash_Punctuation",
    "Pd",
    "Decimal_Number",
    "Nd",
    "digit",
    "Enclosing_Mark",
    "Me",
    "Final_Punctuation",
    "Pf",
    "Format",
    "Cf",
    "Initial_Punctuation",
    "Pi",
    "Letter",
    "L",
    "Letter_Number",
    "Nl",
    "Line_Separator",
    "Zl",
    "Lowercase_Letter",
    "Ll",
    "Mark",
    "M",
    "Combining_Mark",
    "Math_Symbol",
    "Sm",
    "Modifier_Letter",
    "Lm",
    "Modifier_Symbol",
    "Sk",
    "Nonspacing_Mark",
    "Mn",
    "Number",
    "N",
    "Open_Punctuation",
    "Ps",
    "Other",
    "C",
    "Other_Letter",
    "Lo",
    "Other_Number",
    "No",
    "Other_Punctuation",
    "Po",
    "Other_Symbol",
    "So",
    "Paragraph_Separator",
    "Zp",
    "Private_Use",
    "Co",
    "Punctuation",
    "P",
    "punct",
    "Separator",
    "Z",
    "Space_Separator",
    "Zs",
    "Spacing_Mark",
    "Mc",
    "Surrogate",
    "Cs",
    "Symbol",
    "S",
    "Titlecase_Letter",
    "Lt",
    "Unassigned",
    "Cn",
    "Uppercase_Letter",
    "Lu"
  ],
  "Script": [
    "Adlam",
    "Adlm",
    "Ahom",
    "Anatolian_Hieroglyphs",
    "Hluw",
    "Arabic",
    "Arab",
    "Armenian",
    "Armn",
    "Avestan",
    "Avst",
    "Balinese",
    "Bali",
    "Bamum",
    "Bamu",
    "Bassa_Vah",
    "Bass",
    "Batak",
    "Batk",
    "Bengali",
    "Beng",
    "Bhaiksuki",
    "Bhks",
    "Bopomofo",
    "Bopo",
    "Brahmi",
    "Brah",
    "Braille",
    "Brai",
    "Buginese",
    "Bugi",
    "Buhid",
    "Buhd",
    "Canadian_Aboriginal",
    "Cans",
    "Carian",
    "Cari",
    "Caucasian_Albanian",
    "Aghb",
    "Chakma",
    "Cakm",
    "Cham",
    "Cherokee",
    "Cher",
    "Common",
    "Zyyy",
    "Coptic",
    "Copt",
    "Qaac",
    "Cuneiform",
    "Xsux",
    "Cypriot",
    "Cprt",
    "Cyrillic",
    "Cyrl",
    "Deseret",
    "Dsrt",
    "Devanagari",
    "Deva",
    "Duployan",
    "Dupl",
    "Egyptian_Hieroglyphs",
    "Egyp",
    "Elbasan",
    "Elba",
    "Ethiopic",
    "Ethi",
    "Georgian",
    "Geor",
    "Glagolitic",
    "Glag",
    "Gothic",
    "Goth",
    "Grantha",
    "Gran",
    "Greek",
    "Grek",
    "Gujarati",
    "Gujr",
    "Gurmukhi",
    "Guru",
    "Han",
    "Hani",
    "Hangul",
    "Hang",
    "Hanunoo",
    "Hano",
    "Hatran",
    "Hatr",
    "Hebrew",
    "Hebr",
    "Hiragana",
    "Hira",
    "Imperial_Aramaic",
    "Armi",
    "Inherited",
    "Zinh",
    "Qaai",
    "Inscriptional_Pahlavi",
    "Phli",
    "Inscriptional_Parthian",
    "Prti",
    "Javanese",
    "Java",
    "Kaithi",
    "Kthi",
    "Kannada",
    "Knda",
    "Katakana",
    "Kana",
    "Kayah_Li",
    "Kali",
    "Kharoshthi",
    "Khar",
    "Khmer",
    "Khmr",
    "Khojki",
    "Khoj",
    "Khudawadi",
    "Sind",
    "Lao",
    "Laoo",
    "Latin",
    "Latn",
    "Lepcha",
    "Lepc",
    "Limbu",
    "Limb",
    "Linear_A",
    "Lina",
    "Linear_B",
    "Linb",
    "Lisu",
    "Lycian",
    "Lyci",
    "Lydian",
    "Lydi",
    "Mahajani",
    "Mahj",
    "Malayalam",
    "Mlym",
    "Mandaic",
    "Mand",
    "Manichaean",
    "Mani",
    "Marchen",
    "Marc",
    "Masaram_Gondi",
    "Gonm",
    "Meetei_Mayek",
    "Mtei",
    "Mende_Kikakui",
    "Mend",
    "Meroitic_Cursive",
    "Merc",
    "Meroitic_Hieroglyphs",
    "Mero",
    "Miao",
    "Plrd",
    "Modi",
    "Mongolian",
    "Mong",
    "Mro",
    "Mroo",
    "Multani",
    "Mult",
    "Myanmar",
    "Mymr",
    "Nabataean",
    "Nbat",
    "New_Tai_Lue",
    "Talu",
    "Newa",
    "Nko",
    "Nkoo",
    "Nushu",
    "Nshu",
    "Ogham",
    "Ogam",
    "Ol_Chiki",
    "Olck",
    "Old_Hungarian",
    "Hung",
    "Old_Italic",
    "Ital",
    "Old_North_Arabian",
    "Narb",
    "Old_Permic",
    "Perm",
    "Old_Persian",
    "Xpeo",
    "Old_South_Arabian",
    "Sarb",
    "Old_Turkic",
    "Orkh",
    "Oriya",
    "Orya",
    "Osage",
    "Osge",
    "Osmanya",
    "Osma",
    "Pahawh_Hmong",
    "Hmng",
    "Palmyrene",
    "Palm",
    "Pau_Cin_Hau",
    "Pauc",
    "Phags_Pa",
    "Phag",
    "Phoenician",
    "Phnx",
    "Psalter_Pahlavi",
    "Phlp",
    "Rejang",
    "Rjng",
    "Runic",
    "Runr",
    "Samaritan",
    "Samr",
    "Saurashtra",
    "Saur",
    "Sharada",
    "Shrd",
    "Shavian",
    "Shaw",
    "Siddham",
    "Sidd",
    "SignWriting",
    "Sgnw",
    "Sinhala",
    "Sinh",
    "Sora_Sompeng",
    "Sora",
    "Soyombo",
    "Soyo",
    "Sundanese",
    "Sund",
    "Syloti_Nagri",
    "Sylo",
    "Syriac",
    "Syrc",
    "Tagalog",
    "Tglg",
    "Tagbanwa",
    "Tagb",
    "Tai_Le",
    "Tale",
    "Tai_Tham",
    "Lana",
    "Tai_Viet",
    "Tavt",
    "Takri",
    "Takr",
    "Tamil",
    "Taml",
    "Tangut",
    "Tang",
    "Telugu",
    "Telu",
    "Thaana",
    "Thaa",
    "Thai",
    "Tibetan",
    "Tibt",
    "Tifinagh",
    "Tfng",
    "Tirhuta",
    "Tirh",
    "Ugaritic",
    "Ugar",
    "Vai",
    "Vaii",
    "Warang_Citi",
    "Wara",
    "Yi",
    "Yiii",
    "Zanabazar_Square",
    "Zanb"
  ]
};
Array.prototype.push.apply(data.$LONE, data.General_Category);
data.gc = data.General_Category;
data.sc = data.Script_Extensions = data.scx = data.Script;

var pp$9 = Parser.prototype;

var RegExpValidationState = function RegExpValidationState(parser) {
  this.parser = parser;
  this.validFlags = "gim" + (parser.options.ecmaVersion >= 6 ? "uy" : "") + (parser.options.ecmaVersion >= 9 ? "s" : "");
  this.source = "";
  this.flags = "";
  this.start = 0;
  this.switchU = false;
  this.switchN = false;
  this.pos = 0;
  this.lastIntValue = 0;
  this.lastStringValue = "";
  this.lastAssertionIsQuantifiable = false;
  this.numCapturingParens = 0;
  this.maxBackReference = 0;
  this.groupNames = [];
  this.backReferenceNames = [];
};

RegExpValidationState.prototype.reset = function reset (start, pattern, flags) {
  var unicode = flags.indexOf("u") !== -1;
  this.start = start | 0;
  this.source = pattern + "";
  this.flags = flags;
  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;
  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;
};

RegExpValidationState.prototype.raise = function raise (message) {
  this.parser.raiseRecoverable(this.start, ("Invalid regular expression: /" + (this.source) + "/: " + message));
};

// If u flag is given, this returns the code point at the index (it combines a surrogate pair).
// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).
RegExpValidationState.prototype.at = function at (i) {
  var s = this.source;
  var l = s.length;
  if (i >= l) {
    return -1
  }
  var c = s.charCodeAt(i);
  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {
    return c
  }
  return (c << 10) + s.charCodeAt(i + 1) - 0x35FDC00
};

RegExpValidationState.prototype.nextIndex = function nextIndex (i) {
  var s = this.source;
  var l = s.length;
  if (i >= l) {
    return l
  }
  var c = s.charCodeAt(i);
  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {
    return i + 1
  }
  return i + 2
};

RegExpValidationState.prototype.current = function current () {
  return this.at(this.pos)
};

RegExpValidationState.prototype.lookahead = function lookahead () {
  return this.at(this.nextIndex(this.pos))
};

RegExpValidationState.prototype.advance = function advance () {
  this.pos = this.nextIndex(this.pos);
};

RegExpValidationState.prototype.eat = function eat (ch) {
  if (this.current() === ch) {
    this.advance();
    return true
  }
  return false
};

function codePointToString$1(ch) {
  if (ch <= 0xFFFF) { return String.fromCharCode(ch) }
  ch -= 0x10000;
  return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)
}

/**
 * Validate the flags part of a given RegExpLiteral.
 *
 * @param {RegExpValidationState} state The state to validate RegExp.
 * @returns {void}
 */
pp$9.validateRegExpFlags = function(state) {
  var this$1 = this;

  var validFlags = state.validFlags;
  var flags = state.flags;

  for (var i = 0; i < flags.length; i++) {
    var flag = flags.charAt(i);
    if (validFlags.indexOf(flag) === -1) {
      this$1.raise(state.start, "Invalid regular expression flag");
    }
    if (flags.indexOf(flag, i + 1) > -1) {
      this$1.raise(state.start, "Duplicate regular expression flag");
    }
  }
};

/**
 * Validate the pattern part of a given RegExpLiteral.
 *
 * @param {RegExpValidationState} state The state to validate RegExp.
 * @returns {void}
 */
pp$9.validateRegExpPattern = function(state) {
  this.regexp_pattern(state);

  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of
  // parsing contains a |GroupName|, reparse with the goal symbol
  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*
  // exception if _P_ did not conform to the grammar, if any elements of _P_
  // were not matched by the parse, or if any Early Error conditions exist.
  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {
    state.switchN = true;
    this.regexp_pattern(state);
  }
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern
pp$9.regexp_pattern = function(state) {
  state.pos = 0;
  state.lastIntValue = 0;
  state.lastStringValue = "";
  state.lastAssertionIsQuantifiable = false;
  state.numCapturingParens = 0;
  state.maxBackReference = 0;
  state.groupNames.length = 0;
  state.backReferenceNames.length = 0;

  this.regexp_disjunction(state);

  if (state.pos !== state.source.length) {
    // Make the same messages as V8.
    if (state.eat(0x29 /* ) */)) {
      state.raise("Unmatched ')'");
    }
    if (state.eat(0x5D /* [ */) || state.eat(0x7D /* } */)) {
      state.raise("Lone quantifier brackets");
    }
  }
  if (state.maxBackReference > state.numCapturingParens) {
    state.raise("Invalid escape");
  }
  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {
    var name = list[i];

    if (state.groupNames.indexOf(name) === -1) {
      state.raise("Invalid named capture referenced");
    }
  }
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction
pp$9.regexp_disjunction = function(state) {
  var this$1 = this;

  this.regexp_alternative(state);
  while (state.eat(0x7C /* | */)) {
    this$1.regexp_alternative(state);
  }

  // Make the same message as V8.
  if (this.regexp_eatQuantifier(state, true)) {
    state.raise("Nothing to repeat");
  }
  if (state.eat(0x7B /* { */)) {
    state.raise("Lone quantifier brackets");
  }
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative
pp$9.regexp_alternative = function(state) {
  while (state.pos < state.source.length && this.regexp_eatTerm(state))
    {  }
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term
pp$9.regexp_eatTerm = function(state) {
  if (this.regexp_eatAssertion(state)) {
    // Handle `QuantifiableAssertion Quantifier` alternative.
    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion
    // is a QuantifiableAssertion.
    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {
      // Make the same message as V8.
      if (state.switchU) {
        state.raise("Invalid quantifier");
      }
    }
    return true
  }

  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {
    this.regexp_eatQuantifier(state);
    return true
  }

  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion
pp$9.regexp_eatAssertion = function(state) {
  var start = state.pos;
  state.lastAssertionIsQuantifiable = false;

  // ^, $
  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {
    return true
  }

  // \b \B
  if (state.eat(0x5C /* \ */)) {
    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {
      return true
    }
    state.pos = start;
  }

  // Lookahead / Lookbehind
  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {
    var lookbehind = false;
    if (this.options.ecmaVersion >= 9) {
      lookbehind = state.eat(0x3C /* < */);
    }
    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {
      this.regexp_disjunction(state);
      if (!state.eat(0x29 /* ) */)) {
        state.raise("Unterminated group");
      }
      state.lastAssertionIsQuantifiable = !lookbehind;
      return true
    }
  }

  state.pos = start;
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier
pp$9.regexp_eatQuantifier = function(state, noError) {
  if ( noError === void 0 ) noError = false;

  if (this.regexp_eatQuantifierPrefix(state, noError)) {
    state.eat(0x3F /* ? */);
    return true
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix
pp$9.regexp_eatQuantifierPrefix = function(state, noError) {
  return (
    state.eat(0x2A /* * */) ||
    state.eat(0x2B /* + */) ||
    state.eat(0x3F /* ? */) ||
    this.regexp_eatBracedQuantifier(state, noError)
  )
};
pp$9.regexp_eatBracedQuantifier = function(state, noError) {
  var start = state.pos;
  if (state.eat(0x7B /* { */)) {
    var min = 0, max = -1;
    if (this.regexp_eatDecimalDigits(state)) {
      min = state.lastIntValue;
      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {
        max = state.lastIntValue;
      }
      if (state.eat(0x7D /* } */)) {
        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term
        if (max !== -1 && max < min && !noError) {
          state.raise("numbers out of order in {} quantifier");
        }
        return true
      }
    }
    if (state.switchU && !noError) {
      state.raise("Incomplete quantifier");
    }
    state.pos = start;
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom
pp$9.regexp_eatAtom = function(state) {
  return (
    this.regexp_eatPatternCharacters(state) ||
    state.eat(0x2E /* . */) ||
    this.regexp_eatReverseSolidusAtomEscape(state) ||
    this.regexp_eatCharacterClass(state) ||
    this.regexp_eatUncapturingGroup(state) ||
    this.regexp_eatCapturingGroup(state)
  )
};
pp$9.regexp_eatReverseSolidusAtomEscape = function(state) {
  var start = state.pos;
  if (state.eat(0x5C /* \ */)) {
    if (this.regexp_eatAtomEscape(state)) {
      return true
    }
    state.pos = start;
  }
  return false
};
pp$9.regexp_eatUncapturingGroup = function(state) {
  var start = state.pos;
  if (state.eat(0x28 /* ( */)) {
    if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {
      this.regexp_disjunction(state);
      if (state.eat(0x29 /* ) */)) {
        return true
      }
      state.raise("Unterminated group");
    }
    state.pos = start;
  }
  return false
};
pp$9.regexp_eatCapturingGroup = function(state) {
  if (state.eat(0x28 /* ( */)) {
    if (this.options.ecmaVersion >= 9) {
      this.regexp_groupSpecifier(state);
    } else if (state.current() === 0x3F /* ? */) {
      state.raise("Invalid group");
    }
    this.regexp_disjunction(state);
    if (state.eat(0x29 /* ) */)) {
      state.numCapturingParens += 1;
      return true
    }
    state.raise("Unterminated group");
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom
pp$9.regexp_eatExtendedAtom = function(state) {
  return (
    state.eat(0x2E /* . */) ||
    this.regexp_eatReverseSolidusAtomEscape(state) ||
    this.regexp_eatCharacterClass(state) ||
    this.regexp_eatUncapturingGroup(state) ||
    this.regexp_eatCapturingGroup(state) ||
    this.regexp_eatInvalidBracedQuantifier(state) ||
    this.regexp_eatExtendedPatternCharacter(state)
  )
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier
pp$9.regexp_eatInvalidBracedQuantifier = function(state) {
  if (this.regexp_eatBracedQuantifier(state, true)) {
    state.raise("Nothing to repeat");
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter
pp$9.regexp_eatSyntaxCharacter = function(state) {
  var ch = state.current();
  if (isSyntaxCharacter(ch)) {
    state.lastIntValue = ch;
    state.advance();
    return true
  }
  return false
};
function isSyntaxCharacter(ch) {
  return (
    ch === 0x24 /* $ */ ||
    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||
    ch === 0x2E /* . */ ||
    ch === 0x3F /* ? */ ||
    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||
    ch >= 0x7B /* { */ && ch <= 0x7D /* } */
  )
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter
// But eat eager.
pp$9.regexp_eatPatternCharacters = function(state) {
  var start = state.pos;
  var ch = 0;
  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {
    state.advance();
  }
  return state.pos !== start
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter
pp$9.regexp_eatExtendedPatternCharacter = function(state) {
  var ch = state.current();
  if (
    ch !== -1 &&
    ch !== 0x24 /* $ */ &&
    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&
    ch !== 0x2E /* . */ &&
    ch !== 0x3F /* ? */ &&
    ch !== 0x5B /* [ */ &&
    ch !== 0x5E /* ^ */ &&
    ch !== 0x7C /* | */
  ) {
    state.advance();
    return true
  }
  return false
};

// GroupSpecifier[U] ::
//   [empty]
//   `?` GroupName[?U]
pp$9.regexp_groupSpecifier = function(state) {
  if (state.eat(0x3F /* ? */)) {
    if (this.regexp_eatGroupName(state)) {
      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {
        state.raise("Duplicate capture group name");
      }
      state.groupNames.push(state.lastStringValue);
      return
    }
    state.raise("Invalid group");
  }
};

// GroupName[U] ::
//   `<` RegExpIdentifierName[?U] `>`
// Note: this updates `state.lastStringValue` property with the eaten name.
pp$9.regexp_eatGroupName = function(state) {
  state.lastStringValue = "";
  if (state.eat(0x3C /* < */)) {
    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {
      return true
    }
    state.raise("Invalid capture group name");
  }
  return false
};

// RegExpIdentifierName[U] ::
//   RegExpIdentifierStart[?U]
//   RegExpIdentifierName[?U] RegExpIdentifierPart[?U]
// Note: this updates `state.lastStringValue` property with the eaten name.
pp$9.regexp_eatRegExpIdentifierName = function(state) {
  state.lastStringValue = "";
  if (this.regexp_eatRegExpIdentifierStart(state)) {
    state.lastStringValue += codePointToString$1(state.lastIntValue);
    while (this.regexp_eatRegExpIdentifierPart(state)) {
      state.lastStringValue += codePointToString$1(state.lastIntValue);
    }
    return true
  }
  return false
};

// RegExpIdentifierStart[U] ::
//   UnicodeIDStart
//   `$`
//   `_`
//   `\` RegExpUnicodeEscapeSequence[?U]
pp$9.regexp_eatRegExpIdentifierStart = function(state) {
  var start = state.pos;
  var ch = state.current();
  state.advance();

  if (ch === 0x5C /* \ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {
    ch = state.lastIntValue;
  }
  if (isRegExpIdentifierStart(ch)) {
    state.lastIntValue = ch;
    return true
  }

  state.pos = start;
  return false
};
function isRegExpIdentifierStart(ch) {
  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */
}

// RegExpIdentifierPart[U] ::
//   UnicodeIDContinue
//   `$`
//   `_`
//   `\` RegExpUnicodeEscapeSequence[?U]
//   <ZWNJ>
//   <ZWJ>
pp$9.regexp_eatRegExpIdentifierPart = function(state) {
  var start = state.pos;
  var ch = state.current();
  state.advance();

  if (ch === 0x5C /* \ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {
    ch = state.lastIntValue;
  }
  if (isRegExpIdentifierPart(ch)) {
    state.lastIntValue = ch;
    return true
  }

  state.pos = start;
  return false
};
function isRegExpIdentifierPart(ch) {
  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape
pp$9.regexp_eatAtomEscape = function(state) {
  if (
    this.regexp_eatBackReference(state) ||
    this.regexp_eatCharacterClassEscape(state) ||
    this.regexp_eatCharacterEscape(state) ||
    (state.switchN && this.regexp_eatKGroupName(state))
  ) {
    return true
  }
  if (state.switchU) {
    // Make the same message as V8.
    if (state.current() === 0x63 /* c */) {
      state.raise("Invalid unicode escape");
    }
    state.raise("Invalid escape");
  }
  return false
};
pp$9.regexp_eatBackReference = function(state) {
  var start = state.pos;
  if (this.regexp_eatDecimalEscape(state)) {
    var n = state.lastIntValue;
    if (state.switchU) {
      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape
      if (n > state.maxBackReference) {
        state.maxBackReference = n;
      }
      return true
    }
    if (n <= state.numCapturingParens) {
      return true
    }
    state.pos = start;
  }
  return false
};
pp$9.regexp_eatKGroupName = function(state) {
  if (state.eat(0x6B /* k */)) {
    if (this.regexp_eatGroupName(state)) {
      state.backReferenceNames.push(state.lastStringValue);
      return true
    }
    state.raise("Invalid named reference");
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape
pp$9.regexp_eatCharacterEscape = function(state) {
  return (
    this.regexp_eatControlEscape(state) ||
    this.regexp_eatCControlLetter(state) ||
    this.regexp_eatZero(state) ||
    this.regexp_eatHexEscapeSequence(state) ||
    this.regexp_eatRegExpUnicodeEscapeSequence(state) ||
    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||
    this.regexp_eatIdentityEscape(state)
  )
};
pp$9.regexp_eatCControlLetter = function(state) {
  var start = state.pos;
  if (state.eat(0x63 /* c */)) {
    if (this.regexp_eatControlLetter(state)) {
      return true
    }
    state.pos = start;
  }
  return false
};
pp$9.regexp_eatZero = function(state) {
  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {
    state.lastIntValue = 0;
    state.advance();
    return true
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape
pp$9.regexp_eatControlEscape = function(state) {
  var ch = state.current();
  if (ch === 0x74 /* t */) {
    state.lastIntValue = 0x09; /* \t */
    state.advance();
    return true
  }
  if (ch === 0x6E /* n */) {
    state.lastIntValue = 0x0A; /* \n */
    state.advance();
    return true
  }
  if (ch === 0x76 /* v */) {
    state.lastIntValue = 0x0B; /* \v */
    state.advance();
    return true
  }
  if (ch === 0x66 /* f */) {
    state.lastIntValue = 0x0C; /* \f */
    state.advance();
    return true
  }
  if (ch === 0x72 /* r */) {
    state.lastIntValue = 0x0D; /* \r */
    state.advance();
    return true
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter
pp$9.regexp_eatControlLetter = function(state) {
  var ch = state.current();
  if (isControlLetter(ch)) {
    state.lastIntValue = ch % 0x20;
    state.advance();
    return true
  }
  return false
};
function isControlLetter(ch) {
  return (
    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||
    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)
  )
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence
pp$9.regexp_eatRegExpUnicodeEscapeSequence = function(state) {
  var start = state.pos;

  if (state.eat(0x75 /* u */)) {
    if (this.regexp_eatFixedHexDigits(state, 4)) {
      var lead = state.lastIntValue;
      if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {
        var leadSurrogateEnd = state.pos;
        if (state.eat(0x5C /* \ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {
          var trail = state.lastIntValue;
          if (trail >= 0xDC00 && trail <= 0xDFFF) {
            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;
            return true
          }
        }
        state.pos = leadSurrogateEnd;
        state.lastIntValue = lead;
      }
      return true
    }
    if (
      state.switchU &&
      state.eat(0x7B /* { */) &&
      this.regexp_eatHexDigits(state) &&
      state.eat(0x7D /* } */) &&
      isValidUnicode(state.lastIntValue)
    ) {
      return true
    }
    if (state.switchU) {
      state.raise("Invalid unicode escape");
    }
    state.pos = start;
  }

  return false
};
function isValidUnicode(ch) {
  return ch >= 0 && ch <= 0x10FFFF
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape
pp$9.regexp_eatIdentityEscape = function(state) {
  if (state.switchU) {
    if (this.regexp_eatSyntaxCharacter(state)) {
      return true
    }
    if (state.eat(0x2F /* / */)) {
      state.lastIntValue = 0x2F; /* / */
      return true
    }
    return false
  }

  var ch = state.current();
  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {
    state.lastIntValue = ch;
    state.advance();
    return true
  }

  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape
pp$9.regexp_eatDecimalEscape = function(state) {
  state.lastIntValue = 0;
  var ch = state.current();
  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {
    do {
      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);
      state.advance();
    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)
    return true
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape
pp$9.regexp_eatCharacterClassEscape = function(state) {
  var ch = state.current();

  if (isCharacterClassEscape(ch)) {
    state.lastIntValue = -1;
    state.advance();
    return true
  }

  if (
    state.switchU &&
    this.options.ecmaVersion >= 9 &&
    (ch === 0x50 /* P */ || ch === 0x70 /* p */)
  ) {
    state.lastIntValue = -1;
    state.advance();
    if (
      state.eat(0x7B /* { */) &&
      this.regexp_eatUnicodePropertyValueExpression(state) &&
      state.eat(0x7D /* } */)
    ) {
      return true
    }
    state.raise("Invalid property name");
  }

  return false
};
function isCharacterClassEscape(ch) {
  return (
    ch === 0x64 /* d */ ||
    ch === 0x44 /* D */ ||
    ch === 0x73 /* s */ ||
    ch === 0x53 /* S */ ||
    ch === 0x77 /* w */ ||
    ch === 0x57 /* W */
  )
}

// UnicodePropertyValueExpression ::
//   UnicodePropertyName `=` UnicodePropertyValue
//   LoneUnicodePropertyNameOrValue
pp$9.regexp_eatUnicodePropertyValueExpression = function(state) {
  var start = state.pos;

  // UnicodePropertyName `=` UnicodePropertyValue
  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {
    var name = state.lastStringValue;
    if (this.regexp_eatUnicodePropertyValue(state)) {
      var value = state.lastStringValue;
      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);
      return true
    }
  }
  state.pos = start;

  // LoneUnicodePropertyNameOrValue
  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {
    var nameOrValue = state.lastStringValue;
    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);
    return true
  }
  return false
};
pp$9.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {
  if (!data.hasOwnProperty(name) || data[name].indexOf(value) === -1) {
    state.raise("Invalid property name");
  }
};
pp$9.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {
  if (data.$LONE.indexOf(nameOrValue) === -1) {
    state.raise("Invalid property name");
  }
};

// UnicodePropertyName ::
//   UnicodePropertyNameCharacters
pp$9.regexp_eatUnicodePropertyName = function(state) {
  var ch = 0;
  state.lastStringValue = "";
  while (isUnicodePropertyNameCharacter(ch = state.current())) {
    state.lastStringValue += codePointToString$1(ch);
    state.advance();
  }
  return state.lastStringValue !== ""
};
function isUnicodePropertyNameCharacter(ch) {
  return isControlLetter(ch) || ch === 0x5F /* _ */
}

// UnicodePropertyValue ::
//   UnicodePropertyValueCharacters
pp$9.regexp_eatUnicodePropertyValue = function(state) {
  var ch = 0;
  state.lastStringValue = "";
  while (isUnicodePropertyValueCharacter(ch = state.current())) {
    state.lastStringValue += codePointToString$1(ch);
    state.advance();
  }
  return state.lastStringValue !== ""
};
function isUnicodePropertyValueCharacter(ch) {
  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)
}

// LoneUnicodePropertyNameOrValue ::
//   UnicodePropertyValueCharacters
pp$9.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {
  return this.regexp_eatUnicodePropertyValue(state)
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass
pp$9.regexp_eatCharacterClass = function(state) {
  if (state.eat(0x5B /* [ */)) {
    state.eat(0x5E /* ^ */);
    this.regexp_classRanges(state);
    if (state.eat(0x5D /* [ */)) {
      return true
    }
    // Unreachable since it threw "unterminated regular expression" error before.
    state.raise("Unterminated character class");
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges
// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges
// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash
pp$9.regexp_classRanges = function(state) {
  var this$1 = this;

  while (this.regexp_eatClassAtom(state)) {
    var left = state.lastIntValue;
    if (state.eat(0x2D /* - */) && this$1.regexp_eatClassAtom(state)) {
      var right = state.lastIntValue;
      if (state.switchU && (left === -1 || right === -1)) {
        state.raise("Invalid character class");
      }
      if (left !== -1 && right !== -1 && left > right) {
        state.raise("Range out of order in character class");
      }
    }
  }
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom
// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash
pp$9.regexp_eatClassAtom = function(state) {
  var start = state.pos;

  if (state.eat(0x5C /* \ */)) {
    if (this.regexp_eatClassEscape(state)) {
      return true
    }
    if (state.switchU) {
      // Make the same message as V8.
      var ch$1 = state.current();
      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {
        state.raise("Invalid class escape");
      }
      state.raise("Invalid escape");
    }
    state.pos = start;
  }

  var ch = state.current();
  if (ch !== 0x5D /* [ */) {
    state.lastIntValue = ch;
    state.advance();
    return true
  }

  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape
pp$9.regexp_eatClassEscape = function(state) {
  var start = state.pos;

  if (state.eat(0x62 /* b */)) {
    state.lastIntValue = 0x08; /* <BS> */
    return true
  }

  if (state.switchU && state.eat(0x2D /* - */)) {
    state.lastIntValue = 0x2D; /* - */
    return true
  }

  if (!state.switchU && state.eat(0x63 /* c */)) {
    if (this.regexp_eatClassControlLetter(state)) {
      return true
    }
    state.pos = start;
  }

  return (
    this.regexp_eatCharacterClassEscape(state) ||
    this.regexp_eatCharacterEscape(state)
  )
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter
pp$9.regexp_eatClassControlLetter = function(state) {
  var ch = state.current();
  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {
    state.lastIntValue = ch % 0x20;
    state.advance();
    return true
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence
pp$9.regexp_eatHexEscapeSequence = function(state) {
  var start = state.pos;
  if (state.eat(0x78 /* x */)) {
    if (this.regexp_eatFixedHexDigits(state, 2)) {
      return true
    }
    if (state.switchU) {
      state.raise("Invalid escape");
    }
    state.pos = start;
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits
pp$9.regexp_eatDecimalDigits = function(state) {
  var start = state.pos;
  var ch = 0;
  state.lastIntValue = 0;
  while (isDecimalDigit(ch = state.current())) {
    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);
    state.advance();
  }
  return state.pos !== start
};
function isDecimalDigit(ch) {
  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits
pp$9.regexp_eatHexDigits = function(state) {
  var start = state.pos;
  var ch = 0;
  state.lastIntValue = 0;
  while (isHexDigit(ch = state.current())) {
    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);
    state.advance();
  }
  return state.pos !== start
};
function isHexDigit(ch) {
  return (
    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||
    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||
    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)
  )
}
function hexToInt(ch) {
  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {
    return 10 + (ch - 0x41 /* A */)
  }
  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {
    return 10 + (ch - 0x61 /* a */)
  }
  return ch - 0x30 /* 0 */
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence
// Allows only 0-377(octal) i.e. 0-255(decimal).
pp$9.regexp_eatLegacyOctalEscapeSequence = function(state) {
  if (this.regexp_eatOctalDigit(state)) {
    var n1 = state.lastIntValue;
    if (this.regexp_eatOctalDigit(state)) {
      var n2 = state.lastIntValue;
      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {
        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;
      } else {
        state.lastIntValue = n1 * 8 + n2;
      }
    } else {
      state.lastIntValue = n1;
    }
    return true
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit
pp$9.regexp_eatOctalDigit = function(state) {
  var ch = state.current();
  if (isOctalDigit(ch)) {
    state.lastIntValue = ch - 0x30; /* 0 */
    state.advance();
    return true
  }
  state.lastIntValue = 0;
  return false
};
function isOctalDigit(ch) {
  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits
// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit
// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence
pp$9.regexp_eatFixedHexDigits = function(state, length) {
  var start = state.pos;
  state.lastIntValue = 0;
  for (var i = 0; i < length; ++i) {
    var ch = state.current();
    if (!isHexDigit(ch)) {
      state.pos = start;
      return false
    }
    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);
    state.advance();
  }
  return true
};

// Object type used to represent tokens. Note that normally, tokens
// simply exist as properties on the parser object. This is only
// used for the onToken callback and the external tokenizer.

var Token = function Token(p) {
  this.type = p.type;
  this.value = p.value;
  this.start = p.start;
  this.end = p.end;
  if (p.options.locations)
    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }
  if (p.options.ranges)
    { this.range = [p.start, p.end]; }
};

// ## Tokenizer

var pp$8 = Parser.prototype;

// Move to the next token

pp$8.next = function() {
  if (this.options.onToken)
    { this.options.onToken(new Token(this)); }

  this.lastTokEnd = this.end;
  this.lastTokStart = this.start;
  this.lastTokEndLoc = this.endLoc;
  this.lastTokStartLoc = this.startLoc;
  this.nextToken();
};

pp$8.getToken = function() {
  this.next();
  return new Token(this)
};

// If we're in an ES6 environment, make parsers iterable
if (typeof Symbol !== "undefined")
  { pp$8[Symbol.iterator] = function() {
    var this$1 = this;

    return {
      next: function () {
        var token = this$1.getToken();
        return {
          done: token.type === types.eof,
          value: token
        }
      }
    }
  }; }

// Toggle strict mode. Re-reads the next number or string to please
// pedantic tests (`"use strict"; 010;` should fail).

pp$8.curContext = function() {
  return this.context[this.context.length - 1]
};

// Read a single token, updating the parser object's token-related
// properties.

pp$8.nextToken = function() {
  var curContext = this.curContext();
  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }

  this.start = this.pos;
  if (this.options.locations) { this.startLoc = this.curPosition(); }
  if (this.pos >= this.input.length) { return this.finishToken(types.eof) }

  if (curContext.override) { return curContext.override(this) }
  else { this.readToken(this.fullCharCodeAtPos()); }
};

pp$8.readToken = function(code) {
  // Identifier or keyword. '\uXXXX' sequences are allowed in
  // identifiers, so '\' also dispatches to that.
  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\' */)
    { return this.readWord() }

  return this.getTokenFromCode(code)
};

pp$8.fullCharCodeAtPos = function() {
  var code = this.input.charCodeAt(this.pos);
  if (code <= 0xd7ff || code >= 0xe000) { return code }
  var next = this.input.charCodeAt(this.pos + 1);
  return (code << 10) + next - 0x35fdc00
};

pp$8.skipBlockComment = function() {
  var this$1 = this;

  var startLoc = this.options.onComment && this.curPosition();
  var start = this.pos, end = this.input.indexOf("*/", this.pos += 2);
  if (end === -1) { this.raise(this.pos - 2, "Unterminated comment"); }
  this.pos = end + 2;
  if (this.options.locations) {
    lineBreakG.lastIndex = start;
    var match;
    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {
      ++this$1.curLine;
      this$1.lineStart = match.index + match[0].length;
    }
  }
  if (this.options.onComment)
    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,
                           startLoc, this.curPosition()); }
};

pp$8.skipLineComment = function(startSkip) {
  var this$1 = this;

  var start = this.pos;
  var startLoc = this.options.onComment && this.curPosition();
  var ch = this.input.charCodeAt(this.pos += startSkip);
  while (this.pos < this.input.length && !isNewLine(ch)) {
    ch = this$1.input.charCodeAt(++this$1.pos);
  }
  if (this.options.onComment)
    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,
                           startLoc, this.curPosition()); }
};

// Called at the start of the parse and after every token. Skips
// whitespace and comments, and.

pp$8.skipSpace = function() {
  var this$1 = this;

  loop: while (this.pos < this.input.length) {
    var ch = this$1.input.charCodeAt(this$1.pos);
    switch (ch) {
    case 32: case 160: // ' '
      ++this$1.pos;
      break
    case 13:
      if (this$1.input.charCodeAt(this$1.pos + 1) === 10) {
        ++this$1.pos;
      }
    case 10: case 8232: case 8233:
      ++this$1.pos;
      if (this$1.options.locations) {
        ++this$1.curLine;
        this$1.lineStart = this$1.pos;
      }
      break
    case 47: // '/'
      switch (this$1.input.charCodeAt(this$1.pos + 1)) {
      case 42: // '*'
        this$1.skipBlockComment();
        break
      case 47:
        this$1.skipLineComment(2);
        break
      default:
        break loop
      }
      break
    default:
      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {
        ++this$1.pos;
      } else {
        break loop
      }
    }
  }
};

// Called at the end of every token. Sets `end`, `val`, and
// maintains `context` and `exprAllowed`, and skips the space after
// the token, so that the next one's `start` will point at the
// right position.

pp$8.finishToken = function(type, val) {
  this.end = this.pos;
  if (this.options.locations) { this.endLoc = this.curPosition(); }
  var prevType = this.type;
  this.type = type;
  this.value = val;

  this.updateContext(prevType);
};

// ### Token reading

// This is the function that is called to fetch the next token. It
// is somewhat obscure, because it works in character codes rather
// than characters, and because operator parsing has been inlined
// into it.
//
// All in the name of speed.
//
pp$8.readToken_dot = function() {
  var next = this.input.charCodeAt(this.pos + 1);
  if (next >= 48 && next <= 57) { return this.readNumber(true) }
  var next2 = this.input.charCodeAt(this.pos + 2);
  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'
    this.pos += 3;
    return this.finishToken(types.ellipsis)
  } else {
    ++this.pos;
    return this.finishToken(types.dot)
  }
};

pp$8.readToken_slash = function() { // '/'
  var next = this.input.charCodeAt(this.pos + 1);
  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }
  if (next === 61) { return this.finishOp(types.assign, 2) }
  return this.finishOp(types.slash, 1)
};

pp$8.readToken_mult_modulo_exp = function(code) { // '%*'
  var next = this.input.charCodeAt(this.pos + 1);
  var size = 1;
  var tokentype = code === 42 ? types.star : types.modulo;

  // exponentiation operator ** and **=
  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {
    ++size;
    tokentype = types.starstar;
    next = this.input.charCodeAt(this.pos + 2);
  }

  if (next === 61) { return this.finishOp(types.assign, size + 1) }
  return this.finishOp(tokentype, size)
};

pp$8.readToken_pipe_amp = function(code) { // '|&'
  var next = this.input.charCodeAt(this.pos + 1);
  if (next === code) { return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }
  if (next === 61) { return this.finishOp(types.assign, 2) }
  return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)
};

pp$8.readToken_caret = function() { // '^'
  var next = this.input.charCodeAt(this.pos + 1);
  if (next === 61) { return this.finishOp(types.assign, 2) }
  return this.finishOp(types.bitwiseXOR, 1)
};

pp$8.readToken_plus_min = function(code) { // '+-'
  var next = this.input.charCodeAt(this.pos + 1);
  if (next === code) {
    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&
        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {
      // A `-->` line comment
      this.skipLineComment(3);
      this.skipSpace();
      return this.nextToken()
    }
    return this.finishOp(types.incDec, 2)
  }
  if (next === 61) { return this.finishOp(types.assign, 2) }
  return this.finishOp(types.plusMin, 1)
};

pp$8.readToken_lt_gt = function(code) { // '<>'
  var next = this.input.charCodeAt(this.pos + 1);
  var size = 1;
  if (next === code) {
    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;
    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }
    return this.finishOp(types.bitShift, size)
  }
  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&
      this.input.charCodeAt(this.pos + 3) === 45) {
    // `<!--`, an XML-style comment that should be interpreted as a line comment
    this.skipLineComment(4);
    this.skipSpace();
    return this.nextToken()
  }
  if (next === 61) { size = 2; }
  return this.finishOp(types.relational, size)
};

pp$8.readToken_eq_excl = function(code) { // '=!'
  var next = this.input.charCodeAt(this.pos + 1);
  if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }
  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'
    this.pos += 2;
    return this.finishToken(types.arrow)
  }
  return this.finishOp(code === 61 ? types.eq : types.prefix, 1)
};

pp$8.getTokenFromCode = function(code) {
  switch (code) {
  // The interpretation of a dot depends on whether it is followed
  // by a digit or another two dots.
  case 46: // '.'
    return this.readToken_dot()

  // Punctuation tokens.
  case 40: ++this.pos; return this.finishToken(types.parenL)
  case 41: ++this.pos; return this.finishToken(types.parenR)
  case 59: ++this.pos; return this.finishToken(types.semi)
  case 44: ++this.pos; return this.finishToken(types.comma)
  case 91: ++this.pos; return this.finishToken(types.bracketL)
  case 93: ++this.pos; return this.finishToken(types.bracketR)
  case 123: ++this.pos; return this.finishToken(types.braceL)
  case 125: ++this.pos; return this.finishToken(types.braceR)
  case 58: ++this.pos; return this.finishToken(types.colon)
  case 63: ++this.pos; return this.finishToken(types.question)

  case 96: // '`'
    if (this.options.ecmaVersion < 6) { break }
    ++this.pos;
    return this.finishToken(types.backQuote)

  case 48: // '0'
    var next = this.input.charCodeAt(this.pos + 1);
    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number
    if (this.options.ecmaVersion >= 6) {
      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number
      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number
    }

  // Anything else beginning with a digit is an integer, octal
  // number, or float.
  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9
    return this.readNumber(false)

  // Quotes produce strings.
  case 34: case 39: // '"', "'"
    return this.readString(code)

  // Operators are parsed inline in tiny state machines. '=' (61) is
  // often referred to. `finishOp` simply skips the amount of
  // characters it is given as second argument, and returns a token
  // of the type given by its first argument.

  case 47: // '/'
    return this.readToken_slash()

  case 37: case 42: // '%*'
    return this.readToken_mult_modulo_exp(code)

  case 124: case 38: // '|&'
    return this.readToken_pipe_amp(code)

  case 94: // '^'
    return this.readToken_caret()

  case 43: case 45: // '+-'
    return this.readToken_plus_min(code)

  case 60: case 62: // '<>'
    return this.readToken_lt_gt(code)

  case 61: case 33: // '=!'
    return this.readToken_eq_excl(code)

  case 126: // '~'
    return this.finishOp(types.prefix, 1)
  }

  this.raise(this.pos, "Unexpected character '" + codePointToString(code) + "'");
};

pp$8.finishOp = function(type, size) {
  var str = this.input.slice(this.pos, this.pos + size);
  this.pos += size;
  return this.finishToken(type, str)
};

pp$8.readRegexp = function() {
  var this$1 = this;

  var escaped, inClass, start = this.pos;
  for (;;) {
    if (this$1.pos >= this$1.input.length) { this$1.raise(start, "Unterminated regular expression"); }
    var ch = this$1.input.charAt(this$1.pos);
    if (lineBreak.test(ch)) { this$1.raise(start, "Unterminated regular expression"); }
    if (!escaped) {
      if (ch === "[") { inClass = true; }
      else if (ch === "]" && inClass) { inClass = false; }
      else if (ch === "/" && !inClass) { break }
      escaped = ch === "\\";
    } else { escaped = false; }
    ++this$1.pos;
  }
  var pattern = this.input.slice(start, this.pos);
  ++this.pos;
  var flagsStart = this.pos;
  var flags = this.readWord1();
  if (this.containsEsc) { this.unexpected(flagsStart); }

  // Validate pattern
  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));
  state.reset(start, pattern, flags);
  this.validateRegExpFlags(state);
  this.validateRegExpPattern(state);

  // Create Literal#value property value.
  var value = null;
  try {
    value = new RegExp(pattern, flags);
  } catch (e) {
    // ESTree requires null if it failed to instantiate RegExp object.
    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral
  }

  return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})
};

// Read an integer in the given radix. Return null if zero digits
// were read, the integer value otherwise. When `len` is given, this
// will return `null` unless the integer has exactly `len` digits.

pp$8.readInt = function(radix, len) {
  var this$1 = this;

  var start = this.pos, total = 0;
  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {
    var code = this$1.input.charCodeAt(this$1.pos), val = (void 0);
    if (code >= 97) { val = code - 97 + 10; } // a
    else if (code >= 65) { val = code - 65 + 10; } // A
    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9
    else { val = Infinity; }
    if (val >= radix) { break }
    ++this$1.pos;
    total = total * radix + val;
  }
  if (this.pos === start || len != null && this.pos - start !== len) { return null }

  return total
};

pp$8.readRadixNumber = function(radix) {
  this.pos += 2; // 0x
  var val = this.readInt(radix);
  if (val == null) { this.raise(this.start + 2, "Expected number in radix " + radix); }
  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, "Identifier directly after number"); }
  return this.finishToken(types.num, val)
};

// Read an integer, octal integer, or floating-point number.

pp$8.readNumber = function(startsWithDot) {
  var start = this.pos;
  if (!startsWithDot && this.readInt(10) === null) { this.raise(start, "Invalid number"); }
  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;
  if (octal && this.strict) { this.raise(start, "Invalid number"); }
  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }
  var next = this.input.charCodeAt(this.pos);
  if (next === 46 && !octal) { // '.'
    ++this.pos;
    this.readInt(10);
    next = this.input.charCodeAt(this.pos);
  }
  if ((next === 69 || next === 101) && !octal) { // 'eE'
    next = this.input.charCodeAt(++this.pos);
    if (next === 43 || next === 45) { ++this.pos; } // '+-'
    if (this.readInt(10) === null) { this.raise(start, "Invalid number"); }
  }
  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, "Identifier directly after number"); }

  var str = this.input.slice(start, this.pos);
  var val = octal ? parseInt(str, 8) : parseFloat(str);
  return this.finishToken(types.num, val)
};

// Read a string value, interpreting backslash-escapes.

pp$8.readCodePoint = function() {
  var ch = this.input.charCodeAt(this.pos), code;

  if (ch === 123) { // '{'
    if (this.options.ecmaVersion < 6) { this.unexpected(); }
    var codePos = ++this.pos;
    code = this.readHexChar(this.input.indexOf("}", this.pos) - this.pos);
    ++this.pos;
    if (code > 0x10FFFF) { this.invalidStringToken(codePos, "Code point out of bounds"); }
  } else {
    code = this.readHexChar(4);
  }
  return code
};

function codePointToString(code) {
  // UTF-16 Decoding
  if (code <= 0xFFFF) { return String.fromCharCode(code) }
  code -= 0x10000;
  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)
}

pp$8.readString = function(quote) {
  var this$1 = this;

  var out = "", chunkStart = ++this.pos;
  for (;;) {
    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, "Unterminated string constant"); }
    var ch = this$1.input.charCodeAt(this$1.pos);
    if (ch === quote) { break }
    if (ch === 92) { // '\'
      out += this$1.input.slice(chunkStart, this$1.pos);
      out += this$1.readEscapedChar(false);
      chunkStart = this$1.pos;
    } else {
      if (isNewLine(ch, this$1.options.ecmaVersion >= 10)) { this$1.raise(this$1.start, "Unterminated string constant"); }
      ++this$1.pos;
    }
  }
  out += this.input.slice(chunkStart, this.pos++);
  return this.finishToken(types.string, out)
};

// Reads template string tokens.

var INVALID_TEMPLATE_ESCAPE_ERROR = {};

pp$8.tryReadTemplateToken = function() {
  this.inTemplateElement = true;
  try {
    this.readTmplToken();
  } catch (err) {
    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {
      this.readInvalidTemplateToken();
    } else {
      throw err
    }
  }

  this.inTemplateElement = false;
};

pp$8.invalidStringToken = function(position, message) {
  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {
    throw INVALID_TEMPLATE_ESCAPE_ERROR
  } else {
    this.raise(position, message);
  }
};

pp$8.readTmplToken = function() {
  var this$1 = this;

  var out = "", chunkStart = this.pos;
  for (;;) {
    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, "Unterminated template"); }
    var ch = this$1.input.charCodeAt(this$1.pos);
    if (ch === 96 || ch === 36 && this$1.input.charCodeAt(this$1.pos + 1) === 123) { // '`', '${'
      if (this$1.pos === this$1.start && (this$1.type === types.template || this$1.type === types.invalidTemplate)) {
        if (ch === 36) {
          this$1.pos += 2;
          return this$1.finishToken(types.dollarBraceL)
        } else {
          ++this$1.pos;
          return this$1.finishToken(types.backQuote)
        }
      }
      out += this$1.input.slice(chunkStart, this$1.pos);
      return this$1.finishToken(types.template, out)
    }
    if (ch === 92) { // '\'
      out += this$1.input.slice(chunkStart, this$1.pos);
      out += this$1.readEscapedChar(true);
      chunkStart = this$1.pos;
    } else if (isNewLine(ch)) {
      out += this$1.input.slice(chunkStart, this$1.pos);
      ++this$1.pos;
      switch (ch) {
      case 13:
        if (this$1.input.charCodeAt(this$1.pos) === 10) { ++this$1.pos; }
      case 10:
        out += "\n";
        break
      default:
        out += String.fromCharCode(ch);
        break
      }
      if (this$1.options.locations) {
        ++this$1.curLine;
        this$1.lineStart = this$1.pos;
      }
      chunkStart = this$1.pos;
    } else {
      ++this$1.pos;
    }
  }
};

// Reads a template token to search for the end, without validating any escape sequences
pp$8.readInvalidTemplateToken = function() {
  var this$1 = this;

  for (; this.pos < this.input.length; this.pos++) {
    switch (this$1.input[this$1.pos]) {
    case "\\":
      ++this$1.pos;
      break

    case "$":
      if (this$1.input[this$1.pos + 1] !== "{") {
        break
      }
    // falls through

    case "`":
      return this$1.finishToken(types.invalidTemplate, this$1.input.slice(this$1.start, this$1.pos))

    // no default
    }
  }
  this.raise(this.start, "Unterminated template");
};

// Used to read escaped characters

pp$8.readEscapedChar = function(inTemplate) {
  var ch = this.input.charCodeAt(++this.pos);
  ++this.pos;
  switch (ch) {
  case 110: return "\n" // 'n' -> '\n'
  case 114: return "\r" // 'r' -> '\r'
  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'
  case 117: return codePointToString(this.readCodePoint()) // 'u'
  case 116: return "\t" // 't' -> '\t'
  case 98: return "\b" // 'b' -> '\b'
  case 118: return "\u000b" // 'v' -> '\u000b'
  case 102: return "\f" // 'f' -> '\f'
  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\r\n'
  case 10: // ' \n'
    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }
    return ""
  default:
    if (ch >= 48 && ch <= 55) {
      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];
      var octal = parseInt(octalStr, 8);
      if (octal > 255) {
        octalStr = octalStr.slice(0, -1);
        octal = parseInt(octalStr, 8);
      }
      this.pos += octalStr.length - 1;
      ch = this.input.charCodeAt(this.pos);
      if ((octalStr !== "0" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {
        this.invalidStringToken(
          this.pos - 1 - octalStr.length,
          inTemplate
            ? "Octal literal in template string"
            : "Octal literal in strict mode"
        );
      }
      return String.fromCharCode(octal)
    }
    return String.fromCharCode(ch)
  }
};

// Used to read character escape sequences ('\x', '\u', '\U').

pp$8.readHexChar = function(len) {
  var codePos = this.pos;
  var n = this.readInt(16, len);
  if (n === null) { this.invalidStringToken(codePos, "Bad character escape sequence"); }
  return n
};

// Read an identifier, and return it as a string. Sets `this.containsEsc`
// to whether the word contained a '\u' escape.
//
// Incrementally adds only escaped chars, adding other chunks as-is
// as a micro-optimization.

pp$8.readWord1 = function() {
  var this$1 = this;

  this.containsEsc = false;
  var word = "", first = true, chunkStart = this.pos;
  var astral = this.options.ecmaVersion >= 6;
  while (this.pos < this.input.length) {
    var ch = this$1.fullCharCodeAtPos();
    if (isIdentifierChar(ch, astral)) {
      this$1.pos += ch <= 0xffff ? 1 : 2;
    } else if (ch === 92) { // "\"
      this$1.containsEsc = true;
      word += this$1.input.slice(chunkStart, this$1.pos);
      var escStart = this$1.pos;
      if (this$1.input.charCodeAt(++this$1.pos) !== 117) // "u"
        { this$1.invalidStringToken(this$1.pos, "Expecting Unicode escape sequence \\uXXXX"); }
      ++this$1.pos;
      var esc = this$1.readCodePoint();
      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))
        { this$1.invalidStringToken(escStart, "Invalid Unicode escape"); }
      word += codePointToString(esc);
      chunkStart = this$1.pos;
    } else {
      break
    }
    first = false;
  }
  return word + this.input.slice(chunkStart, this.pos)
};

// Read an identifier or keyword token. Will check for reserved
// words when necessary.

pp$8.readWord = function() {
  var word = this.readWord1();
  var type = types.name;
  if (this.keywords.test(word)) {
    if (this.containsEsc) { this.raiseRecoverable(this.start, "Escape sequence in keyword " + word); }
    type = keywords$1[word];
  }
  return this.finishToken(type, word)
};

// Acorn is a tiny, fast JavaScript parser written in JavaScript.
//
// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and
// various contributors and released under an MIT license.
//
// Git repositories for Acorn are available at
//
//     http://marijnhaverbeke.nl/git/acorn
//     https://github.com/acornjs/acorn.git
//
// Please use the [github bug tracker][ghbt] to report issues.
//
// [ghbt]: https://github.com/acornjs/acorn/issues
//
// This file defines the main parser interface. The library also comes
// with a [error-tolerant parser][dammit] and an
// [abstract syntax tree walker][walk], defined in other files.
//
// [dammit]: acorn_loose.js
// [walk]: util/walk.js

var acorn_es_version = "5.7.3";

// The main exported interface (under `self.acorn` when in the
// browser) is a `parse` function that takes a code string and
// returns an abstract syntax tree as specified by [Mozilla parser
// API][api].
//
// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API

function parse(input, options) {
  return new Parser(options, input).parse()
}

// This function tries to parse a single expression at a given
// offset in a string. Useful for parsing mixed-language formats
// that embed JavaScript expressions.

function parseExpressionAt(input, pos, options) {
  var p = new Parser(options, input, pos);
  p.nextToken();
  return p.parseExpression()
}

// Acorn is organized as a tokenizer and a recursive-descent parser.
// The `tokenizer` export provides an interface to the tokenizer.

function tokenizer(input, options) {
  return new Parser(options, input)
}

// This is a terrible kludge to support the existing, pre-ES6
// interface where the loose parser module retroactively adds exports
// to this module.
var parse_dammit;
var LooseParser;
var pluginsLoose; // eslint-disable-line camelcase
function addLooseExports(parse, Parser$$1, plugins$$1) {
  parse_dammit = parse; // eslint-disable-line camelcase
  LooseParser = Parser$$1;
  pluginsLoose = plugins$$1;
}



// EXTERNAL MODULE: ./node_modules/react-styleguidist/node_modules/lodash/find.js
var find = __webpack_require__(94);
var find_default = /*#__PURE__*/__webpack_require__.n(find);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/utils/splitExampleCode.js



// Strip semicolon (;) at the end
var unsemicolon = function unsemicolon(s) {
	return s.replace(/;\s*$/, '');
};

/**
 * Take source code and returns:
 * 1. Code before the last top-level expression.
 * 2. Code with the last top-level expression wrappen in a return statement
 *    (kind of an implicit return).
 *
 * Example:
 * var a = 1; React.createElement('i', null, a); // =>
 * 1. var a = 1
 * 2. var a = 1; return (React.createElement('i', null, a));
 *
 * @param {string} code
 * @returns {object}
 */
function splitExampleCode(code) {
	var ast = void 0;
	try {
		ast = parse(code, { ecmaVersion: 2019 });
	} catch (err) {
		return { head: '', example: code };
	}

	var firstExpression = find_default()(ast.body.reverse(), { type: 'ExpressionStatement' });
	if (!firstExpression) {
		return { head: '', example: code };
	}

	var start = firstExpression.start,
	    end = firstExpression.end;

	var head = unsemicolon(code.substring(0, start));
	var firstExpressionCode = unsemicolon(code.substring(start, end));
	var example = head + ';\nreturn (' + firstExpressionCode + ');';

	return {
		head: head,
		example: example
	};
}
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/ReactExample/ReactExample.js
var ReactExample_createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function ReactExample_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function ReactExample_possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function ReactExample_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







/* eslint-disable no-invalid-this, react/no-multi-comp */

var FragmentTag = react_default.a.Fragment ? 'React.Fragment' : 'div';

var ReactExample_compileCode = function _compileCode(code, config) {
	return Object(buble_browser_es["a" /* transform */])(code, config).code;
};
var wrapCodeInFragment = function wrapCodeInFragment(code) {
	return '<' + FragmentTag + '>' + code + '</' + FragmentTag + '>;';
};

// Wrap everything in a React component to leverage the state management
// of this component

var StateHolder = function (_Component) {
	ReactExample_inherits(StateHolder, _Component);

	function StateHolder() {
		var _ref;

		var _temp, _this, _ret;

		ReactExample_classCallCheck(this, StateHolder);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = ReactExample_possibleConstructorReturn(this, (_ref = StateHolder.__proto__ || Object.getPrototypeOf(StateHolder)).call.apply(_ref, [this].concat(args))), _this), _this.state = _this.props.initialState, _this.setStateBinded = _this.setState.bind(_this), _temp), ReactExample_possibleConstructorReturn(_this, _ret);
	}

	ReactExample_createClass(StateHolder, [{
		key: 'render',
		value: function render() {
			return this.props.component(this.state, this.setStateBinded);
		}
	}]);

	return StateHolder;
}(react["Component"]);

StateHolder.propTypes = {
	component: prop_types_default.a.func.isRequired,
	initialState: prop_types_default.a.object.isRequired
};

var ReactExample_ReactExample = function (_Component2) {
	ReactExample_inherits(ReactExample, _Component2);

	function ReactExample() {
		ReactExample_classCallCheck(this, ReactExample);

		return ReactExample_possibleConstructorReturn(this, (ReactExample.__proto__ || Object.getPrototypeOf(ReactExample)).apply(this, arguments));
	}

	ReactExample_createClass(ReactExample, [{
		key: 'shouldComponentUpdate',
		value: function shouldComponentUpdate(nextProps) {
			return this.props.code !== nextProps.code;
		}

		// Eval the code to extract the value of the initial state

	}, {
		key: 'getExampleInitialState',
		value: function getExampleInitialState(compiledCode) {
			if (compiledCode.indexOf('initialState') === -1) {
				return {};
			}

			return this.props.evalInContext('\n\t\t\tvar state = {}, initialState = {};\n\t\t\ttry {\n\t\t\t\t' + compiledCode + ';\n\t\t\t} catch (err) {}\n\t\t\treturn initialState;\n\t\t')();
		}

		// Run example code and return the last top-level expression

	}, {
		key: 'getExampleComponent',
		value: function getExampleComponent(compiledCode) {
			return this.props.evalInContext('\n\t\t\tvar initialState = {};\n\t\t\t' + compiledCode + '\n\t\t');
		}
	}, {
		key: 'compileCode',
		value: function compileCode(code) {
			try {
				var wrappedCode = code.trim().match(/^</) ? wrapCodeInFragment(code) : code;
				return ReactExample_compileCode(wrappedCode, this.props.compilerConfig);
			} catch (err) {
				if (this.props.onError) {
					this.props.onError(err);
				}
			}
			return false;
		}
	}, {
		key: 'render',
		value: function render() {
			var compiledCode = this.compileCode(this.props.code);
			if (!compiledCode) {
				return null;
			}

			var _splitExampleCode = splitExampleCode(compiledCode),
			    head = _splitExampleCode.head,
			    example = _splitExampleCode.example;

			var initialState = this.getExampleInitialState(head);
			var exampleComponent = this.getExampleComponent(example);
			var wrappedComponent = react_default.a.createElement(
				Wrapper_Wrapper,
				{ onError: this.props.onError },
				react_default.a.createElement(StateHolder, { component: exampleComponent, initialState: initialState })
			);
			return wrappedComponent;
		}
	}]);

	return ReactExample;
}(react["Component"]);

ReactExample_ReactExample.propTypes = {
	code: prop_types_default.a.string.isRequired,
	evalInContext: prop_types_default.a.func.isRequired,
	onError: prop_types_default.a.func.isRequired,
	compilerConfig: prop_types_default.a.object
};
ReactExample_ReactExample.contextTypes = {};
/* harmony default export */ var rsg_components_ReactExample_ReactExample = (ReactExample_ReactExample);
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/ReactExample/index.js

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Preview/Preview.js
var Preview_createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function Preview_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function Preview_possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function Preview_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







/* eslint-disable no-invalid-this */

var Fragment = react_default.a.Fragment ? react_default.a.Fragment : 'div';

var Preview_Preview = function (_Component) {
	Preview_inherits(Preview, _Component);

	function Preview() {
		var _ref;

		var _temp, _this, _ret;

		Preview_classCallCheck(this, Preview);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = Preview_possibleConstructorReturn(this, (_ref = Preview.__proto__ || Object.getPrototypeOf(Preview)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
			error: null
		}, _this.handleError = function (err) {
			_this.unmountPreview();

			_this.setState({
				error: err.toString()
			});

			console.error(err); // eslint-disable-line no-console
		}, _temp), Preview_possibleConstructorReturn(_this, _ret);
	}

	Preview_createClass(Preview, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			// Clear console after hot reload, do not clear on the first load
			// to keep any warnings
			if (this.context.codeRevision > 0) {
				// eslint-disable-next-line no-console
				console.clear();
			}

			this.executeCode();
		}
	}, {
		key: 'shouldComponentUpdate',
		value: function shouldComponentUpdate(nextProps, nextState) {
			return this.state.error !== nextState.error || this.props.code !== nextProps.code;
		}
	}, {
		key: 'componentDidUpdate',
		value: function componentDidUpdate(prevProps) {
			if (this.props.code !== prevProps.code) {
				this.executeCode();
			}
		}
	}, {
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			this.unmountPreview();
		}
	}, {
		key: 'unmountPreview',
		value: function unmountPreview() {
			if (this.mountNode) {
				react_dom_default.a.unmountComponentAtNode(this.mountNode);
			}
		}
	}, {
		key: 'executeCode',
		value: function executeCode() {
			var _this2 = this;

			this.setState({
				error: null
			});

			var code = this.props.code;

			if (!code) {
				return;
			}

			var wrappedComponent = react_default.a.createElement(rsg_components_ReactExample_ReactExample, {
				code: code,
				evalInContext: this.props.evalInContext,
				onError: this.handleError,
				compilerConfig: this.context.config.compilerConfig
			});

			window.requestAnimationFrame(function () {
				_this2.unmountPreview();
				try {
					react_dom_default.a.render(wrappedComponent, _this2.mountNode);
				} catch (err) {
					_this2.handleError(err);
				}
			});
		}
	}, {
		key: 'render',
		value: function render() {
			var _this3 = this;

			var error = this.state.error;

			return react_default.a.createElement(
				Fragment,
				null,
				react_default.a.createElement('div', { ref: function ref(_ref2) {
						return _this3.mountNode = _ref2;
					} }),
				error && react_default.a.createElement(PlaygroundError_PlaygroundErrorRenderer, { message: error })
			);
		}
	}]);

	return Preview;
}(react["Component"]);

Preview_Preview.propTypes = {
	code: prop_types_default.a.string.isRequired,
	evalInContext: prop_types_default.a.func.isRequired
};
Preview_Preview.contextTypes = {
	config: prop_types_default.a.object.isRequired,
	codeRevision: prop_types_default.a.number.isRequired
};
/* harmony default export */ var rsg_components_Preview_Preview = (Preview_Preview);
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Preview/index.js

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Para/index.js + 1 modules
var Para = __webpack_require__(44);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Slot/Slot.js
var Slot_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

// Inspired by https://github.com/camwest/react-slot-fill




function Slot(_ref, _ref2) {
	var name = _ref.name,
	    active = _ref.active,
	    onlyActive = _ref.onlyActive,
	    className = _ref.className,
	    _ref$props = _ref.props,
	    props = _ref$props === undefined ? {} : _ref$props;
	var slots = _ref2.slots;

	var fills = slots[name];
	if (!fills) {
		throw new Error('Slot "' + name + '" not found, available slots: ' + Object.keys(slots).join(', '));
	}

	var rendered = fills.map(function (Fill, index) {
		// { id: 'pizza', render: ({ foo }) => <div>{foo}</div> }
		var _Fill = Fill,
		    id = _Fill.id,
		    render = _Fill.render;

		var fillProps = props;
		if (id && render) {
			// Render only specified fill
			if (onlyActive && id !== active) {
				return null;
			}

			var onClick = props.onClick;

			fillProps = Slot_extends({}, props, {
				name: id,
				// Set active prop to active fill
				active: active && id === active,
				// Pass fill ID to onClick event handler
				// eslint-disable-next-line react/prop-types
				onClick: onClick && function () {
					for (var _len = arguments.length, attrs = Array(_len), _key = 0; _key < _len; _key++) {
						attrs[_key] = arguments[_key];
					}

					return onClick.apply(undefined, [id].concat(attrs));
				}
			});

			Fill = render;
		}

		return react_default.a.createElement(Fill, Slot_extends({ key: index }, fillProps));
	});

	var filtered = rendered.filter(Boolean);
	if (filtered.length === 0) {
		return null;
	}

	return react_default.a.createElement(
		'div',
		{ className: className },
		filtered
	);
}

Slot.propTypes = {
	name: prop_types_default.a.string.isRequired,
	active: prop_types_default.a.string,
	onlyActive: prop_types_default.a.bool,
	props: prop_types_default.a.object,
	className: prop_types_default.a.string
};
Slot.contextTypes = {
	slots: prop_types_default.a.object.isRequired
};
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Slot/index.js

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Playground/PlaygroundRenderer.js
var PlaygroundRenderer_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }






var PlaygroundRenderer_styles = function styles(_ref) {
	var space = _ref.space,
	    color = _ref.color,
	    borderRadius = _ref.borderRadius;
	return {
		root: {
			marginBottom: space[4]
		},
		preview: {
			padding: space[2],
			border: [[1, color.border, 'solid']],
			borderRadius: borderRadius,
			// the next 2 lines are required to contain floated components
			width: '100%',
			display: 'inline-block'
		},
		controls: {
			display: 'flex',
			alignItems: 'center'
		},
		toolbar: {
			marginLeft: 'auto'
		},
		tab: {} // expose className to allow using it in 'styles' settings
	};
};

function PlaygroundRenderer(_ref2) {
	var classes = _ref2.classes,
	    name = _ref2.name,
	    preview = _ref2.preview,
	    previewProps = _ref2.previewProps,
	    tabButtons = _ref2.tabButtons,
	    tabBody = _ref2.tabBody,
	    toolbar = _ref2.toolbar;

	var className = previewProps.className,
	    props = _objectWithoutProperties(previewProps, ['className']);

	return react_default.a.createElement(
		'div',
		{ className: classes.root },
		react_default.a.createElement(
			'div',
			PlaygroundRenderer_extends({ className: classnames_default()(classes.preview, className) }, props, { 'data-preview': name }),
			preview
		),
		react_default.a.createElement(
			'div',
			{ className: classes.controls },
			react_default.a.createElement(
				'div',
				{ className: classes.tabs },
				tabButtons
			),
			react_default.a.createElement(
				'div',
				{ className: classes.toolbar },
				toolbar
			)
		),
		react_default.a.createElement(
			'div',
			{ className: classes.tab },
			tabBody
		)
	);
}

PlaygroundRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	name: prop_types_default.a.string.isRequired,
	preview: prop_types_default.a.node.isRequired,
	previewProps: prop_types_default.a.object.isRequired,
	tabButtons: prop_types_default.a.node.isRequired,
	tabBody: prop_types_default.a.node.isRequired,
	toolbar: prop_types_default.a.node.isRequired
};

/* harmony default export */ var Playground_PlaygroundRenderer = (Object(Styled["a" /* default */])(PlaygroundRenderer_styles)(PlaygroundRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/consts.js
/* eslint-disable import/prefer-default-export */

var DisplayModes = Object.freeze({
	// Show all sections and components (default)
	all: 'all',
	// Show one section
	section: 'section',
	// Show one component
	component: 'component',
	// Show one example inside component or section
	example: 'example',
	// Show error 404
	notFound: 'notFound'
});

var ExampleModes = Object.freeze({
	hide: 'hide',
	collapse: 'collapse',
	expand: 'expand'
});

var UsageModes = Object.freeze({
	hide: 'hide',
	collapse: 'collapse',
	expand: 'expand'
});
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Playground/Playground.js
var Playground_createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function Playground_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function Playground_possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function Playground_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }












var Playground_Playground = function (_Component) {
	Playground_inherits(Playground, _Component);

	function Playground(props, context) {
		Playground_classCallCheck(this, Playground);

		var _this = Playground_possibleConstructorReturn(this, (Playground.__proto__ || Object.getPrototypeOf(Playground)).call(this, props, context));

		var code = props.code,
		    settings = props.settings,
		    exampleMode = props.exampleMode;
		var config = context.config;

		var expandCode = exampleMode === ExampleModes.expand;
		var activeTab = settings.showcode !== undefined ? settings.showcode : expandCode;

		_this.state = {
			code: code,
			prevCode: code,
			activeTab: activeTab ? EXAMPLE_TAB_CODE_EDITOR : undefined
		};

		_this.handleTabChange = _this.handleTabChange.bind(_this);
		_this.handleChange = debounce_default()(_this.handleChange.bind(_this), config.previewDelay);
		return _this;
	}

	Playground_createClass(Playground, [{
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			// Clear pending changes
			this.handleChange.cancel();
		}
	}, {
		key: 'handleChange',
		value: function handleChange(code) {
			this.setState({
				code: code
			});
		}
	}, {
		key: 'handleTabChange',
		value: function handleTabChange(name) {
			this.setState(function (state) {
				return {
					activeTab: state.activeTab !== name ? name : undefined
				};
			});
		}
	}, {
		key: 'render',
		value: function render() {
			var _state = this.state,
			    code = _state.code,
			    activeTab = _state.activeTab;
			var _props = this.props,
			    evalInContext = _props.evalInContext,
			    index = _props.index,
			    name = _props.name,
			    settings = _props.settings,
			    exampleMode = _props.exampleMode;
			var displayMode = this.context.displayMode;

			var isExampleHidden = exampleMode === ExampleModes.hide;
			var isEditorHidden = settings.noeditor || isExampleHidden;
			var preview = react_default.a.createElement(rsg_components_Preview_Preview, { code: code, evalInContext: evalInContext });

			return isEditorHidden ? react_default.a.createElement(
				Para["a" /* default */],
				null,
				preview
			) : react_default.a.createElement(Playground_PlaygroundRenderer, {
				name: name,
				preview: preview,
				previewProps: settings.props || {},
				tabButtons: react_default.a.createElement(Slot, {
					name: 'exampleTabButtons',
					active: activeTab,
					props: { onClick: this.handleTabChange }
				}),
				tabBody: react_default.a.createElement(Slot, {
					name: 'exampleTabs',
					active: activeTab,
					onlyActive: true
					// evalInContext passed through to support custom slots that eval code
					, props: { code: code, onChange: this.handleChange, evalInContext: evalInContext }
				}),
				toolbar: react_default.a.createElement(Slot, {
					name: 'exampleToolbar',
					props: { name: name, isolated: displayMode === DisplayModes.example, example: index }
				})
			});
		}
	}], [{
		key: 'getDerivedStateFromProps',
		value: function getDerivedStateFromProps(nextProps, prevState) {
			var code = nextProps.code;

			if (prevState.prevCode !== code) {
				return {
					prevCode: code,
					code: code
				};
			}
			return null;
		}
	}]);

	return Playground;
}(react["Component"]);

Playground_Playground.propTypes = {
	code: prop_types_default.a.string.isRequired,
	evalInContext: prop_types_default.a.func.isRequired,
	index: prop_types_default.a.number.isRequired,
	name: prop_types_default.a.string.isRequired,
	exampleMode: prop_types_default.a.string.isRequired,
	settings: prop_types_default.a.object
};
Playground_Playground.contextTypes = {
	config: prop_types_default.a.object.isRequired,
	displayMode: prop_types_default.a.string
};


/* harmony default export */ var rsg_components_Playground_Playground = (polyfill(Playground_Playground));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Playground/index.js

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Examples/ExamplesRenderer.js




var ExamplesRenderer_styles = function styles() {
	return {
		// Just default jss-isolate rules
		root: {}
	};
};

function ExamplesRenderer(_ref) {
	var classes = _ref.classes,
	    children = _ref.children;

	return react_default.a.createElement(
		'article',
		{ className: classes.root },
		children
	);
}

ExamplesRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	children: prop_types_default.a.node
};

/* harmony default export */ var Examples_ExamplesRenderer = (Object(Styled["a" /* default */])(ExamplesRenderer_styles)(ExamplesRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Examples/Examples.js






function Examples(_ref, _ref2) {
	var examples = _ref.examples,
	    name = _ref.name,
	    exampleMode = _ref.exampleMode;
	var codeRevision = _ref2.codeRevision;

	return react_default.a.createElement(
		Examples_ExamplesRenderer,
		null,
		examples.map(function (example, index) {
			switch (example.type) {
				case 'code':
					return react_default.a.createElement(rsg_components_Playground_Playground, {
						code: example.content,
						evalInContext: example.evalInContext,
						key: codeRevision + '/' + index,
						name: name,
						index: index,
						settings: example.settings,
						exampleMode: exampleMode
					});
				case 'markdown':
					return react_default.a.createElement(Markdown["a" /* default */], { text: example.content, key: index });
				default:
					return null;
			}
		})
	);
}
Examples.propTypes = {
	examples: prop_types_default.a.array.isRequired,
	name: prop_types_default.a.string.isRequired,
	exampleMode: prop_types_default.a.string.isRequired
};
Examples.contextTypes = {
	codeRevision: prop_types_default.a.number.isRequired
};
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Examples/index.js

// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Heading/index.js + 1 modules
var Heading = __webpack_require__(43);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/SectionHeading/SectionHeadingRenderer.js
function SectionHeadingRenderer_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }







function SectionHeadingRenderer(_ref) {
	var classes = _ref.classes,
	    children = _ref.children,
	    toolbar = _ref.toolbar,
	    id = _ref.id,
	    href = _ref.href,
	    depth = _ref.depth,
	    deprecated = _ref.deprecated;

	var headingLevel = Math.min(6, depth);
	var sectionNameClasses = classnames_default()(classes.sectionName, SectionHeadingRenderer_defineProperty({}, classes.isDeprecated, deprecated));

	return react_default.a.createElement(
		'div',
		{ className: classes.wrapper },
		react_default.a.createElement(
			Heading["a" /* default */],
			{ level: headingLevel, id: id },
			react_default.a.createElement(
				'a',
				{ href: href, className: sectionNameClasses },
				children
			)
		),
		react_default.a.createElement(
			'div',
			{ className: classes.toolbar },
			toolbar
		)
	);
}

var SectionHeadingRenderer_styles = function styles(_ref2) {
	var color = _ref2.color,
	    space = _ref2.space;
	return {
		wrapper: {
			display: 'flex',
			flexDirection: 'row',
			alignItems: 'center',
			marginBottom: space[1]
		},
		toolbar: {
			marginLeft: 'auto'
		},
		sectionName: {
			'&:hover, &:active': {
				isolate: false,
				textDecoration: 'underline',
				cursor: 'pointer'
			}
		},
		isDeprecated: {
			color: color.light,
			'&, &:hover': {
				textDecoration: 'line-through'
			}
		}
	};
};

SectionHeadingRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	children: prop_types_default.a.node,
	toolbar: prop_types_default.a.node,
	id: prop_types_default.a.string.isRequired,
	href: prop_types_default.a.string.isRequired,
	depth: prop_types_default.a.number.isRequired,
	deprecated: prop_types_default.a.bool
};

/* harmony default export */ var SectionHeading_SectionHeadingRenderer = (Object(Styled["a" /* default */])(SectionHeadingRenderer_styles)(SectionHeadingRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/SectionHeading/SectionHeading.js
var SectionHeading_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function SectionHeading_objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }







function SectionHeading(_ref) {
	var slotName = _ref.slotName,
	    slotProps = _ref.slotProps,
	    children = _ref.children,
	    id = _ref.id,
	    pagePerSection = _ref.pagePerSection,
	    rest = SectionHeading_objectWithoutProperties(_ref, ['slotName', 'slotProps', 'children', 'id', 'pagePerSection']);

	var href = pagePerSection ? getUrl({ slug: id, id: rest.depth !== 1, takeHash: true }) : getUrl({ slug: id, anchor: true });
	return react_default.a.createElement(
		SectionHeading_SectionHeadingRenderer,
		SectionHeading_extends({
			toolbar: react_default.a.createElement(Slot, { name: slotName, props: slotProps }),
			id: id,
			href: href
		}, rest),
		children
	);
}

SectionHeading.propTypes = {
	children: prop_types_default.a.node,
	id: prop_types_default.a.string.isRequired,
	slotName: prop_types_default.a.string.isRequired,
	slotProps: prop_types_default.a.object.isRequired,
	depth: prop_types_default.a.number.isRequired,
	deprecated: prop_types_default.a.bool,
	pagePerSection: prop_types_default.a.bool
};
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/SectionHeading/index.js

// EXTERNAL MODULE: ./node_modules/clipboard-copy/index.js
var clipboard_copy = __webpack_require__(245);
var clipboard_copy_default = /*#__PURE__*/__webpack_require__.n(clipboard_copy);

// EXTERNAL MODULE: ./node_modules/react-icons/lib/md/content-copy.js
var content_copy = __webpack_require__(246);
var content_copy_default = /*#__PURE__*/__webpack_require__.n(content_copy);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Pathline/PathlineRenderer.js







var PathlineRenderer_styles = function styles(_ref) {
	var space = _ref.space,
	    fontFamily = _ref.fontFamily,
	    fontSize = _ref.fontSize,
	    color = _ref.color;
	return {
		pathline: {
			fontFamily: fontFamily.monospace,
			fontSize: fontSize.small,
			color: color.light,
			wordBreak: 'break-all'
		},
		copyButton: {
			marginLeft: space[0]
		}
	};
};

function PathlineRenderer(_ref2) {
	var classes = _ref2.classes,
	    children = _ref2.children;

	return react_default.a.createElement(
		'div',
		{ className: classes.pathline },
		children,
		react_default.a.createElement(
			ToolbarButton_ToolbarButtonRenderer,
			{
				small: true,
				className: classes.copyButton,
				onClick: function onClick() {
					return clipboard_copy_default()(children);
				},
				title: 'Copy to clipboard'
			},
			react_default.a.createElement(content_copy_default.a, null)
		)
	);
}

PathlineRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	children: prop_types_default.a.string
};

/* harmony default export */ var Pathline_PathlineRenderer = (Object(Styled["a" /* default */])(PathlineRenderer_styles)(PathlineRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Pathline/index.js

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/ReactComponent/ReactComponentRenderer.js





var ReactComponentRenderer_styles = function styles(_ref) {
	var color = _ref.color,
	    fontSize = _ref.fontSize,
	    space = _ref.space;
	return {
		root: {
			marginBottom: space[6]
		},
		header: {
			marginBottom: space[3]
		},
		tabs: {
			marginBottom: space[3]
		},
		tabButtons: {
			marginBottom: space[2]
		},
		tabBody: {
			overflowX: 'auto',
			maxWidth: '100%',
			WebkitOverflowScrolling: 'touch'
		},
		docs: {
			color: color.base,
			fontSize: fontSize.text
		}
	};
};

function ReactComponentRenderer(_ref2) {
	var classes = _ref2.classes,
	    name = _ref2.name,
	    heading = _ref2.heading,
	    pathLine = _ref2.pathLine,
	    description = _ref2.description,
	    docs = _ref2.docs,
	    examples = _ref2.examples,
	    tabButtons = _ref2.tabButtons,
	    tabBody = _ref2.tabBody;

	return react_default.a.createElement(
		'div',
		{ className: classes.root, id: name + '-container' },
		react_default.a.createElement(
			'header',
			{ className: classes.header },
			heading,
			pathLine && react_default.a.createElement(
				Pathline_PathlineRenderer,
				null,
				pathLine
			)
		),
		(description || docs) && react_default.a.createElement(
			'div',
			{ className: classes.docs },
			description,
			docs
		),
		tabButtons && react_default.a.createElement(
			'div',
			{ className: classes.tabs },
			react_default.a.createElement(
				'div',
				{ className: classes.tabButtons },
				tabButtons
			),
			react_default.a.createElement(
				'div',
				{ className: classes.tabBody },
				tabBody
			)
		),
		examples
	);
}

ReactComponentRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	name: prop_types_default.a.string.isRequired,
	heading: prop_types_default.a.node.isRequired,
	filepath: prop_types_default.a.string,
	pathLine: prop_types_default.a.string,
	tabButtons: prop_types_default.a.node,
	tabBody: prop_types_default.a.node,
	description: prop_types_default.a.node,
	docs: prop_types_default.a.node,
	examples: prop_types_default.a.node,
	isolated: prop_types_default.a.bool
};

/* harmony default export */ var ReactComponent_ReactComponentRenderer = (Object(Styled["a" /* default */])(ReactComponentRenderer_styles)(ReactComponentRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/ReactComponent/ReactComponent.js
var ReactComponent_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var ReactComponent_createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function ReactComponent_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function ReactComponent_possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function ReactComponent_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }












var ExamplePlaceholder =  false ? undefined : function () {
	return react_default.a.createElement('div', null);
};

var ReactComponent_ReactComponent = function (_Component) {
	ReactComponent_inherits(ReactComponent, _Component);

	function ReactComponent(props, context) {
		ReactComponent_classCallCheck(this, ReactComponent);

		var _this = ReactComponent_possibleConstructorReturn(this, (ReactComponent.__proto__ || Object.getPrototypeOf(ReactComponent)).call(this, props, context));

		var usageMode = props.usageMode;


		_this.handleTabChange = _this.handleTabChange.bind(_this);

		_this.state = {
			activeTab: usageMode === UsageModes.expand ? DOCS_TAB_USAGE : undefined
		};
		return _this;
	}

	ReactComponent_createClass(ReactComponent, [{
		key: 'handleTabChange',
		value: function handleTabChange(name) {
			this.setState(function (state) {
				return {
					activeTab: state.activeTab !== name ? name : undefined
				};
			});
		}
	}, {
		key: 'render',
		value: function render() {
			var activeTab = this.state.activeTab;
			var _context = this.context,
			    displayMode = _context.displayMode,
			    pagePerSection = _context.config.pagePerSection;
			var _props = this.props,
			    component = _props.component,
			    depth = _props.depth,
			    usageMode = _props.usageMode,
			    exampleMode = _props.exampleMode;
			var name = component.name,
			    visibleName = component.visibleName,
			    slug = component.slug,
			    filepath = component.filepath,
			    pathLine = component.pathLine;
			var _component$props = component.props,
			    description = _component$props.description,
			    _component$props$exam = _component$props.examples,
			    examples = _component$props$exam === undefined ? [] : _component$props$exam,
			    _component$props$tags = _component$props.tags,
			    tags = _component$props$tags === undefined ? {} : _component$props$tags;

			if (!name) {
				return null;
			}
			var showUsage = usageMode !== UsageModes.hide;

			return react_default.a.createElement(ReactComponent_ReactComponentRenderer, {
				name: name,
				slug: slug,
				filepath: filepath,
				pathLine: pathLine,
				docs: react_default.a.createElement(JsDoc["a" /* default */], tags),
				description: description && react_default.a.createElement(Markdown["a" /* default */], { text: description }),
				heading: react_default.a.createElement(
					SectionHeading,
					{
						id: slug,
						pagePerSection: pagePerSection,
						deprecated: !!tags.deprecated,
						slotName: 'componentToolbar',
						slotProps: ReactComponent_extends({}, component, {
							isolated: displayMode !== DisplayModes.all
						}),
						depth: depth
					},
					visibleName
				),
				examples: examples.length > 0 ? react_default.a.createElement(Examples, { examples: examples, name: name, exampleMode: exampleMode }) : react_default.a.createElement(ExamplePlaceholder, { name: name }),
				tabButtons: showUsage && react_default.a.createElement(Slot, {
					name: 'docsTabButtons',
					active: activeTab,
					props: ReactComponent_extends({}, component, { onClick: this.handleTabChange })
				}),
				tabBody: react_default.a.createElement(Slot, { name: 'docsTabs', active: activeTab, onlyActive: true, props: component })
			});
		}
	}]);

	return ReactComponent;
}(react["Component"]);

ReactComponent_ReactComponent.propTypes = {
	component: prop_types_default.a.object.isRequired,
	depth: prop_types_default.a.number.isRequired,
	exampleMode: prop_types_default.a.string.isRequired,
	usageMode: prop_types_default.a.string.isRequired
};
ReactComponent_ReactComponent.contextTypes = {
	config: prop_types_default.a.object.isRequired,
	displayMode: prop_types_default.a.string
};
/* harmony default export */ var rsg_components_ReactComponent_ReactComponent = (ReactComponent_ReactComponent);
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/ReactComponent/index.js

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Components/ComponentsRenderer.js



function ComponentsRenderer(_ref) {
	var children = _ref.children;

	return react_default.a.createElement(
		'div',
		null,
		children
	);
}
ComponentsRenderer.propTypes = {
	children: prop_types_default.a.node.isRequired
};
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Components/Components.js





function Components(_ref) {
	var components = _ref.components,
	    depth = _ref.depth,
	    exampleMode = _ref.exampleMode,
	    usageMode = _ref.usageMode;

	return react_default.a.createElement(
		ComponentsRenderer,
		null,
		components.map(function (component) {
			return react_default.a.createElement(rsg_components_ReactComponent_ReactComponent, {
				key: component.filepath,
				component: component,
				exampleMode: exampleMode,
				usageMode: usageMode,
				depth: depth
			});
		})
	);
}

Components.propTypes = {
	components: prop_types_default.a.array.isRequired,
	depth: prop_types_default.a.number.isRequired,
	exampleMode: prop_types_default.a.string.isRequired,
	usageMode: prop_types_default.a.string.isRequired
};
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Components/index.js

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Section/SectionRenderer.js






var SectionRenderer_styles = function styles(_ref) {
	var space = _ref.space;
	return {
		root: {
			marginBottom: space[4]
		}
	};
};

function SectionRenderer(allProps) {
	var classes = allProps.classes,
	    name = allProps.name,
	    slug = allProps.slug,
	    content = allProps.content,
	    components = allProps.components,
	    sections = allProps.sections,
	    depth = allProps.depth,
	    description = allProps.description,
	    pagePerSection = allProps.pagePerSection;


	return react_default.a.createElement(
		'section',
		{ className: classes.root },
		name && react_default.a.createElement(
			SectionHeading,
			{
				depth: depth,
				id: slug,
				slotName: 'sectionToolbar',
				pagePerSection: pagePerSection,
				slotProps: allProps
			},
			name
		),
		description && react_default.a.createElement(Markdown["a" /* default */], { text: description }),
		content,
		sections,
		components
	);
}

SectionRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	name: prop_types_default.a.string,
	description: prop_types_default.a.string,
	slug: prop_types_default.a.string,
	filepath: prop_types_default.a.string,
	content: prop_types_default.a.node,
	components: prop_types_default.a.node,
	sections: prop_types_default.a.node,
	isolated: prop_types_default.a.bool,
	depth: prop_types_default.a.number.isRequired,
	pagePerSection: prop_types_default.a.bool
};

/* harmony default export */ var Section_SectionRenderer = (Object(Styled["a" /* default */])(SectionRenderer_styles)(SectionRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Section/Section.js








function Section(_ref, _ref2) {
	var section = _ref.section,
	    depth = _ref.depth;
	var displayMode = _ref2.displayMode,
	    pagePerSection = _ref2.config.pagePerSection;
	var name = section.name,
	    slug = section.slug,
	    filepath = section.filepath,
	    content = section.content,
	    components = section.components,
	    sections = section.sections,
	    description = section.description,
	    exampleMode = section.exampleMode,
	    usageMode = section.usageMode;


	var contentJsx = content && react_default.a.createElement(Examples, { examples: content, name: name, exampleMode: exampleMode });
	var componentsJsx = components && react_default.a.createElement(Components, {
		usageMode: usageMode,
		exampleMode: exampleMode,
		components: components,
		depth: depth + 1
	});
	var sectionsJsx = sections && react_default.a.createElement(Sections, { sections: sections, depth: depth + 1 });

	return react_default.a.createElement(Section_SectionRenderer, {
		description: description,
		pagePerSection: pagePerSection,
		name: name,
		slug: slug,
		filepath: filepath,
		content: contentJsx,
		components: componentsJsx,
		sections: sectionsJsx,
		isolated: displayMode !== DisplayModes.all,
		depth: depth
	});
}

Section.propTypes = {
	section: prop_types_default.a.object.isRequired,
	depth: prop_types_default.a.number.isRequired
};

Section.contextTypes = {
	displayMode: prop_types_default.a.string,
	config: prop_types_default.a.object.isRequired
};
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Section/index.js

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Sections/SectionsRenderer.js




var SectionsRenderer_styles = function styles() {
	return {
		// Just default jss-isolate rules
		root: {}
	};
};

function SectionsRenderer(_ref) {
	var classes = _ref.classes,
	    children = _ref.children;

	return react_default.a.createElement(
		'section',
		{ className: classes.root },
		children
	);
}

SectionsRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	children: prop_types_default.a.node
};

/* harmony default export */ var Sections_SectionsRenderer = (Object(Styled["a" /* default */])(SectionsRenderer_styles)(SectionsRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Sections/Sections.js





function Sections(_ref) {
	var sections = _ref.sections,
	    depth = _ref.depth;

	return react_default.a.createElement(
		Sections_SectionsRenderer,
		null,
		sections.filter(function (section) {
			return !section.href;
		}).map(function (section, idx) {
			return react_default.a.createElement(Section, { key: idx, section: section, depth: depth });
		})
	);
}

Sections.propTypes = {
	sections: prop_types_default.a.array.isRequired,
	root: prop_types_default.a.bool,
	depth: prop_types_default.a.number.isRequired
};
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Sections/index.js

// EXTERNAL MODULE: ./node_modules/react-styleguidist/scripts/consts.js
var consts = __webpack_require__(95);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Welcome/WelcomeRenderer.js






var WelcomeRenderer_styles = function styles(_ref) {
	var space = _ref.space,
	    maxWidth = _ref.maxWidth;
	return {
		root: {
			maxWidth: maxWidth,
			margin: [[0, 'auto']],
			padding: space[4]
		}
	};
};

function WelcomeRenderer(_ref2) {
	var classes = _ref2.classes,
	    patterns = _ref2.patterns;

	return react_default.a.createElement(
		'div',
		{ className: classes.root },
		react_default.a.createElement(Markdown["a" /* default */], {
			text: '\n# Welcome to React Styleguidist!\n\n**We couldn\u2019t find any components** using these patterns:\n\n' + patterns.map(function (p) {
				return '- `' + p + '`';
			}).join('\n') + '\n\nCreate **styleguide.config.js** file in your project root directory like this:\n\n    module.exports = {\n      components: \'src/components/**/*.js\'\n    };\n\nRead more in the [locating components guide](' + consts["DOCS_COMPONENTS"] + ').\n\t\t\t\t'
		})
	);
}

WelcomeRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	patterns: prop_types_default.a.array.isRequired
};

/* harmony default export */ var Welcome_WelcomeRenderer = (Object(Styled["a" /* default */])(WelcomeRenderer_styles)(WelcomeRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Welcome/index.js

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Error/ErrorRenderer.js




var ErrorRenderer_styles = function styles(_ref) {
	var fontFamily = _ref.fontFamily,
	    fontSize = _ref.fontSize,
	    color = _ref.color,
	    space = _ref.space;
	return {
		root: {
			margin: space[2],
			lineHeight: 1.2,
			fontSize: fontSize.small
		},
		stack: {
			color: color.error,
			whiteSpace: 'pre-wrap',
			fontFamily: fontFamily.monospace
		},
		message: {
			color: color.error,
			fontFamily: fontFamily.base
		}
	};
};

function ErrorRenderer(_ref2) {
	var classes = _ref2.classes,
	    error = _ref2.error,
	    info = _ref2.info;

	return react_default.a.createElement(
		'div',
		{ className: classes.root },
		react_default.a.createElement(
			'pre',
			{ className: classes.stack },
			error.toString(),
			info.componentStack.toString()
		),
		react_default.a.createElement(
			'div',
			{ className: classes.message },
			react_default.a.createElement(
				'p',
				null,
				'This may be due to an error in a component you are overriding, or a bug in React Styleguidist.'
			),
			react_default.a.createElement(
				'p',
				null,
				'If you believe this is a bug,\xA0',
				react_default.a.createElement(
					'a',
					{
						style: { color: 'inherit' },
						href: 'https://github.com/styleguidist/react-styleguidist/issues'
					},
					'please submit an issue'
				),
				'.'
			)
		)
	);
}

ErrorRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired,
	error: prop_types_default.a.object.isRequired,
	info: prop_types_default.a.shape({
		componentStack: prop_types_default.a.any.isRequired
	}).isRequired
};

/* harmony default export */ var Error_ErrorRenderer = (Object(Styled["a" /* default */])(ErrorRenderer_styles)(ErrorRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/Error/index.js

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/NotFound/NotFoundRenderer.js





var NotFoundRenderer_styles = function styles(_ref) {
	var maxWidth = _ref.maxWidth;
	return {
		root: {
			maxWidth: maxWidth,
			margin: [[0, 'auto']]
		}
	};
};

function NotFoundRenderer(_ref2) {
	var classes = _ref2.classes;

	return react_default.a.createElement(
		'div',
		{ className: classes.root },
		react_default.a.createElement(Markdown["a" /* default */], {
			text: '\n# Page not found\nThe link you followed may be broken, or the page may have been removed.\n'
		})
	);
}

NotFoundRenderer.propTypes = {
	classes: prop_types_default.a.object.isRequired
};

/* harmony default export */ var NotFound_NotFoundRenderer = (Object(Styled["a" /* default */])(NotFoundRenderer_styles)(NotFoundRenderer));
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/NotFound/index.js

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/StyleGuide/StyleGuide.js
var StyleGuide_createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function StyleGuide_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function StyleGuide_possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function StyleGuide_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }












/**
 * This function will return true, if the sidebar should be visible and false otherwise.
 *
 * These sorted conditions (highest precedence first) define the visibility
 * state of the sidebar.
 *
 * - Sidebar is hidden for isolated example views
 * - Sidebar is always visible when pagePerSection
 * - Sidebar is hidden when showSidebar is set to false
 * - Sidebar is visible when showSidebar is set to true for non-isolated views
 *
 * @param {boolean} displayMode
 * @param {boolean} showSidebar
 * @param {boolean} pagePerSection
 * @returns {boolean}
 */
function StyleGuide_hasSidebar(displayMode, showSidebar) {
	return displayMode === DisplayModes.notFound || showSidebar && displayMode === DisplayModes.all;
}

var StyleGuide_StyleGuide = function (_Component) {
	StyleGuide_inherits(StyleGuide, _Component);

	function StyleGuide() {
		var _ref;

		var _temp, _this, _ret;

		StyleGuide_classCallCheck(this, StyleGuide);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = StyleGuide_possibleConstructorReturn(this, (_ref = StyleGuide.__proto__ || Object.getPrototypeOf(StyleGuide)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
			error: false,
			info: null
		}, _temp), StyleGuide_possibleConstructorReturn(_this, _ret);
	}

	StyleGuide_createClass(StyleGuide, [{
		key: 'getChildContext',
		value: function getChildContext() {
			return {
				codeRevision: this.props.codeRevision,
				config: this.props.config,
				slots: this.props.slots,
				displayMode: this.props.displayMode
			};
		}
	}, {
		key: 'componentDidCatch',
		value: function componentDidCatch(error, info) {
			this.setState({
				error: error,
				info: info
			});
		}
	}, {
		key: 'render',
		value: function render() {
			var _props = this.props,
			    config = _props.config,
			    sections = _props.sections,
			    welcomeScreen = _props.welcomeScreen,
			    patterns = _props.patterns,
			    displayMode = _props.displayMode,
			    allSections = _props.allSections,
			    pagePerSection = _props.pagePerSection;


			if (this.state.error) {
				return react_default.a.createElement(Error_ErrorRenderer, { error: this.state.error, info: this.state.info });
			}

			if (welcomeScreen) {
				return react_default.a.createElement(Welcome_WelcomeRenderer, { patterns: patterns });
			}

			return react_default.a.createElement(
				StyleGuide_StyleGuideRenderer,
				{
					title: config.title,
					version: config.version,
					homepageUrl: consts["HOMEPAGE"],
					toc: react_default.a.createElement(rsg_components_TableOfContents_TableOfContents, { sections: allSections, useRouterLinks: pagePerSection }),
					hasSidebar: StyleGuide_hasSidebar(displayMode, config.showSidebar)
				},
				sections.length ? react_default.a.createElement(Sections, { sections: sections, depth: 1 }) : react_default.a.createElement(NotFound_NotFoundRenderer, null)
			);
		}
	}]);

	return StyleGuide;
}(react["Component"]);

StyleGuide_StyleGuide.propTypes = {
	codeRevision: prop_types_default.a.number.isRequired,
	config: prop_types_default.a.object.isRequired,
	slots: prop_types_default.a.object.isRequired,
	sections: prop_types_default.a.array.isRequired,
	welcomeScreen: prop_types_default.a.bool,
	patterns: prop_types_default.a.array,
	displayMode: prop_types_default.a.string,
	allSections: prop_types_default.a.array.isRequired,
	pagePerSection: prop_types_default.a.bool
};
StyleGuide_StyleGuide.childContextTypes = {
	codeRevision: prop_types_default.a.number.isRequired,
	config: prop_types_default.a.object.isRequired,
	slots: prop_types_default.a.object.isRequired,
	displayMode: prop_types_default.a.string
};
StyleGuide_StyleGuide.defaultProps = {
	displayMode: DisplayModes.all
};
/* harmony default export */ var rsg_components_StyleGuide_StyleGuide = (StyleGuide_StyleGuide);
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/rsg-components/StyleGuide/index.js

// EXTERNAL MODULE: ./node_modules/react-styleguidist/node_modules/lodash/get.js
var get = __webpack_require__(143);
var get_default = /*#__PURE__*/__webpack_require__.n(get);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/utils/getPageTitle.js



/**
 * Return page title:
 * “Style Guide Title” for all components view;
 * “Component Name — Style Guide Title” for isolated component or example view.
 * “Section Name — Style Guide Title” for isolated section view.
 *
 * @param {object} sections
 * @param {string} baseTitle
 * @param {string} displayMode
 * @return {string}
 */
function getPageTitle(sections, baseTitle, displayMode) {
	if (displayMode === DisplayModes.notFound) {
		return 'Page not found';
	}
	if (sections.length) {
		if (displayMode === DisplayModes.component || displayMode === DisplayModes.example && sections[0].components) {
			var name = get_default()(sections[0], 'components.0.name', sections[0].name);
			return name + ' \u2014 ' + baseTitle;
		} else if (displayMode === DisplayModes.section || displayMode === DisplayModes.example) {
			return sections[0].name + ' \u2014 ' + baseTitle;
		}
	}
	return baseTitle;
}
// EXTERNAL MODULE: ./node_modules/react-styleguidist/node_modules/lodash/isFinite.js
var lodash_isFinite = __webpack_require__(247);
var isFinite_default = /*#__PURE__*/__webpack_require__.n(lodash_isFinite);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/utils/filterComponentExamples.js
var filterComponentExamples_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/**
 * Return a copy of the given component with the examples array filtered
 * to contain only the specified index:
 * filterComponentExamples({ examples: [1,2,3], ...other }, 2) → { examples: [3], ...other }
 *
 * @param {object} component
 * @param {number} index
 * @returns {object}
 */
function filterComponentExamples(component, index) {
  return filterComponentExamples_extends({}, component, {
    props: filterComponentExamples_extends({}, component.props, {
      examples: [component.props.examples[index]]
    })
  });
}
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/utils/filterComponentsByExactName.js
/**
 * Filters list of components by component name.
 *
 * @param {Array} components
 * @param {string} name
 * @return {Array}
 */
function filterComponentsByExactName(components, name) {
  return components.filter(function (component) {
    return component.name === name;
  });
}
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/utils/filterComponentsInSectionsByExactName.js
function filterComponentsInSectionsByExactName_toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }



/**
 * Recursively filters all components in all sections by component name.
 *
 * @param {object} sections
 * @param {string} name
 * @param {boolean} recursive
 * @return {Array}
 */
function filterComponentsInSectionsByExactName(sections, name, recursive) {
	var filteredSections = [];
	sections.forEach(function (section) {
		if (section.components) {
			var filteredComponents = filterComponentsByExactName(section.components, name);
			if (filteredComponents.length) {
				filteredSections.push({
					exampleMode: section.exampleMode,
					usageMode: section.usageMode,
					components: filteredComponents
				});
			}
		}
		if (section.sections && recursive) {
			filteredSections.push.apply(filteredSections, filterComponentsInSectionsByExactName_toConsumableArray(filterComponentsInSectionsByExactName(section.sections, name, recursive)));
		}
	});
	return filteredSections;
}
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/utils/filterSectionExamples.js
var filterSectionExamples_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/**
 * Return a copy of the given section with the examples array filtered
 * to contain only the specified index
 *
 * @param {object} section
 * @param {number} index
 * @returns {object}
 */
function filterSectionExamples(section, index) {
  return filterSectionExamples_extends({}, section, {
    content: [section.content[index]]
  });
}
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/utils/findSection.js


/**
 * Recursively finds a section with a given name (exact match)
 *
 * @param  {Array}  sections
 * @param  {string} name
 * @return {object}
 */
function findSection(sections, name) {
	// We're using Lodash because IE11 doesn't support Array.find.
	var found = find_default()(sections, { name: name });
	if (found) {
		return found;
	}

	for (var i = 0; i < sections.length; i++) {
		var section = sections[i];
		if (!section.sections || section.sections.length === 0) {
			continue;
		}
		var _found = findSection(section.sections, name);
		if (_found) {
			return _found;
		}
	}

	return undefined;
}
// EXTERNAL MODULE: ./node_modules/react-styleguidist/node_modules/lodash/isNaN.js
var lodash_isNaN = __webpack_require__(145);
var isNaN_default = /*#__PURE__*/__webpack_require__.n(lodash_isNaN);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/utils/getInfoFromHash.js



function filterNumbers(item) {
	return isNaN_default()(parseInt(item, 10)) && item !== '';
}

/**
 * Returns an object containing component/section name and, optionally, an example index
 * from hash part or page URL:
 * #!/Button → { targetName: 'Button' }
 * #!/Button/1 → { targetName: 'Button', targetIndex: 1 }
 *
 * @param {string} hash
 * @returns {object}
 */
function getInfoFromHash(hash) {
	var shouldIsolate = hasInHash(hash, '#!/');
	if (shouldIsolate || hasInHash(hash, '#/')) {
		var hashArray = getHashAsArray(hash, shouldIsolate ? '#!/' : '#/');
		var index = parseInt(hashArray[hashArray.length - 1], 10);
		return {
			isolate: shouldIsolate,
			hashArray: hashArray.filter(filterNumbers),
			targetName: hashArray[0],
			targetIndex: isNaN_default()(index) ? undefined : index
		};
	}
	return {};
}
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/utils/getRouteData.js
var getRouteData_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };









/**
 * Return sections / components / examples to show on a screen according to a current route.
 *
 * Default: show all sections and components.
 * #!/Button: show only Button section or Button component
 * #!/Button/1: show only the second example (index 1) of Button component
 *
 * @param {object} sections
 * @param {string} hash
 * @param {boolean} pagePerSection
 * @returns {object}
 */
function getRouteData(sections, hash, pagePerSection) {
	// Parse URL hash to check if the components list must be filtered
	var infoFromHash = getInfoFromHash(hash, pagePerSection);

	// Name of the filtered component/section to show isolated (/#!/Button → Button)
	var targetName = infoFromHash.targetName,
	    hashArray = infoFromHash.hashArray;
	var targetIndex = infoFromHash.targetIndex,
	    isolate = infoFromHash.isolate;


	var displayMode = isolate ? DisplayModes.example : DisplayModes.all;

	if (pagePerSection && !targetName && sections[0]) {
		// For default takes the first section when pagePerSection enabled
		targetName = sections[0].name;
		hashArray = [targetName];
	}

	if (targetName) {
		var filteredSections = void 0;

		if (pagePerSection) {
			// hashArray could be an array as ["Documentation", "Files", "Button"]
			// each hashArray's element represent each section name with the same deep
			// so it should be filter each section to trying to find each one of array on the same deep
			hashArray.forEach(function (hashName, index) {
				// Filter the requested component if required but only on the first depth
				// so in the next time of iteration, it will be trying to filter only on the second depth and so on
				filteredSections = filterComponentsInSectionsByExactName(sections, hashName, isolate);

				// If filteredSections exists, its because is an array of an component
				// else it is an array of sections and depending his sectionDepth
				// his children could be filtered or not
				if (filteredSections.length) {
					sections = filteredSections;
				} else {
					var section = findSection(sections, hashName);
					if (section) {
						// Only if hashName is the last of hashArray his children should be filtered
						// because else there are possibilities to keep on filtering to try find the next section
						var isLastHashName = !hashArray[index + 1];

						// When sectionDepth is bigger than 0, their children should be filtered
						var shouldFilterTheirChildren = section.sectionDepth > 0 && isLastHashName;

						if (shouldFilterTheirChildren) {
							// Filter his sections and components
							section = getRouteData_extends({}, section, {
								sections: [],
								components: []
							});
						}
						sections = [section];
					} else {
						sections = [];
					}
				}
			});
			if (!sections.length) {
				displayMode = DisplayModes.notFound;
			}
			// The targetName takes the last of hashArray
			targetName = hashArray[hashArray.length - 1];
		} else {
			// Filter the requested component if required
			filteredSections = filterComponentsInSectionsByExactName(sections, targetName, true);
			if (filteredSections.length) {
				sections = filteredSections;
				displayMode = DisplayModes.component;
			} else {
				var section = findSection(sections, targetName);
				sections = section ? [section] : [];
				displayMode = DisplayModes.section;
			}
		}

		// If a single component or section is filtered and a fenced block index is specified hide all other examples
		if (isFinite_default()(targetIndex)) {
			if (filteredSections.length === 1) {
				var filteredComponents = filteredSections[0].components;
				sections = [getRouteData_extends({}, filteredSections[0], {
					components: [filterComponentExamples(filteredComponents[0], targetIndex)]
				})];
				displayMode = DisplayModes.example;
			} else if (sections.length === 1) {
				sections = [filterSectionExamples(sections[0], targetIndex)];
				displayMode = DisplayModes.example;
			}
		}
	}

	return { sections: sections, displayMode: displayMode };
}
// EXTERNAL MODULE: ./node_modules/react-styleguidist/lib/utils/globalizeComponent.js
var globalizeComponent = __webpack_require__(248);

// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/utils/globalizeComponents.js


/**
 * Expose all components in all sections as global variables.
 *
 * @param {array} sections
 */
function globalizeComponents(sections) {
	sections.forEach(function (section) {
		if (section.components) {
			section.components.forEach(globalizeComponent["a" /* default */]);
		}
		if (section.sections) {
			globalizeComponents(section.sections);
		}
	});
}
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/utils/processComponents.js
var processComponents_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function processComponents_toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/**
 * Do things that are hard or impossible to do in a loader: we don’t have access to component name
 * and props in the styleguide-loader because we’re using `require` to load the component module.
 *
 * @param {Array} components
 * @return {Array}
 */
function processComponents(components) {
	return components.map(function (component) {
		var newComponent = processComponents_extends({}, component, {

			// Add .name shortcuts for names instead of .props.displayName.
			name: component.props.displayName,
			visibleName: component.props.visibleName || component.props.displayName,

			props: processComponents_extends({}, component.props, {
				// Append @example doclet to all examples
				examples: [].concat(processComponents_toConsumableArray(component.props.examples || []), processComponents_toConsumableArray(component.props.example || []))
			})
		});

		return newComponent;
	});
}
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/utils/processSections.js
var processSections_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };



/**
 * Recursively process each component in all sections.
 *
 * @param {Array} sections
 * @return {Array}
 */
function processSections(sections) {
	return sections.map(function (section) {
		return processSections_extends({}, section, {
			visibleName: section.name,
			components: processComponents(section.components || []),
			sections: processSections(section.sections || [])
		});
	});
}
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/utils/renderStyleguide.js








/**
 * @param {object} styleguide An object returned by styleguide-loader
 * @param {number} codeRevision
 * @param {Location} [loc]
 * @param {Document} [doc]
 * @param {History} [hist]
 * @return {React.ReactElement}
 */
function renderStyleguide(styleguide, codeRevision) {
	var loc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : window.location;
	var doc = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : document;
	var hist = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : window.history;

	var allSections = processSections(styleguide.sections);

	// Globalize all components, not just ones we see on the screen, to make
	// all components accessible to all examples
	globalizeComponents(allSections);

	var _styleguide$config = styleguide.config,
	    title = _styleguide$config.title,
	    pagePerSection = _styleguide$config.pagePerSection;

	var _getRouteData = getRouteData(allSections, loc.hash, pagePerSection),
	    sections = _getRouteData.sections,
	    displayMode = _getRouteData.displayMode;

	// Update page title


	doc.title = getPageTitle(sections, title, displayMode);

	// If the current hash location was set to just `/` (e.g. when navigating back from isolated view to overview)
	// replace the URL with one without hash, to present the user with a single address of the overview screen
	if (loc.hash === '#/') {
		var url = loc.pathname + loc.search;
		hist.replaceState('', doc.title, url);
	}

	return react_default.a.createElement(rsg_components_StyleGuide_StyleGuide, {
		codeRevision: codeRevision,
		config: styleguide.config,
		slots: rsg_components_slots(styleguide.config),
		welcomeScreen: styleguide.welcomeScreen,
		patterns: styleguide.patterns,
		sections: sections,
		allSections: allSections,
		displayMode: displayMode,
		pagePerSection: pagePerSection
	});
}
// CONCATENATED MODULE: ./node_modules/react-styleguidist/lib/index.js
/* eslint-disable import/first */






// Examples code revision to rerender only code examples (not the whole page) when code changes
// eslint-disable-next-line no-unused-vars
var lib_codeRevision = 0;

// Scrolls to origin when current window location hash points to an isolated view.
var lib_scrollToOrigin = function scrollToOrigin() {
	var hash = window.location.hash;
	if (hasInHash(hash, '#/') || hasInHash(hash, '#!/')) {
		// Extracts the id param of hash
		var idHashParam = getParameterByName(hash, 'id');

		// For default scroll scrollTop is the page top
		var scrollTop = 0;

		if (idHashParam) {
			// Searches the node with the same id, takes his offsetTop
			// And with offsetTop, tries to scroll to node
			var idElement = document.getElementById(idHashParam);
			if (idElement && idElement.offsetTop) {
				scrollTop = idElement.offsetTop;
			}
		}
		window.scrollTo(0, scrollTop);
	}
};

var lib_render = function render() {
	// eslint-disable-next-line import/no-unresolved
	var styleguide = __webpack_require__(407);
	react_dom_default.a.render(renderStyleguide(styleguide, lib_codeRevision), document.getElementById(styleguide.config.mountPointId));
};

window.addEventListener('hashchange', lib_render);
window.addEventListener('hashchange', lib_scrollToOrigin);

/* istanbul ignore if */
if (false) {}

lib_render();

/***/ }),
/* 562 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js
var es_symbol = __webpack_require__(30);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.description.js
var es_symbol_description = __webpack_require__(190);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.iterator.js
var es_symbol_iterator = __webpack_require__(191);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.concat.js
var es_array_concat = __webpack_require__(85);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js
var es_array_filter = __webpack_require__(86);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.for-each.js
var es_array_for_each = __webpack_require__(87);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.iterator.js
var es_array_iterator = __webpack_require__(126);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js
var es_array_map = __webpack_require__(448);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.assign.js
var es_object_assign = __webpack_require__(40);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.define-property.js
var es_object_define_property = __webpack_require__(24);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptor.js
var es_object_get_own_property_descriptor = __webpack_require__(88);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-prototype-of.js
var es_object_get_prototype_of = __webpack_require__(198);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.keys.js
var es_object_keys = __webpack_require__(32);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.set-prototype-of.js
var es_object_set_prototype_of = __webpack_require__(199);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js
var es_object_to_string = __webpack_require__(200);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js
var es_string_iterator = __webpack_require__(201);

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js
var web_dom_collections_for_each = __webpack_require__(89);

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__(203);

// EXTERNAL MODULE: ./node_modules/lodash/omit.js
var omit = __webpack_require__(251);
var omit_default = /*#__PURE__*/__webpack_require__.n(omit);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(0);

// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(3);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// EXTERNAL MODULE: ./node_modules/react-custom-scrollbars/lib/index.js
var lib = __webpack_require__(252);
var lib_default = /*#__PURE__*/__webpack_require__.n(lib);

// EXTERNAL MODULE: ./node_modules/lodash/noop.js
var noop = __webpack_require__(146);
var noop_default = /*#__PURE__*/__webpack_require__.n(noop);

// CONCATENATED MODULE: ./src/commons/interfaces.ts
var InputDefaultProps={className:'',inputClassName:'',style:{},disabled:false,checked:false,onClick:noop_default.a,onChange:noop_default.a,reset:false};
// CONCATENATED MODULE: ./src/components/Select/index.tsx
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Select", function() { return Select_Select; });
function _typeof(obj){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==='function'){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable;}));}ownKeys.forEach(function(key){_defineProperty(target,key,source[key]);});}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)==="object"||typeof call==="function")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}var disabledStyle='o-50 pointer-events-none';var defaultStyle='b--black br1';var defaultChildrenStyle='shadow-4 bg-white';var Select_DropdownSvg=function DropdownSvg(_ref){var style=_ref.style;return react["createElement"]("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 8 4",style:style},react["createElement"]("polygon",{points:"0 0 8 0 4 4 0 0",fill:"inherit"}));};var Select_Select=/*#__PURE__*/function(_React$Component){_inherits(Select,_React$Component);function Select(){var _getPrototypeOf2;var _this;_classCallCheck(this,Select);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Select)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={open:_this.props.open};_this.container=null;_this.setClose=function(){return _this.setState({open:false});};_this.setOpen=function(){return _this.setState({open:true});};_this.toogleOpen=function(){return _this.setState({open:!_this.state.open});};_this.handleClick=function(event){_this.toogleOpen();_this.props.onClick(event);};_this.handleOutsideClick=function(event){if(!(event.target instanceof Element)||// https://stackoverflow.com/a/50326668
_this.container.contains(event.target)){return;}_this.setClose();};return _this;}_createClass(Select,[{key:"componentDidMount",value:function componentDidMount(){document.body.addEventListener('mouseup',this.handleOutsideClick,{passive:true});document.body.addEventListener('touchend',this.handleOutsideClick,{passive:true});}},{key:"componentWillUnmount",value:function componentWillUnmount(){document.body.removeEventListener('mouseup',this.handleOutsideClick);document.body.removeEventListener('touchend',this.handleOutsideClick);}},{key:"render",value:function render(){var _classNames,_this2=this;var _this$props=this.props,children=_this$props.children,className=_this$props.className,childrenClassName=_this$props.childrenClassName,style=_this$props.style,label=_this$props.label,scrollable=_this$props.scrollable,autoclose=_this$props.autoclose,disabled=_this$props.disabled,reset=_this$props.reset;var open=this.state.open;var classes=classnames_default()(className,'flex justify-between items-center pointer pa2 ba',(_classNames={},_defineProperty(_classNames,disabledStyle,disabled),_defineProperty(_classNames,defaultStyle,!reset),_classNames));var childrenClasses=classnames_default()(childrenClassName,'absolute z-5',_defineProperty({dn:!open,'w-100':scrollable,h5:open&&scrollable},defaultChildrenStyle,!reset));var props=omit_default()(this.props,Object.keys(Select.defaultProps));return react["createElement"]("div",Object.assign({},props,{ref:function ref(el){_this2.container=el;},className:"relative"}),react["createElement"]("div",{onClick:this.handleClick,className:classes,style:style},react["createElement"]("span",null,label),react["createElement"]("div",{className:"ml3 ".concat(open?'rotate-180':'')},react["createElement"](Select_DropdownSvg,{style:{width:10,height:10,fill:'currentColor'}}))),react["createElement"]("div",{className:childrenClasses},scrollable?react["createElement"](lib_default.a,{className:"h-100"},react["Children"].map(children,function(child,i){return react["createElement"]("div",{key:i,onClick:autoclose?_this2.setClose:null},child);})):react["Children"].map(children,function(child,i){return react["createElement"]("div",{key:i,onClick:autoclose?_this2.setClose:null},child);})));}}]);return Select;}(react["Component"]);Select_Select.defaultProps=_objectSpread({},InputDefaultProps,{autoclose:true});

/***/ })
/******/ ]);